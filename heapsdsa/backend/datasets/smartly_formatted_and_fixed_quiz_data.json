[
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What will the output of the below code?, #include <iostream>\nusing namespace std;\n\nint main()\n{\n\n    int arr[2] = { 1, 2 };\n    cout << arr[0] << \", \" << arr[1] << endl;\n    return 0;\n},\nCode: #include <iostream>\nChoices:\nA) 1, 2\nB) Syntax error\nC) Run time error\nD) None\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: The minimum number of comparisons required to determine if an integer appears more than n/2 times in a sorted array of n integers is, ,\nChoices:\nA) \u0398(n)\nB) \u0398(logn)\nC) \u0398(n*logn)\nD) \u0398(1)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: An algorithm performs (logN)1/2 find operations, N insert operations, (logN)1/2 , delete operations, and (logN)1/2 decrease-key operations on a set of data items with keys drawn from a linearly ordered set. For a delete operation, a pointer is provided to the record that must be deleted. For the decrease-key operation, a pointer is provided to the record that has its key decreased. Which one of the following data structures is the most suited for the algorithm to use, if the goal is to achieve the best total asymptotic complexity considering all the operations?, ,\nChoices:\nA) Unsorted array\nB) Min-heap\nC) Sorted array\nD) Sorted doubly linked list\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Consider an array consisting of \u2013ve and +ve numbers. What would be the worst case time complexity of an algorithm to segregate the numbers having same sign altogether i.e all +ve on one side and then all -ve on the other ?, ,\nChoices:\nA) O(N)\nB) O(N Log N)\nC) O(N * N)\nD) O(N Log Log N)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Let A[1...n] be an array of n distinct numbers. If i < j and A[i] > A[j], then the pair (i, j) is called an inversion of A. What is the expected number of inversions in any permutation on n elements ?, ,\nChoices:\nA) n(n-1)/2\nB) n(n-1)/4\nC) n(n+1)/4\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Consider a two dimensional array A[20][10]. Assume 4 words per memory cell, the base address of array A is 100, elements are stored in row-major order and first element is A[0][0]. What is the address of A[11][5] ?, ,\nChoices:\nA) 560\nB) 460\nC) 570\nD) 575\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: An array A consists of n integers in locations A[0], A[1] ....A[n-1]. It is required to shift the elements of the array cyclically to the left by k places, where 1 <= k <= (n-1). An incomplete algorithm for doing this in linear time, without using another array is given below. Complete the algorithm by filling in the blanks. Assume alt the variables are suitably declared., min = n; i = 0;\n\nwhile (___________) { \n\n     temp = A[i]; j = i;\n\n     while (________) {\n\n     A[j] = ________ \n\n     j= (j + k) mod n ;\n\n     If ( j< min ) then\n\n         min = j;\n\n}\n\nA[(n + i \u2014 k) mod n] = _________\n\ni = __________,\nChoices:\n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Which of the following correctly declares an array?, ,\nChoices:\n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: A three dimensional array in \u2018C++\u2019 is declared as int A[x][y][z]. Consider that array elements are stored in row major order and indexing begins from 0. Here, the address of an item at the location A[p][q][r] can be computed as follows (where w is the word length of an integer):, ,\nChoices:\n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Let A be a square matrix of size n x n. Consider the following program. What is the expected output? , ,\nChoices:\nA) The matrix A itself\nB) Transpose of matrix A\nC) Adding 100 to the upper diagonal elements and subtracting 100 from diagonal elements of A\nD) Inverse of matrix A\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: A program P reads in 500 integers in the range [0..100] representing the scores of 500 students. It then prints the frequency of each score above 50. What would be the best way for P to store the frequencies?\n , ,\nChoices:\nA) An array of 50 numbers\\n\nB) An array of 100 numbers\\n\nC) An array of 500 numbers\\n\nD) A dynamically allocated array of 550 numbers\\n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What will the output of the below code, be if the base address of the array is 1200?, #include <iostream>\nusing namespace std;\n\nint main()\n{\n\n    int arr[] = { 1, 2, 3, 4, 5 };\n    cout << arr << \", \" << &arr << \", \" << &arr[0] << endl;\n    return 0;\n},\nCode: #include <iostream>\nChoices:\nA) 1200, 1202, 1204\nB) 1200 1200 1200\nC) 1200, 1204, 1208\nD) 1200, 1204, 1208\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What is the correct way to call the function (fun) in the below program?, #include <bits/stdc++.h>\n#include <iostream>\nusing namespace std;\n\nvoid fun(char* arr)\n{\n    int i;\n    unsigned int n = strlen(arr);\n    for (i = 0; i < n; i++)\n        cout << \" \" << arr[i];\n}\n\n// Driver program\nint main()\n{\n    char arr[]\n        = { 'g', 'e', 'e', 'k', 's', 'q', 'u', 'i', 'z' };\n    // How to call the above function here to print the char\n    // elements?\n\n    return 0;\n},\nCode: #include <bits/stdc++.h>\nChoices:\nA) fun(&arr);\nB) fun(*arr);\nC) fun(arr)\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Let A be a matrix of size n x n. Consider the following program. What is the expected output? , void fun(int A[][N])\n{\n    for (int i = 0; i < N; i++)\n        for (int j = i + 1; j < N; j++)\n            swap(A[i][j], A[j][i]);\n},\nChoices:\nA) Matrix A\nB) Diagonal Of matrix A\nC) Transpose of matrix A\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What will do the following code?, void fun(int arr[], int n)\n{\n    for (int i = 0; i < n; i++) {\n        for (int j = i; j < n; j++) {\n            for (int k = i; k <= j; k++)\n                cout << arr[k] << \" \";\n\n            cout << endl;\n        }\n    }\n},\nChoices:\nA) Prints the subsequence of the article.\nB) Prints the elements of the array\nC) Prints the subarray of the element.\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Which of the following is the limitation of the array?, ,\nChoices:\nA) elements can be accessed from anywhere.\nB) The size of the array is fixed.\nC) Indexing is started from Zero.\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Consider the below program, and what is doing this program basically?, #include <bits/stdc++.h>\nusing namespace std;\n\nvoid print(char a[], int n, int ind)\n{\n    for (int i = ind; i < n + ind; i++)\n        cout << a[(i % n)] << \" \";\n}\n\nint main()\n{\n    char a[] = { 'A', 'B', 'C', 'D', 'E', 'F' };\n    int n = sizeof(a) / sizeof(a[0]);\n    print(a, n, 3);\n    return 0;\n},\nCode: #include <bits/stdc++.h>\nChoices:\nA) It is printing the normal array\nB) It is printing circular array rotated by 3\nC) Syntax error\nD) None\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Fill in the blanks for completing the program to rotate an array by d elements., /*Function to left rotate arr[] of size n by d*/\nvoid Rotate(int arr[], int d, int n)\n{\n    int p = 1;\n    while (_______) {\n        int last = arr[0];\n        for (int i = 0; ______ i++) {\n            arr[i] = arr[i + 1];\n        }\n        __________\n        p++;\n    }\n},\nChoices:\n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Consider the below program. What is the expected output? , void fun(int arr[], int start, int end)\n{\n    while (start < end) {\n        int temp = arr[start];\n        arr[start] = arr[end];\n        arr[end] = temp;\n        start++;\n        end--;\n    }\n},\nChoices:\nA) swapping the elements pairwise\nB) sorting the elements\nC) Reverse an array\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What is the output of the following code?, #include <iostream>\nusing namespace std;\n\nint main()\n{\n\n    string str1 = \"Hello\";\n    string str2 = \"Geeks\";\n    string str3 = str1 + str2;\n    cout << str3 << endl;\n\n    return 0;\n},\nCode: #include <iostream>\nChoices:\nA) Hello +  Geeks\nB) str1 + str2\nC) Hello Geeks\nD) HelloGeeks\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What is the output of the following code?, #include <iostream>\nusing namespace std;\n\nint main()\n{\n\n    string str = \"Hello\";\n    cout << str.substr(2, 5);\n    return 0;\n},\nCode: #include <iostream>\nChoices:\nA) Syntax error\nB) ello\nC) llo\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What is the output of the following code?, #include<bits/stdc++.h> \nusing namespace std;\n\nint main()\n{\n    // Write C++ code here\n    char str_array2[] = \"Geeks\";\n    cout << sizeof(str_array2) << \" \";\n    char str_array[] = { 'G', 'e', 'e', 'k', 's'};\n    cout << sizeof(str_array);\n    return 0;\n},\nCode: #include<bits/stdc++.h>\nChoices:\nA) 6, 6\nB) 5, 6\nC) 6, 5\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Easy",
        "target_text": "Question: If two string s are identical, then strcmp() functions returns ______, ,\nChoices:\nA) -1\nB) 1\nC) YES\nD) 0\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: How will you print \"\\\\\\n\" on the screen?, ,\nChoices:\nA) cout << \"\\\\\\\\\\\\n\";\nB) cout<<\"\\\\\\\\\\\\\\\\\\\\n\";\nC) cout<<\"//n\";\nD) cout<<\"///n\"\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What will the output of the following questions:, #include <bits/stdc++.h>\nusing namespace std;\n\nint main()\n{\n\n    string a = \"Hello\";\n    string b = \"World\";\n    string c = b.append(a);\n    cout << c << endl;\n\n    return 0;\n},\nCode: #include <bits/stdc++.h>\nChoices:\nA) Hello world\nB) World hello\nC) WorldHello\nD) Error\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What is missing in the given code?, #include <bits/stdc++.h>\nusing namespace std;\n\nvoid reverseStr(string& str)\n{\n\n    for (int i = 0; i < n / 2; i++)\n        swap(str[i], str[n - i - 1]);\n}\n\n// Driver program\nint main()\n{\n    string str = \"geeksforgeeks\";\n    reverseStr(str);\n    cout << str;\n    return 0;\n},\nCode: #include <bits/stdc++.h>\nChoices:\nA) swap function is not defined\nB) string is not defined here.\nC) Variable n is not declared anywhere.\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What is the function present to sort a string in C++?, ,\nChoices:\nA) sort();\nB) sort(str.begin(), str.end());\nC) Sort_asec();\nD) None\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What is a palindromic string?, ,\nChoices:\nA) The string of length 0\nB) The string of having a special character.\nC) The string of having an uppercase letter\nD) The string whose reversed string is equal to the original string.\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Easy",
        "target_text": "Question: Guess the output:, ,\nChoices:\nA) \"10 20\"\nB) 30\nC) 10 20\nD) 1020\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What is the output of the following code?, #include <iostream>\nusing namespace std;\n\nint main() {\n\n    cout << \"GFG!\"[0] <<\" \"<<\"GFG!\"[3] ;\n    return 0;\n},\nCode: #include <iostream>\nChoices:\nA) Error\nB) G !\nC) F !\nD) None\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Easy",
        "target_text": "Question: Which of the following statement is a binary string?, ,\nChoices:\nA) \"ab\"\nB) \"121212\"\nC) \"01010101110\"\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Easy",
        "target_text": "Question: How does strcmp() function work to compare two strings?, ,\nChoices:\nA) It compares characters based on their index.\nB) It compares strings based on the index.\nC) It compares characters of the string based on their ASCII values.\nD) None.\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: Which of these methods from the String class is used to extract a single character from an object of String?, ,\nChoices:\nA) CHARAT()\nB) charAt()\nC) CharAt()\nD) charAT()\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Medium",
        "target_text": "Question: What is the time complexity to reverse a string?, ,\nChoices:\nA) O(n^2)\nB) O(1)\nC) O(log n)\nD) O(n)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Easy",
        "target_text": "Question: Which of the following is a palindromic string?, ,\nChoices:\nA) \"APPLE\"\nB) \"ABCDE\"\nC) \"APPLA\"\nD) \"ABCCBA\"\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What is the output of the below code?, #include <iostream>\nusing namespace std;\n\nint main()\n{\n\n    string str = \"GeeksForGeeks\";\n    cout << str.substr(2).substr(4);\n    return 0;\n},\nCode: #include <iostream>\nChoices:\nA) eksForGeeks\nB) ForGEeks\nC) Geeks\nD) orGeeks\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: Which of these methods of class String is used to obtain the length of the String object?, ,\nChoices:\nA) get()\nB) Sizeof()\nC) lengthof()\nD) length()\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What the below program will  Print?, #// C program to find the length of string\n#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\n    string str = \"Hello Geeks\";\n    int i;\n    for (i = 0; str[i] != '\\0'; ++i)\n        ;\n    cout << i;\n\n    return 0;\n},\nCode: #include <bits/stdc++.h>\nChoices:\nA) 0\nB) 1\nC) 5\nD) 11\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: Following is a pseudo code of a function that takes a number as an argument, and uses a stack S to do processing., def fun(n):\n    S = []  # Say it creates an empty stack S\n    while n > 0:\n        # This line pushes the value of n%2 to stack S\n        S.append(n % 2)\n        n = n // 2\n\n    # Run while Stack S is not empty\n    while S:\n        print(S.pop(), end=' ')  # pop an element from S and print it,\nChoices:\nA) Prints binary representation of n in reverse order\nB) Prints binary representation of n\nC) Prints the value of Logn\nD) Prints the value of Logn in reverse order\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: Consider the following pseudocode that uses a stack , # Declare a stack of characters\nword = \"example\"  # Replace with the word you want to read\nchar_stack = []\n\n# While there are more characters in the word to read\nfor c in word:\n    char_stack.append(c)  # Push the character on the stack\n\n# While the stack is not empty\nwhile char_stack:\n    c = char_stack.pop()  # Pop a character off the stack\n    print(c, end='')  # Write the character to the screen,\nChoices:\nA) geeksquizgeeksquiz\nB) ziuqskeeg\nC) geeksquiz\nD) ziuqskeegziuqskeeg\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: Following is an incorrect pseudocode for the algorithm which is supposed to determine whether a sequence of parentheses is balanced: ,    declare a character stack \n   while ( more input is available)\n   {\n      read a character\n      if ( the character is a '(' ) \n         push it on the stack\n      else if ( the character is a ')' and the stack is not empty )\n         pop a character off the stack\n      else\n         print \"unbalanced\" and exit\n    }\n    print \"balanced\",\nChoices:\nA) ((())\nB) ())(()\nC) (()()))\nD) (()))()\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: The following postfix expression with single digit operands is evaluated using a stack:, ,\nChoices:\nA) 6, 1\nB) 5, 7\nC) 3, 2\nD) 1, 5\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: Let S be a stack of size n >= 1. Starting with the empty stack, suppose we push the first n natural numbers in sequence, and then perform n pop operations. Assume that Push and Pop operation take X seconds each, and Y seconds elapse between the end of one such stack operation and the start of the next operation. For m >= 1, define the stack-life of m as the time elapsed from the end of Push(m) to the start of the pop operation that removes m from S. The average stack-life of an element of this stack is, ,\nChoices:\nA) n(X+ Y)\nB) 3Y + 2X\nC) n(X + Y)-X\nD) Y + 2X\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: A single array A[1..MAXSIZE] is used to implement two stacks. The two stacks grow from opposite ends of the array. Variables top1 and top2 (topl< top 2) point to the location of the topmost element in each of the stacks. If the space is to be used efficiently, the condition for \u201cstack full\u201d is:, ,\nChoices:\nA) (top1 = MAXSIZE/2) and (top2 = MAXSIZE/2+1)\nB) top1 + top2 + 1 = MAXSIZE\nC) (top1= MAXSIZE/2) or (top2 = MAXSIZE)\nD) top1= top2 -1\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Assume that the operators +, -, \u00d7 are left associative and ^ is right associative. The order of precedence (from highest to lowest) is ^, x , +, -. The postfix expression corresponding to the infix expression a + b \u00d7 c - d ^ e ^ f is, ,\nChoices:\nA) abc \u00d7 + def ^ ^ -\nB) abc \u00d7 + de ^ f ^ -\nC) ab + c \u00d7 d - e ^ f ^\nD) - + a \u00d7 bc ^ ^ def\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: To evaluate an expression without any embedded function calls :\n , ,\nChoices:\nA) As many stacks as the height of the expression tree are needed\nB) One stack is enough\nC) Two stacks are needed\nD) A Turing machine is needed in the general case\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: The result evaluating the postfix expression 10 5 + 60 6 / * 8 \u2013 is, ,\nChoices:\nA) 284\nB) 213\nC) 142\nD) 71\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: If a stack S contains the integers 2, -3, 2, -1, 2 in order from bottom to top, what is f(S)?, ,\nChoices:\nA) 6\nB) 4\nC) 3\nD) 2\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: Consider the following program:, #include <iostream>\n#include <cctype>\n#include <stack>\n\n#define EOF -1\n\nstd::stack<int> s;\n\nvoid push(int value) { s.push(value); } /* push the argument on the stack */\nint pop(void) { if (s.empty()) return EOF; int value = s.top(); s.pop(); return value; }  /* pop the top of the stack */\nvoid flagError() { std::cerr << \"Error!\" << std::endl; exit(1); }\n\nint main() {\n    int c, m, n, r;\n    while ((c = std::cin.get()) != EOF) {\n        if (isdigit(c))\n            push(c - '0');\n        else if ((c == '+') || (c == '*')) {\n            m = pop();\n            n = pop();\n            r = (c == '+') ? n + m : n * m;\n            push(r);\n        } else if (c != ' ')\n            flagError();\n    }\n    std::cout << pop() << std::endl;\n},\nCode: #include <iostream>\nChoices:\nA) 15\nB) 25\nC) 30\nD) 150\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: O(n2), ,\nChoices:\nA) O(n logk)\nB) O(nk)\nC) O(n2)\nD) O(k2)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: A priority queue Q is used to implement a stack S that stores characters. PUSH(C) is implemented as INSERT(Q, C, K) where K is an appropriate integer key chosen by the implementation. POP is implemented as DELETEMIN(Q). For a sequence of operations, the keys chosen are in, ,\nChoices:\nA) Non-increasing order\nB) Non-decreasing order\nC) strictly increasing order\nD) strictly decreasing order\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: If the sequence of operations - push (1), push (2), pop, push (1), push (2), pop, pop, pop, push (2), pop are performed on a stack, the sequence of popped out values, ,\nChoices:\nA) 2,2,1,1,2\nB) 2,2,1,2,2\nC) 2,1,2,2,1\nD) 2,1,2,2,2\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: The five items: A, B, C, D, and E are pushed in a stack, one after other starting from A. The stack is popped four items and each element is inserted in a queue. The two elements are deleted from the queue and pushed back on the stack. Now one item is popped from the stack. The popped item is, ,\nChoices:\nA) A\nB) B\nC) C\nD) D\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: Consider the following operations performed on a stack of size 5 : Push (a); Pop() ; Push(b); Push(c); Pop(); Push(d); Pop();Pop(); Push (e) Which of the following statements is correct?, ,\nChoices:\nA) Underflow occurs\nB) Stack operations are performed smoothly\nC) Overflow occurs\nD) None of the above\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Which of the following is not an inherent application of stack?, ,\nChoices:\nA) Implementation of recursion\nB) Evaluation of a postfix expression\nC) Job scheduling\nD) Reverse a string\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Consider the following sequence of operations on an empty stack., ,\nChoices:\nA) 86\nB) 68\nC) 24\nD) 94\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Consider the following statements:, ,\nChoices:\nA) (ii) is true\nB) (i) and (ii) are true\nC) (iii) is true\nD) (ii) and (iv) are true\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: The minimum number of stacks needed to implement a queue is, ,\nChoices:\nA) 3\nB) 1\nC) 2\nD) 4\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: Following is pseudo code of a function that takes a Queue as an argument, and uses a stack S to do processing. , void fun(Queue *Q) {\n    Stack S;  // Say it creates an empty stack S\n\n    // Run while Q is not empty\n    while (!isEmpty(Q)) {\n        // deQueue an item from Q and push the dequeued item to S\n        push(&S, deQueue(Q));\n    }\n\n    // Run while Stack S is not empty\n    while (!isEmpty(&S)) {\n        // Pop an item from S and enqueue the popped item to Q\n        enQueue(Q, pop(&S));\n    }\n},\nChoices:\nA) Removes the last from Q\nB) Keeps the Q same as it was before the call\nC) Makes Q empty\nD) Reverses the Q\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: How many stacks are needed to implement a queue. Consider the situation where no other data structure like arrays, linked list is available to you., ,\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Which of the following operations on a queue data structure has a time complexity of O(1)?\nChoices:\nA) A and B\nB) B only\nC) C only\nD) A and D\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: A priority queue can efficiently implemented using which of the following data structures? Assume that the number of insert and peek (operation to see the current highest priority item) and extraction (remove the highest priority item) operations are almost same., ,\nChoices:\nA) Array\nB) Linked List\nC) Heap Data Structures like Binary Heap, Fibonacci Heap\nD) None of the above\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: Which of the following is true about linked list implementation of queue?, ,\nChoices:\nA) In push operation, if new nodes are inserted at the beginning of linked list, then in pop operation, nodes must be removed from end.\nB) In push operation, if new nodes are inserted at the end, then in pop operation, nodes must be removed from the beginning.\nC) Both of the above\nD) None of the above\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: A Priority-Queue is implemented as a Max-Heap. Initially, it has 5 elements. The level-order traversal of the heap is given below: 10, 8, 5, 3, 2 Two new elements \u201d1\u2018 and \u201d7\u2018 are inserted in the heap in that order. The level-order traversal of the heap after the insertion of the elements is:, ,\nChoices:\nA) 10, 8, 7, 5, 3, 2, 1\nB) 10, 8, 7, 2, 3, 1, 5\nC) 10, 8, 7, 1, 2, 3, 5\nD) 10, 8, 7, 3, 2, 1, 5\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: An implementation of a queue Q, using two stacks S1 and S2, is given below: , ,\nChoices:\nA) n+m <= x < 2n and 2m <= y <= n+m\nB) n+m <= x < 2n and 2m<= y <= 2n\nC) 2m <= x < 2n and 2m <= y <= n+m\nD) 2m <= x <2n and 2m <= y <= 2n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Consider the following operation along with Enqueue and Dequeue operations on queues, where k is a global parameter., ,\nChoices:\nA) A\nB) B\nC) C\nD) D\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: Consider the following pseudo-code. Assume that IntQueue is an integer queue. What does the function fun do? , ,\nChoices:\nA) Prints numbers from 0 to n-1\nB) Prints numbers from n-1 to 0\nC) Prints first n Fibonacci numbers\nD) Prints first n Fibonacci numbers in reverse order.\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Which of the following is NOT a common operation in a queue data structure? , ,\nChoices:\nA) Enqueue\nB) Dequeue\nC) Peek\nD) Shuffle\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Suppose a stack implementation supports an instruction REVERSE, which reverses the order of elements on the stack, in addition to the PUSH and POP instructions. Which one of the following statements is TRUE with respect to this modified stack?, ,\nChoices:\nA) A queue cannot be implemented using this stack.\nB) A queue can be implemented where ENQUEUE takes a single instruction and DEQUEUE takes a sequence of two instructions.\nC) A queue can be implemented where ENQUEUE takes a sequence of three instructions and DEQUEUE takes a single instruction.\nD) A queue can be implemented where both ENQUEUE and DEQUEUE take a single instruction each.\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: A queue is implemented using an array such that ENQUEUE and DEQUEUE operations are performed efficiently. Which one of the following statements is CORRECT (n refers to the number of items in the queue)?, ,\nChoices:\nA) Both operations can be performed in O(1) time\nB) At most one operation can be performed in O(1) time but the worst case time for the other operation will be \u03a9(n)\nC) The worst case time complexity for both operations will be \u03a9(n)\nD) Worst case time complexity for both operations will be \u03a9(log n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: Let Q denote a queue containing sixteen numbers and S be an empty stack. Head(Q) returns the element at the head of the queue Q without removing it from Q. Similarly Top(S) returns the element at the top of S without removing it from S. Consider the algorithm given below., ,\nChoices:\nA) 16\nB) 32\nC) 256\nD) 64\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: Suppose you are given an implementation of a queue of integers\nConsider the following function: , void f(queue<int> &Q) {\n    int i;\n    if (!Q.empty()) {\n        i = Q.front();\n        Q.pop();\n        f(Q);\n        Q.push(i);\n    }\n},\nChoices:\nA) Leaves the queue Q unchanged\nB) Reverses the order of the elements in the queue Q\nC) Deletes the element at the front of the queue Q and inserts it at the rear keeping the other elements in the same order\nD) Empties the queue Q\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: q[0], ,\nChoices:\n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Circular queue is also called -----., ,\nChoices:\nA) Ring Buffer\nB) Rectangular Buffer\nC) Square Buffer\nD) None\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Which one of the following is an application of Queue Data Structure?, ,\nChoices:\nA) When a resource is shared among multiple consumers.\nB) When data is transferred asynchronously (data not necessarily received at same rate as sent) between two processes\nC) Load Balancing\nD) All of the above\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Consider the following statements:, ,\nChoices:\nA) (ii) is true\nB) (i) and (ii) are true\nC) (iii) is true\nD) (ii) and (iv) are true\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Which of the following option is not correct?, ,\nChoices:\nA) If the queue is implemented with a linked list, keeping track of a front pointer, Only rear pointer s will change during an insertion into an non-empty queue.\nB) Queue data structure can be used to implement least recently used (LRU) page fault algorithm and Quick short algorithm.\nC) Queue data structure can be used to implement Quick short algorithm but not least recently used (LRU) page fault algorithm.\nD) Both (A) and (C)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Suppose a circular queue of capacity (n \u2013 1) elements is implemented with an array of n elements. Assume that the insertion and deletion operation are carried out using REAR and FRONT as array index variables, respectively. Initially, REAR = FRONT = 0. The conditions to detect queue full and queue empty are, ,\nChoices:\nA) Full: (REAR+1) mod n == FRONT, empty: REAR == FRONT\nB) Full: (REAR+1) mod n == FRONT, empty: (FRONT+1) mod n == REAR\nC) Full: REAR == FRONT, empty: (REAR+1) mod n == FRONT\nD) Full: (FRONT+1) mod n == REAR, empty: REAR == FRONT\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: The minimum number of stacks needed to implement a queue is, ,\nChoices:\nA) 3\nB) 1\nC) 2\nD) 4\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Which data structure is commonly used to implement the event-driven simulation of complex systems, such as in computer network simulations or traffic simulations?, ,\nChoices:\nA) Stack\nB) Tree\nC) Array\nD) Queue\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: The deque which stores elements in strictly increasing order or in strictly decreasing order is called ------., ,\nChoices:\nA) Priority  Queue\nB) Double ended Queue\nC) Monotonic Deque\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: Consider the below program, and identify what the function is doing., #include <iostream>\n#include <queue>\n\nclass Node {\npublic:\n    int data;\n    Node* left;\n    Node* right;\n    Node(int item) {\n        data = item;\n        left = right = nullptr;\n    }\n};\n\nvoid function(Node* root) {\n    if (root == nullptr)\n        return;\n    std::queue<Node*> q;\n\n    q.push(root);\n\n    while (!q.empty()) {\n        Node* node = q.front();\n        q.pop();\n        std::cout << node->data << \" \";\n\n        if (node->left != nullptr)\n            q.push(node->left);\n\n        if (node->right != nullptr)\n            q.push(node->right);\n    }\n},\nCode: #include <iostream>\nChoices:\nA) In order traversal of a tree\nB) Normal traversal of a tree\nC) Level order traversal of  a tree\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Which of the following is/are advantages of circular Queue?, ,\nChoices:\nA) Memory Management\nB) Traffic system\nC) CPU Scheduling\nD) All of the above\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: which data structure is used to implement deque?, ,\nChoices:\nA) Stack\nB) Doubly linked  list\nC) circular array\nD) Both B and C\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Which of the following is the type of priority Queue?, ,\nChoices:\nA) Ascending Order Priority Queue\nB) Descending order Priority Queue\nC) Deque\nD) Both A and B.\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: What is wrong in the below code of printing Right View of a binary tree using the Queue data structure?, #include <iostream>\n#include <queue>\nusing namespace std;\n\nclass Node {\npublic:\n    int data;\n    Node* left;\n    Node* right;\n    Node(int val) : data(val), left(nullptr), right(nullptr) {}\n};\n\nvoid printRightView(Node* root) {\n    if (root == nullptr) return;\n\n    queue<Node*> q;\n    q.push(root);\n    while (!q.empty()) {\n        int n = q.size();\n        for (int i = 0; i < n; i++) {\n            Node* x = q.front();\n            q.pop();\n            if (i == n - 1) {\n                cout << x->data << \" \";\n            }\n            if (x->left) {\n                q.push(x->left);\n            }\n            if (x->right) {\n                q.push(x->right);\n            }\n        }\n    }\n},\nCode: #include <iostream>\nChoices:\nA) We have not initialized anything in the Queue\nB) Queue will never be empty.\nC) left and right nodes of the tree are null.\nD) None\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: Given a queue with a linked list implementation. the Rear pointer points to the rear node of the queue. and the front node of the queue points to the front node of the queue, Which of the following operations is impossible to do in O(1) time?\n , ,\nChoices:\nA) Delete the front item from the list.\nB) Delete the rear from the list.\nC) insert at the front of the list.\nD) None\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What does the following function do for a given Linked List with first node as head?, void fun1(struct node* head)\n{\n  if(head == NULL)\n    return;\n  \n  fun1(head->next);\n  printf(\"%d  \", head->data);\n},\nChoices:\nA) Prints all nodes of linked lists\nB) Prints all nodes of linked list in reverse order\nC) Prints alternate nodes of Linked List\nD) Prints alternate nodes in reverse order\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Which of the following points is/are true about Linked List data structure when it is compared with array?, ,\nChoices:\nA) Arrays have better cache locality that can make them better in terms of performance.\nB) It is easy to insert and delete elements in Linked List\nC) Random access is not allowed in a typical implementation of Linked Lists\nD) The size of array has to be pre-decided, linked lists can change their size any time.\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Consider the following function that takes reference to head of a Doubly Linked List as parameter. Assume that a node of doubly linked list has previous pointer as prev and next pointer as next. , void fun(struct node **head_ref) {\n    struct node *temp = NULL;\n    struct node *current = *head_ref;\n\n    while (current != NULL) {\n        temp = current->prev;\n        current->prev = current->next;\n        current->next = temp;\n        current = current->prev;\n    }\n\n    if (temp != NULL)\n        *head_ref = temp->prev;\n},\nChoices:\nA) 2 <--> 1 <--> 4 <--> 3 <--> 6 <-->5\nB) 5 <--> 4 <--> 3 <--> 2 <--> 1 <-->6.\nC) 6 <--> 5 <--> 4 <--> 3 <--> 2 <--> 1.\nD) 6 <--> 5 <--> 4 <--> 3 <--> 1 <--> 2\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: The following function reverse() is supposed to reverse a singly linked list. There is one line missing at the end of the function. , // Link list node\nstruct node\n{\n    int data;\n    struct node* next;\n};\n\n// head_ref is a double pointer which points to head (or start) pointer \nof linked list\nstatic void reverse(struct node** head_ref)\n{\n    struct node* prev   = NULL;\n    struct node* current = *head_ref;\n    struct node* next;\n    while (current != NULL)\n    {\n        next  = current->next;  \n        current->next = prev;   \n        prev = current;\n        current = next;\n    }\n     // MISSING STATEMENT HERE\n},\nChoices:\nA) Set the value of head_ref to prev;\nB) Set the value of head_ref to current;\nC) Set the value of head_ref to next;\nD) Set the value of head_ref to NULL;\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What is the output of following function in which start is pointing to the first node of the following linked list 1->2->3->4->5->6 ?, #include <iostream>\nusing namespace std;\n\nstruct Node {\n    int data;\n    Node* next;\n    Node() { data = 0; next = nullptr; } \n};\n\nvoid fun(Node* start) {\n    if (start == nullptr)\n        return;\n    cout << start->data << \"  \";\n    \n    if (start->next != nullptr)\n        fun(start->next->next);\n    cout << start->data << \"  \";\n},\nCode: #include <iostream>\nChoices:\nA) 1 4 6 6 4 1\nB) 1 3 5 1 3 5\nC) 1 2 3 5\nD) 1 3 5 5 3 1\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: The following C function takes a simply-linked list as input argument. It modifies the list by moving the last element to the front of the list and returns the modified list. Some part of the code is left blank. Choose the correct alternative that contain the correct pseudocode for the blank line. , #include <iostream>\nstruct Node {\n    int value;\n    Node *next;\n};\n\nNode* move_to_front(Node *head) {\n    Node *p, *q;\n    if (head == NULL || head->next == NULL)\n        return head;\n    q = NULL; p = head;\n    while (p->next != NULL) {\n        q = p;\n        p = p->next;\n    }\n    __________________________________\n    return head;\n},\nCode: #include <iostream>\nChoices:\nA) q = NULL; next of p = head; head = p;\nB) next of q = NULL; head = p; next of p = head;\nC) head = p; next of p = q; next of q = NULL;\nD) next of q = NULL; next of p = head; head = p;\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: The following  function takes a single-linked list of integers as a parameter and rearranges the elements of the list. The function is called with the list containing the integers 1, 2, 3, 4, 5, 6, 7 in the given order. What will be the contents of the list after the function completes execution? , class Node {\npublic:\n    int value;\n    Node* next;\n};\n\nvoid rearrange(Node* list) {\n    Node* p;\n    Node* q;\n    int temp;\n    if (list == nullptr || list->next == nullptr) {\n        return;\n    }\n    p = list;\n    q = list->next;\n    while (q != nullptr) {\n        temp = p->value;\n        p->value = q->value;\n        q->value = temp;\n        p = q->next;\n        q = (p != nullptr) ? p->next : nullptr;\n    }\n},\nChoices:\nA) 1,2,3,4,5,6,7\nB) 2,1,4,3,6,5,7\nC) 1,3,2,5,4,7,6\nD) 2,3,4,5,6,7,1\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Suppose each set is represented as a linked list with elements in arbitrary order. Which of the operations among union, intersection, membership, cardinality will be the slowest? (GATE CS 2004), ,\nChoices:\nA) union\nB) membership\nC) cardinality\nD) union, intersection\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Consider the function f defined below. , #include <iostream>\n\nstruct item {\n    int data;\n    struct item *next;\n};\n\nint f(struct item *p) {\n    return (\n        (p == NULL) || \n        (p->next == NULL) || \n        ((p->data <= p->next->data) && f(p->next))\n    );\n},\nCode: #include <iostream>\nChoices:\nA) not all elements in the list have the same data value.\nB) the elements in the list are sorted in non-decreasing order of data value\nC) the elements in the list are sorted in non-increasing order of data value\nD) None of them\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: A circularly linked list is used to represent a Queue. A single variable p is used to access the Queue. To which node should p point such that both the operations enQueue and deQueue can be performed in constant time? (GATE 2004) , ,\nChoices:\nA) rear node\nB) front node\nC) not possible with a single pointer\nD) node next to front\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What are the time complexities of finding 8th element from beginning and 8th element from end in a singly linked list? Let n be the number of nodes in linked list, you may assume that n > 8., ,\nChoices:\nA) O(1) and O(n)\nB) O(1) and O(1)\nC) O(n) and O(1)\nD) O(n) and O(n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Is it possible to create a doubly linked list using only one pointer with every node., ,\nChoices:\nA) Not Possible\nB) Yes, possible by storing XOR of addresses of previous and next nodes.\nC) Yes, possible by storing XOR of current node and next node\nD) Yes, possible by storing XOR of current node and previous node\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Given pointer to a node X in a singly linked list. Only one pointer is given, pointer to head node is not given, can we delete the node X from given linked list?, ,\nChoices:\nA) Possible if X is not last node. Use following two steps (a) Copy the data of next of X to X. (b)Update the pointer of node X to the node after the next node. Delete next of X.\nB) Possible if size of linked list is even.\nC) Possible if size of linked list is odd\nD) Possible if X is not first node. Use following two steps (a) Copy the data of next of X to X. (b) Delete next of X.\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Which of the following is an application of XOR-linked lists?, ,\nChoices:\nA) Implementing stacks\nB) Implementing queues\nC) Memory-efficient linked list representation\nD) Caching data structures\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Consider the following function to traverse a linked list. , // C++ version of traverse function\nvoid traverse(Node *head) {\n    while (head != NULL) {\n        printf(\"%d  \", head->data);\n        head = head->next;\n    }\n},\nChoices:\nA) The function may crash when the linked list is empty\nC) The function is implemented incorrectly because it changes head\nD) None of the above\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: N items are stored in a sorted doubly linked list. For a delete operation, a pointer is provided to the record to be deleted. For a decrease-key operation, a pointer is provided to the record on which the operation is to be performed. An algorithm performs the following operations on the list in this order: \u0398(N) delete, O(log N) insert, O(log N) find, and \u0398(N) decrease-key What is the time complexity of all these operations put together?, ,\nChoices:\nA) O(Log2N)\nB) O(N)\nC) O(N Log N)\nD) \u0398(N2 Log N)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What are the application(s) of linked list?, ,\nChoices:\nA) Implementation of stacks and queues.\nB) Maintaining a directory of names\nC) None of the above\nD) Both a and b\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: The concatenation of two lists is to be performed in O(1) time. Which of the following implementations of a list should be used?, ,\nChoices:\nA) singly linked list\nB) doubly linked list\nC) circular doubly linked list\nD) array implementation of lists\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Consider the following piece of 'C' code fragment that removes duplicates from an ordered list of integers., #include <stdio.h>\n\nNode *remove_duplicates(Node *head, int *j) {\n    Node *t1, *t2;\n    *j = 0;\n    t1 = head;\n    if (t1 != NULL) t2 = t1->next;\n    else return head;\n    *j = 1;\n    if (t2 == NULL)\n        return head;\n    while (t2 != NULL) {\n        if (t1->val != t2->val) { // S1\n            (*j)++; t1->next = t2; t1 = t2; // S2\n        }\n        t2 = t2->next;\n    }\n    t1->next = NULL;\n    return head;\n},\nCode: #include <stdio.h>\nChoices:\nA) (a). n-1 times, since comparison is pairwise for n elements.\\n(b). maximum : n-1 for all distinct elements, minimum: 0 for all same elements.\\n(C). j keeps count of distinct nodes in the list.\nB) (a). n times, since comparison is pairwise for n elements.\\n(b). maximum : n-1 for all distinct elements, minimum: 0 for all same elements.\\n(C). j keeps count of distinct nodes in the list.\nC) (a). n-1 times, since comparison is pairwise for n elements.\\n(b). maximum : n-1 for all distinct elements, minimum: 1 for all same elements.\\n(C). j keeps count of distinct nodes in the list.\nD) None of the above\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Suppose there are two singly linked lists both of which intersect at some point and become a single linked list. The head or start pointers of both the lists are known, but the intersecting node and lengths of lists are not known. What is worst case time complexity of optimal algorithm to find intersecting node from two intersecting linked lists?, ,\nChoices:\nA) \u0398(n*m), where m, n are lengths of given lists\nB) \u0398(n^2), where m>n and m, n are lengths of given lists\nC) \u0398(m+n), where m, n are lengths of given lists\nD) \u0398(min(n, m)), where m, n are lengths of given lists\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: In a doubly linked list, the number of pointers affected for an insertion operation will be, ,\nChoices:\nA) 5\nB) 0\nC) 1\nD) None of these\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Consider an implementation of unsorted single linked list. Suppose it has its representation with a head and a tail pointer (i.e. pointers to the first and last nodes of the linked list). Given the representation, which of the following operation can not be implemented in O(1) time ?, ,\nChoices:\nA) Insertion at the front of the linked list.\nB) Insertion at the end of the linked list.\nC) Deletion of the front node of the linked list.\nD) Deletion of the last node of the linked list.\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Consider a single linked list where F and L are pointers to the first and last elements respectively of the linked list. The time for performing which of the given operations depends on the length of the linked list?, ,\nChoices:\nA) Delete the first element of the list\nB) Interchange the first two elements of the list\nC) Delete the last element of the list\nD) Add an element at the end of the list\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: The following steps in a linked list, ,\nChoices:\nA) pop operation in stack\nB) removal of a node\nC) inserting a node at beginning\nD) modifying an existing node\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: In DNA sequence alignment, which string-matching algorithm is commonly used to identify similarities between two DNA sequences efficiently?, ,\nChoices:\nA) Rabin-Karp algorithm\nB) Knuth-Morris-Pratt algorithm\nC) Z function\nD) None of the above\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Which of the following operations is performed more efficiently by doubly linked list than by linear linked list?, ,\nChoices:\nA) Deleting a node whose location is given\nB) Searching an unsorted list for a given item\nC) Inserting a node after the node with a given location\nD) Traversing the list to process each node\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: The time required to search an element in a linked list of length n is, ,\nChoices:\nA) O (log n)\nB) O (n)\nC) O (1)\nD) O (n2)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: The minimum number of fields with each node of doubly linked list is, ,\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: A doubly linked list is declared as, struct Node {\n       int Value;\n       struct Node *Fwd;\n       struct Node *Bwd;\n);,\nChoices:\nA) X->Bwd->Fwd = X->Fwd; X->Fwd->Bwd = X->Bwd ;\nB) X->Bwd.Fwd = X->Fwd ; X.Fwd->Bwd = X->Bwd ;\nC) X.Bwd->Fwd = X.Bwd ; X->Fwd.Bwd = X.Bwd ;\nD) X->Bwd->Fwd = X->Bwd ; X->Fwd->Bwd = X->Fwd;\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Consider a singly linked list of the form where F is a pointer to the first element in the linked list and L is the pointer to the last element in the list. The time of which of the following operations depends on the length of the list?, ,\nChoices:\nA) Delete the last element of the list\nB) Delete the first element of the list\nC) Add an element after the last element of the list\nD) Interchange the first two elements of the list\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Which of the following sorting algorithms can be used to sort a random linked list with minimum time complexity?, ,\nChoices:\nA) Insertion Sort\nB) Quick Sort\nC) Heap Sort\nD) Merge Sort\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: In the worst case, the number of comparisons needed to search a singly linked list of length n for a given element is, ,\nChoices:\nA) log(2*n)\nB) n/2\nC) log(2*n) -1\nD) n\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Let P be a singly linked list. Let Q be the pointer to an intermediate node x in the list. What is the worst-case time complexity of the best known algorithm to delete the node Q from the list?, ,\nChoices:\nA) O(n)\nB) O(log2 n)\nC) O(logn)\nD) O(1)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: What is the worst case time complexity of inserting n elements into an empty linked list, if the linked list needs to be maintained in sorted order ?, ,\nChoices:\nA) \u0398(n)\nB) \u0398(n log n)\nC) \u0398(n2)\nD) \u0398(1)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Consider the following conditions:, ,\nChoices:\nA) (a) and (b) only\nB) (a) and (c) only\nC) (b) and (c) only\nD) (a), (b) and (c)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Consider the following statements:, ,\nChoices:\nA) (ii) is true\nB) (i) and (ii) are true\nC) (iii) is true\nD) (ii) and (iv) are true\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Find the functionality of the given code-, void function(int data)\n{\n    int flag = 0;\n    if (head != null) {\n        Node temp = head.getNext();\n        while ((temp != head)\n               && (!(temp.getItem() == data))) {\n            temp = temp.getNext();\n            flag = 1;\n            break;\n        }\n    }\n    if (flag)\n        System.out.println(\"success\");\n    else\n        System.out.println(\"fail\");\n},\nChoices:\nA) Print success if a particular element is not found\nB) Print fail if a particular element is not found\nC) Print success if a particular element is equal to 1\nD) Print fail if the list is empty\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: What is the time complexity of searching for an element in a circular linked list?, ,\nChoices:\nA) O(n)\nB) O(nlogn)\nC) O(1)\nD) O(n2)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Choose the code snippet which inserts a node to the head of the list?, ,\nChoices:\nA) public void insertHead(int data)\\n{\\nNode temp = new Node(data);\\nNode cur = head;\\nwhile(cur.getNext() != head)\\n cur = cur.getNext()\\nif(head == null)\\n{\\n head = temp;\\n head.setNext(head);\\n}\\nelse\\n{\\n temp.setNext(head);\\n head = temp;\\n cur.setNext(temp);\\n}\\nsize++;\\n}\\n\nB) public void insertHead(int data)\\n{\\nNode temp = new Node(data);\\nwhile(cur != head)\\n cur = cur.getNext()\\nif(head == null)\\n{\\n head = temp;\\n head.setNext(head);\\n}\\nelse\\n{\\n temp.setNext(head.getNext());\\n cur.setNext(temp);\\n}\\nsize++;\\n}\nC) public void insertHead(int data)\\n{\\nNode temp = new Node(data);\\nif(head == null)\\n{\\n head = temp;\\n head.setNext(head);\\n}\\nelse\\n{\\n temp.setNext(head.getNext());\\n head = temp;\\n}\\nsize++;\\n}\nD) public void insertHead(int data)\\n{\\nNode temp = new Node(data);\\nif(head == null)\\n{\\n head = temp;\\n head.setNext(head.getNext());\\n}\\nelse\\n{\\n temp.setNext(head.getNext());\\n head = temp;\\n}\\nsize++;\\n}\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What is the functionality of the following code? Choose the most appropriate answer., int function()\n{\n    if (head == null)\n        return Integer.MIN_VALUE;\n    int var;\n    Node temp = head;\n    while (temp.getNext() != head)\n        temp = temp.getNext();\n    if (temp == head) {\n        var = head.getItem();\n        head = null;\n        return var;\n    }\n    temp.setNext(head.getNext());\n    var = head.getItem();\n    head = head.getNext();\n    return var;\n},\nChoices:\nA) Return data from the end of the list\nB) Returns the data and deletes the node at the end of the list\nC) Returns the data from the beginning of the list\nD) Returns the data and deletes the node from the beginning of the list\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Consider a small circular linked list. How to detect the presence of cycles in this list effectively?, ,\nChoices:\nA) Keep one node as head and traverse another temp node till the end to check if its \u2018next points to head\nB) Have fast and slow pointers with the fast pointer advancing two nodes at a time and slow pointer advancing by one node at a time\nC) Cannot determine, you have to pre-define if the list contains cycles\nD) Circular linked list itself represents a cycle. So no new cycles cannot be generated\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Which of the following application makes use of a circular linked list?, ,\nChoices:\nA) Undo Operation\nB) Recursive function calls\nC) Allocating CPU to resources\nD) Implement Hash Tables\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: In a circular linked list, How many nodes are containing NULL as the address?, ,\nChoices:\nA) Only one node\nB) Only Two node\nC) Every Node\nD) No, any node\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What is the time complexity to insert a node at the beginning of the list?, ,\nChoices:\nA) O(LogN)\nB) O(N)\nC) O(1)\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Consider the below program, and identify which Operation is performed., int solve(struct Node* head)\n{\n    if (head == NULL)\n        return 1;\n    struct Node* ptr;\n    ptr = head->next;\n    while (ptr != NULL && ptr != head)\n        ptr = ptr->next;\n    return (ptr == head);\n},\nChoices:\nA) Checking for List is empty of not\nB) Checking for the list is Circular or not\nC) count the number of elements in the list\nD) None\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Which of the following Statement is correct about Circular Linked List?, ,\nChoices:\nA) Only P4\nB) Only P1\nC) P1 and P2\nD) P1 and P4.\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: What is the time complexity of Build Heap operation? \n(Build Heap is used to build a max(or min) binary heap from a given array. Build Heap is used in Heap Sort as a first step for sorting.), ,\nChoices:\nA) O(nLogn)\nB) O(n^2)\nC) O(n)\nD) O(logn)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: A 3-ary max heap is like a binary max heap, but instead of 2 children, nodes have 3 children. A 3-ary heap can be represented by an array as follows: The root is stored in the first location, a[0], nodes in the next level, from left to right, is stored from a[1] to a[3]. The nodes from the second level of the tree from left to right are stored from a[4] location onward. An item x can be inserted into a 3-ary heap containing n items by placing x in the location a[n] and pushing it up the tree to satisfy the heap property. Which one of the following is a valid sequence of elements in an array representing 3-ary max heap?, ,\nChoices:\nA) 1, 3, 5, 6, 8, 9\nB) 9, 6, 3, 1, 8, 5\nC) 9, 3, 6, 8, 5, 1\nD) 9, 5, 6, 8, 3, 1\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Suppose the elements 7, 2, 10 and 4 are inserted, in that order, into the valid 3- ary max heap found in the above question, Which one of the following is the sequence of items in the array representing the resultant heap?, ,\nChoices:\nA) 10, 7, 9, 8, 3, 1, 5, 2, 6, 4\nB) 10, 9, 8, 7, 6, 5, 4, 3, 2, 1\nC) 10, 9, 4, 5, 7, 6, 8, 2, 1, 3\nD) 10, 8, 6, 9, 7, 2, 3, 4, 1, 5\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Consider a binary max-heap implemented using an array. Which among the following arrays represents a binary max-heap? \n(More than one option correct), ,\nChoices:\n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: A min- Heap is a complete binary tree., ,\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: We have a binary heap on n elements and wish to insert n more elements (not necessarily one after another) into this heap. The total time required for this is (A) theta(logn) (B) theta(n) (C) theta(nlogn) (D) theta(n^2), ,\nChoices:\nA) A\nB) B\nC) C\nD) D\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: In a min-heap with n elements with the smallest element at the root, the 7th smallest element can be found in time:, ,\nChoices:\nA) theta(nlogn)\nB) theta(n)\nC) theta(logn)\nD) theta(1)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: What is the necessary condition for a Tree to be a heap?, ,\nChoices:\nA) Only the tree must be complete.\nD) None\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Given two max heaps of size n each, what is the minimum possible time complexity to make a one max-heap of size from elements of two max heaps?, ,\nChoices:\nA) O(n^2)\nB) O(nLogLogn)\nC) O(n)\nD) O(nLogn)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Which of the following Binary Min Heap operation has the highest time complexity?, ,\nChoices:\nA) Inserting an item under the assumption that the heap has capacity to accommodate one more item\nB) Merging with another heap under the assumption that the heap has capacity to accommodate items of other heap\nC) Deleting an item from heap\nD) Decreasing value of a key\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: A priority queue is implemented as a Max-Heap. Initially, it has 5 elements. The level-order traversal of the heap is: 10, 8, 5, 3, 2. Two new elements 1 and 7 are inserted into the heap in that order. The level-order traversal of the heap after the insertion of the elements is:, ,\nChoices:\nA) 10, 8, 7, 3, 2, 1, 5\nB) 10, 8, 7, 2, 3, 1, 5\nC) 10, 8, 7, 1, 2, 3, 5\nD) 10, 8, 7, 5, 3, 2, 1\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Consider any array representation of an n element binary heap where the elements are stored from index 1 to index n of the array. For the element stored at index i of the array (i <= n), the index of the parent is, ,\nChoices:\nA) i - 1\nB) floor(i/2)\nC) ceiling(i/2)\nD) (i+1)/2\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Consider a max heap, represented by the array: 40, 30, 20, 10, 15, 16, 17, 8, 4. Now consider that a value 35 is inserted into this heap. After insertion, the new heap is, ,\nChoices:\nA) 40, 30, 20, 10, 15, 16, 17, 8, 4, 35\nB) 40, 35, 20, 10, 30, 16, 17, 8, 4, 15\nC) 40, 30, 20, 10, 35, 16, 17, 8, 4, 15\nD) 40, 35, 20, 10, 15, 16, 17, 8, 4, 30\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: Consider the following array of elements. \u232989, 19, 50, 17, 12, 15, 2, 5, 7, 11, 6, 9, 100\u232a. The minimum number of interchanges needed to convert it into a max-heap is, ,\nChoices:\nA) 4\nB) 5\nC) 2\nD) 3\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: An operator delete(i) for a binary heap data structure is to be designed to delete the item in the i-th node. Assume that the heap is implemented in an array and i refers to the i-th index of the array. If the heap tree has depth d (number of edges on the path from the root to the farthest leaf), then what is the time complexity to re-fix the heap efficiently after the removal of the element?, ,\nChoices:\nA) O(1)\nB) O(d) but not O(1)\nC) O(2d) but not O(d)\nD) O(d2d) but not O(2d)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: A complete binary min-heap is made by including each integer in [1, 1023] exactly once. The depth of a node in the heap is the length of the path from the root of the heap to that node. Thus, the root is at depth 0. The maximum depth at which integer 9 can appear is _____________, ,\nChoices:\nA) 6\nB) 7\nC) 8\nD) 9\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Which of the following sequences of array elements forms a heap?, ,\nChoices:\nA) {23, 17, 14, 6, 13, 10, 1, 12, 7, 5}\nB) {23, 17, 14, 6, 13, 10, 1, 5, 7, 12}\nC) {23, 17, 14, 7, 13, 10, 1, 5, 6, 12}\nD) {23, 17, 14, 7, 13, 10, 1, 12, 5, 7}\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: The minimum number of interchanges needed to convert the array 89, 19, 40, 17, 12, 10, 2, 5, 7, 11, 6, 9, 70 into a heap with the maximum element at the root is, ,\nChoices:\nA) 0\nB) 1\nC) 2\nD) 3\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Which of the following is a valid heap ? , ,\nChoices:\nA) A\nB) B\nC) C\nD) D\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: The number of nodes of height h in any n - element heap is __________., ,\nChoices:\nA) h\nB) 2h\nC) ceil(n/2h)/\nD) ceil(n/2h+1)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Consider the array representation of a binary min-heap containing 1023 elements. The minimum number of comparisons required to find the maximum in the heap is _________ . , ,\nChoices:\nA) 510\nB) 511\nC) 512\nD) 255\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: Let H be a binary min-heap consisting of n elements implemented as an array. What is the worst case time complexity of an optimal algorithm to find the maximum element in H?, ,\nChoices:\nA) \u0398(1)\nB) \u0398(logn)\nC) \u0398(n)\nD) \u0398(nlogn)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: Suppose we are sorting an array of eight integers using heapsort, and we have just finished some heapify (either maxheapify or minheapify) operations. The array now looks like this: 16 14 15 10 12 27 28 How many heapify operations have been performed on root of heap?, ,\nChoices:\nA) 1\nB) 2\nC) 3 or 4\nD) 5 or 6\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Which languages necessarily need heap allocation in the run time environment?, ,\nChoices:\nA) Those that support recursion\nB) Those that use dynamic scoping\nC) Those that use global variables\nD) Those that allow dynamic data structures\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: What are the applications of the Heap data structure?, ,\nChoices:\nA) Medical Applications\nB) File Compression\nC) Stock market\nD) All of these\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: How much time a heap will take to Find Min/Max value?, ,\nChoices:\nA) O(logN)\nB) O(N)\nC) O(1)\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Which of the following hash functions is most likely to cause clustering in a hash table? Here k is the input key value and m is hash table size. You may assume that all four hash functions generate valid indexes in the hash table., ,\nChoices:\nA) h(k) = k % m\nB) h(k) = floor(m * (k mod 1))\nC) h(k) = k\nD) h(k) = ((k / m) + k * m) + k % m\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Consider a hash table with 100 slots. Collisions are resolved using chaining. Assuming simple uniform hashing, what is the probability that the first 3 slots are unfilled after the first 3 insertions?, ,\nChoices:\nA) (97 \u00d7 97 \u00d7 97)/1003\nB) (99 \u00d7 98 \u00d7 97)/1003\nC) (97 \u00d7 96 \u00d7 95)/1003\nD) (97 \u00d7 96 \u00d7 95)/(3! \u00d7 1003)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Which one of the following hash functions on integers will distribute keys most uniformly over 10 buckets numbered 0 to 9 for i ranging from 0 to 2020?\n , ,\nChoices:\nA) h(i) = (12 \u2217 i) mod 10\\n\nB) h(i) = (11 \u2217 i2) mod 10\\n\nC) h(i) =i3 mod 10\\n\nD) h(i) =i2 mod 10 \\n\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Which of the following statement(s) is TRUE?, ,\nChoices:\nA) I only\nB) II and III only\nC) I and III only\nD) II only\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Consider a hash function that distributes keys uniformly. The hash table size is 20. After hashing of how many keys will the probability that any new key hashed collides with an existing one exceed 0.5., ,\nChoices:\nA) 5\nB) 6\nC) 7\nD) 10\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: What is the probability of a collision when hashing n keys into a hash table of size m, assuming that the hash function produces a uniform random distribution?, ,\nChoices:\nA) O(1/n)\nB) O(n/m)\nC) O(logn)\nD) O(m/n)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Insert the characters of the string K R P C S N Y T J M into a hash table of size 10. Use the hash function, ,\nChoices:\nA) Y\nB) C\nC) M\nD) P\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: What is the space used by programs when we use Hashmap in our program?, ,\nChoices:\nA) O(1)\nB) O(LogN)\nC) O(N)\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: Which searching technique takes O(1) time complexity for searching the data?, ,\nChoices:\nA) Binary Search\nB) Linear Search\nC) AVL Tree Search\nD) Hashing\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Consider a 13 element hash table for which f(key)=key mod 13 is used with integer keys. Assuming linear probing is used for collision resolution, at which location would the key 103 be inserted, if the keys 661, 182, 24 and 103 are inserted in that order?, ,\nChoices:\nA) 0\nB) 1\nC) 11\nD) 12\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Consider a double hashing scheme in which the primary hash function is h1(k) = k mod 23, and the secondary hash function is h2(k) = 1+(k mod 19). Assume that the table size is 23. Then the address returned by probe 1 in the probe sequence (assume that the probe sequence begins at probe 0) for key value k = 90 is ________ . , ,\nChoices:\nA) 13\nB) 15\nC) 21\nD) 23\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: An advantage of chained hash table (external hashing) over the open addressing scheme is, ,\nChoices:\nA) Worst case complexity of search operations is less\nB) Space used is less\nC) Deletion is easier\nD) None of the above\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Given a hash table T with 25 slots that stores 2000 elements, the load factor \u03b1 for T is __________, ,\nChoices:\nA) 80\nB) 0.0125\nC) 8000\nD) 1.25\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Suppose we are given n keys, m hash table slots, and two simple uniform hash functions h1 and h2. Further, suppose our hashing scheme uses h1 for the odd keys and h2 for the even keys. What is the expected number of keys in a slot? , ,\nChoices:\nA) 2m\\nn\nB) m\\nn\nC) n\\nm\nD) m\\n2n\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: Output of given program is,, def findSymPairs(arr, row):\n    hM = dict()\n    for i in range(row):\n        first = arr[i][0]\n        sec = arr[i][1]\n        if (sec in hM.keys() and hM[sec] == first):\n            print(\"(\", sec,\",\", first, \")\")\n        else:\n            hM[first] = sec\n        \nif __name__ == '__main__':\n    arr = [[0 for i in range(2)]\n      for i in range(5)]\n    arr[0][0], arr[0][1] = 11, 20\n    arr[1][0], arr[1][1] = 30, 40\n    arr[2][0], arr[2][1] = 5, 10\n    arr[3][0], arr[3][1] = 40, 30\n    arr[4][0], arr[4][1] = 10, 5\n    findSymPairs(arr, 5),\nChoices:\nA) (30, 40)\\n(5, 10)\nB) (30, 40)\\n(5, 5)\nC) (30, 4)\\n(5, 1)\nD) (3, 4)\\n(5, 1)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Which of the following are components of Hashing?, ,\nChoices:\nA) Key\nB) Hash Function\nC) Hash Table\nD) All of the above\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Which is a simple form of hashing where the data is directly mapped to an index in a hash table., ,\nChoices:\nA) Collision\nB) Index Mapping\nC) Functional Mapping\nD) Hash function\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: What are the applications of linear probing include:, ,\nChoices:\nA) Databases\nB) Caching\nC) Compiler Design\nD) All of the above\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: What are the methods to handle  collision: , ,\nChoices:\nA) Separate Chaining\nB) Open Chaining\nC) Both of the above\nD) None of the above\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What is the worst case time complexity for search, insert and delete operations in a general Binary Search Tree for a skewed tree ?, ,\nChoices:\nA) O(n) for all\nB) O(Logn) for all\nC) O(Logn) for search and insert, and O(n) for delete\nD) O(Logn) for search, and O(n) for insert and delete\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: In delete operation of BST, we need inorder successor (or predecessor) of a node when the node to be deleted has both left and right child as non-empty. Which of the following is true about inorder successor needed in delete operation?, ,\nChoices:\nA) Inorder Successor is always a leaf node\nB) Inorder successor is always either a leaf node or a node with empty left child\nC) Inorder successor may be an ancestor of the node\nD) Inorder successor is always either a leaf node or a node with empty right child\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: We are given a set of n distinct elements and an unlabelled binary tree with n nodes. In how many ways can we populate the tree with the given set so that it becomes a binary search tree? (GATE CS 2011), ,\nChoices:\nA) 0\nB) 1\nC) n!\nD) (1/(n+1)).2nCn\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: How many distinct binary search trees can be created out of 4 distinct keys?, ,\nChoices:\nA) 4\nB) 14\nC) 24\nD) 42\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which of the following traversal outputs the data in sorted order in a BST?, ,\nChoices:\nA) Preorder\nB) Inorder\nC) Postorder\nD) Level order\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The following numbers are inserted into an empty binary search tree in the given order: 10, 1, 3, 5, 15, 12, 16. What is the height of the binary search tree (the height is the maximum distance of a leaf node from the root)? (GATE CS 2004)\n , ,\nChoices:\nA) 2\\n\nB) 3\\n\nC) 4\\n\nD) 6\\n\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: The preorder traversal sequence of a binary search tree is 30, 20, 10, 15, 25, 23, 39, 35, 42. Which one of the following is the postorder traversal sequence of the same tree?, ,\nChoices:\nA) 10, 20, 15, 23, 25, 35, 42, 39, 30\nB) 15, 10, 25, 23, 20, 42, 35, 39, 30\nC) 15, 20, 10, 23, 25, 42, 35, 39, 30\nD) 15, 10, 23, 25, 20, 35, 42, 39, 30\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: You are given the postorder traversal, P, of a binary search tree on the n elements 1, 2, ..., n. You have to determine the unique binary search tree that has P as its postorder traversal. What is the time complexity of the most efficient algorithm for doing this?, ,\nChoices:\nA) O(Logn)\nB) O(n)\nC) O(nLogn)\nD) none of the above, as the tree cannot be uniquely determined.\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Suppose we have a balanced binary search tree T holding n numbers. We are given two numbers L and H and wish to sum up all the numbers in T that lie between L and H. Suppose there are m such numbers in T. If the tightest upper bound on the time to\ncompute the sum is O(nalogb n + mc logd n), the value of a + 10b + 100c + 1000d is ____., ,\nChoices:\nA) 60\nB) 110\nC) 210\nD) 50\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What are the worst-case complexities of insertion and deletion of a key in a binary search tree?, ,\nChoices:\nA) \u0398(logn) for both insertion and deletion\nB) \u0398(n) for both insertion and deletion\nC) \u0398(n) for insertion and \u0398(logn) for deletion\nD) \u0398(logn) for insertion and \u0398(n) for deletion\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: While inserting the elements 71, 65, 84, 69, 67, 83 in an empty binary search tree (BST) in the sequence shown, the element in the lowest level is, ,\nChoices:\nA) 65\nB) 67\nC) 69\nD) 83\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The number of ways in which the numbers 1, 2, 3, 4, 5, 6, 7 can be inserted in an empty binary search tree, such that the resulting tree has height 6, is _____________ Note: The height of a tree with a single node is 0. [This question was originally a Fill-in-the-Blanks question], ,\nChoices:\nA) 2\nB) 4\nC) 64\nD) 32\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Suppose that we have numbers between 1 and 100 in a binary search tree and want to search for the number 55. Which of the following sequences CANNOT be the sequence of nodes examined?, ,\nChoices:\nA) {10, 75, 64, 43, 60, 57, 55}\nB) {90, 12, 68, 34, 62, 45, 55}\nC) {9, 85, 47, 68, 43, 57, 55}\nD) {79, 14, 72, 56, 16, 53, 55}\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: A Binary Search Tree (BST) stores values in the range 37 to 573. Consider the following sequence of keys., ,\nChoices:\nA) II and III only\nB) I and III only\nC) III and IV only\nD) III only\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: A Binary Search Tree (BST) stores values in the range 37 to 573. Consider the following sequence of keys.\n\nI. 81, 537, 102, 439, 285, 376, 305\n\nII. 52, 97, 121, 195, 242, 381, 472\n\nIII. 142, 248, 520, 386, 345, 270, 307\n\nIV. 550, 149, 507, 395, 463, 402, 270\n\nWhich of the following statements is TRUE?, ,\nChoices:\nA) I, II and IV are inorder sequences of three different BSTs\nB) I is a preorder sequence of some BST with 439 as the root\nC) II is an inorder sequence of some BST where 121 is the root and 52 is a leaf\nD) IV is a postorder sequence of some BST with 149 as the root\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: How many distinct BSTs can be constructed with 3 distinct keys?, ,\nChoices:\nA) 4\nB) 5\nC) 6\nD) 9\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The following numbers are inserted into an empty binary search tree in the given order: 10, 1, 3, 5, 15, 12, 16 What is the height of the binary search tree ?, ,\nChoices:\nA) 3\nB) 4\nC) 5\nD) 6\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The number of disk pages access in B - tree search, where h is height, n is the number of keys, and t is the minimum degree, is:, ,\nChoices:\nA) \u03b8(logn h * t)\nB) \u03b8(logt n * h)\nC) \u03b8(logh n)\nD) \u03b8(logt n)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: How many distinct binary search trees can be created out of 4 distinct keys?, ,\nChoices:\nA) 5\nB) 14\nC) 24\nD) 35\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: The preorder traversal of a binary search tree is 15, 10, 12, 11, 20, 18, 16, 19. Which one of the following is the postorder traversal of the tree ?, ,\nChoices:\nA) 10, 11, 12, 15, 16, 18, 19, 20\nB) 11, 12, 10, 16, 19, 18, 20, 15\nC) 20, 19, 18, 16, 15, 12, 11, 10\nD) 19, 16, 18, 20, 11, 12, 10, 15\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: In a balanced binary search tree with n elements, what is the worst-case time complexity of reporting all elements in the range [a,b]? Assume that the number of reported elements is k., ,\nChoices:\nA) \u0398(log n)\nB) \u0398(log(n)+k)\nC) \u0398(k log n)\nD) \u0398(n log k)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: O(n0.5), ,\nChoices:\nA) O(n0.5)\nB) O(n)\nC) O(log n)\nD) O(n log n)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: When searching for the key value 60 in a binary search tree, nodes containing the key values 10, 20, 40, 50, 70 80, 90 are traversed, not necessarily in the order given. How many different orders are possible in which these key values can occur on the search path from the root to the node containing the value 60?, ,\nChoices:\nA) 35\nB) 64\nC) 128\nD) 5040\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The postorder traversal of a binary tree is 8, 9, 6, 7, 4, 5, 2, 3, 1. The inorder traversal of the same tree is 8, 6, 9, 4, 7, 2, 5, 1, 3. The height of a tree is the length of the longest path from the root to any leaf. The height of the binary tree above is ________ .\n\nNote -This was Numerical Type question., ,\nChoices:\nA) 2\nB) 3\nC) 4\nD) 5\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following is true about Binary Trees?, ,\nChoices:\nA) Every binary tree is either complete or full.\nB) Every complete binary tree is also a full binary tree.\nC) Every full binary tree is also a complete binary tree.\nD) No binary tree is both complete and full.\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: If arity of operators is fixed, then which of the following notations can be used to parse expressions without parentheses? a) Infix Notation (Inorder traversal of a expression tree) b) Postfix Notation (Postorder traversal of a expression tree) c) Prefix Notation (Preorder traversal of a expression tree), ,\nChoices:\nA) b and c\nB) Only b\nC) a, b and c\nD) None of them\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What are the main applications of tree data structure?, ,\nChoices:\nA) 1, 2, 3, 4 and 6\nB) 1, 2, 3, 4 and 5\nC) 1, 3, 4, 5 and 6\nD) 1, 2, 3, 4, 5 and 6\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The maximum number of binary trees that can be formed with three unlabelled nodes is:, ,\nChoices:\nA) 1\nB) 5\nC) 4\nD) 3\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The number of leaf nodes in a rooted tree of n nodes, with each node having 0 or 3 children is:, ,\nChoices:\nA) n/2\nB) (n-1)/3\nC) (n-1)/2\nD) (2n+1)/3\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: A weight-balanced tree is a binary tree in which for each node. The number of nodes in the left sub tree is at least half and at most twice the number of nodes in the right sub tree. The maximum possible height (number of nodes on the path from the root to the farthest leaf) of such a tree on n nodes is best described by which of the following? a) \\\\log_2 n b) \\\\log_{4/3} n c) \\\\log_3 n d) \\\\log_{3/2} n, ,\nChoices:\nA) A\nB) B\nC) C\nD) D\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: A scheme for storing binary trees in an array X is as follows. Indexing of X starts at 1 instead of 0. the root is stored at X[1]. For a node stored at X[i], the left child, if any, is stored in X[2i] and the right child, if any, in X[2i+1]. To be able to store any binary tree on n vertices the minimum size of X should be. (GATE CS 2006), ,\nChoices:\nA) log2n\nB) n\nC) 2n + 1\nD) 2^n \u2014 1\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: In a binary tree with n nodes, every node has an odd number of descendants. Every node is considered to be its own descendant. What is the number of nodes in the tree that have exactly one child?, ,\nChoices:\nA) 0\nB) 1\nC) (n-1)/2\nD) n-1\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The height of a binary tree is the maximum number of edges in any root to leaf path. The maximum number of nodes in a binary tree of height h is:, ,\nChoices:\nA) 2h\u22121\nB) 2h\u22121 -1\nC) 2h+1-1\nD) 2h+1\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The height of a tree is the length of the longest root-to-leaf path in it. The maximum and minimum number of nodes in a binary tree of height 5 are, ,\nChoices:\nA) 63 and 6, respectively\nB) 64 and 5, respectively\nC) 32 and 6, respectively\nD) 31 and 5, respectively\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: A binary tree T has 20 leaves. The number of nodes in T having two children is, ,\nChoices:\nA) 18\nB) 19\nC) 17\nD) Any number between 10 and 20\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: An array of integers of size n can be converted into a heap by adjusting the heaps rooted at each internal node of the complete binary tree starting at the node \u230a(n - 1) /2\u230b, and doing this adjustment up to the root node (root node is at index 0) in the order \u230a(n - 1)/2\u230b, \u230a(n - 3)/ 2\u230b, ....., 0. The time required to construct a heap in this manner is, ,\nChoices:\nA) O(log n)\nB) O(n)\nC) O (n log log n)\nD) O(n log n)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: In a binary tree, for every node the difference between the number of nodes in the left and right subtrees is at most 2. If the height of the tree is h > 0, then the minimum number of nodes in the tree is:, ,\nChoices:\nA) 2h - 1\nB) 2h - 1 + 1\nC) 2h - 1\nD) 2h\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Breadth First Search (BFS) is started on a binary tree beginning from the root vertex. There is a vertex t at a distance four from the root. If t is the n-th vertex in this BFS traversal, then the maximum possible value of n is ________ [This Question was originally a Fill-in-the-blanks Question], ,\nChoices:\nA) 15\nB) 16\nC) 31\nD) 32\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: In a binary tree, the number of internal nodes of degree 1 is 5, and the number of internal nodes of degree 2 is 10. The number of leaf nodes in the binary tree is  , ,\nChoices:\nA) 10\nB) 11\nC) 12\nD) 15\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: The following three are known to be the preorder, inorder and postorder sequences of a binary tree. But it is not known which is which.\n\nMBCAFHPYK\n\nKAMCBYPFH\n\nMABCKYFPH\n\nPick the true statement from the following., ,\nChoices:\nA) I and II are preorder and inorder sequences, respectively\nB) I and III are preorder and postorder sequences, respectively\nC) II is the inorder sequence, but nothing more can be said about the other two sequences\nD) II and III are the preorder and inorder sequences, respectively\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: A binary tree with n > 1 nodes has n1, n2 and n3 nodes of degree one, two and three respectively. The degree of a node is defined as the number of its neighbors.\n\n\nn3 can be expressed as, ,\nChoices:\nA) n1 + n2 - 1\nB) n1 - 2\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: A binary tree with n > 1 nodes has n1, n2 and n3 nodes of degree one, two and three respectively. The degree of a node is defined as the number of its neighbors.\n\n\nStarting with the above tree, while there remains a node v of degree two in the tree, add an edge between the two neighbors of v and then remove v from the tree. How many edges will remain at the end of the process?, ,\nChoices:\nA) 2 * n1 - 3\nB) n2 + 2 * n1 - 2\nC) n3 - n2\nD) n2 + n1 - 2\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The number of structurally different possible binary trees with 4 nodes is, ,\nChoices:\nA) 14\nB) 12\nC) 336\nD) 168\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: A strictly binary tree with 10 leaves, ,\nChoices:\nA) cannot have more than 19 nodes\nB) has exactly 19 nodes\nC) has exactly 17 nodes\nD) has exactly 20 nodes\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: e = 2n+i, ,\nChoices:\nA) e = i+n\nB) e = i+2n\nC) e = 2i+n\nD) e = 2n+i\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The order of a leaf node in a B+ tree is the maximum number of children it can have. Suppose that block size is 1 kilobytes, the child pointer takes 7 bytes long and search field value takes 14 bytes long. The order of the leaf node is ________., ,\nChoices:\nA) 16\nB) 63\nC) 64\nD) 68\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: log2 n nodes, ,\nChoices:\nA) log2 n nodes\nB) n+1 nodes\nC) 2n nodes\nD) 2n+1 nodes\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following number of nodes can form a full binary tree?, ,\nChoices:\nA) 8\nB) 15\nC) 14\nD) 13\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: A complete binary tree with the property that the value at each node is as least as large as the values at its children is known as, ,\nChoices:\nA) Binary search tree\nB) AVL tree\nC) Completely balanced tree\nD) Heap\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: log 2 n nodes, ,\nChoices:\nA) n nodes\nB) log 2 n nodes\nC) 2n \u20131 node\nD) 2 n nodes\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Any decision tree that sorts n elements has height, ,\nChoices:\nA) \u03a9(n)\nB) \u03a9(lgn)\nC) \u03a9(nlgn)\nD) \u03a9(n2)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: For the expression (7-(4*5))+(9/3) which of the following is the post order tree traversal?, ,\nChoices:\nA) *745-93/+\nB) 93/+745*-\nC) 745*-93/+\nD) 74*+593/-\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Which traversal's pseudo code is written here?, ,\nChoices:\nA) Level order\nB) Pre-order\nC) Post-order\nD) In-order\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Which traversal is shown by this pseudo code?, ,\nChoices:\nA) In-order\nB) Level Order\nC) Post-order\nD) Pre-order\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The time complexity of calculating the sum of all leaf nodes in an n-order binary tree is __________, ,\nChoices:\nA) O(n2)\nB) O(n+1)\nC) O(1)\nD) O(n)\\n\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What is a full binary tree?, ,\nChoices:\nA) Each node has exactly zero or two children\nB) Each node has exactly two children\nC) All the leaves are at the same level\nD) Each node has exactly one or two children\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: An important application of binary tree is ______, ,\nChoices:\nA) Huffman coding\nB) stack implementation\nC) queue implementation\nD) traverse a cyclic graph\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: In a full binary tree if there are L leaves, then total number of nodes N are?, ,\nChoices:\nA) N = 2*L\nB) N = L + 1\nC) N = L \u2013 1\nD) N = 2*L \u2013 1\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Which among the following is the pseudo code for post-order traversal?, ,\nChoices:\nA) Order(node):\\n    if node is not null:\\n       Order(node.left)\\n       Order(node.right)\\n       print node.value\nB) Order(node):\\n    if node is not null:\\n       Order(node.right)\\n       Order(node.left)\\n        print node.value\nC) Order(node):\\n    if node is not null:\\n       Order(node.left)\\n        print node.value\nD) None of the above\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which of the following is not an advantage of trees?, ,\nChoices:\nA) Hierarchical structure\nB) Faster search\nC) Router algorithms\nD) Undo/Redo operations in a notepad\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The worst case running time to search for an element in a balanced in a binary search tree with n2^n elements is \n(A) \nTheta(nlogn) \n(B) \nTheta(n2\nn\n) \n(C) \nTheta(n) \n(D) \nTheta(logn) , ,\nChoices:\nA) A\nB) B\nC) C\nD) D\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What is the maximum height of any AVL-tree with 7 nodes? Assume that the height of a tree with a single node is 0., ,\nChoices:\nA) 2\nB) 3\nC) 4\nD) 5\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which of the following is true, ,\nChoices:\nA) The AVL trees are more balanced compared to Red Black Trees, but they may cause more rotations during insertion and deletion.\nB) Heights of AVL and Red-Black trees are generally same, but AVL Trees may cause more rotations during insertion and deletion.\nC) Red Black trees are more balanced compared to AVL Trees, but may cause more rotations during insertion and deletion.\nD) Heights of AVL and Red-Black trees are generally same, but Red Black trees may cause more rotations during insertion and deletion.\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Is the following statement valid? A Red-Black Tree which is also a perfect Binary Tree can have all black nodes, ,\nChoices:\nA) Yes\nB) No\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: \u0398(n2), ,\nChoices:\nA) \u0398(n)\nB) \u0398(nLogn)\nC) \u0398(n2)\nD) \u0398(n2log n)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: O(m2 + n2), ,\nChoices:\nA) O(m+n)\nB) O(mlogn)\nC) O(nlogm)\nD) O(m2 + n2)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: The recurrence relation that arises in relation with the complexity of binary search is:, ,\nChoices:\nA) T(n) = 2T(n/ 2) + k , where k is constant\nB) T(n) = T(n / 2) + k , where k is constant\nC) T(n) = T(n / 2) + log n\nD) T(n) = T(n / 2) + n\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What is the worst case time complexity of inserting n2 elements into an AVL-tree with n elements initially ?, ,\nChoices:\nA) \u0398(n4)\nB) \u0398(n2)\nC) \u0398(n2 log n)\nD) \u0398(n3)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following is TRUE?, ,\nChoices:\nA) The cost of searching an AVL tree is \u03b8 (log n) but that of a binary search tree is O(n)\nB) The cost of searching an AVL tree is \u03b8 (log n) but that of a complete binary tree is \u03b8 (n log n)\nC) The cost of searching a binary search tree is O (log n ) but that of an AVL tree is \u03b8(n)\nD) The cost of searching an AVL tree is \u03b8 (n log n) but that of a binary search tree is O(n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What is the worst case possible height of AVL tree?, ,\nChoices:\nA) 2Logn (Assume base of log is 2)\nB) 1.44log n (Assume base of log is 2)\nC) Depends upon implementation\nD) Theta(n)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Consider a B+-tree in which the maximum number of keys in a node is 5. What is the minimum number of keys in any non-root node? (GATE CS 2010), ,\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: B+ trees are preferred to binary trees in databases because (GATE CS 2000), ,\nChoices:\nA) Disk capacities are greater than memory capacities\nB) Disk access is much slower than memory access\nC) Disk data transfer rates are much less than memory data transfer rates\nD) Disks are more reliable than memory\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: A B-tree of order 4 is built from scratch by 10 successive insertions. What is the maximum number of node splitting operations that may take place?, ,\nChoices:\nA) 3\nB) 4\nC) 5\nD) 6\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The order of a leaf node in a tree B+ is the maximum number of (value, data record pointer) pairs it can hold. Given that the block size is 1K bytes, data record pointer is 7 bytes long, the value field is 9 bytes long and a block pointer is 6 bytes long, what is the order of the leaf node?, ,\nChoices:\nA) 63\nB) 64\nC) 67\nD) 68\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: A B+ -tree index is to be built on the Name attribute of the relation STUDENT. Assume that all student names are of length 8 bytes, disk block are size 512 bytes, and index pointers are of size 4 bytes. Given this scenario, what would be the best choice of the degree (i.e. the number of pointers per node) of the B+ -tree?, ,\nChoices:\nA) 16\nB) 42\nC) 43\nD) 44\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Consider B+ tree in which the search key is 12 bytes long, block size is 1024 bytes, record pointer is 10 bytes long and block pointer is 8 bytes long. The maximum number of keys that can be accommodated in each non-leaf node of the tree is, ,\nChoices:\nA) 49\nB) 50\nC) 51\nD) 52\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: 5, ,\nChoices:\nA) 5\nB) 4\nC) 3\nD) 2\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: In a file which contains 1 million records and the order of the tree is 100, then what is the maximum number of nodes to be accessed if B+ tree index is used?, ,\nChoices:\nA) 5\nB) 4\nC) 3\nD) 10\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: B+ Trees are considered BALANCED because, ,\nChoices:\nA) the lengths of the paths from the root to all leaf nodes are all equal.\nB) the lengths of the paths from the root to all leaf nodes differ from each other by at most 1.\nC) the number of children of any two non-leaf sibling nodes differ by at most 1.\nD) the number of records in any two leaf nodes differ by at most 1.\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What is the time complexity of Bellman-Ford single-source shortest path algorithm on a complete graph of n vertices?, ,\nChoices:\nA) \u0398(V2)\nB) \u0398(V2 log v)\nC) \u0398(V3)\nD) \u0398(V3 log v)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which of the following algorithm can be used to efficiently calculate single source shortest paths in a Directed Acyclic Graph?, ,\nChoices:\nA) Dijkstra\nB) Bellman-Ford\nC) Topological Sort\nD) Strongly Connected Component\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Is the following statement valid about shortest paths? Given a graph, suppose we have calculated shortest path from a source to all other vertices. If we modify the graph such that weights of all edges is becomes double of the original weight, then the shortest path remains same only the total weight of path changes., ,\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Is the following statement valid?.\n\nGiven a weighted graph where weights of all edges are unique (no two edge have same weights), there is always a unique shortest path from a source to destination in such a graph., ,\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Is the following statement valid?.\n\nGiven a graph where all edges have positive weights, the shortest paths produced by Dijsktra and Bellman Ford algorithm may be different but path weight would always be same., ,\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which of the following statement(s)is / are correct regarding Bellman-Ford shortest path algorithm?, ,\nChoices:\nA) P Only\nB) Q Only\nC) Both P and Q\nD) Neither P nor Q\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Let G(V, E) an undirected graph with positive edge weights. Dijkstra's single-source shortest path algorithm can be implemented using the binary heap data structure with time complexity:, ,\nChoices:\nA) O(| V |2)\nB) O (| E | + | V | log | V |)\nC) O (| V | log | V |)\nD) O ((| E | + | V |) log | V |)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Let G = (V, E) be a simple undirected graph, and s be a particular vertex in it called the source. For x \u2208 V, let d(x) denote the shortest distance in G from s to x. A breadth first search (BFS) is performed starting at s. Let T be the resultant BFS tree. If (u, v) is an edge of G that is not in T, then which one of the following CANNOT be the value of d(u) \u2013 d(v)?, ,\nChoices:\nA) -1\nB) 0\nC) 1\nD) 2\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Let G be a directed graph whose vertex set is the set of numbers from 1 to 100. There is an edge from a vertex i to a vertex j if either j = i + 1 or j = 3i. The minimum number of edges in a path in G from vertex 1 to vertex 100 is    , ,\nChoices:\nA) 4\nB) 7\nC) 23\nD) 99\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: The Floyd-Warshall algorithm for all-pair shortest paths computation is based on:, ,\nChoices:\nA) Greedy paradigm.\nB) Divide-and-Conquer paradigm.\nC) Dynamic Programming paradigm.\nD) neither Greedy nor Divide-and-Conquer nor Dynamic Programming paradigm.\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Consider a weighted undirected graph with positive edge weights and let uv be an edge in the graph. It is known that the shortest path from the source vertex s to u has weight 53 and the shortest path from s to v has weight 65. Which one of the following statements is always true?, ,\nChoices:\nA) weight (u, v) < 12\nB) weight (u, v) \u2264 12\nC) weight (u, v) > 12\nD) weight (u, v) \u2265 12\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Let G=(V,E) be a directed, weighted graph with weight function w:E\u2192R. For some function f:V\u2192R, for each edge (u,v)\u2208E, define w\u2032(u,v) as w(u,v)+f(u)\u2212f(v). Which one of the options completes the following sentence so that it is TRUE ? \u201cThe shortest paths in G under w are shortest paths under w\u2032 too, _________\u201d., ,\nChoices:\nA) for every f:V\u2192R\nB) if and only if \u2200u\u2208V, f(u) is positive\nC) if and only if \u2200u\u2208V, f(u) is negative\nD) if and only if f(u) is the distance from s to u in the graph obtained by adding a new vertex s to G and edges of zero weight from s to every vertex of G\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Given a directed graph where weight of every edge is same, we can efficiently find shortest path from a given source to destination using?\n , ,\nChoices:\nA) Breadth First Traversal\nD) Depth First Search\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: In the graph given in above question, what is the minimum possible weight of a path P from vertex 1 to vertex 2 in this graph such that P contains at most 3 edges?, ,\nChoices:\nA) 7\nB) 8\nC) 9\nD) 10\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: An undirected graph G has n nodes. Its adjacency matrix is given by an n \u00d7 n square matrix whose (i) diagonal elements are 0\u2018s and (ii) non-diagonal elements are 1\u2018s. which one of the following is TRUE?, ,\nChoices:\nA) Graph G has no minimum spanning tree (MST)\nB) Graph G has a unique MST of cost n-1\nC) Graph G has multiple distinct MSTs, each of cost n-1\nD) Graph G has multiple spanning trees of different costs\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Let G be a weighted graph with edge weights greater than one and G'be the graph constructed by squaring the weights of edges in G. Let T and T' be the minimum spanning trees of G and G', respectively, with total weights t and t'. Which of the following statements is TRUE?, ,\nChoices:\nD) None of the above\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Let s and t be two vertices in a undirected graph G + (V, E) having distinct positive edge weights. Let [X, Y] be a partition of V such that s \u2208 X and t \u2208 Y. Consider the edge e having the minimum weight amongst all those edges that have one vertex in X and one vertex in Y The edge e must definitely belong to:, ,\nChoices:\nA) the minimum weighted spanning tree of G\nB) the weighted shortest path from s to t\nC) each path from s to t\nD) the weighted longest path from s to t\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Consider the following dynamic programming code snippet for solving the 0/1 Knapsack problem:, def knapsack(values, weights, capacity, n):\n    if n == 0 or capacity == 0:\n        return 0\n    if weights[n-1] > capacity:\n        return knapsack(values, weights, capacity, n-1)\n    else:\n        return max(values[n-1] + knapsack(values, weights, capacity-weights[n-1], n-1),\n                   knapsack(values, weights, capacity, n-1)),\nChoices:\nA) 180\nB) 220\nC) 280\nD) 300\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Let G be a connected undirected graph with n vertices and m edges. Which of the following statements is true regarding the minimum number of edges required to create a cycle in G?\n , ,\nChoices:\nA) The minimum number of edges required to create a cycle is n.\nB) The minimum number of edges required to create a cycle is n - 1.\nC) The minimum number of edges required to create a cycle is m - n + 1.\nD) The minimum number of edges required to create a cycle is m - n + 2.\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Let G be connected undirected graph of 100 vertices and 300 edges. The weight of a minimum spanning tree of G is 500. When the weight of each edge of G is increased by five, the weight of a minimum spanning tree becomes ________., ,\nChoices:\nA) 1000\nB) 995\nC) 2000\nD) 1995\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Given the intervals [(1, 4), (3, 6), (5, 7), (8, 9)], what would be the output of calling a function that solves the Job Scheduling Algorithm?, ,\nChoices:\n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Let G be a complete undirected graph on 4 vertices, having 6 edges with weights being 1, 2, 3, 4, 5, and 6. The maximum possible weight that a minimum weight spanning tree of G can have is., ,\nChoices:\nA) 6\nB) 7\nC) 8\nD) 9\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: G = (V, E) is an undirected simple graph in which each edge has a distinct weight, and e is a particular edge of G. Which of the following statements about the minimum spanning trees (MSTs) of G is/are TRUE, ,\nChoices:\nA) I only\nB) II only\nC) both I and II\nD) neither I nor II\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What is the largest integer m such that every simple connected graph with n vertices and n edges contains at least m different spanning trees?, ,\nChoices:\nA) 1\nB) 2\nC) 3\nD) n\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Consider a graph G=(V, E), where V = { v1,v2,\u2026,v100 }, E={ (vi, vj) \u2223 1\u2264 i < j \u2264 100} and weight of the edge (vi, vj)  is \u2223i\u2013j\u2223. The weight of minimum spanning tree of G is ________.\n , ,\nChoices:\nA) 99\nB) 100\nC) 98\nD) 101\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: What is the output of following function in which start is pointing to the first node of the following linked list 1->2->3->4->5->6 ?, #include <iostream>\nusing namespace std;\n\nstruct Node {\n    int data;\n    Node* next;\n    Node() { data = 0; next = nullptr; } \n};\n\nvoid fun(Node* start) {\n    if (start == nullptr)\n        return;\n    cout << start->data << \"  \";\n    \n    if (start->next != nullptr)\n        fun(start->next->next);\n    cout << start->data << \"  \";\n},\nCode: #include <iostream>\nChoices:\nA) 1 4 6 6 4 1\nB) 1 3 5 1 3 5\nC) 1 2 3 5\nD) 1 3 5 5 3 1\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Elements in an array are accessed _____________\nChoices:\nA) randomly\nB) sequentially\nC) exponentially\nD) logarithmically\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Let G be connected undirected graph of 100 vertices and 300 edges. The weight of a minimum spanning tree of G is 500. When the weight of each edge of G is increased by five, the weight of a minimum spanning tree becomes ________., ,\nChoices:\nA) 1000\nB) 995\nC) 2000\nD) 1995\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: A leftist heap is also said to be a binary heap.\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: If the corresponding end bracket/braces/parentheses is encountered, which of the following is done?\nChoices:\nA) push it on to the stack\nB) pop the stack\nC) throw an error\nD) treated as an exception\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Can suffix tree be used in string problems occurring in a text editor.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: The following lines talks about deleting a node in a binary tree.(the tree property must not be violated after deletion)\ni) from root search for the node to be deleted\nii)\niii) delete the node at\nwhat must be statement ii) and fill up statement iii)\nChoices:\nA) ii)-find random node,replace with node to be deleted. iii)- delete the node\nB) ii)-find node to be deleted. iii)- delete the node at found location\nC) ii)-find deepest node,replace with node to be deleted. iii)- delete a node\nD) ii)-find deepest node,replace with node to be deleted. iii)- delete the deepest node\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Did Google conduct a large evaluation for comparing the performance by two technique MinHash and SimHash.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Is the following statement valid?.\n\nGiven a weighted graph where weights of all edges are unique (no two edge have same weights), there is always a unique shortest path from a source to destination in such a graph., ,\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Which data structure is used in the syntax analysis phase of the compiler?\nChoices:\nA) Tree\nB) Stack\nC) Linked List\nD) Queue\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: How many inversions does a sorted array have?\nChoices:\nA) 0\nB) 1\nC) 2\nD) cannot be determined\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Which of the following code snippet is used to convert decimal to binary numbers?\na)\n\npublic void convertBinary(int num)\n{\n     int bin[] = new int[50];\n     int index = 0;\n     while(num > 0)\n     {\n       bin[index++] = num%2;\n       num = num/2;\n     }\n     for(int i = index-1;i >= 0;i--)\n     {\n       System.out.print(bin[i]);\n     }\n}\npublic void convertBinary(int num)\n{\n     int bin[] = new int[50];\n     int index = 0;\n     while(num > 0)\n     {\n       bin[++index] = num%2;\n       num = num/2;\n     }\n     for(int i = index-1;i >= 0;i--)\n     {\n       System.out.print(bin[i]);\n     }\n}\npublic void convertBinary(int num)\n{\n     int bin[] = new int[50];\n     int index = 0;\n     while(num > 0)\n     {\n         bin[index++] = num/2;\n         num = num%2;\n     }\n     for(int i = index-1;i >= 0;i--)\n     {\n         System.out.print(bin[i]);\n     }\n}\npublic void convertBinary(int num)\n {\n     int bin[] = new int[50];\n     int index = 0;\n     while(num > 0)\n     {\n         bin[++index] = num/2;\n         num = num%2;\n     }\n     for(int i = index-1;i >= 0;i--)\n     {\n         System.out.print(bin[i]);\n     }\n  }\n\nd)\nChoices:\nA) public void convertBinary(int num)\nB) Answer: d\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Recursion uses more memory space than   iteration because \u2026\u2026\u2026\u2026\u2026, ,\nChoices:\nA) it uses stack instead of queue.\nB) every recursive call has to be stored.\nC) both A & B are true.\nD) None of the above.\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: A binary tree of depth \u201cd\u201d is an almost   complete binary tree if:, ,\nChoices:\nA) Each leaf in the tree is either at level \u201cd\u201d or at level \u201cd\u20131\u201d\nB) For any node \u201cn\u201d in the tree with a right descendent at \\n level \u201cd\u201d all the left descendents of \u201cn\u201d that are leaves, are \\n also at level \u201cd\u201d\nC) Both (A) & (B)\nD) None of the above\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Easy",
        "target_text": "Question: Time required to merge two sorted lists of size   m and n, is \u2026\u2026\u2026\u2026, ,\nChoices:\nA) \u039f(m | n)\nB) \u039f(m + n)\nC) \u039f(m log n)\nD) \u039f(n log m)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: For which of the following combinations of the degrees of vertices would the connected graph be eulerian?\nChoices:\nA) 1,2,3\nB) 2,3,4\nC) 2,4,5\nD) 1,3,5\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: A linear collection of data elements where the linear node is given by means of pointer is called?\nChoices:\nA) Linked list\nB) Node list\nC) Primitive list\nD) Unordered list\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Let G be a complete undirected graph on 4 vertices, having 6 edges with weights being 1, 2, 3, 4, 5, and 6. The maximum possible weight that a minimum weight spanning tree of G can have is., ,\nChoices:\nA) 6\nB) 7\nC) 8\nD) 9\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Symbol tables during compilation of program is efficiently implemented using __________\nChoices:\nA) a singly linked list\nB) a doubly linked list\nC) a self organizing list\nD) an array\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Consider the postfix expression 4 5 6 a b 7 8 a c, where a, b, c are operators. Operator a has higher precedence over operators b and c. Operators b and c are right associative. Then, equivalent infix expression is\nChoices:\nA) 4 a 5 6 b 7 8 a c\nB) 4 a 5 c 6 b 7 a 8\nC) 4 b 5 a 6 c 7 a 8\nD) 4 a 5 b 6 c 7 a 8\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Consider the following function to traverse a linked list. , // C++ version of traverse function\nvoid traverse(Node *head) {\n    while (head != NULL) {\n        printf(\"%d  \", head->data);\n        head = head->next;\n    }\n},\nChoices:\nA) The function may crash when the linked list is empty\nC) The function is implemented incorrectly because it changes head\nD) None of the above\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Hash tree is also known as _____\nChoices:\nA) Merkle tree\nB) T -tree\nC) Hash table\nD) Bx-tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: What happens if we apply the below operations on an input sequence?\ni. construct a cartesian tree for input sequence\nii. put the root element of above tree in a priority queue\niii. if( priority queue is not empty) then\niv. search and delete minimum value in priority queue\nv. add that to output\nvi. add cartesian tree children of above node to priority queue\nChoices:\nA) constructs a cartesian tree\nB) sorts the input sequence\nC) does nothing\nD) produces some random output\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: How do you calculate the pointer difference in a memory efficient double linked list?\nChoices:\nA) head xor tail\nB) pointer to previous node xor pointer to next node\nC) pointer to previous node \u2013 pointer to next node\nD) pointer to next node \u2013 pointer to previous node\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: While evaluating a postfix expression, when an operator is encountered, what is the correct operation to be performed?\nChoices:\nA) push it directly on to the stack\nB) pop 2 operands, evaluate them and push the result on to the stack\nC) pop the entire stack\nD) ignore the operator\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What is the condition for a tree to be weight balanced. where a is factor and n is a node?\nChoices:\nA) weight[n.left] >= a*weight[n] and weight[n.right] >= a*weight[n].\nB) weight[n.left] >= a*weight[n.right] and weight[n.right] >= a*weight[n].\nC) weight[n.left] >= a*weight[n.left] and weight[n.right] >= a*weight[n].\nD) weight[n] is a non zero\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Which of the following is not a disadvantage to the usage of array?\nChoices:\nA) Fixed size\nB) There are chances of wastage of memory space if elements inserted in an array are lesser than the allocated size\nC) Insertion based on position\nD) Accessing elements at specified positions\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Collision is caused due to the presence of two keys having the same value.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Min heap is a complete binary tree.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: A treap is a cartesian tree with ___________\nChoices:\nA) additional value, which is a priority value to the key generated randomly\nB) additional value, which is a priority value to the key generated sequentially\nC) additional heap rule\nD) additional operations like remove a range of elements\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Suppose you are given an implementation of a queue of integers\nConsider the following function: , void f(queue<int> &Q) {\n    int i;\n    if (!Q.empty()) {\n        i = Q.front();\n        Q.pop();\n        f(Q);\n        Q.push(i);\n    }\n},\nChoices:\nA) Leaves the queue Q unchanged\nB) Reverses the order of the elements in the queue Q\nC) Deletes the element at the front of the queue Q and inserts it at the rear keeping the other elements in the same order\nD) Empties the queue Q\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: In a binary tree, the number of internal nodes of degree 1 is 5, and the number of internal nodes of degree 2 is 10. The number of leaf nodes in the binary tree is  , ,\nChoices:\nA) 10\nB) 11\nC) 12\nD) 15\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: What will be the output of the following code ?\n\n#include <bits/stdc++.h> \nusing namespace std; \n \nvoid func(int arr[], int left, int right) \n{ \n    if (left >= right) \n    return; \n \n    int temp = arr[left];  \n    arr[left] = arr[right]; \n    arr[right] = temp; \n \n    func(arr, left + 1, right - 1);  \n}      \n \nvoid printArray(int arr[], int size) \n{ \n    for (int i = 0; i < size; i++) \n    cout << arr[i] << \" \"; \n} \n \nint main() \n{ \n int arr[] = {1,2,3,4}; \n int n = sizeof(arr) / sizeof(arr[0]); \n func(arr, 0, n-1); \n printArray(arr, n); \n return 0; \n}\nCode: #include <bits/stdc++.h>\nChoices:\nA) 1 2 3 4\nB) 4 3 2 1\nC) 1 4 2 3\nD) 4 1 2 3\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What is the result of the following postfix expression?\nab*cd*+ where a=2,b=2,c=3,d=4.\nChoices:\nA) 16\nB) 12\nC) 14\nD) 10\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: MultiGraphs having self-loops are called PseudoGraphs?\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What value does function mystery return when   called with a value of 4?   int mystery ( int number )   {   if ( number <= 1 )   return 1;   else   \f return number * mystery( number \u2013 1 );   }, ,\nChoices:\nA) 0\nB) 1\nC) 4\nD) 24\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: In how many different ways we can reach the end of the array arr[]={1,3,5,8,9}?\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: How many swaps are required for reversing an array having n elements where n is an odd number?\nChoices:\nA) (n-1) / 2\nB) n/2\nC) (n/2) \u2013 1\nD) (n+1)/2\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: The sorting technique where array to be sorted   is partitioned again and again in such a way that all   elements less than or equal to partitioning element   appear before it and those which are greater appear   after it, is called \u2026\u2026\u2026\u2026.., ,\nChoices:\nA) Merge sort\nB) Quick sort \\n (A) Merge sort \\n (B) Quick sort\nC) Selection sort\nD) None of these\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: AA-Trees makes more rotations than a red-black tree.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Which languages necessarily need heap allocation in the run time environment?, ,\nChoices:\nA) Those that support recursion\nB) Those that use dynamic scoping\nC) Those that use global variables\nD) Those that allow dynamic data structures\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: When array reversal and rotation is applied to the same array then the output produced will also be the same every time.\nChoices:\nA) true\nB) false\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: log 2 n nodes, ,\nChoices:\nA) n nodes\nB) log 2 n nodes\nC) 2n \u20131 node\nD) 2 n nodes\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Where is the hash tree used?\nChoices:\nA) in digital currency\nB) in sorting of large data\nC) for indexing in databases\nD) in encryption of data\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: A complete binary tree with n leaf nodes has   \u2026\u2026\u2026\u2026.., ,\nChoices:\nA) n+1 nodes\nB) 2n-1 nodes\nC) 2n+1 nodes\nD) n(n-1)/2 nodes\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: The relationship of skew heaps to leftist heaps is analogous to that of?\nChoices:\nA) Splay tree and AVL tree\nB) Red black tree and AVL tree\nC) Binary tree and Splay tree\nD) Binary tree and Red black tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Balanced binary tree with n items allows the lookup of an item in ____ worst-case time.\nChoices:\nA) O(log n)\nB) O(nlog 2)\nC) O(n)\nD) O(1)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: 2. How do you initialize an array in C?\nChoices:\nA) int arr[3] = (1,2,3);\nB) int arr(3) = {1,2,3};\nC) int arr[3] = {1,2,3};\nD) int arr(3) = (1,2,3);\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What is the largest integer m such that every simple connected graph with n vertices and n edges contains at least m different spanning trees?, ,\nChoices:\nA) 1\nB) 2\nC) 3\nD) n\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Select the appropriate code which tests for a palindrome.\na)\n\npublic static void main(String[] args) \n{\n System.out.print(\"Enter any string:\");\n        Scanner in=new Scanner(System.in);\n        String input = in.nextLine();\n        Stack<Character> stk = new Stack<Character>();\n for (int i = 0; i < input.length(); i++) \n {\n            stk.push(input.charAt(i));\n        }\n String reverse = \"\";\n while (!stk.isEmpty())\n {\n            reverse = reverse + stk.pop();\n        }\n if (input.equals(reverse))\n        System.out.println(\"palindrome\");\n        else\n        System.out.println(\"not a palindrome\");\n}\npublic static void main(String[] args) \n{\n System.out.print(\"Enter any string:\");\n        Scanner in=new Scanner(System.in);\n        String input = in.nextLine();\n        Stack<Character> stk = new Stack<Character>();\n for (int i = 0; i < input.length(); i++) \n {\n            stk.push(input.charAt(i));\n        }\n String reverse = \"\";\n while (!stk.isEmpty())\n {\n            reverse = reverse + stk.peek();\n        }\n if (input.equals(reverse))\n        System.out.println(\"palindrome\");\n        else\n            System.out.println(\"not a palindrome\");\n}\npublic static void main(String[] args) \n{\n System.out.print(\"Enter any string:\");\n        Scanner in=new Scanner(System.in);\n        String input = in.nextLine();\n        Stack<Character> stk = new Stack<Character>();\n for (int i = 0; i < input.length(); i++) \n {\n            stk.push(input.charAt(i));\n        }\n String reverse = \"\";\n while (!stk.isEmpty())\n {\n            reverse = reverse + stk.pop();\n   stk.pop();\n        }\n if (input.equals(reverse))\n        System.out.println(\"palindrome\");\n        else\n            System.out.println(\"not a palindrome\");\n}\npublic static void main(String[] args) \n{\n System.out.print(\"Enter any string:\");\n        Scanner in=new Scanner(System.in);\n        String input = in.nextLine();\n        Stack<Character> stk = new Stack<Character>();\n for (int i = 0; i < input.length(); i++) \n {\n            stk.push(input.charAt(i));\n        }\n String reverse = \"\";\n while (!stk.isEmpty())\n {\n            reverse = reverse + stk.pop();\n   stk.pop();\n        }\n if (!input.equals(reverse))\n        System.out.println(\"palindrome\");\n        else\n            System.out.println(\"not a palindrome\");\n}\n\nd)\nChoices:\nA) public static void main(String[] args)\nB) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: What is the hash function used in linear probing?\nChoices:\nA) H(x)= key mod table size\nB) H(x)= (key+ F(i2)) mod table size\nC) H(x)= (key+ F(i)) mod table size\nD) H(x)= X mod 17\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Let A[1...n] be an array of n distinct numbers. If i < j and A[i] > A[j], then the pair (i, j) is called an inversion of A. What is the expected number of inversions in any permutation on n elements ?, ,\nChoices:\nA) n(n-1)/2\nB) n(n-1)/4\nC) n(n+1)/4\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: In skew heaps, certain constraints are to be met in order to perform swapping.\nChoices:\nA) true\nB) false\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Consider the following pseudocode that uses a stack , # Declare a stack of characters\nword = \"example\"  # Replace with the word you want to read\nchar_stack = []\n\n# While there are more characters in the word to read\nfor c in word:\n    char_stack.append(c)  # Push the character on the stack\n\n# While the stack is not empty\nwhile char_stack:\n    c = char_stack.pop()  # Pop a character off the stack\n    print(c, end='')  # Write the character to the screen,\nChoices:\nA) geeksquizgeeksquiz\nB) ziuqskeeg\nC) geeksquiz\nD) ziuqskeegziuqskeeg\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: The total comparisons in finding both smallest and largest elements are\nChoices:\nA) 2*n +2\nB) n + ((n+1)/2) -2\nC) n+logn\nD) n2\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What does the following piece of code do?\n\npublic void func(Tree root)\n{\n func(root.left());\n func(root.right());\n System.out.println(root.data());\n}\nChoices:\nA) Preorder traversal\nB) Inorder traversal\nC) Postorder traversal\nD) Level order traversal\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What is the corresponding postfix expression for the given infix expression?\nChoices:\nA) ab*cdef/^*g-h+\nB) abcdef^/*g*h*+\nC) abcd*^ed/g*-h*+\nD) abc*de^fg/*-*h+\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: Given a plane graph, G having 2 connected component, having 6 vertices, 7 edges and 4 regions. What will be the number of connected components?\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What would be the output of the following C++ program if the given input is\n\n0 0 0 1 1\n0 0 0 0 1\n0 0 0 1 0\n1 0 1 0 0\n1 1 0 0 0\n \n#include <bits/stdc++.h>\nusing namespace std;\nbool visited[5];\nint G[5][5];\n \nvoid fun(int i)\n{\n cout<<i<<\" \";\n visited[i]=true;\n for(int j=0;j<5;j++)\n  if(!visited[j]&&G[i][j]==1)\n   fun(j);\n}\n \nint main()\n{   \n for(int i=0;i<5;i++)\n  for(int j=0;j<5;j++)\n   cin>>G[i][j];\n \n for(int i=0;i<5;i++)\n  visited[i]=0;\n \n fun(0);\n  return 0;\n}\nCode: #include <bits/stdc++.h>\nChoices:\nA) 0 2 3 1 4\nB) 0 3 2 4 1\nC) 0 2 3 4 1\nD) 0 3 2 1 4\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What would be the solution to the given prefix notation?\nChoices:\nA) 12\nB) 7.5\nC) 9\nD) 13.5\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: How can you save memory when storing color information in Red-Black tree?\nChoices:\nA) using least significant bit of one of the pointers in the node for color information\nB) using another array with colors of each node\nC) storing color information in the node structure\nD) using negative and positive numbering\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Queues serve major role in ______________\nChoices:\nA) Simulation of recursion\nB) Simulation of arbitrary linked list\nC) Simulation of limited resource allocation\nD) Simulation of heap sort\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: A binary tree T has 20 leaves. The number of nodes in T having two children is, ,\nChoices:\nA) 18\nB) 19\nC) 17\nD) Any number between 10 and 20\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: In Postfix expressions, the operators come after the operands.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Insert the characters of the string K R P C S N Y T J M into a hash table of size 10. Use the hash function, ,\nChoices:\nA) Y\nB) C\nC) M\nD) P\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: The expression obtained by recursively producing a left expression, followed by an operator, followed by recursively producing a right expression is called?\nChoices:\nA) prefix expression\nB) infix expression\nC) postfix expression\nD) paranthesized expression\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Which of the following is also known as Rope data structure?\nChoices:\nA) Cord\nB) String\nC) Array\nD) Linked List\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Two balanced binary trees are given with m and n elements respectively. They can be merged into a balanced binary search tree in ____ time.\nChoices:\nA) O(m+n)\nB) O(mn)\nC) O(m)\nD) O(mlog n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What is the possible number of binary trees that can be created with 3 nodes, giving the sequence N, M, L when traversed in post-order.\nChoices:\nA) 15\nB) 3\nC) 5\nD) 8\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: How do you initialize an array in C?\nChoices:\nA) int arr[3] = (1,2,3);\nB) int arr(3) = {1,2,3};\nC) int arr[3] = {1,2,3};\nD) int arr(3) = (1,2,3);\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: In a full binary tree if number of internal nodes is I, then number of leaves L are?\nChoices:\nA) L = 2*I\nB) L = I + 1\nC) L = I \u2013 1\nD) L = 2*I \u2013 1\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: What are the time complexities of finding 8th   element from beginning and 8th element from end   in a singly linked list? Let n be the number of nodes   in linked list, you may assume that n>8., ,\nChoices:\nA) O(n) and O(n)\nB) O(1) and O(1)\nC) O(n) and O(1)\nD) O(1) and O(n)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which of the following is false?\nChoices:\nA) Compared to B-tree, B+ -tree has larger fanout\nB) Deletion in B-tree is more complicated than in B+ -tree\nC) B+ -tree has greater depth than corresponding B-tree\nD) Both B-tree and B+ -tree have same search and insertion efficiencies\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: How many different shapes does maintenance of AA-Tree need to consider?\nChoices:\nA) 7\nB) 5\nC) 2\nD) 3\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which tree allows fast implementation of string operation?\nChoices:\nA) Rope Tree\nB) Suffix Tree\nC) Tango Tree\nD) Top Tree\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Which of the following is a disadvantage of using separate chaining using linked lists?\nChoices:\nA) It requires many pointers\nB) It requires linked lists\nC) It uses array\nD) It does not resolve collision\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: How many edges are present in Edge cluster?\nChoices:\nA) 0\nB) 1\nC) 2\nD) 4\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which of the below statements are true?\ni. Cartesian tree is not a height balanced tree\nii. Cartesian tree of a sequence of unique numbers can be unique generated\nChoices:\nA) both statements are true\nB) only i. is true\nC) only ii. is true\nD) both are false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: What happens when you pop from an empty stack while implementing using the Stack ADT in Java?\nChoices:\nA) Undefined error\nB) Compiler displays a warning\nC) EmptyStackException is thrown\nD) NoStackException is thrown\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: The height of 2-3 tree with n elements is ______\nChoices:\nA) between (n/2) and (n/3)\nB) (n/6)\nC) between (n) and log2(n + 1)\nD) between log3(n + 1) and log2(n + 1)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: What is the difference between a normal(naive) array and a sparse array?\nChoices:\nA) Sparse array can hold more elements than a normal array\nB) Sparse array is memory efficient\nC) Sparse array is dynamic\nD) A naive array is more efficient\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Which of the following data structures can be used for parentheses matching?\nChoices:\nA) n-ary tree\nB) queue\nC) priority queue\nD) stack\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: What is wrong in the below code of printing Right View of a binary tree using the Queue data structure?, #include <iostream>\n#include <queue>\nusing namespace std;\n\nclass Node {\npublic:\n    int data;\n    Node* left;\n    Node* right;\n    Node(int val) : data(val), left(nullptr), right(nullptr) {}\n};\n\nvoid printRightView(Node* root) {\n    if (root == nullptr) return;\n\n    queue<Node*> q;\n    q.push(root);\n    while (!q.empty()) {\n        int n = q.size();\n        for (int i = 0; i < n; i++) {\n            Node* x = q.front();\n            q.pop();\n            if (i == n - 1) {\n                cout << x->data << \" \";\n            }\n            if (x->left) {\n                q.push(x->left);\n            }\n            if (x->right) {\n                q.push(x->right);\n            }\n        }\n    }\n},\nCode: #include <iostream>\nChoices:\nA) We have not initialized anything in the Queue\nB) Queue will never be empty.\nC) left and right nodes of the tree are null.\nD) None\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Suppose we have a balanced binary search tree T holding n numbers. We are given two numbers L and H and wish to sum up all the numbers in T that lie between L and H. Suppose there are m such numbers in T. If the tightest upper bound on the time to\ncompute the sum is O(nalogb n + mc logd n), the value of a + 10b + 100c + 1000d is ____., ,\nChoices:\nA) 60\nB) 110\nC) 210\nD) 50\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: What does the following piece of code do?\n\nfor(int i = 0; i < row; i++)\n{  \n    for(int j = 0; j < column; j++)\n    {\n        if(i == j)\n            sum = sum + (array[i][j]);\n    }\n}\nSystem.out.println(sum);\nChoices:\nA) Normal of a matrix\nB) Trace of a matrix\nC) Square of a matrix\nD) Transpose of a matrix\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: What should be the load factor for separate chaining hashing?\nChoices:\nA) 0.5\nB) 1\nC) 1.5\nD) 2\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: What will be the resulting array after rotating arr[]={1, 2, 3, 4, 5} by 2?\nChoices:\nA) 2, 1, 3, 4, 5\nB) 3, 4, 5, 1, 2\nC) 4, 5, 1, 2, 3\nD) 1, 2, 3, 5, 4\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Which scheme uses a randomization approach?\nChoices:\nA) hashing by division\nB) hashing by multiplication\nC) universal hashing\nD) open addressing\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Which of the following is false about a doubly linked list?\nChoices:\nA) We can navigate in both the directions\nB) It requires more space than a singly linked list\nC) The insertion and deletion of a node take a bit longer\nD) Implementing a doubly linked list is easier than singly linked list\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which of the following algorithm can be used to efficiently calculate single source shortest paths in a Directed Acyclic Graph?, ,\nChoices:\nA) Dijkstra\nB) Bellman-Ford\nC) Topological Sort\nD) Strongly Connected Component\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: 8. What data structure would you mostly likely see in non recursive implementation of a recursive algorithm?\nChoices:\nA) Stack\nB) Linked List\nC) Tree\nD) Queue\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Using stacks, how to obtain the binary representation of the number?\na)\n\npublic void convertBinary(int num)\n{\n    Stack<Integer> stack = new Stack<Integer>();\n    while (num != 0)\n    {\n        int digit = num / 2;\n        stack.push(digit);\n        num = num % 2;\n    } \n    System.out.print(\"\\nBinary representation is:\");\n    while (!(stack.isEmpty() ))\n    {\n        System.out.print(stack.pop());\n    }\n }\npublic void convertBinary(int num)\n{\n    Stack<Integer> stack = new Stack<Integer>();\n    while (num != 0)\n    {\n        int digit = num % 2;\n        stack.push(digit);\n    } \n    System.out.print(\"\\nBinary representation is:\");\n    while (!(stack.isEmpty() ))\n    {\n        System.out.print(stack.pop());\n    }\n }\npublic void convertBinary(int num)\n{\n    Stack<Integer> stack = new Stack<Integer>();\n    while (num != 0)\n    {\n        int digit = num % 2;\n        stack.push(digit);\n        num = num / 2;\n    } \n    System.out.print(\"\\nBinary representation is:\");\n    while (!(stack.isEmpty() ))\n    {\n        System.out.print(stack.pop());\n    }\n }\npublic void convertBinary(int num)\n{\n    Stack<Integer> stack = new Stack<Integer>();\n    while (num != 0)\n    {\n        int digit = num % 2;\n        stack.push(digit%2);\n        num = num / 2;\n    } \n    System.out.print(\"\\nBinary representation is:\");\n    while (!(stack.isEmpty() ))\n    {\n        System.out.print(stack.pop());\n    }\n }\n\nd)\nChoices:\nA) public void convertBinary(int num)\nB) Answer: c\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: In linked list implementation of a queue, front and rear pointers are tracked. Which of these pointers will change during an insertion into a NONEMPTY queue?\nChoices:\nA) Only front pointer\nB) Only rear pointer\nC) Both front and rear pointer\nD) No pointer will be changed\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Write a piece of code which returns true if the string contains balanced parenthesis, false otherwise.\na)\n\npublic boolean isBalanced(String exp)\n{\n int len = exp.length();\n Stack<Integer> stk = new Stack<Integer>();\n for(int i = 0; i < len; i++)\n        {\n  char ch = exp.charAt(i);\n                if (ch == '(')\n                stk.push(i);\n                else if (ch == ')')\n                {\n   if(stk.peek() == null)\n                        {\n    return false;\n   }\n   stk.pop();\n  }\n }\n return true;\n}\npublic boolean isBalanced(String exp)\n{\n int len = exp.length();\n Stack<Integer> stk = new Stack<Integer>();\n for(int i = 0; i < len; i++)\n            {\n  char ch = exp.charAt(i);\n                if (ch == '(')\n                stk.push(i);\n                else if (ch == ')')\n                {\n   if(stk.peek() != null)\n                        {\n    return true;\n   }\n   stk.pop();\n  }\n }\n return false;\n  }\npublic boolean isBalanced(String exp)\n{\n int len = exp.length();\n Stack<Integer> stk = new Stack<Integer>();\n for(int i = 0; i < len; i++)\n        {\n        char ch = exp.charAt(i);\n               if (ch == ')')\n               stk.push(i);\n               else if (ch == '(')\n               {\n   if(stk.peek() == null)\n                        {\n    return false;\n   }\n   stk.pop();\n  }\n }\n return true;\n}\npublic boolean isBalanced(String exp)\n{\n int len = exp.length();\n Stack<Integer> stk = new Stack<Integer>();\n for(int i = 0; i < len; i++)\n        {\n  char ch = exp.charAt(i);\n                if (ch == '(')\n                stk.push(i);\n                else if (ch == ')')\n                {\n   if(stk.peek() != null)\n                        {\n    return false;\n   }\n   stk.pop();\n  }\n }\n return true;\n  }\npublic boolean isBalanced(String exp)\n{\n int len = exp.length();\n Stack<Integer> stk = new Stack<Integer>();\n for(int i = 0; i < len; i++)\n        {\n  char ch = exp.charAt(i);\n                if (ch == '(')\n                stk.push(i);\n                else if (ch == ')')\n                {\n   if(stk.peek() == null)\n                        {\n    return false;\n   }\n   stk.pop();\n  }\n }\n return true;\n}\nChoices:\nA) public boolean isBalanced(String exp)\nB) O(logn)\nC) O(n)\nD) O(1)\nE) O(nlogn)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: 3. How do you instantiate an array in Java?\nChoices:\nA) int arr[] = new int(3);\nB) int arr[];\nC) int arr[] = new int[3];\nD) int arr() = new int(3);\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Circular Queue is also known as ________\nChoices:\nA) Ring Buffer\nB) Square Buffer\nC) Rectangle Buffer\nD) Curve Buffer\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: If the elements \u201cA\u201d, \u201cB\u201d, \u201cC\u201d and \u201cD\u201d are placed in a stack and are deleted one at a time, what is the order of removal?\nChoices:\nA) ABCD\nB) DCBA\nC) DCAB\nD) ABDC\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Easy",
        "target_text": "Question: The total number of comparisons required to   merge 4 sorted files containing 15, 3, 9 and 8   records into a single sorted file is \u2026\u2026\u2026\u2026., ,\nChoices:\nA) 66\nB) 39\nC) 15\nD) 3 \\n Ans: ? \\n (A) 66 \\n (B) 39 \\n (C) 15 \\n (D) 3 \\n Ans: ? \\n\\n\\x0c209. Minimum number of moves required to solve a \\n Tower of Hanoi puzzle is \u2026\u2026\u2026\u2026.. \\n (A) 2^n2 \\n (B) 2n-1 \\n (C) 2n \u2013 1 \\n (D) 2n \u2013 1\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Left child of parent node has value lesser than the parent node.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: In a max-heap, element with the greatest key is always in the which node?\nChoices:\nA) Leaf node\nB) First node of left sub tree\nC) root node\nD) First node of right sub tree\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which algorithm is used in the top tree data structure?\nChoices:\nA) Divide and Conquer\nB) Greedy\nC) Backtracking\nD) Branch\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: A full binary tree with n leaves contains   \u2026\u2026\u2026\u2026., ,\nChoices:\nA) n nodes\nB) log n2 nodes\nC) 2n \u20131 nodes\nD) 2n nodes\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: An error is reported when the stack is not empty at the end.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: And Inverter Graph is a type of __________\nChoices:\nA) Multigraph\nB) Cyclic Graph\nC) Directed Acyclic Graph\nD) Directed Acyclic Word Graph\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Linked lists are best suited .....\nChoices:\nA) for relatively permanent collections of data.\nB) for the size of the structure and the data in the structure are constantly changing.\nC) data structure\nD) for none of above situation\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: In case of insertion into a linked queue, a node borrowed from the __________ list is inserted in the queue.\nChoices:\nA) AVAIL\nB) FRONT\nC) REAR\nD) NULL\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: Given Adjacency matrices determine which of them are PseudoGraphs?\ni) {{1,0} {0,1}}\nii) {{0,1}{1,0}}\niii) {{0,0,1}{0,1,0}{1,0,0}}\nChoices:\nA) only i)\nB) ii) and iii)\nC) i) and iii)\nD) i) ii) and iii)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Any decision tree that sorts n elements has height, ,\nChoices:\nA) \u03a9(n)\nB) \u03a9(lgn)\nC) \u03a9(nlgn)\nD) \u03a9(n2)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: What is the degree sequence of the given HyperGraph, in non-increasing order.\nV = {v1,v2,v3,v4,v5,v6} E = {{v1,v4,v5} {v2,v3,v4,v5} {v2} {v1} {v1,v6}}\nChoices:\nA) 3,2,1,1,1,1\nB) 3,2,2,2,1,1\nC) 3,2,2,2,2,1\nD) 3,2,2,1,1,1\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: The minimum number of stacks needed to implement a queue is, ,\nChoices:\nA) 3\nB) 1\nC) 2\nD) 4\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Easy",
        "target_text": "Question: The topological sorting of any DAG can be done in ________ time.\nChoices:\nA) cubic\nB) quadratic\nC) linear\nD) logarithmic\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: How many distinct binary search trees can be created out of 4 distinct keys?, ,\nChoices:\nA) 4\nB) 14\nC) 24\nD) 42\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Which of the following is the type of priority Queue?, ,\nChoices:\nA) Ascending Order Priority Queue\nB) Descending order Priority Queue\nC) Deque\nD) Both A and B.\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: One can determine whether a Binary tree is a   Binary Search Tree by traversing it in \u2026\u2026\u2026\u2026\u2026., ,\nChoices:\nA) Pre-order\nB) In-order\nC) Post-order\nD) Any of these\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: In DNA sequence alignment, which string-matching algorithm is commonly used to identify similarities between two DNA sequences efficiently?, ,\nChoices:\nA) Rabin-Karp algorithm\nB) Knuth-Morris-Pratt algorithm\nC) Z function\nD) None of the above\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Which of the following points is/are not true about Linked List data structure when it is compared with an array?\nChoices:\nA) Arrays have better cache locality that can make them better in terms of performance\nB) It is easy to insert and delete elements in Linked List\nC) Random access is not allowed in a typical implementation of Linked Lists\nD) Access of elements in linked list takes less time than compared to arrays\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: What is a skip list?\nChoices:\nA) a linkedlist with size value in nodes\nB) a linkedlist that allows faster search within an ordered sequence\nC) a linkedlist that allows slower search within an ordered sequence\nD) a tree which is in the form of linked list\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: What are the advantages of arrays?\nChoices:\nA) Objects of mixed data types can be stored\nB) Elements in an array cannot be sorted\nC) Index of first element of an array is 1\nD) Easier to store elements of same data type\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: What are the children for node \u2018w\u2019 of a complete-binary tree in an array representation?\nChoices:\nA) 2w and 2w+1\nB) 2+w and 2-w\nC) w+1/2 and w/2\nD) w-1/2 and w+1/2\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: How will you find the maximum element in a binary search tree?\na)\n\npublic void max(Tree root)\n{\n while(root.left() != null)\n {\n  root = root.left();\n }\n System.out.println(root.data());\n}\npublic void max(Tree root)\n{\n while(root != null)\n {\n  root = root.left();\n }\n System.out.println(root.data());\n}\npublic void max(Tree root)\n{\n while(root.right() != null)\n {\n  root = root.right();\n }\n System.out.println(root.data());\n}\npublic void max(Tree root)\n{\n while(root != null)\n {\n  root = root.right();\n }\n System.out.println(root.data());\n}\n\nd)\nChoices:\nA) public void max(Tree root)\nB) Answer: c\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: The graphs G1 and G2 with their incidences matrices given are Isomorphic.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Why to prefer red-black trees over AVL trees?\nChoices:\nA) Because red-black is more rigidly balanced\nB) AVL tree store balance factor in every node which costs space\nC) AVL tree fails at scale\nD) Red black is more efficient\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Is the following statement valid about shortest paths? Given a graph, suppose we have calculated shortest path from a source to all other vertices. If we modify the graph such that weights of all edges is becomes double of the original weight, then the shortest path remains same only the total weight of path changes., ,\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: All Graphs have unique representation on paper.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Consider a graph G=(V, E), where V = { v1,v2,\u2026,v100 }, E={ (vi, vj) \u2223 1\u2264 i < j \u2264 100} and weight of the edge (vi, vj)  is \u2223i\u2013j\u2223. The weight of minimum spanning tree of G is ________.\n , ,\nChoices:\nA) 99\nB) 100\nC) 98\nD) 101\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Which of the following operations are done in a hash table?\nChoices:\nA) Insert only\nB) Search only\nC) Insert and search\nD) Replace\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What will be the auxiliary space complexity of the following code?\n\n#include <iostream>\nusing namespace std;\nint main()\n{   \n    int arr[] = {1,2,3,4,5,6};\n    int n = sizeof(arr)/sizeof(arr[0]);\n    int d=4;\n    int temp[10];\n \n    for(int i=0;i<d;i++)\n    temp[i]=arr[i];\n \n    int j=0;\n    for(int i=d;i<n;i++,j++)\n    arr[j]=arr[i];\n \n    int k=0;\n    for(int i=n-d;i<n;i++,k++)\n    arr[i]=temp[k];\n \n    for(int i=0;i<n;i++)\n    cout<<arr[i]<<\" \";\n    return 0;\n}\nCode: #include <iostream>\nChoices:\nA) O(1)\nB) O(n)\nC) O(d)\nD) O(n*d)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Which class in Java can be used to represent bit array?\nChoices:\nA) BitSet\nB) BitVector\nC) BitArray\nD) BitStream\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which of the following is correct with respect to a parse tree for a given grammar?\nChoices:\nA) n parse tree = n leftmost derivation tree = n rightmost derivation tree\nB) n parse tree = n leftmost derivation tree\nC) n parse tree = n rightmost derivation tree\nD) n parse tree = n non-terminals\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Which operation cannot be directly performed in a d-heap?\nChoices:\nA) insert\nB) delete\nC) find\nD) create\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Easy",
        "target_text": "Question: What is a palindromic string?, ,\nChoices:\nA) The string of length 0\nB) The string of having a special character.\nC) The string of having an uppercase letter\nD) The string whose reversed string is equal to the original string.\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Consider the following algorithm to insert an element in a triply linked list.\n\ninitializing previous, next and top pointers to null\n    pointing the head and tail to the node created\npointing previous, next and top pointers to the node created\n    initializing the head and tail to null\ninitializing previous, next and top pointers to null\n    initializing the head and tail to null\npointing previous, next and top pointers to the node\n\nd)\nChoices:\nA) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Is the following statement valid?.\n\nGiven a graph where all edges have positive weights, the shortest paths produced by Dijsktra and Bellman Ford algorithm may be different but path weight would always be same., ,\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: In a doubly linked list, the number of pointers affected for an insertion operation will be, ,\nChoices:\nA) 5\nB) 0\nC) 1\nD) None of these\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What is the functionality of the following code?\n\npublic void function(Node node)\n{\n if(size == 0)\n  head = node;\n else\n {\n  Node temp,cur;\n  for(cur = head; (temp = cur.getNext())!=null; cur = temp);\n  cur.setNext(node);\n }\n size++;\n}\nChoices:\nA) Inserting a node at the beginning of the list\nB) Deleting a node at the beginning of the list\nC) Inserting a node at the end of the list\nD) Deleting a node at the end of the list\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Why to prefer splay trees?\nChoices:\nA) easier to program\nB) space efficiency\nC) easier to program and faster access to recently accessed items\nD) quick searching\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What is the height of a K-ary tree having only root node?\nChoices:\nA) 1\nB) 0\nC) 2\nD) 3\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Let A be a matrix of size n x n. Consider the following program. What is the expected output? , void fun(int A[][N])\n{\n    for (int i = 0; i < N; i++)\n        for (int j = i + 1; j < N; j++)\n            swap(A[i][j], A[j][i]);\n},\nChoices:\nA) Matrix A\nB) Diagonal Of matrix A\nC) Transpose of matrix A\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Hashing can be used to encrypt and decrypt digital signatures.\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Assume that the operators +,-, x are left associative and ^ is right associative. The order of precedence (from highest to lowest) is ^, x, +, -. The postfix expression for the infix expression a + b x c \u2013 d ^ e ^ f is?\nChoices:\nA) a b c x + d e f ^ ^ \u2013\nB) a b c x + d e ^ f ^ \u2013\nC) a b + c x d \u2013 e ^ f ^\nD) \u2013 + a x b c ^ ^ d e f\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: The number of disk pages access in B - tree search, where h is height, n is the number of keys, and t is the minimum degree, is:, ,\nChoices:\nA) \u03b8(logn h * t)\nB) \u03b8(logt n * h)\nC) \u03b8(logh n)\nD) \u03b8(logt n)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Linked lists are not suitable for the implementation of ___________\nChoices:\nA) Insertion sort\nB) Radix sort\nC) Polynomial manipulation\nD) Binary search\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Of the following rules that are followed by an AA-tree, which of the following is incorrect?\n1- Only right children can be red\n2- Procedures are coded recursively\n3- Instead of storing colors, the level of a node is stored\n4- There should not be any left children\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: For construction of a binary heap with property that parent node has value less than child node. In reference to that which line is incorrect. Line indexed from 1.\nChoices:\nA) Line \u2013 3\nB) Line \u2013 5\nC) Line \u2013 6\nD) Line \u2013 7\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Which node has the lowest priority in a treap?\nChoices:\nA) root node\nB) leaf node\nC) null node\nD) centre node\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Which of these operators have the highest order of precedence?\nChoices:\nA) \u2018(\u2018 and \u2018)\u2019\nB) \u2018*\u2019 and \u2018/\u2019\nC) \u2018~\u2019 and \u2018^\u2019\nD) \u2018+\u2019 and \u2018-\u2018\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: If comparison based sorting algorithm is used construct the suffix array, then what will be time required to construct the suffix array?\nChoices:\nA) O(nlogn)\nB) O(n2)\nC) O(n2logn)\nD) O(n2) + O(logn)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: A priority queue Q is used to implement a stack S that stores characters. PUSH(C) is implemented as INSERT(Q, C, K) where K is an appropriate integer key chosen by the implementation. POP is implemented as DELETEMIN(Q). For a sequence of operations, the keys chosen are in, ,\nChoices:\nA) Non-increasing order\nB) Non-decreasing order\nC) strictly increasing order\nD) strictly decreasing order\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Given below is the Node class to perform basic list operations and a Stack class with a no arg constructor.\nSelect from the options the appropriate pop() operation that can be included in the Stack class. Also \u2018first\u2019 is the top-of-the-stack.\n\nclass Node\n{\n protected Node next;\n protected Object ele;\n Node()\n {\n  this(null,null);\n }\n Node(Object e,Node n)\n {\n  ele=e;\n  next=n;\n }\n public void setNext(Node n)\n {\n  next=n;\n }\n public void setEle(Object e)\n {\n  ele=e;\n }\n public Node getNext()\n {\n  return next;\n }\n public Object getEle()\n {\n  return ele;\n }\n}\n \nclass Stack\n{\n Node first;\n int size=0;\n Stack()\n {\n  first=null;\n }\n}\npublic Object pop() \n{\n if(size == 0)\n System.out.println(\"underflow\");\n else\n {\n  Object o = first.getEle();\n  first = first.getNext();\n  size--;\n  return o;\n }\n}\npublic Object pop() \n{\n if(size == 0)\n System.out.println(\"underflow\");\n else\n {\n  Object o = first.getEle();\n  first = first.getNext().getNext();\n  size--;\n  return o;\n }\n}\npublic Object pop() \n{\n if(size == 0)\n System.out.println(\"underflow\");\n else\n {\n  first = first.getNext();\n  Object o = first.getEle();\n  size--;\n  return o;\n }\n}\npublic Object pop() \n{\n if(size == 0)\n System.out.println(\"underflow\");\n else\n {\n  first = first.getNext().getNext();\n  Object o = first.getEle();\n  size--;\n  return o;\n }\n}\n\nd)\nChoices:\nA) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Insertion into a 2-d tree is a trivial extension of insertion into a binary search tree.\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Using the evaluation of prefix algorithm, evaluate +-9 2 7.\nChoices:\nA) 10\nB) 4\nC) 17\nD) 14\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Which of the following points is/are true about Linked List data structure when it is compared with array?, ,\nChoices:\nA) Arrays have better cache locality that can make them better in terms of performance.\nB) It is easy to insert and delete elements in Linked List\nC) Random access is not allowed in a typical implementation of Linked Lists\nD) The size of array has to be pre-decided, linked lists can change their size any time.\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: What is order of resultant heap after merging two tree of order k?\nChoices:\nA) 2*k\nB) k+1\nC) k*k\nD) k+logk\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Which hash function satisfies the condition of simple uniform hashing?\nChoices:\nA) h(k) = lowerbound(km)\nB) h(k)= upperbound(mk)\nC) h(k)= lowerbound(k)\nD) h(k)= upperbound(k)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: When the corresponding end bracket/braces/parentheses is not found, what happens?\nChoices:\nA) The stack is popped\nB) Ignore the parentheses\nC) An error is reported\nD) It is treated as an exception\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: A good hash approach is to derive the hash value that is expected to be dependent of any patterns that might exist in the data.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What will be the output of the following code?\n\n#include <bits/stdc++.h> \nusing namespace std; \nvoid func(int a[], int n, int k) \n{ \n if (k <= n) \n { \n  for (int i = 0; i < k/2; i++) \n  swap(a[i], a[k-i-1]); \n } \n \n} \nint main() \n{ \n int a[] = {1, 2, 3, 4, 5}; \n int n = sizeof(a) / sizeof(int), k = 3; \n func(a, n, k); \n for (int i = 0; i < n; ++i) \n  cout << a[i]<<\" \";\n return 0; \n}\nCode: #include <bits/stdc++.h>\nChoices:\nA) 3 2 1 4 5\nB) 5 4 3 2 1\nC) 1 2 5 4 3\nD) error\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What is the maximum height of an AVL tree with p nodes?\nChoices:\nA) p\nB) log(p)\nC) log(p)/2\nD) p\u20442\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Suppose the contents of an array A are, A = {1, null, null, null, null, 10};\nWhat would be the size of the array considering it as a normal array and a sparse array?\nChoices:\nA) 6 and 6\nB) 6 and 2\nC) 2 and 6\nD) 2 and 2\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: Space complexity for an adjacency list of an undirected graph having large values of V (vertices) and E (edges) is ___________\nChoices:\nA) O(E)\nB) O(V*V)\nC) O(E+V)\nD) O(V)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: 4. The data structure required to check whether an expression contains a balanced parenthesis is?\nChoices:\nA) Queue\nB) Stack\nC) Tree\nD) Array\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Heap exhibits the property of a binary tree?\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: It is easier for a computer to process a postfix expression than an infix expression.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: What does a xor linked list have?\nChoices:\nA) every node stores the XOR of addresses of previous and next nodes\nB) actuall memory address of next node\nC) every node stores the XOR of addresses of previous and next two nodes\nD) every node stores xor 0 and the current node address\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Choose the code snippet which inserts a node to the head of the list?\na)\n\npublic void insertHead(int data)\n{\n Node temp = new Node(data);\n Node cur = head;\n while(cur.getNext() != head)\n  cur = cur.getNext()\n if(head == null)\n {\n  head = temp;\n  head.setNext(head);\n }\n else\n {\n  temp.setNext(head);\n  head = temp;\n  cur.setNext(temp);\n }\n size++;\n}\npublic void insertHead(int data)\n{\n Node temp = new Node(data);\n while(cur != head)\n  cur = cur.getNext()\n if(head == null)\n {\n  head = temp;\n  head.setNext(head);\n }\n else\n {\n  temp.setNext(head.getNext());\n  cur.setNext(temp);\n }\n size++;\n}\npublic void insertHead(int data)\n{\n Node temp = new Node(data);\n if(head == null)\n {\n  head = temp;\n  head.setNext(head);\n }\n else\n {\n  temp.setNext(head.getNext());\n  head = temp;\n }\n size++;\n}\npublic void insertHead(int data)\n{\n Node temp = new Node(data);\n if(head == null)\n {\n  head = temp;\n  head.setNext(head.getNext());\n }\n else\n {\n  temp.setNext(head.getNext());\n  head = temp;\n }\n size++;\n}\n\nd)\nChoices:\nA) public void insertHead(int data)\nB) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What output does the below pseudo code produces?\n\nTree_node function(Tree_node x)\n    {\n        Tree_node y = x.left;\n        x.left = y.right;\n        y.right = x;\n        return y;\n    }\nChoices:\nA) right rotation of subtree\nB) left rotation of subtree\nC) zig-zag operation\nD) zig-zig operation\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What would be the Prefix notation for the given equation?\nChoices:\nA) a|&bc\nB) &|abc\nC) |a&bc\nD) ab&|c\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What\u2019s wrong with this code which returns xor of two nodes address ?\nChoices:\nA) nothing wrong. everything is fine\nB) type casting at return is missing\nC) parameters are wrong\nD) total logic is wrong\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Who Invented The vEB also known as Van Emde Boas Tree?\nChoices:\nA) Peter Van Emde Boas\nB) Samuel F. B. Morse\nC) Friedrich Clemens Gerke\nD) Alexander Morse\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: What is the other name of weak heap?\nChoices:\nA) Min-heap\nB) Max-heap\nC) Relaxed -heap\nD) Leonardo heap\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Which of the following property does not hold for matrix multiplication?\nChoices:\nA) Associative\nB) Distributive\nC) Commutative\nD) Additive Inverse\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: 17. Which of the following is not the type of queue?\nChoices:\nA) Priority queue\nB) Circular queue\nC) Single ended queue\nD) Ordinary queue\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: If column-major order is used, how is the following matrix stored in memory?\na b c\nd e f\ng h i\nChoices:\nA) ihgfedcba\nB) abcdefghi\nC) cfibehadg\nD) adgbehcfi\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: A priority queue is implemented as a Max-Heap. Initially, it has 5 elements. The level-order traversal of the heap is: 10, 8, 5, 3, 2. Two new elements 1 and 7 are inserted into the heap in that order. The level-order traversal of the heap after the insertion of the elements is:, ,\nChoices:\nA) 10, 8, 7, 3, 2, 1, 5\nB) 10, 8, 7, 2, 3, 1, 5\nC) 10, 8, 7, 1, 2, 3, 5\nD) 10, 8, 7, 5, 3, 2, 1\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Descending priority queue can be implemented using ______\nChoices:\nA) max heap\nB) min heap\nC) min-max heap\nD) trie\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: What are the values of h1(k) and h2(k) in the hash function?\na)\n\nh1(k) = m mod k\n    h2(k) =  1+ (m\u2019 mod k)\nh1(k) = 1 + (m mod k)\n    h2(k) =  m\u2019 mod k\nh1(k) = 1+ (k mod m)\n    h2(k) =  k mod m\nh1(k) = k mod m\n    h2(k) =  1+ (k mod m\u2019)\n\nd)\nChoices:\nA) h1(k) = m mod k\nB) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: The minimum number of interchanges needed to convert the array 89, 19, 40, 17, 12, 10, 2, 5, 7, 11, 6, 9, 70 into a heap with the maximum element at the root is, ,\nChoices:\nA) 0\nB) 1\nC) 2\nD) 3\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Search and difficulty=Easy",
        "target_text": "Question: What is the search complexity in direct addressing?\nChoices:\nA) O(n)\nB) O(logn)\nC) O(nlogn)\nD) O(1)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: The postfix form of the expression (A+ B)*   (C*D\u2212 E)*F / G is:, ,\nChoices:\nA) AB+ CD*E \u2212 FG /**\nB) AB + CD* E \u2212 F **G /\nC) AB + CD* E \u2212 *F *G /\nD) AB + CDE * \u2212 * F *G /\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: On what value does the probe sequence depend on?\nChoices:\nA) c1\nB) k\nC) c2\nD) m\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: The procedure FindMin() to find the minimum element and the procedure DeleteMin() to delete the minimum element in min heap take _________\nChoices:\nA) logarithmic and linear time constant respectively\nB) constant and linear time respectively\nC) constant and quadratic time respectively\nD) constant and logarithmic time respectively\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Consider the following definition in c programming language.\n\nstruct node\n{\n    int data;\n    struct node * next;\n}\ntypedef struct node NODE;\nNODE *ptr;\n\nWhich of the following c code is used to create new node?\nChoices:\nA) ptr = (NODE*)malloc(sizeof(NODE));\nB) ptr = (NODE*)malloc(NODE);\nC) ptr = (NODE*)malloc(sizeof(NODE*));\nD) ptr = (NODE)malloc(sizeof(NODE));\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Consider yourself to be in a planet where the computational power of chips to be slow. You have an array of size 10.You want to perform enqueue some element into this array. But you can perform only push and pop operations .Push and pop operation both take 1 sec respectively. The total time required to perform enQueue operation is?\nChoices:\nA) 20\nB) 40\nC) 42\nD) 43\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: 10. What are the disadvantages of arrays?\nChoices:\nA) Data structure like queue or stack cannot be implemented\nB) There are chances of wastage of memory space if elements inserted in an array are lesser than the allocated size\nC) Index value of an array can be negative\nD) Elements are sequentially accessed\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Consider a hash function that distributes keys uniformly. The hash table size is 20. After hashing of how many keys will the probability that any new key hashed collides with an existing one exceed 0.5., ,\nChoices:\nA) 5\nB) 6\nC) 7\nD) 10\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: What will be the minimum number of jumps required to reach the end of the array arr[] = {1,2,0,0,3,6,8,5}?\nChoices:\nA) 1\nB) 2\nC) 3\nD) not possible to reach the end\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: How many top trees are there in a tree with single vertex?\nChoices:\nA) 0\nB) 1\nC) 2\nD) 3\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: What would be the value of the distance matrix, after the execution of the given code?\n\n#include <bits/stdc++.h>\n#define INF 1000000\nint graph[V][V] = {   {0,   7,  INF, 4},\n                      {INF, 0,   13, INF},\n                      {INF, INF, 0,   12},\n                      {INF, INF, INF, 0}\n                  };\n \nint distance[V][V], i, j, k;\n \nfor (i = 0; i < V; i++)\n        for (j = 0; j < V; j++)\n     distance[i][j] = graph[i][j];\n \nfor (k = 0; k < V; k++)\n for (i = 0; i < V; i++)\n         for (j = 0; j < V; j++)\n                {\n              if (distance[i][k] + distance[k][j] < distance[i][j])\n                  distance[i][j] = distance[i][k] + distance[k][j];\n \n                           return 0;\n                }\nCode: #include <bits/stdc++.h>\nChoices:\nA) None of the mentioned\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: The number of nodes of height h in any n - element heap is __________., ,\nChoices:\nA) h\nB) 2h\nC) ceil(n/2h)/\nD) ceil(n/2h+1)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: In which of the following does a Directed Acyclic Word Graph finds its application in?\nChoices:\nA) String Matching\nB) Number Sorting\nC) Manipulations on numbers\nD) Pattern Printing\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Where does a triply linked list contains an extra pointer in comparison to a doubly linked list?\nChoices:\nA) Top of the node\nB) Bottom of the node\nC) Before the node\nD) After the node\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What is the Height of the root node of ternary tree?\nChoices:\nA) 1\nB) 2\nC) 3\nD) 0\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Is MinHash used as a tool for association rule learning.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which traversal's pseudo code is written here?, ,\nChoices:\nA) Level order\nB) Pre-order\nC) Post-order\nD) In-order\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which operation is used to combine two auxiliary trees?\nChoices:\nA) Join\nB) Combinatorial\nC) Add\nD) Concatenation\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: A linear collection of data elements where the   linear node is given by means of pointer is called   \u2026\u2026\u2026\u2026\u2026   233. A linear collection of data elements where the   linear node is given by means of pointer is called   \u2026\u2026\u2026\u2026\u2026, ,\nChoices:\nA) Linked list\nB) Node list\nC) Primitive list\nD) None of these\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What are different ways of implementing free lists and which is simple among them?\nChoices:\nA) best fit, first fit, worst fit, simple-first fit\nB) best fit, first fit, worst fit, simple-best fit\nC) best fit, first fit, worst fit, simple-worst fit\nD) best fit simple-best fit\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: A single array A[1..MAXSIZE] is used to implement two stacks. The two stacks grow from opposite ends of the array. Variables top1 and top2 (topl< top 2) point to the location of the topmost element in each of the stacks. If the space is to be used efficiently, the condition for \u201cstack full\u201d is:, ,\nChoices:\nA) (top1 = MAXSIZE/2) and (top2 = MAXSIZE/2+1)\nB) top1 + top2 + 1 = MAXSIZE\nC) (top1= MAXSIZE/2) or (top2 = MAXSIZE)\nD) top1= top2 -1\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What is the maximum number of children that a binary tree node can have?\nChoices:\nA) 0\nB) 1\nC) 2\nD) 3\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Out of the following given options, which is the fastest algorithm?\nChoices:\nA) fibonacci heap\nB) pairing heap\nC) d-ary heap\nD) binary heap\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: An expression tree is a kind of?\nChoices:\nA) Binary search tree\nB) Fibonacci tree\nC) Binary tree\nD) Treap\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Given that the line   \f delete newPtr;   226. Given that the line   delete newPtr;  just executed, what can you conclude?, ,\nChoices:\nA) The memory referenced by newPtr is released only if it is \\n needed by the system.\nB) The pointer newPtr is of type void *.\nC) The pointer newPtr only exists if there was an error \\n freeing the memory.\nD) The pointer newPtr still exists.\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: To implement a stack using queue(with only enqueue and dequeue operations), how many queues will you need?\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: The prefix expression of the postfix expression AB+CD-* is __________\nChoices:\nA) (A+B)*(C-D)\nB) +AB*-CD\nC) A+*BCD-\nD) *+AB-CD\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Which is the most appropriate data structure for applying balancing of symbols algorithm?\nChoices:\nA) stack\nB) queue\nC) tree\nD) graph\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: What is the maximum number of edges in a bipartite graph having 10 vertices?\nChoices:\nA) 24\nB) 21\nC) 25\nD) 16\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Suffix array is space efficient than the suffix tree.\nChoices:\nA) True\nB) Fasle\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: All paths and cyclic graphs are bipartite graphs.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: The size of the dynamic array is deallocated if the array size is less than _________% of the backend physical size.\nChoices:\nA) 30\nB) 40\nC) 10\nD) 20\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Time taken in decreasing the node value in a binomial heap is\nChoices:\nA) O(n)\nB) O(1)\nC) O(logn)\nD) O(nlogn)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What determines the order of evaluation of a prefix expression?\nChoices:\nA) precedence and associativity\nB) precedence only\nC) associativity only\nD) depends on the parser\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: One can convert an infix expression to a postfix   expression using a \u2026\u2026\u2026\u2026.., ,\nChoices:\nA) Stack\nB) Queue\nC) Deque\nD) None of these\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: What are the applications of linear probing include:, ,\nChoices:\nA) Databases\nB) Caching\nC) Compiler Design\nD) All of the above\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: The number of unused pointers in a complete   binary tree of depth 5 is:, ,\nChoices:\nA) 4\nB) 8\nC) 16\nD) 32\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Which of the following real world scenarios would you associate with a stack data structure?\nChoices:\nA) piling up of chairs one above the other\nB) people standing in a line to be serviced at a counter\nC) offer services based on the priority of the customer\nD) tatkal Ticket Booking in IRCTC\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Which scheme provides good performance?\nChoices:\nA) open addressing\nB) universal hashing\nC) hashing by division\nD) hashing by multiplication\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Evaluate the postfix expression ab + cd/- where a=5, b=4, c=9, d=3.\nChoices:\nA) 23\nB) 15\nC) 6\nD) 10\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Consider the following operation along with Enqueue and Dequeue operations on queues, where k is a global parameter., ,\nChoices:\nA) A\nB) B\nC) C\nD) D\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: ++a*bc*+defg is an?\nChoices:\nA) postfix expression\nB) infix expression\nC) prefix expression\nD) invalid expression\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: What is the space complexity for deleting a linked list?\nChoices:\nA) O(1)\nB) O(n)\nC) Either O(1) or O(n)\nD) O(logn)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: How many prime concepts are available in nearest neighbour search in a kd tree?\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: In a two-dimensional search tree, the root is arbitrarily chosen to be?\nChoices:\nA) even\nB) odd\nC) depends on subtrees\nD) 1\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: In general, linked lists allow:, ,\nChoices:\nA) Insertions and removals anywhere.\nB) Insertions and removals only at one end.\nC) Insertions at the back and removals from the front.\nD) None of the above.\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Consider the array representation of a binary min-heap containing 1023 elements. The minimum number of comparisons required to find the maximum in the heap is _________ . , ,\nChoices:\nA) 510\nB) 511\nC) 512\nD) 255\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: When executing a sequence of Unions, a node of rank r must have at least 2r descendants.\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What would be the Prefix notation for the given equation?\nChoices:\nA) -+a*/^bcdef\nB) -+a*/bc^def\nC) -+a*b/c^def\nD) -a+*/bc^def\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: What is the maximum number of possible non zero values in an adjacency matrix of a simple graph with n vertices?\nChoices:\nA) (n*(n-1))/2\nB) (n*(n+1))/2\nC) n*(n-1)\nD) n*(n+1)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: A binary tree can be converted in to its mirror   image by traversing it in \u2026\u2026\u2026\u2026.., ,\nChoices:\nA) In-order\nB) Pre-order\nC) Post-order\nD) Any order\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Level order traversal of a tree is formed with the help of\nChoices:\nA) breadth first search\nB) depth first search\nC) dijkstra\u2019s algorithm\nD) prims algorithm\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Which of the following is a disadvantage of parallel array over the traditional arrays?\nChoices:\nA) When a language does not support records, parallel arrays can be used\nB) Increased locality of reference\nC) Ideal cache behaviour\nD) Insertion and Deletion becomes tedious\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What is the Height of the root node of K-ary tree?\nChoices:\nA) 1\nB) 2\nC) 3\nD) 0\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: What is the hash function used in the division method?\nChoices:\nA) h(k) = k/m\nB) h(k) = k mod m\nC) h(k) = m/k\nD) h(k) = m mod k\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Which of the following operations does not destroy the leftist heap property?\nChoices:\nA) insert\nB) merge\nC) delete\nD) swap\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: The recurrence relation that arises in relation with the complexity of binary search is:, ,\nChoices:\nA) T(n) = 2T(n/ 2) + k , where k is constant\nB) T(n) = T(n / 2) + k , where k is constant\nC) T(n) = T(n / 2) + log n\nD) T(n) = T(n / 2) + n\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What is the order of a matrix?\nChoices:\nA) number of rows X number of columns\nB) number of columns X number of rows\nC) number of rows X number of rows\nD) number of columns X number of columns\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: In what way the Symmetry Sparse Matrix can be stored efficiently?\nChoices:\nA) Heap\nB) Binary tree\nC) Hash table\nD) Adjacency List\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: A graph with n vertices will definitely have a   parallel edge or self loop if the total number of   edges are \u2026\u2026\u2026\u2026\u2026\u2026., ,\nChoices:\nA) greater than n\u20131\nB) less than n(n\u20131)\nC) greater than n(n\u20131)/2\nD) less than n2/2\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What is the time taken for a range query for a perfectly balanced tree?\nChoices:\nA) O(N)\nB) O(log N)\nC) O(\u221aN+M)\nD) O(\u221aN)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Easy",
        "target_text": "Question: What is the output of the following code?, #include <iostream>\nusing namespace std;\n\nint main()\n{\n\n    string str = \"Hello\";\n    cout << str.substr(2, 5);\n    return 0;\n},\nCode: #include <iostream>\nChoices:\nA) Syntax error\nB) ello\nC) llo\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Associative arrays can be implemented using __________\nChoices:\nA) B-tree\nB) A doubly linked list\nC) A single linked list\nD) A self balancing binary search tree\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Which of the following data structure is used to convert postfix expression to infix expression?\nChoices:\nA) Stack\nB) Queue\nC) Linked List\nD) Heap\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: If -*+abcd = 11, find a, b, c, d using evaluation of prefix algorithm.\nChoices:\nA) a=2, b=3, c=5, d=4\nB) a=1, b=2, c=5, d=4\nC) a=5, b=4, c=7,d=5\nD) a=1, b=2, c=3, d=4\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What is the functionality of the following code? Choose the most appropriate answer.\n\npublic int function()\n{\n if(head == null)\n  return Integer.MIN_VALUE;\n int var;\n Node temp = head;\n Node cur;\n while(temp.getNext() != head)\n {\n  cur = temp;\n  temp = temp.getNext();\n }\n if(temp == head)\n {\n  var = head.getItem();\n  head = null;\n  return var;\n }\n var = temp.getItem();\n cur.setNext(head);\n return var;\n}\nChoices:\nA) Return data from the end of the list\nB) Returns the data and deletes the node at the end of the list\nC) Returns the data from the beginning of the list\nD) Returns the data and deletes the node from the beginning of the list\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: In parse trees, every internal node represents a non-terminal and every leaf node represents a terminal.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: The value of h2(k) can be composite relatively to the hash table size m.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Linked lists are not suitable data structures for   which one of the following problems?, ,\nChoices:\nA) Insertion sort\nB) Binary search\nC) Radix sort\nD) Polynomial manipulation\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: 11. Assuming int is of 4bytes, what is the size of int arr[15];?\nChoices:\nA) 15\nB) 19\nC) 11\nD) 60\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Which of the following is a valid heap ? , ,\nChoices:\nA) A\nB) B\nC) C\nD) D\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What is the other name for a postfix expression?\nChoices:\nA) Normal polish Notation\nB) Reverse polish Notation\nC) Warsaw notation\nD) Infix notation\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Which of the following is the implementation of the ternary tree?\nChoices:\nA) AVL Tree\nB) Ternary Heap\nC) Hash Table\nD) Dictionary\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: What is the expected error for estimating the Jaccard index using MinHash scheme for k different hash functions?\nChoices:\nA) O (log k!)\nB) O (k!)\nC) O (k2)\nD) O (1/k\u00bd)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Electrical connectivity is an example of equivalence relation.\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: The maximum number of binary trees that can be formed with three unlabelled nodes is:, ,\nChoices:\nA) 1\nB) 5\nC) 4\nD) 3\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Abstract syntax tree is an input to which phase of compiler?\nChoices:\nA) Lexical analysis\nB) Syntax Analysis\nC) Semantic Analysis\nD) Intermediate code generation\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Who invented the MinHash technique?\nChoices:\nA) Weiner\nB) Samuel F. B. Morse\nC) Friedrich Clemens Gerke\nD) Andrei Broder\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Consider a linked list of n elements. What is the   time taken to insert an element after an element   pointed by some pointer?, ,\nChoices:\nA) O(1)\nB) O(log2 n)\nC) O(n)\nD) O(n log2 n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: A program to search a contact from phone directory can be implemented efficiently using ______\nChoices:\nA) a BST\nB) a trie\nC) a balanced BST\nD) a binary tree\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which tree allows fast implementation of a set of string operation?\nChoices:\nA) Rope Tree\nB) Tango Tree\nC) Generalized Suffix Tree\nD) Top Tree\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Easy",
        "target_text": "Question: What is the output of the following code?, #include <iostream>\nusing namespace std;\n\nint main()\n{\n\n    string str1 = \"Hello\";\n    string str2 = \"Geeks\";\n    string str3 = str1 + str2;\n    cout << str3 << endl;\n\n    return 0;\n},\nCode: #include <iostream>\nChoices:\nA) Hello +  Geeks\nB) str1 + str2\nC) Hello Geeks\nD) HelloGeeks\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: What is the other name or Van Emde Boas Tree data structure?\nChoices:\nA) Van Emde Boas Array\nB) Van Emde Boas Stack\nC) Van Emde Boas Priority Queue\nD) Van Emde Boas Heap\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Which is the simplest of all binary search trees?\nChoices:\nA) AVL tree\nB) Treap\nC) Splay tree\nD) Binary heap\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Easy",
        "target_text": "Question: An adaptive sorting algorithm \u2026\u2026\u2026\u2026.., ,\nChoices:\nA) adapts to new computers\nB) takes advantage of already sorted elements\nC) takes input which is already sorted \\n (A) adapts to new computers \\n (B) takes advantage of already sorted elements \\n (C) takes input which is already sorted\nD) None of these\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Which of the following is not a disadvantage of bit array?\nChoices:\nA) Without compression, they might become sparse\nB) Accessing individual bits is expensive\nC) Compressing bit array to byte/word array, the machine also has to support byte/word addressing\nD) Storing and Manipulating in the register set for long periods of time\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: What is the output of the following program?\n\npublic class Stack\n{\n protected static final int CAPACITY = 100;\n protected int size,top = -1;\n protected Object stk[];\n \n public Stack()\n {\n  stk = new Object[CAPACITY];\n }\n \n public void push(Object item)\n {\n  if(size_of_stack==size)\n  {\n   System.out.println(\"Stack overflow\");\n    return;\n  }\n  else\n  {\n   top++;\n   stk[top]=item;\n  }\n }\n public Object pop()\n {\n  if(top<0)\n  {\n   return -999;\n  }\n  else\n  {\n   Object ele=stk[top];\n   top--;\n   size_of_stack--;\n   return ele;\n  }\n }\n}\n \npublic class StackDemo\n{\n public static void main(String args[])\n {\n  Stack myStack = new Stack();\n  myStack.push(10);\n  Object element1 = myStack.pop();\n  Object element2 = myStack.pop();\n  System.out.println(element2);\n }\n}\nChoices:\nA) stack is full\nB) 20\nC) 0\nD) -999\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: If several elements are competing for the same bucket in the hash table, what is it called?\nChoices:\nA) Diffusion\nB) Replication\nC) Collision\nD) Duplication\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Consider a binary max-heap implemented using an array. Which among the following arrays represents a binary max-heap? \n(More than one option correct), ,\nChoices:\n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: An unrolled linked list consists of which of the following data structures?\nChoices:\nA) Linked-list and array\nB) Linked-list and stack\nC) Stack and array\nD) Array and queue\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: d-heap is similar to that of a?\nChoices:\nA) binary heap\nB) fibonacci heap\nC) leftist heap\nD) treap\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: The algorithm given is for deleting an element in an unrolled linked list. What should be the correct statement for the blank given below?\n\nd)\nChoices:\nA) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: What will be the output of the following program?\n\nmain()  \n{  \n   char str[]=\"san foundry\";  \n   int len = strlen(str);  \n   int i;  \n \n   for(i=0;i<len;i++)  \n        push(str[i]);  // pushes an element into stack\n \n   for(i=0;i<len;i++)  \n      pop();  //pops an element from the stack\n}\nChoices:\nA) sanfoundry\nB) san foundry\nC) yrdnuof nas\nD) foundry nas\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What is the node path length of a node with 0 or 1 child?\nChoices:\nA) 1\nB) -1\nC) 0\nD) null\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: B Trees are generally, ,\nChoices:\nA) very deep and narrow\nB) very wide and shallow\nC) very deep and very wide\nD) cannot say \\n (A) very deep and narrow \\n (B) very wide and shallow \\n (C) very deep and very wide \\n (D) cannot say\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Consider the following piece of 'C' code fragment that removes duplicates from an ordered list of integers., #include <stdio.h>\n\nNode *remove_duplicates(Node *head, int *j) {\n    Node *t1, *t2;\n    *j = 0;\n    t1 = head;\n    if (t1 != NULL) t2 = t1->next;\n    else return head;\n    *j = 1;\n    if (t2 == NULL)\n        return head;\n    while (t2 != NULL) {\n        if (t1->val != t2->val) { // S1\n            (*j)++; t1->next = t2; t1 = t2; // S2\n        }\n        t2 = t2->next;\n    }\n    t1->next = NULL;\n    return head;\n},\nCode: #include <stdio.h>\nChoices:\nA) (a). n-1 times, since comparison is pairwise for n elements.\\n(b). maximum : n-1 for all distinct elements, minimum: 0 for all same elements.\\n(C). j keeps count of distinct nodes in the list.\nB) (a). n times, since comparison is pairwise for n elements.\\n(b). maximum : n-1 for all distinct elements, minimum: 0 for all same elements.\\n(C). j keeps count of distinct nodes in the list.\nC) (a). n-1 times, since comparison is pairwise for n elements.\\n(b). maximum : n-1 for all distinct elements, minimum: 1 for all same elements.\\n(C). j keeps count of distinct nodes in the list.\nD) None of the above\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What is an AVL tree?\nChoices:\nA) a tree which is balanced and is a height balanced tree\nB) a tree which is unbalanced and is a height balanced tree\nC) a tree with three children\nD) a tree with atmost 3 children\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Consider an implementation of unsorted singly linked list. Suppose it has its representation with a head pointer only. Given the representation, which of the following operation can be implemented in O(1) time?\nChoices:\nA) I and II\nB) I and III\nC) I, II and III\nD) I, II and IV\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What is the use of the bin data structure?\nChoices:\nA) to have efficient insertion\nB) to have efficient deletion\nC) to have efficient region query\nD) to have efficient traversal\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: To convert the postfix expression into the infix expression we use stack and scan the postfix expression from left to right.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Easy",
        "target_text": "Question: You have to sort a list L consisting of a sorted   list followed by a few \u201crandom\u201d elements.   Which of the following sorting methods would be   especially suitable for such a task?, ,\nChoices:\nA) Bubble sort\nB) Selection sort\nC) Quick sort\nD) Insertion sort\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: In Breadth First Search of Graph, which of the   following data structure is used?, ,\nChoices:\nA) Stack\nB) Queue\nC) Linked List\nD) None of the above\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: What is the load factor?\nChoices:\nA) Average array size\nB) Average key size\nC) Average chain length\nD) Average hash table length\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Why the below pseudo code where x is a value, wt is weight factor and t is root node can\u2019t insert?\nChoices:\nA) when x>t. element Rotate-with-left-child should take place and vice versa\nB) the logic is incorrect\nC) the condition for rotating children is wrong\nD) insertion cannot be performed in weight balanced trees\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which pattern is used to evaluate abstract syntax tree?\nChoices:\nA) Visitor pattern\nB) Singleton Pattern\nC) Proxy pattern\nD) Adapter pattern\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Five node splitting operations occurred when an entry is inserted into a B-tree. Then how many nodes are written?\nChoices:\nA) 14\nB) 7\nC) 11\nD) 5\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Which of the following is an advantage of parallel arrays?\nChoices:\nA) Poor locality of reference for non-sequential access\nB) Very little direct language support\nC) Expensive to shrink or grow\nD) Increased Locality of Reference\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Consider B+ tree in which the search key is 12 bytes long, block size is 1024 bytes, record pointer is 10 bytes long and block pointer is 8 bytes long. The maximum number of keys that can be accommodated in each non-leaf node of the tree is, ,\nChoices:\nA) 49\nB) 50\nC) 51\nD) 52\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Recursive procedures are implemented by   using \u2026\u2026\u2026\u2026\u2026\u2026.. data structure., ,\nChoices:\nA) queues\nB) stacks\nC) linked lists\nD) strings\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Can child node be always called Leaf node in the K-ary tree?\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: A balance factor in AVL tree is used to check   \u2026\u2026\u2026\u2026\u2026\u2026, ,\nChoices:\nA) what rotation to make.\nB) if all child nodes are at same level.\nC) when the last rotation occurred.\nD) if the tree is unbalanced.\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What would be the Prefix notation and Postfix notation for the given equation?\nChoices:\nA) ++ABC and AB+C+\nB) AB+C+ and ++ABC\nC) ABC++ and AB+C+\nD) ABC+ and ABC+\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: For how many vertices in a set, is top tree defined for underlying tree?\nChoices:\nA) 3\nB) 4\nC) 5\nD) 2\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Quick sort running time depends on the   selection of \u2026\u2026\u2026\u2026\u2026\u2026, ,\nChoices:\nA) size of array\nB) pivot element\nC) sequence of values\nD) none of the above\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which type of binary search tree is imitated for construction of tango tree?\nChoices:\nA) Complete Binary Search Tree\nB) Perfect Binary Search Tree\nC) Balanced Binary Search Tree\nD) Degenerate Binary Search Tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: In order traversal of binary search tree will   produce \u2026\u2026\u2026\u2026\u2026., ,\nChoices:\nA) unsorted list \\n (A) unsorted list\nB) reverse of input\nC) sorted list\nD) none of the above\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Reversing a word using stack can be used to find if the given word is a palindrome or not.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Assume there is a free list which contains nodes and is filled with a value if it is already assigned and the value will be the size of requested block else will be 0.\n\nThe above code represents what?\nChoices:\nA) code for first fit\nB) code for best fit\nC) code for worst fit\nD) none of the mentioned\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: The number of items used by the dynamic array contents is its __________\nChoices:\nA) Physical size\nB) Capacity\nC) Logical size\nD) Random size\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Suppose, in a triply linked list, the elements 2, 3, 3, 5, 5, 5 and 6 are inserted in the given sequence. To which of the following elements will the top pointer point, if the linked list is traversed starting from the head?\na)\n2\n3top\u21923\n5top\u21925\n5top\u21926\n\nb)\n2top\u21923\n3top\u21925\n5\n5top\u21926\n\nc)\n2\n3top\u21923\n5top\u21925top\u21925\n6\n\nd)\n2top\u21923top\u21923top\u21925\n5\n5\n6\nChoices:\nA) 2\nB) 2top\u21923\nC) 2\nD) 2top\u21923top\u21923top\u21925\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: ___________ is not a theoretical problem but actually occurs in real implementations of probing.\nChoices:\nA) Hashing\nB) Clustering\nC) Rehashing\nD) Collision\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Given the Node class implementation, select one of the following that correctly inserts a node at the tail of the list.\n\npublic class Node\n{\n protected int data;\n protected Node prev;\n protected Node next;\n public Node(int data)\n {\n  this.data = data;\n  prev = null;\n  next = null;\n }\n public Node(int data, Node prev, Node next)\n {\n  this.data = data;\n  this.prev = prev;\n  this.next = next;\n }\n public int getData()\n {\n  return data;\n }\n public void setData(int data)\n {\n  this.data = data;\n }\n public Node getPrev()\n {\n  return prev;\n }\n public void setPrev(Node prev)\n {\n  this.prev = prev;\n }\n public Node getNext\n {\n  return next;\n }\n public void setNext(Node next)\n {\n  this.next = next;\n }\n}\npublic class DLL\n{\n protected Node head;\n protected Node tail;\n int length;\n public DLL()\n {\n  head = new Node(Integer.MIN_VALUE,null,null);\n  tail = new Node(Integer.MIN_VALUE,null,null);\n  head.setNext(tail);\n  length = 0;\n }\n}\npublic void insertRear(int data)\n{\n Node node = new Node(data,tail.getPrev(),tail);\n node.getPrev().setNext(node);\n tail.setPrev(node);\n length++;\n}\npublic void insertRear(int data)\n{\n Node node = new Node(data,tail.getPrev(),tail);\n node.getPrev().getPrev().setNext(node);\n tail.setPrev(node);\n length++;\n}\npublic void insertRear(int data)\n{\n Node node = new Node(data,tail.getPrev(),tail);\n node.getPrev().setNext(tail);\n tail.setPrev(node);\n length++;\n}\npublic void insertRear(int data)\n{\n Node node = new Node(data,head,tail);\n node.getPrev().setNext(node);\n tail.setPrev(node);\n length++;\n}\n\nd)\nChoices:\nA) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: What is the output of the following Java code?\n\npublic class CircularQueue\n{\n protected static final int CAPACITY = 100;\n protected int size,front,rear;\n protected Object q[];\n int count = 0;\n \n public CircularQueue()\n {\n  this(CAPACITY);\n }\n public CircularQueue (int n)\n {\n  size = n;\n  front = 0;\n  rear = 0;\n  q = new Object[size];\n }\n \n \n public void enqueue(Object item)\n {\n  if(count == size)\n  {\n   System.out.println(\"Queue overflow\");\n    return;\n  }\n  else\n  {\n   q[rear] = item;\n   rear = (rear+1)%size;\n   count++;\n  }\n }\n public Object dequeue()\n {\n  if(count == 0)\n  {\n   System.out.println(\"Queue underflow\");\n   return 0;\n  }\n  else\n  {\n   Object ele = q[front];\n   q[front] = null;\n   front = (front+1)%size;\n   count--;\n   return ele;\n  }\n }\n public Object frontElement()\n {\n  if(count == 0)\n  return -999;\n  else\n  {\n   Object high;\n   high = q[front];\n   return high;\n  }\n }\n public Object rearElement()\n {\n  if(count == 0)\n  return -999;\n  else\n  {\n   Object low;\n   rear = (rear-1)%size;\n   low = q[rear];\n   rear = (rear+1)%size;\n   return low;\n  }\n }\n}\npublic class CircularQueueDemo\n{\n public static void main(String args[])\n {\n  Object var;\n  CircularQueue myQ = new CircularQueue();\n  myQ.enqueue(10);\n  myQ.enqueue(3);\n  var = myQ.rearElement();\n  myQ.dequeue();\n  myQ.enqueue(6);\n  var = mQ.frontElement();\n  System.out.println(var+\" \"+var);\n }\n}\nChoices:\nA) 3 3\nB) 3 6\nC) 6 6\nD) 10 6\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Fill in the blanks for completing the program to rotate an array by d elements., /*Function to left rotate arr[] of size n by d*/\nvoid Rotate(int arr[], int d, int n)\n{\n    int p = 1;\n    while (_______) {\n        int last = arr[0];\n        for (int i = 0; ______ i++) {\n            arr[i] = arr[i + 1];\n        }\n        __________\n        p++;\n    }\n},\nChoices:\n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Which of the following has search efficiency of   \u039f(1)?, ,\nChoices:\nA) Tree\nB) Heap\nC) Hash Table\nD) Linked-List\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which type of binary search tree or algorithm does tango tree use?\nChoices:\nA) Online\nB) Offline\nC) Static\nD) Dynamic\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Dijkstra\u2019s Algorithm will work for both negative and positive weights?\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: What will be the auxiliary space complexity of the code to rotate an array by using the reversal algorithm (d = number of rotations)?\nChoices:\nA) O(1)\nB) O(n)\nC) O(d)\nD) O(n*d)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which of the following is not an advantage of trees?, ,\nChoices:\nA) Hierarchical structure\nB) Faster search\nC) Router algorithms\nD) Undo/Redo operations in a notepad\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Easy",
        "target_text": "Question: How does strcmp() function work to compare two strings?, ,\nChoices:\nA) It compares characters based on their index.\nB) It compares strings based on the index.\nC) It compares characters of the string based on their ASCII values.\nD) None.\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Is Top tree used for maintaining Dynamic set of trees called forest.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Accessing free list very frequently for wide range of addresses can lead to\nChoices:\nA) paging\nB) segmentation fault\nC) memory errors\nD) cache problems\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Express -15 as a 6-bit signed binary number.\nChoices:\nA) 001111\nB) 101111\nC) 101110\nD) 001110\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Consider an implementation of unsorted single linked list. Suppose it has its representation with a head and a tail pointer (i.e. pointers to the first and last nodes of the linked list). Given the representation, which of the following operation can not be implemented in O(1) time ?, ,\nChoices:\nA) Insertion at the front of the linked list.\nB) Insertion at the end of the linked list.\nC) Deletion of the front node of the linked list.\nD) Deletion of the last node of the linked list.\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: Which of the given statement is true?\nChoices:\nA) All the Cyclic Directed Graphs have topological sortings\nB) All the Acyclic Directed Graphs have topological sortings\nC) All Directed Graphs have topological sortings\nD) All the cyclic directed graphs hace non topological sortings\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: The result evaluating the postfix expression 10 5 + 60 6 / * 8 \u2013 is, ,\nChoices:\nA) 284\nB) 213\nC) 142\nD) 71\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: What is direct addressing?\nChoices:\nA) Distinct array position for every possible key\nB) Fewer array positions than keys\nC) Fewer keys than array positions\nD) Same array position for all keys\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: In a binary tree, for every node the difference between the number of nodes in the left and right subtrees is at most 2. If the height of the tree is h > 0, then the minimum number of nodes in the tree is:, ,\nChoices:\nA) 2h - 1\nB) 2h - 1 + 1\nC) 2h - 1\nD) 2h\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: 9. Which of the following statement(s) about stack data structure is/are NOT correct?\nChoices:\nA) Top of the Stack always contain the new node\nB) Stack is the FIFO data structure\nC) Null link is present in the last node at the bottom of the stack\nD) Linked List are used for implementing Stacks\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What is the range of \u03b2 in finding the length of the longest path in a randomized binary search tree?\nChoices:\nA) (-1, 0)\nB) (1, 0)\nC) (0, 5)\nD) (0, 1)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Choose the code which performs the store operation in a sparse array.(Linked list implementation)\na)\n\npublic void store(int index, Object val)\n{\n       List cur = this;\n       List prev = null;\n \n       List node = new List(index);\n       node.val = val;\n \n       while (cur != null && cur.index < index)\n       {\n           prev = cur;\n           cur = cur.next;\n       }\n \n       if (cur == null)\n       {\n           prev.next = node;\n       } else\n       {\n           if (cur.index == index)\n           {\n               System.out.println(\"DUPLICATE\");\n               return;\n           }\n           prev.next = node;\n           node.next = cur;\n       }\n       return;\n}\npublic void store(int index, Object val)\n{\n        List cur = this;\n        List prev = null;\n \n        List node = new List(index);\n        node.val = val;\n \n        while (prev != null && prev.index < index)\n        {\n            prev = cur;\n            cur = cur.next;\n        }\n \n        if (cur == null)\n        {\n            prev.next = node;\n        } else\n        {\n            if (cur.index == index)\n            {\n                System.out.println(\"DUPLICATE\");\n                return;\n            }\n            prev.next = node;\n            node.next = cur;\n        }\n        return;\n}\npublic void store(int index, Object val)\n{\n        List cur = this;\n        List prev = null;\n \n        List node = new List(index);\n        node.val = val;\n \n        while (cur != null && cur.index < index)\n        {\n   cur = cur.next;\n            prev = cur;\n        }\n \n        if (cur == null)\n        {\n            prev.next = node;\n        } else\n        {\n            if (cur.index == index)\n            {\n                System.out.println(\"DUPLICATE\");\n                return;\n            }\n            prev.next = node;\n            node.next = cur;\n        }\n        return;\n}\npublic void store(int index, Object val)\n{\n    List cur = this;\n    List prev = null;\n \n    List node = new List(index);\n    node.val = val;\n \n    while (cur != null && prev.index < index)\n    {\n        cur = cur.next;\n        prev = cur;\n    }\n \n    if (cur == null)\n    {\n        prev.next = node;\n    } \n    else\n    {\n        if (cur.index == index)\n    {\n        System.out.println(\"DUPLICATE\");\n        return;\n    }\n    prev.next = cur;\n    node.next = node;\n    }\n    return;\n}\n\nd)\nChoices:\nA) public void store(int index, Object val)\nB) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: Which of the following properties does a simple graph not hold?\nChoices:\nA) Must be connected\nB) Must be unweighted\nC) Must have no loops or multiple edges\nD) Must have no multiple edges\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Who invented treaps?\nChoices:\nA) Cecilia and Raimund\nB) Arne Andersson\nC) Donald Shell\nD) Harris and Ross\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: If A[x+3][y+5] represents an adjacency matrix, which of these could be the value of x and y.\nChoices:\nA) x=5, y=3\nB) x=3, y=5\nC) x=3, y=3\nD) x=5, y=5\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Can leaf node be called child node in a K-ary tree?\nChoices:\nA) True\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Given a queue with a linked list implementation. the Rear pointer points to the rear node of the queue. and the front node of the queue points to the front node of the queue, Which of the following operations is impossible to do in O(1) time?\n , ,\nChoices:\nA) Delete the front item from the list.\nB) Delete the rear from the list.\nC) insert at the front of the list.\nD) None\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: How many stacks are required for evaluation of prefix expression?\nChoices:\nA) one\nB) two\nC) three\nD) four\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: In an AA-tree, we process split first, followed by a skew.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Path Compression algorithm performs in which of the following operations?\nChoices:\nA) Create operation\nB) Insert operation\nC) Find operation\nD) Delete operation\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Given an array of element 5, 7, 9, 1, 3, 10, 8, 4. Which of the following are the correct sequences of elements after inserting all the elements in a min-heap?\nChoices:\nA) 1,3,4,5,7,8,9,10\nB) 1,4,3,9,8,5,7,10\nC) 1,3,4,5,8,7,9,10\nD) 1,3,7,4,8,5,9,10\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: What are the methods to handle  collision: , ,\nChoices:\nA) Separate Chaining\nB) Open Chaining\nC) Both of the above\nD) None of the above\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Suppose X is the starting symbol of the given grammar with the following transition rules. Compute the value of X as the root of the parse tree for the expression: 3 & 4 % 7.\nX \u2192 X1 & B | B {X.value = X1.value + B.value, X.value = B.value}\nB \u2192 B1 % D | D {B.value = B1.value * D.value, B.value = D.value}\nD \u2192 num {D.value = num.value}\nChoices:\nA) 31\nB) 32\nC) 33\nD) 34\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Using stacks, how to obtain the binary representation of the number?\na)\n\npublic void convertBinary(int num)\n{\n    Stack<Integer> stack = new Stack<Integer>();\n    while (num != 0)\n    {\n        int digit = num / 2;\n        stack.push(digit);\n        num = num % 2;\n    } \n    System.out.print(\"\\nBinary representation is:\");\n    while (!(stack.isEmpty() ))\n    {\n        System.out.print(stack.pop());\n    }\n }\npublic void convertBinary(int num)\n{\n    Stack<Integer> stack = new Stack<Integer>();\n    while (num != 0)\n    {\n        int digit = num % 2;\n        stack.push(digit);\n    } \n    System.out.print(\"\\nBinary representation is:\");\n    while (!(stack.isEmpty() ))\n    {\n        System.out.print(stack.pop());\n    }\n }\npublic void convertBinary(int num)\n{\n    Stack<Integer> stack = new Stack<Integer>();\n    while (num != 0)\n    {\n        int digit = num % 2;\n        stack.push(digit);\n        num = num / 2;\n    } \n    System.out.print(\"\\nBinary representation is:\");\n    while (!(stack.isEmpty() ))\n    {\n        System.out.print(stack.pop());\n    }\n }\npublic void convertBinary(int num)\n{\n    Stack<Integer> stack = new Stack<Integer>();\n    while (num != 0)\n    {\n        int digit = num % 2;\n        stack.push(digit%2);\n        num = num / 2;\n    } \n    System.out.print(\"\\nBinary representation is:\");\n    while (!(stack.isEmpty() ))\n    {\n        System.out.print(stack.pop());\n    }\n }\n\nd)\nChoices:\nA) public void convertBinary(int num)\nB) Answer: c\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Which of the following is not the rearranging method used to implement self-organizing lists?\nChoices:\nA) count method\nB) move to front method\nC) ordering method\nD) least frequently used\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: Which of these adjacency matrices represents a simple graph?\nChoices:\nA) [ [1, 0, 0], [0, 1, 0], [0, 1, 1] ]\nB) [ [1, 1, 1], [1, 1, 1], [1, 1, 1] ]\nC) [ [0, 0, 1], [0, 0, 0], [0, 0, 1] ]\nD) [ [0, 0, 1], [1, 0, 1], [1, 0, 0] ]\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Which of the following can be called a parallel array implementation?\na)\n\nd)\nChoices:\nA) d)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: When do you use a sparse array?\nChoices:\nA) When there are unique elements in the array\nB) When the array has more occurrence of zero elements\nC) When the data type of elements differ\nD) When elements are sorted\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: If a connected Graph (G) contains n vertices what would be the rank of its incidence matrix?\nChoices:\nA) n-1\nB) values greater than n are possible\nC) values less than n-1 are possible\nD) insufficient Information is given\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which of the following statement(s)is / are correct regarding Bellman-Ford shortest path algorithm?, ,\nChoices:\nA) P Only\nB) Q Only\nC) Both P and Q\nD) Neither P nor Q\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Who proposed the concept of Suffix Tree?\nChoices:\nA) Weiner\nB) Samuel F. B. Morse\nC) Friedrich Clemens Gerke\nD) Alexander Morse\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: What is the average retrieval time when n keys hash to the same slot?\nChoices:\nA) Theta(n)\nB) Theta(n2)\nC) Theta(nlog n)\nD) Big-Oh(n2)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What will be the output of the following code?\n\n#include <bits/stdc++.h> \nusing namespace std; \n \nint min(int x, int y) \n{ return (x < y)? x: y; } \n \nint func(int arr[], int n) \n{ \n \n int *jump = new int[n]; \n int i, j; \n \n if (n == 0 || arr[0] == 0) \n  return INT_MAX; \n \n jump[0] = 0; \n \n for (i = 1; i < n; i++) \n { \n  jump[i] = INT_MAX; \n  for (j = 0; j < i; j++) \n  { \n   if (i <= j + arr[j] && jump[j] != INT_MAX) \n   { \n    jump[i] = min(jump[i], jump[j] + 1); \n    break; \n   } \n  } \n } \n return jump[n-1]; \n} \n \nint main() \n{ \n int arr[] = {1, 3, 6, 1, 9,7}; \n int size = sizeof(arr)/sizeof(int); \n cout<< func(arr,size); \n return 0; \n}\nCode: #include <bits/stdc++.h>\nChoices:\nA) 1\nB) 2\nC) 3\nD) error\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Which of the following is the predefined function for array reversal in javascript?\nChoices:\nA) reverse()\nB) arr_reverse()\nC) array_reverse()\nD) rev()\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Which of the following can be used to delete an element from the front end of the queue?\na)\n\npublic Object deleteFront() throws emptyDEQException\n{\n if(isEmpty())\n  throw new emptyDEQException(\"Empty\");\n else\n {\n  Node temp = head.getNext();\n  Node cur = temp;\n  Object e = temp.getEle();\n  head.setNext(cur);\n  size--;\n  return e;\n }\n}\npublic Object deleteFront() throws emptyDEQException\n{\n if(isEmpty())\n  throw new emptyDEQException(\"Empty\");\n else\n {\n  Node temp = head.getNext();\n  Node cur = temp.getNext();\n  Object e = temp.getEle();\n  head.setNext(cur);\n  size--;\n  return e;\n }\n}\npublic Object deleteFront() throws emptyDEQException\n{\n if(isEmpty())\n  throw new emptyDEQException(\"Empty\");\n else\n {\n  Node temp = head.getNext();\n  Node cur = temp.getNext();\n  Object e = temp.getEle();\n  head.setNext(temp);\n  size--;\n  return e;\n }\n}\npublic Object deleteFront() throws emptyDEQException\n{\n if(isEmpty())\n  throw new emptyDEQException(\"Empty\");\n else\n {\n  Node temp = head.getNext();\n  Node cur = temp.getNext();\n  Object e = temp.getEle();\n  temp.setNext(cur);\n  size--;\n  return e;\n }\n}\npublic Object deleteRear() throws emptyDEQException\n{\n if(isEmpty())\n  throw new emptyDEQException(\"Empty\");\n else\n {\n  Node temp = head.getNext();\n  Node cur = temp;\n  while(temp.getNext() != trail)\n  {\n   temp = temp.getNext();\n   cur = cur.getNext();\n  }\n  Object e = temp.getEle();\n  cur.setNext(trail);\n  size--;\n  return e;\n }\n}\npublic Object deleteRear() throws emptyDEQException\n{\n if(isEmpty())\n  throw new emptyDEQException(\"Empty\");\n else\n {\n  Node temp = head.getNext();\n  Node cur = head;\n  while(temp != trail)\n  {\n   temp = temp.getNext();\n   cur = cur.getNext();\n  }\n  Object e = temp.getEle();\n  cur.setNext(trail);\n  size--;\n  return e;\n }\n}\npublic Object deleteRear() throws emptyDEQException\n{\n if(isEmpty())\n throw new emptyDEQException(\"Empty\");\n else\n {\n  Node temp = head.getNext();\n  Node cur = head;\n  while(temp.getNext()!=trail)\n  {\n   temp = temp.getNext();\n   cur = cur.getNext();\n  }\n  Object e = temp.getEle();\n  cur.setNext(trail);\n  size--;\n  return e;\n }\n}\npublic Object deleteRear() throws emptyDEQException\n{\n if(isEmpty())\n throw new emptyDEQException(\"Empty\");\n else\n {\n  Node temp = head.getNext();\n  Node cur = head;\n  while(temp.getNext()!=trail)\n  {\n   temp = temp.getNext();\n   cur = cur.getNext();\n  }\n  Object e = temp.getEle();\n  temp.setNext(trail);\n  size--;\n  return e;\n }\n}\n\nd)\nChoices:\nA) public Object deleteFront() throws emptyDEQException\nB) Answer: c\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: The best average behaviour is shown by:, ,\nChoices:\nA) Quick Sort\nB) Merge Sort\nC) Insertion Sort\nD) Heap Sort\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: For an undirected graph with n vertices and e   edges, the sum of the degree of each vertex is equal   to:, ,\nChoices:\nA) 2n\nB) (2n-1)/2\nC) 2e\nD) e2/2\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: A weight-balanced tree is a binary tree in which for each node. The number of nodes in the left sub tree is at least half and at most twice the number of nodes in the right sub tree. The maximum possible height (number of nodes on the path from the root to the farthest leaf) of such a tree on n nodes is best described by which of the following? a) \\\\log_2 n b) \\\\log_{4/3} n c) \\\\log_3 n d) \\\\log_{3/2} n, ,\nChoices:\nA) A\nB) B\nC) C\nD) D\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: The number of elements in the adjacency matrix of a graph having 7 vertices is __________\nChoices:\nA) 7\nB) 14\nC) 36\nD) 49\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What would be the Prefix notation for the given equation?\nChoices:\nA) |&-+ab/cdef\nB) &|-+ab/cdef\nC) |&-ab+/cdef\nD) |&-+/abcdef\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Let G be a connected undirected graph with n vertices and m edges. Which of the following statements is true regarding the minimum number of edges required to create a cycle in G?\n , ,\nChoices:\nA) The minimum number of edges required to create a cycle is n.\nB) The minimum number of edges required to create a cycle is n - 1.\nC) The minimum number of edges required to create a cycle is m - n + 1.\nD) The minimum number of edges required to create a cycle is m - n + 2.\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: The goal of hashing is to produce a search that   takes \u2026\u2026\u2026\u2026., ,\nChoices:\nA) O(1) time\nB) O(n2) time\nC) O(log n) time\nD) O(n log n) time\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Easy",
        "target_text": "Question: A sorted file contains 16 items. Using binary   search, the maximum number of comparisons to   search for an item in this file is \u2026\u2026\u2026.., ,\nChoices:\nA) 15\nB) 8\nC) 1\nD) 4\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: O(m2 + n2), ,\nChoices:\nA) O(m+n)\nB) O(mlogn)\nC) O(nlogm)\nD) O(m2 + n2)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: B+ Trees are considered BALANCED because, ,\nChoices:\nA) the lengths of the paths from the root to all leaf nodes are all equal.\nB) the lengths of the paths from the root to all leaf nodes differ from each other by at most 1.\nC) the number of children of any two non-leaf sibling nodes differ by at most 1.\nD) the number of records in any two leaf nodes differ by at most 1.\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Linked list search complexity is \u2026\u2026\u2026\u2026\u2026, ,\nChoices:\nA) \u039f(1)\nB) \u039f(n)\nC) \u039f(log n)\nD) \u039f(log log n)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: A binary search tree contains values 7, 8, 13, 26, 35, 40, 70, 75. Which one of the following is a valid post-order sequence of the tree provided the pre-order sequence as 35, 13, 7, 8, 26, 70, 40 and 75?\nChoices:\nA) 7, 8, 26, 13, 75, 40, 70, 35\nB) 26, 13, 7, 8, 70, 75, 40, 35\nC) 7, 8, 13, 26, 35, 40, 70, 75\nD) 8, 7, 26, 13, 40, 75, 70, 35\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Which of the following is the limitation of the array?, ,\nChoices:\nA) elements can be accessed from anywhere.\nB) The size of the array is fixed.\nC) Indexing is started from Zero.\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: Which of the following is an advantage of matrices?\nChoices:\nA) Internal complexity\nB) Searching through a matrix is complex\nC) Not space efficient\nD) Graph Plotting\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Consider the below program, and what is doing this program basically?, #include <bits/stdc++.h>\nusing namespace std;\n\nvoid print(char a[], int n, int ind)\n{\n    for (int i = ind; i < n + ind; i++)\n        cout << a[(i % n)] << \" \";\n}\n\nint main()\n{\n    char a[] = { 'A', 'B', 'C', 'D', 'E', 'F' };\n    int n = sizeof(a) / sizeof(a[0]);\n    print(a, n, 3);\n    return 0;\n},\nCode: #include <bits/stdc++.h>\nChoices:\nA) It is printing the normal array\nB) It is printing circular array rotated by 3\nC) Syntax error\nD) None\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Which of the following is the efficient data structure for searching words in dictionaries?\nChoices:\nA) BST\nB) Linked List\nC) Balancded BST\nD) Trie\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: The following postfix expression with single digit operands is evaluated using a stack:, ,\nChoices:\nA) 6, 1\nB) 5, 7\nC) 3, 2\nD) 1, 5\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: What will be the minimum number of jumps required to reach the end of the array arr[] ={0,1,3,6,3,6,8,5}?\nChoices:\nA) 1\nB) 2\nC) 3\nD) not possible to reach the end\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Which of the following is not an application of stack?\nChoices:\nA) evaluation of postfix expression\nB) conversion of infix to postfix expression\nC) balancing symbols\nD) line at ticket counter\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Consider you have an array of some random size. You need to perform dequeue operation. You can perform it using stack operation (push and pop) or using queue operations itself (enQueue and Dequeue). The output is guaranteed to be same. Find some differences?\nChoices:\nA) They will have different time complexities\nB) The memory used will not be different\nC) There are chances that output might be different\nD) No differences\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: In doubly linked lists:, ,\nChoices:\nA) a pointer is maintained to store both next and previous \\n nodes.\nB) two pointers are maintained to store next and previous \\n nodes.\nC) a pointer to self is maintained for each node.\nD) none of these\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: In linked list implementation of a queue, where does a new element be inserted?\nChoices:\nA) At the head of link list\nB) At the centre position in the link list\nC) At the tail of the link list\nD) At any position in the linked list\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: A priority queue can efficiently implemented using which of the following data structures? Assume that the number of insert and peek (operation to see the current highest priority item) and extraction (remove the highest priority item) operations are almost same., ,\nChoices:\nA) Array\nB) Linked List\nC) Heap Data Structures like Binary Heap, Fibonacci Heap\nD) None of the above\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Consider a weight balanced tree such that, the number of nodes in the left sub tree is at least half and at most twice the number of nodes in the right sub tree. The maximum possible height (number of nodes on the path from the root to the farthest leaf) of such a tree on k nodes can be described as\nChoices:\nA) log2 n\nB) log4/3 n\nC) log3 n\nD) log3/2 n\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Consider the below left-left rotation pseudo code where the node contains value pointers to left, right child nodes and a height value and Height() function returns height value stored at a particular node.\n\nWhat is missing?\nChoices:\nA) Height(w-left), x-height\nB) Height(w-right), x-height\nC) Height(w-left), x\nD) Height(w-left)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: A B-tree of order 4 is built from scratch by 10 successive insertions. What is the maximum number of node splitting operations that may take place?, ,\nChoices:\nA) 3\nB) 4\nC) 5\nD) 6\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: The ascending heap property is ___________\nChoices:\nA) A[Parent(i)] =A[i]\nB) A[Parent(i)] <= A[i]\nC) A[Parent(i)] >= A[i]\nD) A[Parent(i)] > 2 * A[i]\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: The column sum in an incidence matrix for a simple graph is __________\nChoices:\nA) depends on number of edges\nB) always greater than 2\nC) equal to 2\nD) equal to the number of edges\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Double hashing is one of the best methods available for open addressing.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Which of the following is NOT a common operation in a queue data structure? , ,\nChoices:\nA) Enqueue\nB) Dequeue\nC) Peek\nD) Shuffle\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Which of the following form inversion in the array arr = {1,5,4,2}?\nChoices:\nA) (5,4), (5,2)\nB) (5,4), (5,2), (4,2)\nC) (1,5), (1,4), (1,2)\nD) (1,5)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: What is a Cartesian tree?\nChoices:\nA) a skip list in the form of tree\nB) a tree which obeys cartesian product\nC) a tree which obeys heap property and whose inorder traversal yields the given sequence\nD) a tree which obeys heap property only\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: In what time can a leftist heap be built?\nChoices:\nA) O(N)\nB) O(N log N)\nC) O(log N)\nD) O(M log N)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: How many extra nodes are there in Full K-ary tree than complete K-ary tree?\nChoices:\nA) 1\nB) 2\nC) 3\nD) Both have same number of nodes\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Who among the following algorithm is used in external memory and compression of the suffix tree?\nChoices:\nA) Weiner\u2019s algorithm\nB) Farach\u2019s algorithm\nC) Ukkonen\u2019s algorithm\nD) Alexander Morse\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: A self \u2013 balancing binary search tree can be used to implement ________\nChoices:\nA) Priority queue\nB) Hash table\nC) Heap sort\nD) Priority queue and Heap sort\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What is the condition for an equivalence relation if two cities are related within a country?\nChoices:\nA) the two cities should have a one-way connection\nB) the two cities should have a two-way connection\nC) the two cities should be in different countries\nD) no equivalence relation will exist between two cities\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Which of the following statements about stacks   is incorrect?, ,\nChoices:\nA) Stacks can be implemented using linked lists.\nB) Stacks are first-in, first-out (FIFO) data structures.\nC) New nodes can only be added to the top of the stack.\nD) The last node (at the bottom) of a stack has a null (0) \\n link. \\n (D) The last node (at the bottom) of a stack has a null (0) \\n link.\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: AVL trees provide better insertion the 2-3 trees.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: In the given C snippet, find the statement number that has error.\n\n//C code to push an element into a stack\n1. void push( struct stack *s, int x) \n2. {\n3.     if(s->top==MAX-1)\n4.     {\n5.         printf(\u201cstack overflow\u201d);\n6.     }\n7.     else\n8.     {\n9.         s->items[++s->top]=x;\n10.        s++;\n11.    }   \n12. }\nChoices:\nA) 1\nB) 9\nC) 10\nD) 11\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: In a Propositional Directed Acyclic Graph Leaves maybe labelled with a boolean variable.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: In \u2026\u2026\u2026\u2026., the difference between the height of   the left sub tree and height of the right tree, for each   node, is almost one., ,\nChoices:\nA) Binary search tree\nB) AVL \u2013 tree\nC) Complete tree\nD) Threaded binary tree\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Find the error (if any) in the following code snippet for pop operation.\n\nvoid pop() //removing an element from a stack\n{\n     printf(\u201c%s\u201d, stack[top++]);\n}\nChoices:\nA) run time error\nB) compile time error\nC) pop operation is performed, but top moved in wrong direction\nD) pop operation is performed properly\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: We are given a set of n distinct elements and an unlabelled binary tree with n nodes. In how many ways can we populate the tree with the given set so that it becomes a binary search tree? (GATE CS 2011), ,\nChoices:\nA) 0\nB) 1\nC) n!\nD) (1/(n+1)).2nCn\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Search and difficulty=Easy",
        "target_text": "Question: The complexity of searching an element from a   set of n elements using Binary search algorithm is   \u2026\u2026\u2026\u2026, ,\nChoices:\nA) O(n)\nB) O(log n)\nC) O(n2)\nD) O(n log n)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: A full binary tree can be generated using ______\nChoices:\nA) post-order and pre-order traversal\nB) pre-order traversal\nC) post-order traversal\nD) in-order traversal\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: How many extra nodes are there in Full ternary tree than a complete ternary tree?\nChoices:\nA) 1\nB) 2\nC) 3\nD) Both have same number of nodes\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: How is a pairing heap represented?\nChoices:\nA) binary tree\nB) fibonacci tree\nC) heap ordered tree\nD) treap\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Consider the following program:, #include <iostream>\n#include <cctype>\n#include <stack>\n\n#define EOF -1\n\nstd::stack<int> s;\n\nvoid push(int value) { s.push(value); } /* push the argument on the stack */\nint pop(void) { if (s.empty()) return EOF; int value = s.top(); s.pop(); return value; }  /* pop the top of the stack */\nvoid flagError() { std::cerr << \"Error!\" << std::endl; exit(1); }\n\nint main() {\n    int c, m, n, r;\n    while ((c = std::cin.get()) != EOF) {\n        if (isdigit(c))\n            push(c - '0');\n        else if ((c == '+') || (c == '*')) {\n            m = pop();\n            n = pop();\n            r = (c == '+') ? n + m : n * m;\n            push(r);\n        } else if (c != ' ')\n            flagError();\n    }\n    std::cout << pop() << std::endl;\n},\nCode: #include <iostream>\nChoices:\nA) 15\nB) 25\nC) 30\nD) 150\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: How many nodes in a tree have no ancestors?, ,\nChoices:\nA) 0\nB) 1\nC) 2\nD) n\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What is the worst-case running time of unions done by size and path compression?\nChoices:\nA) O(N)\nB) O(logN)\nC) O(N logN)\nD) O(M logN)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: In Linked List implementation, a node carries information regarding ___________\nChoices:\nA) Data\nB) Link\nC) Data and Link\nD) Node\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: From a complete graph, by removing maximum   \u2026\u2026\u2026\u2026\u2026. edges, we can construct a spanning tree., ,\nChoices:\nA) e-n+1\nB) n-e+1\nC) n+e-1\nD) e-n-1\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which of the following is false?\nChoices:\nA) A B+ -tree grows downwards\nB) A B+ -tree is balanced\nC) In a B+ -tree, the sibling pointers allow sequential searching\nD) B+ -tree is shallower than B-tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: In an abstract syntax tree, each internal node represents an operand and each leaf node represents an operator.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Insertion and deletion are much faster in an unrolled linked list than in a singly linked list.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Which of the following is the predefined function for array reversal in C++?\nChoices:\nA) rotate()\nB) arr_rotate()\nC) array_rotate()\nD) rot()\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: What must be the ideal size of array if the height of tree is \u2018l\u2019?\nChoices:\nA) 2l-1\nB) l-1\nC) l\nD) 2l\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Who is the inventor of AA-Tree?\nChoices:\nA) Arne Anderson\nB) Daniel Sleator\nC) Rudolf Bayer\nD) Jon Louis Bentley\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: A full binary tree with 2n+1 nodes contain   \u2026\u2026\u2026\u2026\u2026., ,\nChoices:\nA) n leaf nodes\nB) n non-leaf nodes\nC) n-1 leaf nodes\nD) n-1 non-leaf nodes\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Only infix expression can be made into an expression tree.\nChoices:\nA) true\nB) false\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What is the corresponding postfix expression for the given infix expression?\nChoices:\nA) ab*+cd/\nB) ab+*cd/\nC) abc*+/d\nD) abc+*d/\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What is a full binary tree?\nChoices:\nA) Each node has exactly zero or two children\nB) Each node has exactly two children\nC) All the leaves are at the same level\nD) Each node has exactly one or two children\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Which of the following technique stores data in a separate entity in case of a collision?\nChoices:\nA) Open addressing\nB) Chaining using doubly linked list\nC) Linear probing\nD) Double hashing\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: How many distinct BSTs can be constructed with 3 distinct keys?, ,\nChoices:\nA) 4\nB) 5\nC) 6\nD) 9\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Which of the following hash functions is most likely to cause clustering in a hash table? Here k is the input key value and m is hash table size. You may assume that all four hash functions generate valid indexes in the hash table., ,\nChoices:\nA) h(k) = k % m\nB) h(k) = floor(m * (k mod 1))\nC) h(k) = k\nD) h(k) = ((k / m) + k * m) + k % m\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: How to maintain multi-level skip list properties when insertions and deletions are done?\nChoices:\nA) design each level of a multi-level skip list with varied probabilities\nB) that cannot be maintained\nC) rebalancing of lists\nD) reconstruction\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Which technique was firstly used clustering documents using the similarity of two words or strings?\nChoices:\nA) MinHash\nB) Stack\nC) Priority Queue\nD) PAT Tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Which of the following bitwise operations will you use to toggle a particular bit?\nChoices:\nA) OR\nB) AND\nC) XOR\nD) NOT\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Which technique was firstly used to remove duplicate web pages from search results in AltaVista search engine?\nChoices:\nA) MinHash\nB) Stack\nC) Priority Queue\nD) PAT Tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: In which of the following self \u2013 balancing binary search tree the recently accessed element can be accessed quickly?\nChoices:\nA) AVL tree\nB) AA tree\nC) Splay tree\nD) Red \u2013 Black tree\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Which of the following is not a collision resolution technique?\nChoices:\nA) Separate chaining\nB) Linear probing\nC) Quadratic probing\nD) Hashing\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Which of the following statement is incorrect with respect to balancing symbols algorithm?\nChoices:\nA) {[()]}\nB) ([ )]\nC) {( )}\nD) { [ ] }\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Linear search is highly inefficient compared to  binary search when dealing with:, ,\nChoices:\nA) Small, unsorted arrays\nB) Small, sorted arrays\nC) Large, unsorted arrays\nD) Large, sorted arrays\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Which of the following is the hashing function for separate chaining?\nChoices:\nA) H(x)=(hash(x)+f(i)) mod table size\nB) H(x)=hash(x)+i2 mod table size\nC) H(x)=x mod table size\nD) H(x)=x mod (table size * 2)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Identify the reason which doesn\u2019t play a key role to use threaded binary trees?\nChoices:\nA) The storage required by stack and queue is more\nB) The pointers in most of nodes of a binary tree are NULL\nC) It is Difficult to find a successor node\nD) They occupy less size\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What is the functionality of the following piece of code?\n\npublic Object delete_key() \n{\n if(count == 0)\n {\n  System.out.println(\"Q is empty\");\n  System.exit(0);\n }\n else\n {\n  Node cur = head.getNext();\n  Node dup = cur.getNext();\n  Object e = cur.getEle();\n  head.setNext(dup);\n  count--;\n  return e;\n }\n}\nChoices:\nA) Delete the second element in the list\nB) Return but not delete the second element in the list\nC) Delete the first element in the list\nD) Return but not delete the first element in the list\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which of the following number of nodes can form a full binary tree?, ,\nChoices:\nA) 8\nB) 15\nC) 14\nD) 13\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: In simple uniform hashing, what is the search complexity?\nChoices:\nA) O(n)\nB) O(logn)\nC) O(nlogn)\nD) O(1)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Search and difficulty=Easy",
        "target_text": "Question: What is the below pseudo code trying to do, where pt is a node pointer and root pointer?\nChoices:\nA) insert a new node\nB) delete a node\nC) search a node\nD) count the number of nodes\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What is the result of the following operation:   Top (Push (S, X)), ,\nChoices:\nA) X\nB) null\nC) S\nD) None of these.\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Collisions can be reduced by choosing a hash function randomly in a way that is independent of the keys that are actually to be stored.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: If row-major order is used, how is the following matrix stored in memory?\na b c\nd e f\ng h i\nChoices:\nA) ihgfedcba\nB) abcdefghi\nC) cfibehadg\nD) adgbehcfi\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Under what condition the number of inversions in an array are minimum?\nChoices:\nA) when the array is sorted\nB) when the array is reverse sorted\nC) when the array is half sorted\nD) depends on the given array\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Which of the following concepts make extensive use of arrays?\nChoices:\nA) Binary trees\nB) Scheduling of processes\nC) Caching\nD) Spatial locality\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: Let A be an adjacency matrix of a graph G. The   ijth entry in the matrix AK , gives, ,\nChoices:\nA) The number of paths of length K from vertex Vi to vertex \\n Vj.\nB) Shortest path of K edges from vertex Vi to vertex Vj.\nC) Length of a Eulerian path from vertex Vi to vertex Vj.\nD) Length of a Hamiltonian cycle from vertex Vi to vertex \\n Vj.\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: To restore the AVL property after inserting a element, we start at the insertion point and move towards root of that tree. is this statement true?\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which of the following trees is similar to that of an AA-Tree?\nChoices:\nA) Splay Tree\nB) B+ Tree\nC) AVL Tree\nD) Red-Black Tree\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What would be the Prefix notation for the given equation?\nChoices:\nA) ^^^ABCD\nB) ^A^B^CD\nC) ABCD^^^\nD) AB^C^D\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What is the functionality of the following code? Choose the most appropriate answer.\n\npublic int function()\n{\n if(head == null)\n  return Integer.MIN_VALUE;\n int var;\n Node temp = head;\n while(temp.getNext() != head)\n  temp = temp.getNext();\n if(temp == head)\n {\n  var = head.getItem();\n  head = null;\n  return var;\n }\n temp.setNext(head.getNext());\n var = head.getItem();\n head = head.getNext();\n return var;\n}\nChoices:\nA) Return data from the end of the list\nB) Returns the data and deletes the node at the end of the list\nC) Returns the data from the beginning of the list\nD) Returns the data and deletes the node from the beginning of the list\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: The data structure required for Breadth First Traversal on a graph is?\nChoices:\nA) Stack\nB) Array\nC) Queue\nD) Tree\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Evaluate and write the result for the following postfix expression\nabc*+de*f+g*+ where a=1, b=2, c=3, d=4, e=5, f=6, g=2.\nChoices:\nA) 61\nB) 59\nC) 60\nD) 55\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: If binary trees are represented in arrays, what formula can be used to locate a left child, if the node has an index i?\nChoices:\nA) 2i+1\nB) 2i+2\nC) 2i\nD) 4i\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Search and difficulty=Easy",
        "target_text": "Question: How many probes are required on average for insertion and successful search?\nChoices:\nA) 4 and 10\nB) 2 and 6\nC) 2.5 and 1.5\nD) 3.5 and 1.5\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: What is the need for a circular queue?\nChoices:\nA) effective usage of memory\nB) easier computations\nC) to delete elements based on priority\nD) implement LIFO principle in queues\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Let Q denote a queue containing sixteen numbers and S be an empty stack. Head(Q) returns the element at the head of the queue Q without removing it from Q. Similarly Top(S) returns the element at the top of S without removing it from S. Consider the algorithm given below., ,\nChoices:\nA) 16\nB) 32\nC) 256\nD) 64\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: An ADT is defined to be a mathematical model   \f of a user-defined type along with the collection of all   \u2026\u2026\u2026\u2026\u2026. operations on that model., ,\nChoices:\nA) Cardinality\nB) Assignment\nC) Primitive \\n (A) Cardinality \\n (B) Assignment \\n (C) Primitive\nD) Structured\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Which of the following is an example for a postfix expression?\nChoices:\nA) a*b(c+d)\nB) abc*+de-+\nC) +ab\nD) a+b-c\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Write a piece of code which returns true if the string contains balanced parenthesis, false otherwise.\na)\n\npublic boolean isBalanced(String exp)\n{\n int len = exp.length();\n Stack<Integer> stk = new Stack<Integer>();\n for(int i = 0; i < len; i++)\n        {\n  char ch = exp.charAt(i);\n                if (ch == '(')\n                stk.push(i);\n                else if (ch == ')')\n                {\n   if(stk.peek() == null)\n                        {\n    return false;\n   }\n   stk.pop();\n  }\n }\n return true;\n}\npublic boolean isBalanced(String exp)\n{\n int len = exp.length();\n Stack<Integer> stk = new Stack<Integer>();\n for(int i = 0; i < len; i++)\n            {\n  char ch = exp.charAt(i);\n                if (ch == '(')\n                stk.push(i);\n                else if (ch == ')')\n                {\n   if(stk.peek() != null)\n                        {\n    return true;\n   }\n   stk.pop();\n  }\n }\n return false;\n  }\npublic boolean isBalanced(String exp)\n{\n int len = exp.length();\n Stack<Integer> stk = new Stack<Integer>();\n for(int i = 0; i < len; i++)\n        {\n        char ch = exp.charAt(i);\n               if (ch == ')')\n               stk.push(i);\n               else if (ch == '(')\n               {\n   if(stk.peek() == null)\n                        {\n    return false;\n   }\n   stk.pop();\n  }\n }\n return true;\n}\npublic boolean isBalanced(String exp)\n{\n int len = exp.length();\n Stack<Integer> stk = new Stack<Integer>();\n for(int i = 0; i < len; i++)\n        {\n  char ch = exp.charAt(i);\n                if (ch == '(')\n                stk.push(i);\n                else if (ch == ')')\n                {\n   if(stk.peek() != null)\n                        {\n    return false;\n   }\n   stk.pop();\n  }\n }\n return true;\n  }\npublic boolean isBalanced(String exp)\n{\n int len = exp.length();\n Stack<Integer> stk = new Stack<Integer>();\n for(int i = 0; i < len; i++)\n        {\n  char ch = exp.charAt(i);\n                if (ch == '(')\n                stk.push(i);\n                else if (ch == ')')\n                {\n   if(stk.peek() == null)\n                        {\n    return false;\n   }\n   stk.pop();\n  }\n }\n return true;\n}\nChoices:\nA) public boolean isBalanced(String exp)\nB) O(logn)\nC) O(n)\nD) O(1)\nE) O(nlogn)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: One can determine whether an infix expression   has balanced parenthesis or not by using \u2026\u2026\u2026\u2026., ,\nChoices:\nA) Array\nB) Queue\nC) Stack\nD) Tree\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What will be the output of the following code?\n\n#include <bits/stdc++.h> \nusing namespace std; \n \nint func(int arr[], int s, int e) \n{\n   if (s == e) \n return 0; \n   if (arr[s] == 0) \n return INT_MAX; \n \nint min = INT_MAX; \nfor (int i = s + 1; i <= e && i <= s + arr[s]; i++) \n{ \n int jumps = func(arr, i, e); \n if(jumps != INT_MAX && jumps + 1 < min) \n  min = jumps + 1; \n} \nreturn min; \n}\n \nint main() \n{ \n int arr[] = {1, 3, 6, 3, 8, 5}; \n int n = sizeof(arr)/sizeof(arr[0]); \n cout << func(arr, 0, n-1); \n return 0; \n}\nCode: #include <bits/stdc++.h>\nChoices:\nA) 1\nB) 2\nC) 3\nD) error\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Heap can be used as ________________\nChoices:\nA) Priority queue\nB) Stack\nC) A decreasing order array\nD) Normal Array\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Which of the following is the correct function definition for quadratic probing?\nChoices:\nA) F(i)=i2\nB) F(i)=i\nC) F(i)=i+1\nD) F(i)=i2+1\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Easy",
        "target_text": "Question: Which of these methods from the String class is used to extract a single character from an object of String?, ,\nChoices:\nA) CHARAT()\nB) charAt()\nC) CharAt()\nD) charAT()\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which statement is correct of suffix tree with a string of length n?\nChoices:\nA) The tree has n leaves.\nB) The tree has n roots\nC) Height of Tree is n\nD) Depth of tree is n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What is the result of the following operation?\nTop (Push (S, X))\nChoices:\nA) X\nB) X+S\nC) S\nD) XS\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: In which of the following case does a Propositional Directed Acyclic Graph is used for?\nChoices:\nA) Representation of Boolean Functions\nB) String Matching\nC) Searching\nD) Sorting of number\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: When to choose Red-Black tree, AVL tree and B-trees?\nChoices:\nA) many inserts, many searches and when managing more items respectively\nB) many searches, when managing more items respectively and many inserts respectively\nC) sorting, sorting and retrieval respectively\nD) retrieval, sorting and retrieval respectively\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: 12. In general, the index of the first element in an array is __________\nChoices:\nA) 0\nB) -1\nC) 2\nD) 1\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What is a weight balanced tree?\nChoices:\nA) A binary tree that stores the sizes of subtrees in nodes\nB) A binary tree with an additional attribute of weight\nC) A height balanced binary tree\nD) A normal binary tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Sequential access in a Hash tree is faster than in B-trees.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: The number of trees in a binomial heap with n nodes is\nChoices:\nA) logn\nB) n\nC) nlogn\nD) n/2\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Which of the following operations is performed more efficiently by doubly linked list than by linear linked list?, ,\nChoices:\nA) Deleting a node whose location is given\nB) Searching an unsorted list for a given item\nC) Inserting a node after the node with a given location\nD) Traversing the list to process each node\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: 30. What is the functionality of the following piece of code?\n\npublic void display() \n{\n\tif(size == 0)\n\t\tSystem.out.println(\"underflow\");\n\telse\n\t{\n\t\tNode current = first;\n\t\twhile(current != null)\n\t\t{\n\t\t\tSystem.out.println(current.getEle());\n\t\t\tcurrent = current.getNext();\n\t\t}\n\t}\n}\nChoices:\nA) display the list\nB) reverse the list\nC) reverse the list excluding top-of-the-stack-element\nD) display the list excluding top-of-the-stack-element\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Consider the following statements:, ,\nChoices:\nA) (ii) is true\nB) (i) and (ii) are true\nC) (iii) is true\nD) (ii) and (iv) are true\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: When an operand is read, which of the following is done?\nChoices:\nA) It is placed on to the output\nB) It is placed in operator stack\nC) It is ignored\nD) Operator stack is emptied\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What are the conditions for an optimal binary search tree and what is its advantage?\nChoices:\nA) The tree should not be modified and you should know how often the keys are accessed, it improves the lookup cost\nB) You should know the frequency of access of the keys, improves the lookup time\nC) The tree can be modified and you should know the number of elements in the tree before hand, it improves the deletion time\nD) The tree should be just modified and improves the lookup time\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: It is not possible to find the minimum number of steps to reach the end of an array in linear time.\nChoices:\nA) true\nB) false\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: The spanning tree of connected graph with 10   vertices contains \u2026\u2026\u2026\u2026.., ,\nChoices:\nA) 9 edges\nB) 11 edges\nC) 10 edges\nD) 9 vertices\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Overflow condition in linked list may occur   when attempting to \u2026\u2026\u2026\u2026., ,\nChoices:\nA) Create a node when free space pool is empty.\nB) Traverse the nodes when free space pool is empty.\nC) Create a node when linked list is empty.\nD) None of these.\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Easy",
        "target_text": "Question: How will you print \"\\\\\\n\" on the screen?, ,\nChoices:\nA) cout << \"\\\\\\\\\\\\n\";\nB) cout<<\"\\\\\\\\\\\\\\\\\\\\n\";\nC) cout<<\"//n\";\nD) cout<<\"///n\"\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: To search for an element in a sorted array, which searching technique can be used?\nChoices:\nA) Linear Search\nB) Jump Search\nC) Binary Search\nD) Fibonacci Search\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Given 10,8,6,7,9\nswap the above numbers such that finally you got 6,7,8,9,10\nso now reverse 10\n9,7,6,8,10\nnow reverse 9\n8,6,7,9,10\n7,6,8,9,10\n6,7,8,9,10\nat this point 6 is ahead so no more reversing can be done so stop.\nTo implement above algorithm which datastructure is better and why ?\nChoices:\nA) linked list. because we can swap elements easily\nB) arrays. because we can swap elements easily\nC) xor linked list. because there is no overhead of pointers and so memory is saved\nD) doubly linked list. because you can traverse back and forth\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Compression techniques can be used on the keys to reduce both space and time requirements in a B-tree.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Hashing is the problem of finding an appropriate mapping of keys into addresses.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Predefined function reverse() in C++ is available under which header file?\nChoices:\nA) math\nB) stdio\nC) stdlib\nD) algorithm\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Can a tree stored in an array using either one of inorder or post order or pre order traversals be again reformed?\nChoices:\nA) Yes just traverse through the array and form the tree\nB) No we need one more traversal to form a tree\nC) No in case of sparse trees\nD) Yes by using both inorder and array elements\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Easy",
        "target_text": "Question: If two string s are identical, then strcmp() functions returns ______, ,\nChoices:\nA) -1\nB) 1\nC) YES\nD) 0\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Given that 2 elements are present in the tree, write a function to find the LCA(Least Common Ancestor) of the 2 elements.\na)\n\npublic void lca(Tree root,int n1, int n2)\n{\n while (root != NULL)\n        {\n            if (root.data() > n1 && root.data() > n2)\n            root = root.right();\n            else if (root.data() < n1 && root.data() < n2)\n            root = root.left();\n     else break;\n        }\n        System.out.println(root.data());\n}\npublic void lca(Tree root,int n1, int n2)\n{\n    while (root != NULL)\n    {\n        if (root.data() > n1 && root.data() < n2)\n        root = root.left();\n        else if (root.data() < n1 && root.data() > n2)\n        root = root.right();\n else break;\n    }\n    System.out.println(root.data());\n}\npublic void lca(Tree root,int n1, int n2)\n{\n    while (root != NULL)\n    {\n        if (root.data() > n1 && root.data() > n2)\n        root = root.left();\n        else if (root.data() < n1 && root.data() < n2)\n        root = root.right();\n else break;\n    }\n    System.out.println(root.data());\n}\npublic void lca(Tree root,int n1, int n2)\n{\n    while (root != NULL)\n    {\n        if (root.data() > n1 && root.data() > n2)\n        root = root.left.left();\n        else if (root.data() < n1 && root.data() < n2)\n        root = root.right.right();\n else break;\n    }\n    System.out.println(root.data());\n}\n\nd)\nChoices:\nA) public void lca(Tree root,int n1, int n2)\nB) Answer: c\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What is the expected number of leaves in a randomized binary search tree?\nChoices:\nA) n + 1\nB) (n + 1)/3\nC) (n + 1)/2\nD) n + 3\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Which of the following statement(s) about stack data structure is/are NOT correct?\nChoices:\nA) Linked List are used for implementing Stacks\nB) Top of the Stack always contain the new node\nC) Stack is the FIFO data structure\nD) Null link is present in the last node at the bottom of the stack\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: 6. Which data structure is needed to convert infix notation to postfix notation?\nChoices:\nA) Tree\nB) Branch\nC) Stack\nD) Queue\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: What is the number of edges present in a complete graph having n vertices?\nChoices:\nA) (n*(n+1))/2\nB) (n*(n-1))/2\nC) n\nD) Information given is insufficient\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Which of the following is not an advantage of bit array?\nChoices:\nA) Exploit bit level parallelism\nB) Maximal use of data cache\nC) Can be stored and manipulated in the register set for long periods of time\nD) Accessing Individual Elements is easy\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What is the expected depth of a node in a randomized binary search tree?\nChoices:\nA) log n\nB) n!\nC) n2\nD) 2 log n + O(1)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: What are double and single threaded trees?\nChoices:\nA) when both left, right nodes are having null pointers and only right node is null pointer respectively\nB) having 2 and 1 node\nC) using single and double linked lists\nD) using heaps and priority queues\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: The postfix form of A ^ B * C \u2013 D + E/ F/ (G +   H),, ,\nChoices:\nA) AB^C*D-EF/GH+/+\nB) AB^CD-EP/GH+/+*\nC) ABCDEFGH+//+-*^\nD) AB^D +EFGH +//*+\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Suffix array of the string \u201cstatistics\u201d is ____________\nChoices:\nA) 2 8 7 4 9 0 5 1 6 3\nB) 2 7 4 9 8 0 5 1 6 3\nC) 2 4 9 0 5 7 8 1 6 3\nD) 2 8 7 0 5 1 6 9 4 3\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Consider the following sequence of operations on an empty stack., ,\nChoices:\nA) 86\nB) 68\nC) 24\nD) 94\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: \u0398(n2), ,\nChoices:\nA) \u0398(n)\nB) \u0398(nLogn)\nC) \u0398(n2)\nD) \u0398(n2log n)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: In a k-d tree, k originally meant?\nChoices:\nA) number of dimensions\nB) size of tree\nC) length of node\nD) weight of node\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Cartesian trees are most suitable for?\nChoices:\nA) searching\nB) finding nth element\nC) minimum range query and lowest common ancestors\nD) self balancing a tree\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: LCP array and ______ is used to construct suffix tree.\nChoices:\nA) Hash tree\nB) Hash trie\nC) Suffix array\nD) Balanced tree\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: In a min heap:, ,\nChoices:\nA) minimum values are stored.\nB) child nodes have less value than parent nodes. \\n (A) minimum values are stored. \\n (B) child nodes have less value than parent nodes.\nC) parent nodes have less value than child nodes.\nD) maximum value is contained by the root node.\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Can suffix tree be used in bioinformatics problems and solutions.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What is the longest length path for a node x in random binary search tree for the insertion process?\nChoices:\nA) log x\nB) x2\nC) x!\nD) 4.311 log x\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: What is the correct way to call the function (fun) in the below program?, #include <bits/stdc++.h>\n#include <iostream>\nusing namespace std;\n\nvoid fun(char* arr)\n{\n    int i;\n    unsigned int n = strlen(arr);\n    for (i = 0; i < n; i++)\n        cout << \" \" << arr[i];\n}\n\n// Driver program\nint main()\n{\n    char arr[]\n        = { 'g', 'e', 'e', 'k', 's', 'q', 'u', 'i', 'z' };\n    // How to call the above function here to print the char\n    // elements?\n\n    return 0;\n},\nCode: #include <bits/stdc++.h>\nChoices:\nA) fun(&arr);\nB) fun(*arr);\nC) fun(arr)\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Consider a B+-tree in which the maximum number of keys in a node is 5. What is the minimum number of keys in any non-root node? (GATE CS 2010), ,\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: What is the space complexity of searching in a heap?\nChoices:\nA) O(logn)\nB) O(n)\nC) O(1)\nD) O(nlogn)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: What are the applications of the Heap data structure?, ,\nChoices:\nA) Medical Applications\nB) File Compression\nC) Stock market\nD) All of these\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: The complexity of multiplying two matrices of   order m*n and n*p is \u2026\u2026\u2026\u2026\u2026., ,\nChoices:\nA) mnp\nB) mp\nC) mn\nD) np\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Which of the following is/are advantages of circular Queue?, ,\nChoices:\nA) Memory Management\nB) Traffic system\nC) CPU Scheduling\nD) All of the above\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: What is direct addressing?\nChoices:\nA) Distinct array position for every possible key\nB) Fewer array positions than keys\nC) Fewer keys than array positions\nD) Distinct array positions for keys based on priority\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What is not a disadvantage of priority scheduling in operating systems?\nChoices:\nA) A low priority process might have to wait indefinitely for the CPU\nB) If the system crashes, the low priority systems may be lost permanently\nC) Interrupt handling\nD) Indefinite blocking\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: 20. What is the need for a circular queue?\nChoices:\nA) easier computations\nB) implement LIFO principle in queues\nC) effective usage of memory\nD) to delete elements based on priority\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What is the speciality about the inorder traversal of a binary search tree?\nChoices:\nA) It traverses in a non increasing order\nB) It traverses in an increasing order\nC) It traverses in a random fashion\nD) It traverses based on priority of the node\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: The postfix form of the expression (A+ B)*(C*D- E)*F / G is?\nChoices:\nA) AB+ CD*E \u2013 FG /**\nB) AB + CD* E \u2013 F **G /\nC) AB + CD* E \u2013 *F *G /\nD) AB + CDE * \u2013 * F *G /\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Consider the following conditions:, ,\nChoices:\nA) (a) and (b) only\nB) (a) and (c) only\nC) (b) and (c) only\nD) (a), (b) and (c)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What is computational geometry?\nChoices:\nA) study of geometry using a computer\nB) study of geometry\nC) study of algorithms\nD) study of algorithms related to geometry\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Statement 1: When a node is split during insertion, the middle key is promoted to the parent as well as retained in right half-node.\nStatement 2: When a key is deleted from the leaf, it is also deleted from the non-leaf nodes of the tree.\nChoices:\nA) Statement 1 is true but statement 2 is false\nB) Statement 2 is true but statement 1 is false\nC) Both the statements are true\nD) Both the statements are false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Easy",
        "target_text": "Question: Which of the following statement is incorrect with respect to evaluation of infix expression algorithm?\nChoices:\nA) Operand is pushed on to the stack\nB) If the precedence of operator is higher, pop two operands and evaluate\nC) If the precedence of operator is lower, pop two operands and evaluate\nD) The result is pushed on to the operand stack\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: 19. Which algorithm is used in the top tree data structure?\nChoices:\nA) Backtracking\nB) Divide and Conquer\nC) Branch\nD) Greedy\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: An AVL tree is a self \u2013 balancing binary search tree, in which the heights of the two child sub trees of any node differ by _________\nChoices:\nA) At least one\nB) At most one\nC) Two\nD) At most two\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: In a binary search tree, which of the following traversals would print the numbers in the ascending order?\nChoices:\nA) Level-order traversal\nB) Pre-order traversal\nC) Post-order traversal\nD) In-order traversal\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Why we need to a binary tree which is height balanced?\nChoices:\nA) to avoid formation of skew trees\nB) to save memory\nC) to attain faster memory access\nD) to simplify storing\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Which of the following is not a collision resolution strategy for open addressing?\nChoices:\nA) Linear probing\nB) Quadratic probing\nC) Double hashing\nD) Rehashing\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: A B+ tree can contain a maximum of 7 pointers in a node. What is the minimum number of keys in leaves?\nChoices:\nA) 6\nB) 3\nC) 4\nD) 7\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: While evaluating the parse tree, which traversal technique is used to give the original input string?\nChoices:\nA) Pre-order traversal\nB) In-order traversal\nC) Post-order traversal\nD) Breadth-first traversal\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: What would be the Incidence Matrix of the given HyperGraph?\nV = {x,y,z} E = {{x,y}{y}{x,z}{z,y}}\n{1,1,0,1},\n{0,0,1,1}}\n{0,1,0,0},\n{1,1,1,0}}\n{0,0,1,0},\n{1,1,0,0}}\nChoices:\nA) {{1,0,1,0},\nB) {{1,1,0,0},\nC) {{0,1,0,1},\nD) None of the Mentioned\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: The maximum number of nodes in a binary tree   of depth 5 is \u2026\u2026\u2026\u2026\u2026, ,\nChoices:\nA) 31\nB) 16\nC) 32 \\n (A) 31 \\n (B) 16 \\n (C) 32\nD) 15\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: What is the formula used in quadratic probing?\nChoices:\nA) Hash key = key mod table size\nB) Hash key=(hash(x)+F(i)) mod table size\nC) Hash key=(hash(x)+F(i2)) mod table size\nD) H(x) = x mod 17\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Who invented k-d trees?\nChoices:\nA) Arne Andersson\nB) Jon Bentley\nC) Jon Von Newmann\nD) Rudolf Bayer\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: The prefix form of an infix expression (p + q) \u2013 (r * t) is?\nChoices:\nA) + pq \u2013 *rt\nB) \u2013 +pqr * t\nC) \u2013 +pq * rt\nD) \u2013 + * pqrt\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: The 2d search tree has the simple property that branching on odd levels is done with respect to the first key.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What is the result of the given postfix expression? abc*+ where a=1, b=2, c=3.\nChoices:\nA) 4\nB) 5\nC) 6\nD) 7\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: 7. What is the value of the postfix expression 6 3 2 4 + \u2013 *?\nChoices:\nA) 74\nB) -18\nC) 22\nD) 40\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: In which year was Van Emde Boas tree invented?\nChoices:\nA) 1972\nB) 1973\nC) 1974\nD) 1975\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What will be the height of a balanced full binary tree with 8 leaves?\nChoices:\nA) 8\nB) 5\nC) 6\nD) 4\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: What is the output of the following Java code?\n\npublic class array\n{\n public static void main(String args[])\n {\n  int []arr = {1,2,3,4,5};\n  System.out.println(arr[5]);\n }\n}\nChoices:\nA) 4\nB) 5\nC) ArrayIndexOutOfBoundsException\nD) InavlidInputException\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: All possible spanning trees of graph G:, ,\nChoices:\nA) have same number of edges and vertices.\nB) have same number of edges and but not vertices.\nC) have same number of vertices but not edges.\nD) depends upon algorithm being used.\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: The minimum height of self balancing binary search tree with n nodes is _____\nChoices:\nA) log2(n)\nB) n\nC) 2n + 1\nD) 2n \u2013 1\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which of the following is not a random tree?\nChoices:\nA) Treap\nB) Random Binary Tree\nC) Uniform Spanning Tree\nD) AVL Tree\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Is it possible to create a doubly linked list using only one pointer with every node., ,\nChoices:\nA) Not Possible\nB) Yes, possible by storing XOR of addresses of previous and next nodes.\nC) Yes, possible by storing XOR of current node and next node\nD) Yes, possible by storing XOR of current node and previous node\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Let G = (V, E) be a simple undirected graph, and s be a particular vertex in it called the source. For x \u2208 V, let d(x) denote the shortest distance in G from s to x. A breadth first search (BFS) is performed starting at s. Let T be the resultant BFS tree. If (u, v) is an edge of G that is not in T, then which one of the following CANNOT be the value of d(u) \u2013 d(v)?, ,\nChoices:\nA) -1\nB) 0\nC) 1\nD) 2\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: 9. What are the advantages of arrays?\nChoices:\nA) Objects of mixed data types can be stored\nB) Elements in an array cannot be sorted\nC) Index of first element of an array is 1\nD) Easier to store elements of same data type\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Which one of the following is a Special Sparse Matrix?\nChoices:\nA) Band Matrix\nB) Skew Matrix\nC) Null matrix\nD) Unit matrix\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: How would you delete a node in the singly linked list? The position to be deleted is given.\na)\n\npublic void delete(int pos)\n{\n if(pos < 0)\n pos = 0;\n if(pos > size)\n pos = size;\n if( size == 0)\n return;\n if(pos == 0)\n head = head.getNext();\n else\n {\n     Node temp = head;\n     for(int i=1; i<pos; i++)\n            {\n  temp = temp.getNext();\n            }\n     temp.setNext(temp.getNext().getNext());\n }\n     size--;\n}\npublic void delete(int pos)\n{\n if(pos < 0)\n pos = 0;\n if(pos > size)\n pos = size;\n if( size == 0)\n return;\n if(pos == 0)\n head = head.getNext();\n else\n {\n     Node temp = head;\n     for(int i=1; i<pos; i++)\n     {\n  temp = temp.getNext();\n     }\n     temp.setNext(temp.getNext());\n }\n     size--;\n}\npublic void delete(int pos)\n{\n        if(pos < 0)\n pos = 0;\n if(pos > size)\n pos = size;\n if( size == 0)\n return;\n if(pos == 0)\n head = head.getNext();\n else\n {\n     Node temp = head;\n     for(int i=1; i<pos; i++)\n     {\n  temp = temp.getNext().getNext();\n            }\n     temp.setNext(temp.getNext().getNext());\n }\n     size--;\n}\npublic void delete(int pos)\n{\n        if(pos < 0)\n        pos = 0;\n        if(pos > size)\n        pos = size;\n        if( size == 0)\n return;\n if(pos == 0)\n head = head.getNext();\n else\n {\n     Node temp = head;\n     for(int i=0; i<pos; i++)\n     {\n  temp = temp.getNext();\n     }\n     temp.setNext(temp.getNext().getNext());\n }\n size--;\n}\n\nd)\nChoices:\nA) public void delete(int pos)\nB) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Which of the following correctly declares an array?, ,\nChoices:\n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: What does first and last nodes of a xor linked lists contain ? (let address of first and last be A and B)\nChoices:\nA) NULL xor A and B xor NULL\nB) NULL and NULL\nC) A and B\nD) NULL xor A and B\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: What is simple uniform hashing?\nChoices:\nA) Every element has equal probability of hashing into any of the slots\nB) A weighted probabilistic method is used to hash elements into the slots\nC) Elements has Random probability of hashing into array slots\nD) Elements are hashed based on priority\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Which of the following special type of trie is used for fast searching of the full texts?\nChoices:\nA) Ctrie\nB) Hash tree\nC) Suffix tree\nD) T tree\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: What is the term for inserting into a full queue known as?\nChoices:\nA) overflow\nB) underflow\nC) null pointer exception\nD) program won\u2019t be compiled\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Which of the following bitwise operator will you use to invert all the bits in a bit array?\nChoices:\nA) OR\nB) NOT\nC) XOR\nD) NAND\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Given an array of size n, let\u2019s assume an element is \u2018touched\u2019 if and only if some operation is performed on it(for example, for performing a pop operation the top element is \u2018touched\u2019). Now you need to perform Dequeue operation. Each element in the array is touched atleast?\nChoices:\nA) Once\nB) Twice\nC) Thrice\nD) Four times\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: An expression tree\u2019s nodes can be deleted by calling?\nChoices:\nA) malloc\nB) calloc\nC) delete\nD) free\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Na\u00efve merge cannot be done in a skew merge.\nChoices:\nA) true\nB) false\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: What would be the solution to the given prefix notation?\nChoices:\nA) 14\nB) 15\nC) 18\nD) 12\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: How many swaps are required for reversing an array having n elements where n is an even number?\nChoices:\nA) (n-1) / 2\nB) n/2\nC) (n/2) \u2013 1\nD) (n+1)/2\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Which of the following data structures can be efficiently implemented using height balanced binary search tree?\nChoices:\nA) sets\nB) priority queue\nC) heap\nD) both sets and priority queue\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: What is the fundamental operation on leftist heap?\nChoices:\nA) insertion\nB) merging\nC) deletion\nD) swapping\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Consider the following doubly linked list: head-1-2-3-4-5-tail. What will be the list after performing the given sequence of operations?\nChoices:\nA) head-6-1-2-3-4-5-tail\nB) head-6-1-2-3-4-tail\nC) head-1-2-3-4-5-6-tail\nD) head-1-2-3-4-5-tail\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: When searching for the key value 60 in a binary search tree, nodes containing the key values 10, 20, 40, 50, 70 80, 90 are traversed, not necessarily in the order given. How many different orders are possible in which these key values can occur on the search path from the root to the node containing the value 60?, ,\nChoices:\nA) 35\nB) 64\nC) 128\nD) 5040\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Which of the following statement is invalid with respect to balancing symbols?\nChoices:\nA) [(A+B) + (C-D)]\nB) [{A+B}-{C-[D+E]}]\nC) ((A+B) + (C+D)\nD) {(A+B) + [C+D]}\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Easy",
        "target_text": "Question: Which of the following sorting methods would   be most suitable for sorting a list which is almost   sorted?, ,\nChoices:\nA) Bubble Sort\nB) Insertion Sort\nC) Selection Sort\nD) Quick Sort\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Easy",
        "target_text": "Question: Which among the following is not a palindrome?\nChoices:\nA) Madam\nB) Dad\nC) Malayalam\nD) Maadam\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Which one of the following operations returns the first occurrence of bit 1 in bit arrays?\nChoices:\nA) Find First Zero\nB) Find First One\nC) Counting lead Zeroes\nD) Counting lead One\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Which indicator is used for similarity between two sets?\nChoices:\nA) Rope Tree\nB) Jaccard Coefficient\nC) Tango Tree\nD) MinHash Coefficient\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: How many orders of traversal are applicable to a binary tree (In General)?\nChoices:\nA) 1\nB) 4\nC) 2\nD) 3\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: Linked list is considered as an example of ___________ type of memory allocation.\nChoices:\nA) Dynamic\nB) Static\nC) Compile time\nD) Heap\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What is the depth of the root node of K-ary tree?\nChoices:\nA) 2\nB) 1\nC) 0\nD) 3\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: The average depth of a binary tree is given as?\nChoices:\nA) O(N)\nB) O(log N)\nC) O(M log N)\nD) O(\u221aN)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: A B-tree of minimum degree t can maximum   \u2026\u2026\u2026\u2026\u2026 pointers in a node., ,\nChoices:\nA) t\u20131\nB) 2t\u20131\nC) 2t\nD) t\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: The time required to search an element in a linked list of length n is, ,\nChoices:\nA) O (log n)\nB) O (n)\nC) O (1)\nD) O (n2)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: Which of the following options is an application of splay trees?\nChoices:\nA) cache Implementation\nB) networks\nC) send values\nD) receive values\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Easy",
        "target_text": "Question: A graph \u2018G\u2019 with \u2018n\u2019 nodes is bipartite if it   contains \u2026\u2026\u2026\u2026., ,\nChoices:\nA) n edges\nB) a cycle of odd length\nC) no cycle of odd length\nD) n2 edges\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: A linear list of elements in which deletion can be done from one end (front) and insertion can take place only at the other end (rear) is known as _____________\nChoices:\nA) Queue\nB) Stack\nC) Tree\nD) Linked list\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: If a node having two children is deleted from a   binary tree, it is replaced by its \u2026\u2026\u2026.., ,\nChoices:\nA) In-order predecessor\nB) In-order successor\nC) Pre-order predecessor\nD) None of these\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Easy",
        "target_text": "Question: Which of the following is not an advantage of a priority queue?\nChoices:\nA) Easy to implement\nB) Processes with different priority can be efficiently handled\nC) Applications with differing requirements\nD) Easy to delete elements in any case\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Easy",
        "target_text": "Question: Why is heap implemented using array representations than tree(linked list) representations though both tree representations and heaps have same complexities?\n\nThen why go with array representation when both are having same values ?\nChoices:\nA) arrays can store trees which are complete and heaps are not complete\nB) lists representation takes more memory hence memory efficiency is less and go with arrays and arrays have better caching\nC) lists have better caching\nD) In lists insertion and deletion is difficult\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Easy",
        "target_text": "Question: Which of the following is an advantage of open addressing over separate chaining?\nChoices:\nA) it is simpler to implement\nB) table never gets full\nC) it is less sensitive to hash function\nD) it has better cache performance\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: How will you find the minimum element in a binary search tree?\na)\n\npublic void min(Tree root)\n{\n while(root.left() != null)\n {\n  root = root.left();\n }\n System.out.println(root.data());\n}\npublic void min(Tree root)\n{\n while(root != null)\n {\n  root = root.left();\n }\n System.out.println(root.data());\n}\npublic void min(Tree root)\n{\n while(root.right() != null)\n {\n  root = root.right();\n }\n System.out.println(root.data());\n}\npublic void min(Tree root)\n{\n while(root != null)\n {\n  root = root.right();\n }\n System.out.println(root.data());\n}\n\nd)\nChoices:\nA) public void min(Tree root)\nB) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: What are null nodes filled with in a threaded binary tree?\nChoices:\nA) inorder predecessor for left node and inorder successor for right node information\nB) right node with inorder predecessor and left node with inorder successor information\nC) they remain null\nD) some other values randomly\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: Which operation is not efficiently performed in a d-heap?\nChoices:\nA) insert\nB) delete\nC) find\nD) merge\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Easy",
        "target_text": "Question: A circularly linked list is used to represent a Queue. A single variable p is used to access the Queue. To which node should p point such that both the operations enQueue and deQueue can be performed in constant time? (GATE 2004) , ,\nChoices:\nA) rear node\nB) front node\nC) not possible with a single pointer\nD) node next to front\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Easy",
        "target_text": "Question: The main distinguishable characterstic of a binomial heap from a binary heap is that\nChoices:\nA) it allows union operations very efficiently\nB) it does not allow union operations that could easily be implemented in binary heap\nC) the heap structure is not similar to complete binary tree\nD) the location of child node is not fixed i.e child nodes could be at level (h-2) or (h-3), where h is height of heap and h>4\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Easy",
        "target_text": "Question: The maximum number of nodes in a tree for which post-order and pre-order traversals may be equal is ______\nChoices:\nA) 3\nB) 1\nC) 2\nD) any number\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Medium",
        "target_text": "Question: If there are more than 1 topological sorting of a DAG is possible, which of the following is true.\nChoices:\nA) Many Hamiltonian paths are possible\nB) No Hamiltonian path is possible\nC) Exactly 1 Hamiltonian path is possible\nD) Given information is insufficient to comment anything\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following is true, ,\nChoices:\nA) The AVL trees are more balanced compared to Red Black Trees, but they may cause more rotations during insertion and deletion.\nB) Heights of AVL and Red-Black trees are generally same, but AVL Trees may cause more rotations during insertion and deletion.\nC) Red Black trees are more balanced compared to AVL Trees, but may cause more rotations during insertion and deletion.\nD) Heights of AVL and Red-Black trees are generally same, but Red Black trees may cause more rotations during insertion and deletion.\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which of the following is true for a Hash tree?\nChoices:\nA) Hashing is used for sequential access\nB) Indexing is used for direct access\nC) Hash tree allows only sequential access\nD) Hashing is used for direct access\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Which of the following is true about a triply linked list?\nChoices:\nA) Dynamic in nature\nB) Allows random access\nC) Less memory wastage\nD) Reverse traversing is difficult\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: An important application of binary tree is ______, ,\nChoices:\nA) Huffman coding\nB) stack implementation\nC) queue implementation\nD) traverse a cyclic graph\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: Which of the following is true?\nChoices:\nA) A graph may contain no edges and many vertices\nB) A graph may contain many edges and no vertices\nC) A graph may contain no edges and no vertices\nD) A graph may contain no vertices and many edges\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Choose the correct function from the following which determines the number of inversions in an array?\na)\n\nd)\nChoices:\nA) d)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following is true?\nChoices:\nA) B + tree allows only the rapid random access\nB) B + tree allows only the rapid sequential access\nC) B + tree allows rapid random access as well as rapid sequential access\nD) B + tree allows rapid random access and slower sequential access\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: Minimum number of queues required for   priority queue implementation?, ,\nChoices:\nA) 5\nB) 4\nC) 3\nD) 2\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: The following C function takes a simply-linked list as input argument. It modifies the list by moving the last element to the front of the list and returns the modified list. Some part of the code is left blank. Choose the correct alternative that contain the correct pseudocode for the blank line. , #include <iostream>\nstruct Node {\n    int value;\n    Node *next;\n};\n\nNode* move_to_front(Node *head) {\n    Node *p, *q;\n    if (head == NULL || head->next == NULL)\n        return head;\n    q = NULL; p = head;\n    while (p->next != NULL) {\n        q = p;\n        p = p->next;\n    }\n    __________________________________\n    return head;\n},\nCode: #include <iostream>\nChoices:\nA) q = NULL; next of p = head; head = p;\nB) next of q = NULL; head = p; next of p = head;\nC) head = p; next of p = q; next of q = NULL;\nD) next of q = NULL; next of p = head; head = p;\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Evaluate the following and choose the correct answer.\na/b+c*d where a=4, b=2, c=2, d=1.\nChoices:\nA) 1\nB) 4\nC) 5\nD) 2\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following tree traversals work if the null left pointer pointing to the predecessor and null right pointer pointing to the successor in a binary tree?\nChoices:\nA) inorder, postorder, preorder traversals\nB) inorder\nC) postorder\nD) preorder\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: From the given expression tree, identify the infix expression, evaluate it and choose the correct result.\nChoices:\nA) 5\nB) 10\nC) 12\nD) 16\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Which of the following is true about linked list implementation of queue?\nChoices:\nA) In push operation, if new nodes are inserted at the beginning of linked list, then in pop operation, nodes must be removed from end\nB) In push operation, if new nodes are inserted at the beginning, then in pop operation, nodes must be removed from the beginning\nC) In push operation, if new nodes are inserted at the end, then in pop operation, nodes must be removed from end\nD) In push operation, if new nodes are inserted at the end, then in pop operation, nodes must be removed from beginning\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Evaluate the following statement using infix evaluation algorithm and choose the correct answer. 1+2*3-2\nChoices:\nA) 3\nB) 6\nC) 5\nD) 4\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: What is wrong with the following code of insertion in fibonacci heap.\nChoose the correct option\nChoices:\nA) Line -11\nB) Line -3\nC) Line 9\nD) Line 7\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: In delete operation of BST, we need inorder successor (or predecessor) of a node when the node to be deleted has both left and right child as non-empty. Which of the following is true about inorder successor needed in delete operation?, ,\nChoices:\nA) Inorder Successor is always a leaf node\nB) Inorder successor is always either a leaf node or a node with empty left child\nC) Inorder successor may be an ancestor of the node\nD) Inorder successor is always either a leaf node or a node with empty right child\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: Given the code, choose the correct option that is consistent with the code. (Here A is the heap)\n\nbuild(A,i)\n left-> 2*i\n right->2*i +1\n temp- > i\n if(left<= heap_length[A] ans A[left] >A[temp])\n temp -> left\n if (right = heap_length[A] and A[right] > A[temp])\n temp->right\n if temp!= i\n swap(A[i],A[temp])\n build(A,temp)\nChoices:\nA) It is the build function of max heap\nB) It is the build function of min heap\nC) It is general build function of any heap\nD) It is used to search element in any heap\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: For the expression (7-(4*5))+(9/3) which of the following is the post order tree traversal?, ,\nChoices:\nA) *745-93/+\nB) 93/+745*-\nC) 745*-93/+\nD) 74*+593/-\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Array implementation of Stack is not dynamic, which of the following statements supports this argument?\nChoices:\nA) space allocation for array is fixed and cannot be changed during run-time\nB) user unable to give the input for stack operations\nC) a runtime exception halts execution\nD) improper program compilation\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Which of the following is true about the Move-To-Front Method for rearranging nodes?\nChoices:\nA) node with highest access count is moved to head of the list\nB) requires extra storage\nC) may over-reward infrequently accessed nodes\nD) requires a counter for each node\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following is TRUE?, ,\nChoices:\nA) The cost of searching an AVL tree is \u03b8 (log n) but that of a binary search tree is O(n)\nB) The cost of searching an AVL tree is \u03b8 (log n) but that of a complete binary tree is \u03b8 (n log n)\nC) The cost of searching a binary search tree is O (log n ) but that of an AVL tree is \u03b8(n)\nD) The cost of searching an AVL tree is \u03b8 (n log n) but that of a binary search tree is O(n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: Consider the following operations performed on a stack of size 5 : Push (a); Pop() ; Push(b); Push(c); Pop(); Push(d); Pop();Pop(); Push (e) Which of the following statements is correct?, ,\nChoices:\nA) Underflow occurs\nB) Stack operations are performed smoothly\nC) Overflow occurs\nD) None of the above\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: Which of the following is true about linked list implementation of queue?, ,\nChoices:\nA) In push operation, if new nodes are inserted at the beginning of linked list, then in pop operation, nodes must be removed from end.\nB) In push operation, if new nodes are inserted at the end, then in pop operation, nodes must be removed from the beginning.\nC) Both of the above\nD) None of the above\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following is true?\nChoices:\nA) larger the order of B-tree, less frequently the split occurs\nB) larger the order of B-tree, more frequently the split occurs\nC) smaller the order of B-tree, more frequently the split occurs\nD) smaller the order of B-tree, less frequently the split occurs\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Evaluate the following infix expression using algorithm and choose the correct answer. a+b*c-d/e^f where a=1, b=2, c=3, d=4, e=2, f=2.\nChoices:\nA) 6\nB) 8\nC) 9\nD) 7\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Medium",
        "target_text": "Question: Which of the following is true about the trie?\nChoices:\nA) root is letter a\nB) path from root to the leat yields the string\nC) children of nodes are randomly ordered\nD) each node stores the associated keys\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What are the disadvantages of normal binary tree traversals?\nChoices:\nA) there are many pointers which are null and thus useless\nB) there is no traversal which is efficient\nC) complexity in implementing\nD) improper traversals\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Using the evaluation of infix expression, evaluate a^b+c and choose the correct answer. (a=2, b=2, c=2)\nChoices:\nA) 12\nB) 8\nC) 10\nD) 6\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following is true about Binary Trees?, ,\nChoices:\nA) Every binary tree is either complete or full.\nB) Every complete binary tree is also a full binary tree.\nC) Every full binary tree is also a complete binary tree.\nD) No binary tree is both complete and full.\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Evaluate the following statement using infix evaluation algorithm and choose the correct answer. 4*2+3-5/5\nChoices:\nA) 10\nB) 11\nC) 16\nD) 12\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: Choose the correct properties of weak-heap.\nChoices:\nA) Every node has value greater than the value of child node\nB) Every right child of node has greater value than parent node\nC) Every left child of node has greater value than parent node\nD) Every left and right child of node has same value as parent node\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: What is a threaded binary tree traversal?\nChoices:\nA) a binary tree traversal using stacks\nB) a binary tree traversal using queues\nC) a binary tree traversal using stacks and queues\nD) a binary tree traversal without using stacks and queues\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which tree traversal technique is used to evaluate the expression represented by syntax tree?\nChoices:\nA) Pre-order traversal\nB) In-order traversal\nC) Post-order traversal\nD) Breadth first traversal\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: An algorithm performs (logN)1/2 find operations, N insert operations, (logN)1/2 , delete operations, and (logN)1/2 decrease-key operations on a set of data items with keys drawn from a linearly ordered set. For a delete operation, a pointer is provided to the record that must be deleted. For the decrease-key operation, a pointer is provided to the record that has its key decreased. Which one of the following data structures is the most suited for the algorithm to use, if the goal is to achieve the best total asymptotic complexity considering all the operations?, ,\nChoices:\nA) Unsorted array\nB) Min-heap\nC) Sorted array\nD) Sorted doubly linked list\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: What is the time complexity of delete function in the hash table using list head?\nChoices:\nA) O(1)\nB) O(n)\nC) O(log n)\nD) O(n log n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is the worst case analysis of an AA-Tree?\nChoices:\nA) O(N)\nB) O(log N)\nC) O( N log N)\nD) O(N2)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: What is the time complexity for decreasing priority of key in a maximum ternary heap of n elements?\nChoices:\nA) O (log n/ log 3)\nB) O (3log n/ log 3)\nC) O (n)\nD) O (1)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What is the time complexity of searching for an element in a circular linked list?, ,\nChoices:\nA) O(n)\nB) O(nlogn)\nC) O(1)\nD) O(n2)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is a time complexity for finding all the tandem repeats?\nChoices:\nA) \u019f (n)\nB) \u019f (n!)\nC) \u019f (1)\nD) O (n log n + z)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: Self \u2013 balancing binary search trees have a much better average-case time complexity than hash tables.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is a time complexity for finding the longest palindromic substring in a string by using the generalized suffix tree?\nChoices:\nA) Linear Time\nB) Exponential Time\nC) Logarithmic Time\nD) Cubic Time\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What is the time complexity of inserting at the end in dynamic arrays?\nChoices:\nA) O(1)\nB) O(n)\nC) O(logn)\nD) Either O(1) or O(n)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: What is the time complexity of search function in a hash table using list head?\nChoices:\nA) O(1)\nB) O(n)\nC) O(log n)\nD) O(n log n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What is the minimum possible time complexity to find the number of steps to reach the end of an array?\nChoices:\nA) O(n)\nB) O(n2)\nC) O(n3/2)\nD) O(1)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Which among the following is the worst-case time complexity for appending an element in a variable-length array?\nChoices:\nA) O(n)\nB) O(1)\nC) O(n2)\nD) O(log n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is the time complexity for storing the maximum number of elements in Van Emde Boas tree if M is the maximum number of elements?\nChoices:\nA) O (log M)\nB) O (M!)\nC) O (M)\nD) O (1)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: What is the time complexity for inserting a new item in a ternary heap of n elements?\nChoices:\nA) O (log n/ log 3)\nB) O (n!)\nC) O (n)\nD) O (1)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: Why is implementation of stack operations on queues not feasible for a large dataset (Asssume the number of elements in the stack to be n)?\nChoices:\nA) Because of its time complexity O(n)\nB) Because of its time complexity O(log(n))\nC) Extra memory is not required\nD) There are no problems\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Hard",
        "target_text": "Question: Which of the following sorting algorithms does   not have a worst case running time of O(n2) ?, ,\nChoices:\nA) Insertion sort\nB) Merge sort\nC) Quick sort\nD) Bubble sort\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What would be the asymptotic time complexity to find an element in the linked list?\nChoices:\nA) O(1)\nB) O(n)\nC) O(n2)\nD) O(n4)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What would be the asymptotic time complexity to insert an element at the second position in the linked list?\nChoices:\nA) O(1)\nB) O(n)\nC) O(n2)\nD) O(n3)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: Let H be a binary min-heap consisting of n elements implemented as an array. What is the worst case time complexity of an optimal algorithm to find the maximum element in H?, ,\nChoices:\nA) \u0398(1)\nB) \u0398(logn)\nC) \u0398(n)\nD) \u0398(nlogn)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: What is the worst case search time of a hashing using separate chaining algorithm?\nChoices:\nA) O(N log N)\nB) O(N)\nC) O(N2)\nD) O(N3)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: What is the time complexity of Build Heap operation? \n(Build Heap is used to build a max(or min) binary heap from a given array. Build Heap is used in Heap Sort as a first step for sorting.), ,\nChoices:\nA) O(nLogn)\nB) O(n^2)\nC) O(n)\nD) O(logn)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: On which of the following statements does the time complexity of checking if an edge exists between two particular vertices is not, depends?\nChoices:\nA) Depends on the number of edges\nB) Depends on the number of vertices\nC) Is independent of both the number of edges and vertices\nD) It depends on both the number of edges and vertices\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: What is the time complexity of insert function in a hash table using a binary tree?\nChoices:\nA) O(1)\nB) O(n)\nC) O(log n)\nD) O(n log n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Which of the following property of splay tree is correct?\nChoices:\nA) it holds probability usage of the respective sub trees\nB) any sequence of j operations starting from an empty tree with h nodes atmost, takes O(jlogh) time complexity\nC) sequence of operations with h nodes can take O(logh) time complexity\nD) splay trees are unstable trees\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Project scheduling is an example of \u2026\u2026\u2026\u2026\u2026., ,\nChoices:\nA) Greedy programming\nB) Dynamic programming \\n (A) Greedy programming \\n (B) Dynamic programming\nC) Divide and conquer\nD) None of the above.\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What will be the time complexity of the following code?\n\n#include <bits/stdc++.h> \nusing namespace std; \nvoid func(int arr[], int left, int right) \n{ \n    if (left >= right) \n    return; \n \n    int temp = arr[left];  \n    arr[left] = arr[right]; \n    arr[right] = temp; \n \n    func(arr, left + 1, right - 1);  \n}      \n \nvoid printArray(int arr[], int size) \n{ \n    for (int i = 0; i < size; i++) \n    cout << arr[i] << \" \"; \n} \n \nint main() \n{ \n int arr[] = {1,2,3,4}; \n int n = sizeof(arr) / sizeof(arr[0]); \n func(arr, 0, n-1); \n printArray(arr, n); \n return 0; \n}\nCode: #include <bits/stdc++.h>\nChoices:\nA) O(1)\nB) O(n)\nC) O(log n)\nD) O(n log n)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is the worst case time complexity of inserting n2 elements into an AVL-tree with n elements initially ?, ,\nChoices:\nA) \u0398(n4)\nB) \u0398(n2)\nC) \u0398(n2 log n)\nD) \u0398(n3)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: How do you count the number of elements in the circular linked list?\na)\n\npublic int length(Node head)\n{\n int length = 0;\n if( head == null)\n  return 0;\n Node temp = head.getNext();\n while(temp != head)\n {\n  temp = temp.getNext();\n  length++;\n }\n return length;\n}\npublic int length(Node head)\n{\n int length = 0;\n if( head == null)\n  return 0;\n Node temp = head.getNext();\n while(temp != null)\n {\n  temp = temp.getNext();\n  length++;\n }\n return length;\n}\npublic int length(Node head)\n{\n int length = 0;\n if( head == null)\n  return 0;\n Node temp = head.getNext();\n while(temp != head && temp != null)\n {\n  temp = head.getNext();\n  length++;\n }\n return length;\n}\npublic int length(Node head)\n{\n int length = 0;\n if( head == null)\n  return 0;\n Node temp = head.getNext();\n while(temp != head && temp == null)\n {\n  temp = head.getNext();\n  length++;\n }\n return length;\n}\n\nd)\nChoices:\nA) public int length(Node head)\nB) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the time complexity of level order traversal?\nChoices:\nA) O(1)\nB) O(n)\nC) O(logn)\nD) O(nlogn)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: Why Red-black trees are preferred over hash tables though hash tables have constant time complexity?\nChoices:\nA) no they are not preferred\nB) because of resizing issues of hash table and better ordering in redblack trees\nC) because they can be implemented using trees\nD) because they are balanced\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Let P be a singly linked list. Let Q be the pointer to an intermediate node x in the list. What is the worst-case time complexity of the best known algorithm to delete the node Q from the list?, ,\nChoices:\nA) O(n)\nB) O(log2 n)\nC) O(logn)\nD) O(1)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: What is the disadvantage of BST over the hash table?\nChoices:\nA) BST is easier to implement\nB) BST can get the keys sorted by just performing inorder traversal\nC) BST can perform range query easily\nD) Time complexity of hash table in inserting, searching and deleting is less than that of BST\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Search and difficulty=Hard",
        "target_text": "Question: What is the time complexity for searching a key or integer in Van Emde Boas data structure?\nChoices:\nA) O (log M!)\nB) O (M!)\nC) O (M2)\nD) O (log (log M))\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What is the time complexity improvement of skip lists from linked lists in insertion and deletion?\nChoices:\nA) O(n) to O(logn) where n is number of elements\nB) O(n) to O(1) where n is number of elements\nC) no change\nD) O(n) to O(n2) where n is number of elements\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What would be the asymptotic time complexity to add a node at the end of singly linked list, if the pointer is initially pointing to the head of the list?\nChoices:\nA) O(1)\nB) O(n)\nC) \u03b8(n)\nD) Both O(n) and \u03b8(n)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: Suppose we are sorting an array of eight integers using heapsort, and we have just finished some heapify (either maxheapify or minheapify) operations. The array now looks like this: 16 14 15 10 12 27 28 How many heapify operations have been performed on root of heap?, ,\nChoices:\nA) 1\nB) 2\nC) 3 or 4\nD) 5 or 6\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is the worst case time complexity for search, insert and delete operations in a general Binary Search Tree for a skewed tree ?, ,\nChoices:\nA) O(n) for all\nB) O(Logn) for all\nC) O(Logn) for search and insert, and O(n) for delete\nD) O(Logn) for search, and O(n) for insert and delete\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What will be the time complexity of the following code?\n\n#include <bits/stdc++.h> \nusing namespace std; \nvoid func(int arr[], int left, int right) \n{ \n     while (left < right) \n { \n  int temp = arr[left]; \n  arr[left] = arr[right]; \n  arr[right] = temp; \n  left++; \n  right--; \n } \n \n}  \n \nvoid printArray(int arr[], int size) \n{ \n    for (int i = 0; i < size; i++) \n    cout << arr[i] << \" \"; \n} \n \nint main() \n{ \n int arr[] = {1,4,3,5}; \n int n = sizeof(arr) / sizeof(arr[0]); \n func(arr, 0, n-1); \n printArray(arr, n); \n return 0; \n}\nCode: #include <bits/stdc++.h>\nChoices:\nA) O(n)\nB) O(log n)\nC) O(1)\nD) O(n log n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is the best case height of a B-tree of order n and which has k keys?\nChoices:\nA) logn (k+1) \u2013 1\nB) nk\nC) logk (n+1) \u2013 1\nD) klogn\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: A circular linked list can be used for \u2026\u2026\u2026\u2026.., ,\nChoices:\nA) Stack\nB) Queue \\n (A) Stack \\n (B) Queue\nC) Both Stack & Queue\nD) Neither Stack or Queue\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Is O(n) the Worst case Time Complexity for addition of two Sparse Matrix?\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Reversal algorithm and juggling algorithm for array rotation have the same time complexity.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What is the time complexity to count the number of elements in the linked list?\nChoices:\nA) O(1)\nB) O(n)\nC) O(logn)\nD) O(n2)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What is a time complexity for finding the longest prefix that is common between suffix in a string?\nChoices:\nA) \u019f (n)\nB) \u019f (n!)\nC) \u019f (1)\nD) O (log n!)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: Given two max heaps of size n each, what is the minimum possible time complexity to make a one max-heap of size from elements of two max heaps?, ,\nChoices:\nA) O(n^2)\nB) O(nLogLogn)\nC) O(n)\nD) O(nLogn)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: The worst case running time of all operations in a skew heap is given as?\nChoices:\nA) O(N)\nB) O(N log N)\nC) O(N2)\nD) O(M log N)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is the time complexity for searching k+1 auxiliary trees?\nChoices:\nA) k+2 O (log (log n))\nB) k+1 O (log n)\nC) K+2 O (log n)\nD) k+1 O (log (log n))\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What is a time complexity for checking a string of length n is substring or not?\nChoices:\nA) O (log n!)\nB) O (n!)\nC) O (n2)\nD) O (n)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the worst case time complexity of query operation(n is the no. of candidates)?\nChoices:\nA) O(1)\nB) O(n)\nC) O(log n)\nD) O(n log n)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: In simple chaining, what data structure is appropriate?\nChoices:\nA) Singly linked list\nB) Doubly linked list\nC) Circular linked list\nD) Binary trees\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Which of the following is false about a circular linked list?\nChoices:\nA) Every node has a successor\nB) Time complexity of inserting a new node at the head of the list is O(1)\nC) Time complexity for deleting the last node is O(n)\nD) We can traverse the whole circular linked list by starting from any point\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Hard",
        "target_text": "Question: The worst case complexity of binary search   matches with \u2026\u2026\u2026\u2026\u2026, ,\nChoices:\nA) interpolation search\nB) linear search\nC) merge sort\nD) none of the above\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: An array consists of n elements. We want to create a heap using the elements. The time complexity of building a heap will be in order of\nChoices:\nA) O(n*n*logn)\nB) O(n*logn)\nC) O(n*n)\nD) O(n *logn *logn)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is the time complexity of for achieving competitive ratio by tango tree?\nChoices:\nA) O (log n)\nB) O (n2)\nC) O (n!)\nD) O (log (log n))\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: Time complexity to check if an edge exists between two vertices would be ___________\nChoices:\nA) O(V*V)\nB) O(V+E)\nC) O(1)\nD) O(E)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: The worst case complexity of deleting any arbitrary node value element from heap is __________\nChoices:\nA) O(logn)\nB) O(n)\nC) O(nlogn)\nD) O(n2)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What will be the time complexity of insertion operation if all the candidates are evenly spaced so that each bin has constant no. of candidates? (m = number of bins intersecting candidate intersects)\nChoices:\nA) O(1)\nB) O(m)\nC) O(m2)\nD) O(log m)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: What is a time complexity for inserting an alphabet in the tree using hash maps?\nChoices:\nA) O (log n!)\nB) O (n!)\nC) O (n2)\nD) O (1)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Hard",
        "target_text": "Question: The quick sort algorithm exploit \u2026\u2026\u2026\u2026\u2026..   design technique., ,\nChoices:\nA) Greedy\nB) Dynamic programming\nC) Divide and Conquer\nD) Backtracking\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Consider an array consisting of \u2013ve and +ve numbers. What would be the worst case time complexity of an algorithm to segregate the numbers having same sign altogether i.e all +ve on one side and then all -ve on the other ?, ,\nChoices:\nA) O(N)\nB) O(N Log N)\nC) O(N * N)\nD) O(N Log Log N)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the time complexity for deleting a key or integer in Van Emde Boas data structure?\nChoices:\nA) O (log M!)\nB) O (log (log M))\nC) O (M!)\nD) O (M2)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: What is the time complexity of reversing a word using stack algorithm?\nChoices:\nA) O (N log N)\nB) O (N2)\nC) O (N)\nD) O (M log N)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What is the time complexity for inserting the string and forming a new string in the rope data structure?\nChoices:\nA) O (log n)\nB) O (n!)\nC) O (n2)\nD) O (1)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: A double-ended queue supports operations like adding and removing items from both the sides of the queue. They support four operations like addFront(adding item to top of the queue), addRear(adding item to the bottom of the queue), removeFront(removing item from the top of the queue) and removeRear(removing item from the bottom of the queue). You are given only stacks to implement this data structure. You can implement only push and pop operations. What\u2019s the time complexity of performing addFront and addRear? (Assume \u2018m\u2019 to be the size of the stack and \u2018n\u2019 to be the number of elements)\nChoices:\nA) O(m) and O(n)\nB) O(1) and O(n)\nC) O(n) and O(1)\nD) O(n) and O(m)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Which of the following sorting algorithms can be used to sort a random linked list with minimum time complexity?\nChoices:\nA) Insertion Sort\nB) Quick Sort\nC) Heap Sort\nD) Merge Sort\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: What is the worst case time complexity of insert function in the hash table when the list head is used for chaining?\nChoices:\nA) O(1)\nB) O(n log n)\nC) O(log n)\nD) O(n)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Which of the following sorting algorithms can be used to sort a random linked list with minimum time complexity?, ,\nChoices:\nA) Insertion Sort\nB) Quick Sort\nC) Heap Sort\nD) Merge Sort\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What is the time complexity of the following code that determines the number of inversions in an array?\nChoices:\nA) O(n)\nB) O(n log n)\nC) O(n2)\nD) O(log n)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: What is the time complexity of enqueue operation?\nChoices:\nA) O(logn)\nB) O(nlogn)\nC) O(n)\nD) O(1)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What will be the time complexity of delete operation if all the candidates are evenly spaced so that each bin has constant no. of candidates? (m = number of bins intersecting candidate intersects)\nChoices:\nA) O(1)\nB) O(m)\nC) O(m2)\nD) O(log m)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: An advantage of chained hash table (external hashing) over the open addressing scheme is, ,\nChoices:\nA) Worst case complexity of search operations is less\nB) Space used is less\nC) Deletion is easier\nD) None of the above\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What is the time complexity for deleting the string to form a new string in the rope data structure?\nChoices:\nA) O (n2)\nB) O (n!)\nC) O (log n)\nD) O (1)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: What is the time complexity to insert a node based on position in a priority queue?\nChoices:\nA) O(nlogn)\nB) O(logn)\nC) O(n)\nD) O(n2)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: What is the advantage of a hash table over BST?\nChoices:\nA) hash table has a better average time complexity for performing insert, delete and search operations\nB) hash table requires less space\nC) range query is easy with hash table\nD) easier to implement\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Hard",
        "target_text": "Question: Which of the sorting techniques has highest   best-case runtime complexity?, ,\nChoices:\nA) Quick sort\nB) Selection sort\nC) Insertion sort\nD) Bubble sort\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Which of the following application makes use of a circular linked list?, ,\nChoices:\nA) Undo Operation\nB) Recursive function calls\nC) Allocating CPU to resources\nD) Implement Hash Tables\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: In the worst case, the number of comparisons needed to search a singly linked list of length n for a given element is, ,\nChoices:\nA) log(2*n)\nB) n/2\nC) log(2*n) -1\nD) n\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is the average case time complexity for finding the height of the binary tree?\nChoices:\nA) h = O(loglogn)\nB) h = O(nlogn)\nC) h = O(n)\nD) h = O(log n)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: What is the time complexity of the delete function in the hash table using a binary tree?\nChoices:\nA) O(1)\nB) O(n)\nC) O(log n)\nD) O(n log n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: Hash tree is used in data synchronisation. In the worst case the data synchronisation takes ______ time.\nChoices:\nA) O(logn)\nB) O(n2)\nC) O(nlogn)\nD) O(n)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: What is the time complexity for deleting root key in a ternary heap of n elements?\nChoices:\nA) O (log n/ log 3)\nB) O (3log n/ log 3)\nC) O (n)\nD) O (1)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the time complexity of balancing parentheses algorithm?\nChoices:\nA) O (N)\nB) O (N log N)\nC) O (M log N)\nD) O (N2)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: You are given the postorder traversal, P, of a binary search tree on the n elements 1, 2, ..., n. You have to determine the unique binary search tree that has P as its postorder traversal. What is the time complexity of the most efficient algorithm for doing this?, ,\nChoices:\nA) O(Logn)\nB) O(n)\nC) O(nLogn)\nD) none of the above, as the tree cannot be uniquely determined.\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: The binary tree sort implemented using a self \u2013 balancing binary search tree takes ______ time is worst case.\nChoices:\nA) O(n log n)\nB) O(n)\nC) O(n2)\nD) O(log n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: In a circular linked list:, ,\nChoices:\nA) components are all linked together in some sequential \\n manner.\nB) there is no beginning and no end.\nC) components are arranged hierarchically.\nD) forward and backward traversal within the list is \\n (A) components are all linked together in some sequential \\n manner. \\n (B) there is no beginning and no end. \\n (C) components are arranged hierarchically. \\n (D) forward and backward traversal within the list is \\npermitted.\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Search and difficulty=Hard",
        "target_text": "Question: The worst case running time of a linear search on the self organizing list is ____\nChoices:\nA) O(1)\nB) O(logn)\nC) O(n)\nD) O(n2)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Search and difficulty=Hard",
        "target_text": "Question: What is the worst case time complexity of linear   search algorithm?, ,\nChoices:\nA) \u039f(1)\nB) \u039f(n)\nC) \u039f(log n)\nD) \u039f(n2)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: What is the time complexity for increasing priority of key in a maximum ternary heap of n elements?\nChoices:\nA) O (log n/ log 3)\nB) O (n!)\nC) O (n)\nD) O (1)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Hard",
        "target_text": "Question: The worst case of quick sort has order \u2026\u2026\u2026\u2026.., ,\nChoices:\nA) O(n2)\nB) O(n)\nC) O (n log2 n)\nD) O (log2 n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Which of the following is an example of   dynamic programming approach?, ,\nChoices:\nA) Fibonacci Series\nB) Tower of Hanoi\nC) Dijkstra\u2019s Shortest Path\nD) All of the above\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: What is the advantage of hashing with chaining?\nChoices:\nA) cache performance is good\nB) uses less space\nC) less sensitive to hash function\nD) has a time complexity of O(n) in the worst case\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Why do we impose restrictions like\n. root property is black\n. every leaf is black\n. children of red node are black\n. all leaves have same black\nChoices:\nA) to get logarithm time complexity\nB) to get linear time complexity\nC) to get exponential time complexity\nD) to get constant time complexity\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: B-tree and AVL tree have the same worst case time complexity for insertion and deletion.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What is the time complexity of the code that uses merge sort for determining the number of inversions in an array?\nChoices:\nA) O(n2)\nB) O(n)\nC) O(log n)\nD) O(n log n)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What is the time complexity of the juggling algorithm to rotate an array?\nChoices:\nA) O(1)\nB) O(n)\nC) O(d)\nD) O(n*d)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the time complexity of an infix to postfix conversion algorithm?\nChoices:\nA) O(N log N)\nB) O(N)\nC) O(N2)\nD) O(M log N)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What is the worst case time complexity of inserting a node in a doubly linked list?\nChoices:\nA) O(nlogn)\nB) O(logn)\nC) O(n)\nD) O(1)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What is a time complexity for finding frequently occurring of a substring of minimum length in a string?\nChoices:\nA) \u019f (n)\nB) \u019f (n!)\nC) O (n2+ n1)\nD) O (log n!)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: The worst case running time to search for an element in a balanced in a binary search tree with n2^n elements is \n(A) \nTheta(nlogn) \n(B) \nTheta(n2\nn\n) \n(C) \nTheta(n) \n(D) \nTheta(logn) , ,\nChoices:\nA) A\nB) B\nC) C\nD) D\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What is the time complexity to reverse a string?, ,\nChoices:\nA) O(n^2)\nB) O(1)\nC) O(log n)\nD) O(n)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What will be the time complexity of the following code?\n\n#include <bits/stdc++.h> \nusing namespace std; \nvoid func1(int arr[], int n) \n{ \n int k = arr[0], i; \n for (i = 0; i < n - 1; i++) \n  arr[i] = arr[i + 1]; \n \n arr[i] = k; \n} \n \nvoid func(int arr[], int d, int n) \n{ \n for (int i = 0; i < d; i++) \n  func1(arr, n); \n} \n \nvoid printArray(int arr[], int n) \n{ \n for (int i = 0; i < n; i++) \n  cout << arr[i] << \" \"; \n} \n \nint main() \n{ \n int arr[] = { 1, 2, 3, 4, 5}; \n int n = sizeof(arr) / sizeof(arr[0]); \n \n    int d = 3;\n func(arr, d, n); \n printArray(arr, n); \n \n return 0; \n}\nCode: #include <bits/stdc++.h>\nChoices:\nA) O(n*d)\nB) O(n)\nC) O(d)\nD) O(n2)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the time complexity for creating a new node and then performing concatenation in the rope data structure?\nChoices:\nA) O (log n)\nB) O (n!)\nC) O (n2)\nD) O (1)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Hard",
        "target_text": "Question: Consider that n elements are to be sorted. What   is the worst case time complexity of Bubble sort?, ,\nChoices:\nA) O(1)\nB) O(log2n)\nC) O(n)\nD) O(n2)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Consider a small circular linked list. How to detect the presence of cycles in this list effectively?, ,\nChoices:\nA) Keep one node as head and traverse another temp node till the end to check if its \u2018next points to head\nB) Have fast and slow pointers with the fast pointer advancing two nodes at a time and slow pointer advancing by one node at a time\nC) Cannot determine, you have to pre-define if the list contains cycles\nD) Circular linked list itself represents a cycle. So no new cycles cannot be generated\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Which of the following Statement is correct about Circular Linked List?, ,\nChoices:\nA) Only P4\nB) Only P1\nC) P1 and P2\nD) P1 and P4.\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What is the time complexity of pop() operation when the stack is implemented using an array?\nChoices:\nA) O(1)\nB) O(n)\nC) O(logn)\nD) O(nlogn)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What is the time complexity to insert a node at the beginning of the list?, ,\nChoices:\nA) O(LogN)\nB) O(N)\nC) O(1)\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What is the time complexity of the code that uses self balancing BST for determining the number of inversions in an array?\nChoices:\nA) O(n2)\nB) O(n)\nC) O(log n)\nD) O(n log n)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What is the time complexity of insert function in a hash table using a doubly linked list?\nChoices:\nA) O(1)\nB) O(n)\nC) O(log n)\nD) O(n log n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: You are asked to perform a queue operation using a stack. Assume the size of the stack is some value \u2018n\u2019 and there are \u2018m\u2019 number of variables in this stack. The time complexity of performing deQueue operation is (Using only stack operations like push and pop)(Tightly bound).\nChoices:\nA) O(m)\nB) O(n)\nC) O(m*n)\nD) Data is insufficient\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is the worst case possible height of AVL tree?, ,\nChoices:\nA) 2Logn (Assume base of log is 2)\nB) 1.44log n (Assume base of log is 2)\nC) Depends upon implementation\nD) Theta(n)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: What is the worst case time complexity of the insertion in the hash tree?\nChoices:\nA) O(logk(n))\nB) O(n2)\nC) O(nlogk(n))\nD) O(kn)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: For what size of nodes, the worst case of usage of space in suffix tree seen?\nChoices:\nA) n Nodes\nB) 2n Nodes\nC) 2n nodes\nD) n! nodes\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: What is the time complexity for increasing priority of key in a minimum ternary heap of n elements?\nChoices:\nA) O (log n/ log 3)\nB) O (3log n/ log 3)\nC) O (n)\nD) O (1)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: What would the time complexity to check if an undirected graph with V vertices and E edges is Bipartite or not given its adjacency matrix?\nChoices:\nA) O(E*E)\nB) O(V*V)\nC) O(E)\nD) O(V)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Which of the following sorting algorithms can be used to sort a random linked list with minimum time complexity?\nChoices:\nA) Insertion Sort\nB) Quick Sort\nC) Heap Sort\nD) Merge Sort\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Which of the following uses memorization?, ,\nChoices:\nA) Greedy approach\nB) Divide and conquer approach\nC) Dynamic programming approach\nD) None of the above\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: In a balanced binary search tree with n elements, what is the worst-case time complexity of reporting all elements in the range [a,b]? Assume that the number of reported elements is k., ,\nChoices:\nA) \u0398(log n)\nB) \u0398(log(n)+k)\nC) \u0398(k log n)\nD) \u0398(n log k)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the time complexity for finding a maximum and minimum integer in Van Emde Boas data structure?\nChoices:\nA) O (log M!)\nB) O (M!)\nC) O (1)\nD) O (log (log M))\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What is a time complexity for finding all the maximal palindrome in a string?\nChoices:\nA) \u019f (n)\nB) \u019f (n!)\nC) \u019f (1)\nD) O (log n!)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: What is the time complexity for creating a ternary heap using swapping?\nChoices:\nA) O (log n/ log 3)\nB) O (n!)\nC) O (n)\nD) O (1)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Hard",
        "target_text": "Question: If the data collection is in sorted form and   equally distributed then the run time complexity of   interpolation search is \u2026\u2026\u2026\u2026, ,\nChoices:\nA) \u039f(n)\nB) \u039f(1)\nC) \u039f(log n)\nD) \u039f(log (log n))\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Which among the following is the time complexity for inserting at the beginning of a triply linked list?\nChoices:\nA) O(n)\nB) O(1)\nC) O(log n)\nD) O(n2)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Consider a small circular linked list. How to detect the presence of cycles in this list effectively?\nChoices:\nA) Keep one node as head and traverse another temp node till the end to check if its \u2018next points to head\nB) Have fast and slow pointers with the fast pointer advancing two nodes at a time and slow pointer advancing by one node at a time\nC) Cannot determine, you have to pre-define if the list contains cycles\nD) Circular linked list itself represents a cycle. So no new cycles cannot be generated\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What is the time complexity for splitting the string into two new string in the rope data structure?\nChoices:\nA) O (n2)\nB) O (n!)\nC) O (log n)\nD) O (1)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is a time complexity for x pattern occurrence of length n?\nChoices:\nA) O (log n!)\nB) \u019f (n!)\nC) O (n2)\nD) \u019f (n + x)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: To which datastructure are skip lists similar to in terms of time complexities in worst and best cases?\nChoices:\nA) balanced binary search trees\nB) binary search trees\nC) binary trees\nD) linked lists\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: The time complexity to calculate the number of edges in a graph whose information in stored in form of an adjacency matrix is ____________\nChoices:\nA) O(V)\nB) O(E2)\nC) O(E)\nD) O(V2)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Hard",
        "target_text": "Question: Quick sort algorithm is an example of \u2026\u2026\u2026\u2026., ,\nChoices:\nA) Greedy approach\nB) Improved binary search\nC) Dynamic Programming\nD) Divide and conquer\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What is the best case time complexity of deleting a node in a Singly Linked list?\nChoices:\nA) O (n)\nB) O (n2)\nC) O (nlogn)\nD) O (1)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the worst case time complexity of delete operation(n is the no. of candidates)?\nChoices:\nA) O(1)\nB) O(n)\nC) O(log n)\nD) O(n log n)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What is the time complexity of search function in a hash table using a doubly linked list?\nChoices:\nA) O(1)\nB) O(n)\nC) O(log n)\nD) O(n log n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What will be the time complexity of the following code?\n\n#include <bits/stdc++.h> \nusing namespace std; \n \nint min(int x, int y) \n{ return (x < y)? x: y; } \n \nint func(int arr[], int n) \n{ \n \n int *jump = new int[n]; \n int i, j; \n \n if (n == 0 || arr[0] == 0) \n  return INT_MAX; \n \n jump[0] = 0; \n \n for (i = 1; i < n; i++) \n { \n  jump[i] = INT_MAX; \n  for (j = 0; j < i; j++) \n  { \n   if (i <= j + arr[j] && jumps[j] != INT_MAX) \n   { \n    jump[i] = min(jump[i], jump[j] + 1); \n    break; \n   } \n  } \n } \n return jump[n-1]; \n} \n \nint main() \n{ \n int arr[] = {1, 3, 6, 1, 9,7}; \n int size = sizeof(arr)/sizeof(int); \n cout<< func(arr,size); \n return 0; \n}\nCode: #include <bits/stdc++.h>\nChoices:\nA) O(n log n)\nB) O(n)\nC) O(n1/2)\nD) O(n2)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: Why would a recursive implementation fail in skew heaps?\nChoices:\nA) skew heaps are self adjusting\nB) efficiency gets reduced\nC) lack of stack space\nD) time complexity\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What are the operations that could be performed in O(logn) time complexity by red-black tree?\nChoices:\nA) insertion, deletion, finding predecessor, successor\nB) only insertion\nC) only finding predecessor, successor\nD) for sorting\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: How are free blocks linked together mostly and in what addressing order?\nChoices:\nA) circular linked list and increasing addressing order\nB) linked list and decreasing addressing order\nC) linked list and in no addressing order\nD) none of the mentioned\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: N items are stored in a sorted doubly linked list. For a delete operation, a pointer is provided to the record to be deleted. For a decrease-key operation, a pointer is provided to the record on which the operation is to be performed. An algorithm performs the following operations on the list in this order: \u0398(N) delete, O(log N) insert, O(log N) find, and \u0398(N) decrease-key What is the time complexity of all these operations put together?, ,\nChoices:\nA) O(Log2N)\nB) O(N)\nC) O(N Log N)\nD) \u0398(N2 Log N)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: 14. Which of the following application makes use of a circular linked list?\nChoices:\nA) Recursive function calls\nB) Undo operation in a text editor\nC) Implement Hash Tables\nD) Allocating CPU to resources\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the worst case of finding the nearest neighbour?\nChoices:\nA) O(N)\nB) O(N log N)\nC) O( log N)\nD) O(N3)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What will be the worst case time complexity of the following code?\n\n#include <bits/stdc++.h> \nusing namespace std; \n \nvoid func(int arr[], int n) \n{   \n int count[n]; \n memset(count, 0, sizeof(count)); \n \n for (int i=n-2; i>=0; i--) \n { \n  if (arr[i] >= n - i - 1) \n   count[i]++; \n \n  for (int j=i+1; j < n-1 && j <= arr[i] + i; j++) \n \n   if (count[j] != -1) \n    count[i] += count[j]; \n \n  if (count[i] == 0) \n   count[i] = -1; \n } \n \n for (int i=0; i<n; i++) \n  cout << count[i] << \" \"; \n} \n \n \nint main() \n{ \n int arr[] = {1, 3, 5, 8, 9}; \n int n = sizeof(arr) / sizeof(arr[0]); \n func(arr, n); \n return 0; \n}\nCode: #include <bits/stdc++.h>\nChoices:\nA) O(n1/2)\nB) O(n)\nC) O(n3/2)\nD) O(n2)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: What would be the time complexity of the BFS traversal of a graph with n vertices and n1.25 edges?\nChoices:\nA) O(n)\nB) O(n1.25)\nC) O(n2.25)\nD) O(n*n)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What kind of linked list is best to answer questions like \u201cWhat is the item at position n?\u201d\nChoices:\nA) Singly linked list\nB) Doubly linked list\nC) Circular linked list\nD) Array implementation of linked list\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is the time complexity for maintaining a dynamic set of weighted trees?\nChoices:\nA) O (n)\nB) O (n2)\nC) O (log n)\nD) O (n!)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What differentiates a circular linked list from a normal linked list?\nChoices:\nA) You cannot have the \u2018next\u2019 pointer point to null in a circular linked list\nB) It is faster to traverse the circular linked list\nC) In a circular linked list, each node points to the previous node instead of the next node\nD) Head node is known in circular linked list\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Which among the following is the time complexity for inserting an element in an unrolled linked list?\nChoices:\nA) O(1)\nB) O(n)\nC) O(log n)\nD) O(n2)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: What is the time complexity for decreasing priority of key in a minimum ternary heap of n elements?\nChoices:\nA) O (log n/ log 3)\nB) O (n!)\nC) O (n)\nD) O (1)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Consider the following dynamic programming code snippet for solving the 0/1 Knapsack problem:, def knapsack(values, weights, capacity, n):\n    if n == 0 or capacity == 0:\n        return 0\n    if weights[n-1] > capacity:\n        return knapsack(values, weights, capacity, n-1)\n    else:\n        return max(values[n-1] + knapsack(values, weights, capacity-weights[n-1], n-1),\n                   knapsack(values, weights, capacity, n-1)),\nChoices:\nA) 180\nB) 220\nC) 280\nD) 300\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: What is the time complexity to insert a node based on key in a priority queue?\nChoices:\nA) O(nlogn)\nB) O(logn)\nC) O(n)\nD) O(n2)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: Pairing heaps time complexity was inspired by that of?\nChoices:\nA) splay tree\nB) treap\nC) red-black tree\nD) avl tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: What is the time complexity of insert function in a hash table using list head?\nChoices:\nA) O(1)\nB) O(n)\nC) O(log n)\nD) O(n log n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Search and difficulty=Hard",
        "target_text": "Question: 26. What is the time complexity for searching a key or integer in Van Emde Boas data structure?\nChoices:\nA) O (M!)\nB) O (log M!)\nC) O (log (log M))\nD) O (M2)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: Which searching technique takes O(1) time complexity for searching the data?, ,\nChoices:\nA) Binary Search\nB) Linear Search\nC) AVL Tree Search\nD) Hashing\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Hard",
        "target_text": "Question: In worst case Quick Sort has order \u2026\u2026\u2026\u2026.., ,\nChoices:\nA) O(n log n)\nB) O(n2/2)\nC) O(log n)\nD) O(n2/4)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is the time complexity for the update cost on auxiliary trees?\nChoices:\nA) O (log (log n))\nB) k-1 O (log n)\nC) K2 O (log n)\nD) k+1 O (log (log n))\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: The time complexity of the code that determines the number of inversions in an array using merge sort is lesser than that of the code that uses loops for the same purpose.\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: What would be the time complexity of the following function which adds an edge between two vertices i and j, with some weight \u2018weigh\u2019 to the graph having V vertices?\n\nvector<int> adjacent[15] ;\nvector<int> weight[15]; \n \nvoid addEdge(int i,int j,int weigh) \n{  \n adjacent[a].push_back(i); \n adjacent[b].push_back(j); \n weight[a].push_back(weigh); \n weight[b].push_back(weigh); \n}\nChoices:\nA) O(1)\nB) O(V)\nC) O(V*V)\nD) O(log V)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: What is time complexity to check if a string(length S1) is a substring of another string(length S2) stored in a Directed Acyclic Word Graph, given S2 is greater than S1?\nChoices:\nA) O(S1)\nB) O(S2)\nC) O(S1+S2)\nD) O(1)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What is the worst case time complexity of inserting n elements into an empty linked list, if the linked list needs to be maintained in sorted order ?, ,\nChoices:\nA) \u0398(n)\nB) \u0398(n log n)\nC) \u0398(n2)\nD) \u0398(1)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: The time complexity of converting a prefix notation to infix notation is _________\nChoices:\nA) O(n) where n is the length of the equation\nB) O(n) where n is number of operands\nC) O(1)\nD) O(logn) where n is length of the equation\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Program with highest run-time complexity is   \u2026\u2026\u2026\u2026\u2026\u2026.., ,\nChoices:\nA) Tower of Hanoi\nB) Fibonacci Series\nC) Prime Number Series\nD) None of these\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the time complexity for inserting a key or integer in Van Emde Boas data structure?\nChoices:\nA) O (log M!)\nB) O (M!)\nC) O (M2)\nD) O (log (log M))\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What would be the asymptotic time complexity to insert an element at the front of the linked list (head is known)?\nChoices:\nA) O(1)\nB) O(n)\nC) O(n2)\nD) O(n3)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: The \u0398 notation in asymptotic evaluation   represents \u2026\u2026\u2026.., ,\nChoices:\nA) Base case \\n 188. The \u0398 notation in asymptotic evaluation \\n\\n\\x0c represents \u2026\u2026\u2026.. \\n (A) Base case\nB) Average case\nC) Worst case\nD) NULL case\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Floyd Warshall Algorithm used to solve the shortest path problem has a time complexity of __________\nChoices:\nA) O(V*V)\nB) O(V*V*V)\nC) O(E*V)\nD) O(E*E)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: When it would be optimal to prefer Red-black trees over AVL trees?\nChoices:\nA) when there are more insertions or deletions\nB) when more search is needed\nC) when tree must be balanced\nD) when log(nodes) time complexity is needed\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What is the time complexity of delete function in the hash table using a doubly linked list?\nChoices:\nA) O(1)\nB) O(n)\nC) O(log n)\nD) O(n log n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the time complexity of evaluation of postfix expression algorithm?\nChoices:\nA) O (N)\nB) O (N log N)\nC) O (N2)\nD) O (M log N)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: The Floyd-Warshall algorithm for all-pair shortest paths computation is based on:, ,\nChoices:\nA) Greedy paradigm.\nB) Divide-and-Conquer paradigm.\nC) Dynamic Programming paradigm.\nD) neither Greedy nor Divide-and-Conquer nor Dynamic Programming paradigm.\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: The worst case analysis for a na\u00efve merge is given as?\nChoices:\nA) O(N)\nB) O( log N)\nC) O( N log N)\nD) O(N2)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What are the worst case and average case complexities of a binary search tree?\nChoices:\nA) O(n), O(n)\nB) O(logn), O(logn)\nC) O(logn), O(n)\nD) O(n), O(logn)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: A queue is implemented using an array such that ENQUEUE and DEQUEUE operations are performed efficiently. Which one of the following statements is CORRECT (n refers to the number of items in the queue)?, ,\nChoices:\nA) Both operations can be performed in O(1) time\nB) At most one operation can be performed in O(1) time but the worst case time for the other operation will be \u03a9(n)\nC) The worst case time complexity for both operations will be \u03a9(n)\nD) Worst case time complexity for both operations will be \u03a9(log n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Let G(V, E) an undirected graph with positive edge weights. Dijkstra's single-source shortest path algorithm can be implemented using the binary heap data structure with time complexity:, ,\nChoices:\nA) O(| V |2)\nB) O (| E | + | V | log | V |)\nC) O (| V | log | V |)\nD) O ((| E | + | V |) log | V |)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Which of the following application makes use of a circular linked list?\nChoices:\nA) Undo operation in a text editor\nB) Recursive function calls\nC) Allocating CPU to resources\nD) Implement Hash Tables\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What is the time complexity for inserting/deleting at the beginning of the array?\nChoices:\nA) O(1)\nB) O(n)\nC) O(logn)\nD) O(nlogn)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: Which of the following operations on a queue data structure has a time complexity of O(1)?\nChoices:\nA) A and B\nB) B only\nC) C only\nD) A and D\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: What is the time complexity of the search function in a hash table using a binary tree?\nChoices:\nA) O(1)\nB) O(n)\nC) O(log n)\nD) O(n log n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: An operator delete(i) for a binary heap data structure is to be designed to delete the item in the i-th node. Assume that the heap is implemented in an array and i refers to the i-th index of the array. If the heap tree has depth d (number of edges on the path from the root to the farthest leaf), then what is the time complexity to re-fix the heap efficiently after the removal of the element?, ,\nChoices:\nA) O(1)\nB) O(d) but not O(1)\nC) O(2d) but not O(d)\nD) O(d2d) but not O(2d)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What is the time complexity of searching for an element in a circular linked list?\nChoices:\nA) O(n)\nB) O(nlogn)\nC) O(1)\nD) O(n2)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the time complexity to insert an element into the direct address table?\nChoices:\nA) O(n)\nB) O(logn)\nC) O(nlogn)\nD) O(1)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is the time complexity for the initialization of top tree?\nChoices:\nA) O (n)\nB) O (n2)\nC) O (log n)\nD) O (n!)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: The time complexity of the code that determines the number of inversions in an array using self balancing BST is lesser than that of the code that uses loops for the same purpose.\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Search and difficulty=Hard",
        "target_text": "Question: What is the worst case run-time complexity of   binary search algorithm?, ,\nChoices:\nA) \u039f(n2)\nB) \u039f(nlog n)\nC) \u039f(n3)\nD) \u039f(n)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What is the worst case time complexity of inserting an element into the sorted array?\nChoices:\nA) O(nlogn)\nB) O(logn)\nC) O(n)\nD) O(n2)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: In special case, the time complexity of inserting/deleting elements at the end of dynamic array is __________\nChoices:\nA) O (n)\nB) O (n1/2)\nC) O (log n)\nD) O (1)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the worst case time complexity of insertion operation(n =no. of candidates)?\nChoices:\nA) O(1)\nB) O(n)\nC) O(log n)\nD) O(n log n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: Which of the following Binary Min Heap operation has the highest time complexity?, ,\nChoices:\nA) Inserting an item under the assumption that the heap has capacity to accommodate one more item\nB) Merging with another heap under the assumption that the heap has capacity to accommodate items of other heap\nC) Deleting an item from heap\nD) Decreasing value of a key\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: In a circular linked list, How many nodes are containing NULL as the address?, ,\nChoices:\nA) Only one node\nB) Only Two node\nC) Every Node\nD) No, any node\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: Time complexity to find if there is an edge between 2 particular vertices is _________\nChoices:\nA) O(V)\nB) O(E)\nC) O(1)\nD) O(V+E)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What is a time complexity for finding the longest substring that is repeated in a string?\nChoices:\nA) O (log n!)\nB) \u019f (n!)\nC) O (n2+ n1)\nD) \u019f (n)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the time complexity of Uttkonen\u2019s algorithm?\nChoices:\nA) O (log n!)\nB) O (n!)\nC) O (n2)\nD) O (n log n)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: What is the process of building a ternary heap called?\nChoices:\nA) Heapify\nB) Hashing\nC) Linking\nD) Merging\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What will be the time complexity of query operation if all the candidates are evenly spaced so that each bin has constant no. of candidates? (k = number of bins query rectangle intersects)\nChoices:\nA) O(1)\nB) O(k)\nC) O(k2)\nD) O(log k)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Suppose there are two singly linked lists both of which intersect at some point and become a single linked list. The head or start pointers of both the lists are known, but the intersecting node and lengths of lists are not known. What is worst case time complexity of optimal algorithm to find intersecting node from two intersecting linked lists?, ,\nChoices:\nA) \u0398(n*m), where m, n are lengths of given lists\nB) \u0398(n^2), where m>n and m, n are lengths of given lists\nC) \u0398(m+n), where m, n are lengths of given lists\nD) \u0398(min(n, m)), where m, n are lengths of given lists\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the worst case efficiency for a path compression algorithm?\nChoices:\nA) O(N)\nB) O(log N)\nC) O(N log N)\nD) O(M log N)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: In linked list implementation of queue, if only front pointer is maintained, which of the following operation take worst case linear time?\nChoices:\nA) Insertion\nB) Deletion\nC) To empty a queue\nD) Both Insertion and To empty a queue\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Which of the following algorithm to rotate an array has the maximum time complexity?\nChoices:\nA) rotate elements one by one\nB) juggling algorithm\nC) reversal algorithm\nD) using a temporary array\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the time complexity for finding the node at x position where n is the length of the rope?\nChoices:\nA) O (log n)\nB) O (n!)\nC) O (n2)\nD) O (1)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Binary tree sort implemented using a self balancing binary search tree takes O(n log n) time in the worst case but still it is slower than merge sort.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Given an empty AVL tree, how would you construct AVL tree when a set of numbers are given without performing any rotations?\nChoices:\nA) just build the tree with the given input\nB) find the median of the set of elements given, make it as root and construct the tree\nC) use trial and error\nD) use dynamic programming to build the tree\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What will be the time complexity of the following code?\n\n#include <iostream>\nusing namespace std;\nint main()\n{   \n    int arr[] = {1,2,3,4,5,6};\n    int n = sizeof(arr)/sizeof(arr[0]);\n    int d=4;\n    int temp[10];\n \n    for(int i=0;i<d;i++)\n    temp[i]=arr[i];\n \n    int j=0;\n    for(int i=d;i<n;i++,j++)\n    arr[j]=arr[i];\n \n    int k=0;\n    for(int i=n-d;i<n;i++,k++)\n    arr[i]=temp[k];\n \n    for(int i=0;i<n;i++)\n    cout<<arr[i]<<\" \";\n    return 0;\n}\nCode: #include <iostream>\nChoices:\nA) O(d)\nB) O(n)\nC) O(n2)\nD) O(n*d)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Which of the following asymptotic notation is   the worst among all?, ,\nChoices:\nA) \u039f(n+9378)\nB) \u039f(n3)\nC) n\u039f(1)\nD) 2\u039f(n)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What is a time complexity for finding the longest substring that is common in string S1 and S2 (n1 and n2 are the string lengths of strings s1, s2 respectively)?\nChoices:\nA) O (log n!)\nB) \u019f (n!)\nC) O (n2+ n1)\nD) \u019f (n1 + n2)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is a time complexity for finding the total length of all string on all edges of a tree?\nChoices:\nA) \u019f (n)\nB) \u019f (n!)\nC) \u019f (1)\nD) O (n2)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is the time complexity of Bellman-Ford single-source shortest path algorithm on a complete graph of n vertices?, ,\nChoices:\nA) \u0398(V2)\nB) \u0398(V2 log v)\nC) \u0398(V3)\nD) \u0398(V3 log v)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: 37. In simple chaining, what data structure is appropriate?\nChoices:\nA) Doubly linked list\nB) Circular linked list\nC) Singly linked list\nD) Binary trees\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What kind of linked list is best to answer questions like \u201cWhat is the item at position n?\u201d\nChoices:\nA) Singly linked list\nB) Doubly linked list\nC) Circular linked list\nD) Array implementation of linked list\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: What is the worst case time in searching minimum value in weak -heap?\nChoices:\nA) O(log n)\nB) O(n)\nC) O(n logn)\nD) O(1)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the time complexity to delete an element from the direct address table?\nChoices:\nA) O(n)\nB) O(logn)\nC) O(nlogn)\nD) O(1)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Time complexity of Depth First Traversal of is   \u2026\u2026\u2026\u2026\u2026\u2026, ,\nChoices:\nA) \u0398(|V|+|E|)\nB) \u0398(|V|)\nC) \u0398(|E|)\nD) \u0398(|V|*|E|)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: The time complexity of calculating the sum of all leaf nodes in an n-order binary tree is __________, ,\nChoices:\nA) O(n2)\nB) O(n+1)\nC) O(1)\nD) O(n)\\n\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: What is the best case complexity in building a heap?\nChoices:\nA) O(nlogn)\nB) O(n2)\nC) O(n*longn *logn)\nD) O(n)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What will be the time complexity of the following code?\n\n#include <bits/stdc++.h> \nusing namespace std; \n \nvoid func(int a[], int n, int k) \n{ \n if (k <= n) \n { \n  for (int i = 0; i < k/2; i++) \n  swap(a[i], a[k-i-1]); \n } \n \n} \nint main() \n{ \n int a[] = {1, 2, 3, 4, 5}; \n int n = sizeof(a) / sizeof(int), k = 3; \n func(a, n, k); \n for (int i = 0; i < n; ++i) \n  cout << a[i]<<\" \";\n return 0; \n}\nCode: #include <bits/stdc++.h>\nChoices:\nA) O(k)\nB) O(n)\nC) O(k log k)\nD) O(n log n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What is the value of the postfix expression 2 3 + 4 5 6 \u2013 \u2013 *\nChoices:\nA) 19\nB) 21\nC) -4\nD) 25\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Can operation like Find Next and Find Previous be implemented.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: Which of the following is not an inherent application of stack?\nChoices:\nA) Reversing a string\nB) Evaluation of postfix expression\nC) Implementation of recursion\nD) Job scheduling\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: 3. Which data structure is used for implementing recursion?\nChoices:\nA) Stack\nB) Queue\nC) List\nD) Array\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: How many passes does the evaluation of infix expression algorithm makes through the input?\nChoices:\nA) One\nB) Two\nC) Three\nD) Four\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: What does the following function do for a given Linked List with first node as head?, void fun1(struct node* head)\n{\n  if(head == NULL)\n    return;\n  \n  fun1(head->next);\n  printf(\"%d  \", head->data);\n},\nChoices:\nA) Prints all nodes of linked lists\nB) Prints all nodes of linked list in reverse order\nC) Prints alternate nodes of Linked List\nD) Prints alternate nodes in reverse order\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: Which technique has the greatest number of probe sequences?\nChoices:\nA) Linear probing\nB) Quadratic probing\nC) Double hashing\nD) Closed hashing\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: In which of the following cases dynamic arrays are not preferred?\nChoices:\nA) If the size of the array is unknown\nB) If the size of the array changes after few iterations\nC) If the memory reallocation takes more time i.e. expensive\nD) If the array holds less number of elements\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: Given below is the Node class to perform basic list operations and a Stack class with a no arg constructor. Select from the options the appropriate push() operation that can be included in the Stack class. Also \u2018first\u2019 is the top-of-the-stack.\n\nclass Node\n{\n protected Node next;\n protected Object ele;\n Node()\n {\n  this(null,null);\n }\n Node(Object e,Node n)\n {\n  ele=e;\n  next=n;\n }\n public void setNext(Node n)\n {\n  next=n;\n }\n public void setEle(Object e)\n {\n  ele=e;\n }\n public Node getNext()\n {\n  return next;\n }\n public Object getEle()\n {\n  return ele;\n }\n}\n \nclass Stack\n{\n Node first;\n int size=0;\n Stack()\n {\n  first=null;\n }\n}\npublic void push(Object item)\n{\n Node temp = new Node(item,first);\n first = temp;\n size++;\n}\npublic void push(Object item)\n{\n Node temp = new Node(item,first);\n first = temp.getNext();\n size++;\n}\npublic void push(Object item)\n{\n Node temp = new Node();\n first = temp.getNext();\n first.setItem(item);\n size++;\n}\npublic void push(Object item)\n{\n Node temp = new Node();\n first = temp.getNext.getNext();\n first.setItem(item);\n size++;\n}\n\nd)\nChoices:\nA) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What are implicit and explicit implementations of freelists?\nChoices:\nA) garbage collection and new or malloc operators respectively\nB) new or malloc and garbage collection respectively\nC) implicit implementation is not favored\nD) explicit implementation is not favored\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Is insertion and deletion operation faster in rope than an array?\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: A node will be rejected while inserting if the given node is already present in a triply linked list.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: B-tree of order n is a order-n multiway tree in which each non-root node contains __________\nChoices:\nA) at most (n \u2013 1)/2 keys\nB) exact (n \u2013 1)/2 keys\nC) at least 2n keys\nD) at least (n \u2013 1)/2 keys\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: Consider the following pseudo-code. Assume that IntQueue is an integer queue. What does the function fun do? , ,\nChoices:\nA) Prints numbers from 0 to n-1\nB) Prints numbers from n-1 to 0\nC) Prints first n Fibonacci numbers\nD) Prints first n Fibonacci numbers in reverse order.\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What is buddy memory management of free lists ?\nChoices:\nA) modified version of first fit\nB) buddy allocation keeps several\u202d \u202cfree lists,\u202d \u202ceach one holds blocks which are of one particular size\nC) modified version of best fit\nD) a tree representation of free lists\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: 6. What is the output of the following Java code?\npublic class array\n{\n\tpublic static void main(String args[])\n\t{\n\t\tint []arr = {1,2,3,4,5};\n\t\tSystem.out.println(arr[5]);\n\t}\n}\nChoices:\nA) 4\nB) 5\nC) ArrayIndexOutOfBoundsException\nD) InavlidInputException\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What is the amortized efficiency of skew merge?\nChoices:\nA) O(N)\nB) O( log N)\nC) O( N log N)\nD) O(N2)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What is the traversal strategy used in the binary tree?\nChoices:\nA) depth-first traversal\nB) breadth-first traversal\nC) random traversal\nD) Priority traversal\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: If the sequence of operations - push (1), push (2), pop, push (1), push (2), pop, pop, pop, push (2), pop are performed on a stack, the sequence of popped out values, ,\nChoices:\nA) 2,2,1,1,2\nB) 2,2,1,2,2\nC) 2,1,2,2,1\nD) 2,1,2,2,2\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: Which data structure can be used to test a palindrome?\nChoices:\nA) Tree\nB) Heap\nC) Stack\nD) Priority queue\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Given a prefix and a postfix notation what are the difference between them?\nChoices:\nA) The postfix equation is solved starting from the left whereas the prefix notation is solved from the right\nB) The postfix equation is solved starting from the right whereas the prefix notation is solved from the left\nC) Both equations are solved starting from the same side(right)\nD) Both equations are solved starting from the same side(left)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Let G=(V,E) be a directed, weighted graph with weight function w:E\u2192R. For some function f:V\u2192R, for each edge (u,v)\u2208E, define w\u2032(u,v) as w(u,v)+f(u)\u2212f(v). Which one of the options completes the following sentence so that it is TRUE ? \u201cThe shortest paths in G under w are shortest paths under w\u2032 too, _________\u201d., ,\nChoices:\nA) for every f:V\u2192R\nB) if and only if \u2200u\u2208V, f(u) is positive\nC) if and only if \u2200u\u2208V, f(u) is negative\nD) if and only if f(u) is the distance from s to u in the graph obtained by adding a new vertex s to G and edges of zero weight from s to every vertex of G\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: The data structure required for Breadth First   Traversal on a graph is \u2026\u2026\u2026\u2026., ,\nChoices:\nA) Queue\nB) Stack\nC) Array \\n (A) Queue \\n (B) Stack \\n (C) Array\nD) Tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Select the appropriate code that inserts elements into the list based on the given key value.\n(head and trail are dummy nodes to mark the end and beginning of the list, they do not contain any priority or element)\na)\n\npublic void insert_key(int key,Object item) \n{\n if(key<0)\n {\n  Systerm.our.println(\"invalid\");\n  System.exit(0);\n }\n else\n {\n  Node temp = new Node(key,item,null);\n  if(count == 0)\n  {\n   head.setNext(temp);\n   temp.setNext(trail);\n  }\n  else\n  {\n   Node dup = head.getNext();\n   Node cur = head;\n   while((key>dup.getKey()) && (dup!=trail))\n   {\n    dup = dup.getNext();\n    cur = cur.getNext();\n   }\n   cur.setNext(temp);\n   temp.setNext(dup);\n  }\n  count++;\n }\n}\npublic void insert_key(int key,Object item) \n{\n if(key<0)\n {\n  Systerm.our.println(\"invalid\");\n  System.exit(0);\n }\n else\n {\n  Node temp = new Node(key,item,null);\n  if(count == 0)\n  {\n   head.setNext(temp);\n   temp.setNext(trail);\n  }\n  else\n  {\n   Node dup = head.getNext();\n   Node cur = dup;\n   while((key>dup.getKey()) && (dup!=trail))\n   {\n    dup = dup.getNext();\n    cur = cur.getNext();\n   }\n   cur.setNext(temp);\n   temp.setNext(dup);\n  }\n  count++;\n }\n}\npublic void insert_key(int key,Object item) \n{\n if(key<0)\n {\n  Systerm.our.println(\"invalid\");\n  System.exit(0);\n }\n else\n {\n  Node temp = new Node(key,item,null);\n  if(count == 0)\n  {\n   head.setNext(temp);\n   temp.setNext(trail);\n  }\n  else\n  {\n   Node dup = head.getNext();\n   Node cur = head;\n   while((key>dup.getKey()) && (dup!=trail))\n   {\n    dup = dup.getNext();\n    cur = cur.getNext();\n   }\n   cur.setNext(dup);\n   temp.setNext(cur);\n  }\n  count++;\n }\n}\npublic void insert_key(int key,Object item) \n{\n if(key<0)\n {\n  Systerm.our.println(\"invalid\");\n  System.exit(0);\n }\n else\n {\n  Node temp = new Node(key,item,null);\n  if(count == 0)\n  {\n   head.setNext(temp);\n   temp.setNext(trail);\n  }\n  else\n  {\n   Node dup = head.getNext();\n   Node cur = head;\n   while((key>dup.getKey()) && (dup!=trail))\n   {\n    dup = cur\n    cur = cur.getNext();\n   }\n   cur.setNext(dup);\n   temp.setNext(cur);\n  }\n  count++;\n }\n}\n\nd)\nChoices:\nA) public void insert_key(int key,Object item)\nB) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which of the following is used in hash tables to determine the index of any input record?\nChoices:\nA) hash function\nB) hash linked list\nC) hash tree\nD) hash chaining\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: If a Graph Structured Stack contains {1,2,3,4} {1,5,3,4} {1,6,7,4} and {8,9,7,4}, what would be the source and sink vertices of the DAC?\nChoices:\nA) Source \u2013 1, 8 Sink \u2013 7,4\nB) Source \u2013 1 Sink \u2013 8,4\nC) Source \u2013 1, 8 Sink \u2013 4\nD) Source \u2013 4, Sink \u2013 1,8\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What is the condition for two elements arr[i] and arr[j] to form an inversion?\nChoices:\nA) arr[i]<arr[j]\nB) i < j\nC) arr[i] < arr[j] and i < j\nD) arr[i] > arr[j] and i < j\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Linked list data structure offers considerable saving in _____________\nChoices:\nA) Computational Time\nB) Space Utilization\nC) Space Utilization and Computational Time\nD) Speed Utilization\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Which of the following is an application of XOR-linked lists?, ,\nChoices:\nA) Implementing stacks\nB) Implementing queues\nC) Memory-efficient linked list representation\nD) Caching data structures\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the dynamic operations are used in Top Tree data structure implementation?\nChoices:\nA) Link\nB) Cut\nC) Expose\nD) All of the mentioned\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: The following function reverse() is supposed to reverse a singly linked list. There is one line missing at the end of the function. , // Link list node\nstruct node\n{\n    int data;\n    struct node* next;\n};\n\n// head_ref is a double pointer which points to head (or start) pointer \nof linked list\nstatic void reverse(struct node** head_ref)\n{\n    struct node* prev   = NULL;\n    struct node* current = *head_ref;\n    struct node* next;\n    while (current != NULL)\n    {\n        next  = current->next;  \n        current->next = prev;   \n        prev = current;\n        current = next;\n    }\n     // MISSING STATEMENT HERE\n},\nChoices:\nA) Set the value of head_ref to prev;\nB) Set the value of head_ref to current;\nC) Set the value of head_ref to next;\nD) Set the value of head_ref to NULL;\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Disadvantages of linked list representation of binary trees over arrays?\nChoices:\nA) Randomly accessing is not possible\nB) Extra memory for a pointer is needed with every element in the list\nC) Difficulty in deletion\nD) Random access is not possible and extra memory with every element\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which data structure is used for implementing   recursion?, ,\nChoices:\nA) Queue\nB) Stack\nC) Arrays\nD) List\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Linked list is considered as an example of ___________ type of memory allocation.\nChoices:\nA) Dynamic\nB) Static\nC) Compile time\nD) Heap\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: What are the applications of dequeue?\nChoices:\nA) A-Steal job scheduling algorithm\nB) Can be used as both stack and queue\nC) To find the maximum of all sub arrays of size k\nD) All of the mentioned\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Which of the following is the disadvantage of sparse matrices over normal matrices?\nChoices:\nA) Size\nB) Speed\nC) Easily compressible\nD) Algorithm complexity\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What is the value of h(k) for the key 123456?\nGiven: p=14, s=2654435769, w=32\nChoices:\nA) 123\nB) 456\nC) 70\nD) 67\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: Which technique is used for finding similarity between two sets?\nChoices:\nA) MinHash\nB) Stack\nC) Priority Queue\nD) PAT Tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which of the following is an application of abstract syntax tree?\nChoices:\nA) Static code analyzing\nB) Implement indexing in databases\nC) Used for dynamic memory allocation\nD) To represent networks of communication\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What is the special property of red-black trees and what root should always be?\nChoices:\nA) a color which is either red or black and root should always be black color only\nB) height of the tree\nC) pointer to next node\nD) a color which is either green or black\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Medium",
        "target_text": "Question: In which of the following case does a Binary Decision Diagram is used for?\nChoices:\nA) Representation of Boolean Functions\nB) String Matching\nC) Searching\nD) Sorting of number\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Which of the following does the balancing symbols algorithm include?\nChoices:\nA) balancing double quotes\nB) balancing single quotes\nC) balancing operators and brackets\nD) balancing parentheses, brackets and braces\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following graph traversals closely imitates level order traversal of a binary tree?\nChoices:\nA) Depth First Search\nB) Breadth First Search\nC) Depth & Breadth First Search\nD) Binary Search\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: A Priority-Queue is implemented as a Max-Heap. Initially, it has 5 elements. The level-order traversal of the heap is given below: 10, 8, 5, 3, 2 Two new elements \u201d1\u2018 and \u201d7\u2018 are inserted in the heap in that order. The level-order traversal of the heap after the insertion of the elements is:, ,\nChoices:\nA) 10, 8, 7, 5, 3, 2, 1\nB) 10, 8, 7, 2, 3, 1, 5\nC) 10, 8, 7, 1, 2, 3, 5\nD) 10, 8, 7, 3, 2, 1, 5\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: With V(greater than 1) vertices, how many edges at most can a Directed Acyclic Graph possess?\nChoices:\nA) (V*(V-1))/2\nB) (V*(V+1))/2\nC) (V+1)C2\nD) (V-1)C2\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following traversal outputs the data in sorted order in a BST?, ,\nChoices:\nA) Preorder\nB) Inorder\nC) Postorder\nD) Level order\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Run-Length encoding is used to compress data in bit arrays.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: The minimum number of stacks needed to implement a queue is, ,\nChoices:\nA) 3\nB) 1\nC) 2\nD) 4\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Predefined function rotate() in C++ is available under which header file?\nChoices:\nA) math\nB) stdio\nC) stdlib\nD) algorithm\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Consider a single linked list where F and L are pointers to the first and last elements respectively of the linked list. The time for performing which of the given operations depends on the length of the linked list?, ,\nChoices:\nA) Delete the first element of the list\nB) Interchange the first two elements of the list\nC) Delete the last element of the list\nD) Add an element at the end of the list\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: The prefix of (A+B)*(C-D)/E*F is:, ,\nChoices:\nA) /+-AB*CD\nB) /*+-ABCD*EF\nC) */*+AB-CDEF\nD) **AB+CD/EF\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which of these best describes an array?\nChoices:\nA) A data structure that shows a hierarchical behavior\nB) Container of objects of similar types\nC) Arrays are immutable once initialised\nD) Array is not a data structure\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following is the most widely used external memory data structure?\nChoices:\nA) AVL tree\nB) B-tree\nC) Red-black tree\nD) Both AVL tree and Red-black tree\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which one of the following data structures are preferred in database-system implementation?\nChoices:\nA) AVL tree\nB) B-tree\nC) B+ -tree\nD) Splay tree\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: In the Union/Find algorithm, the ranks of the nodes on a path will increase monotonically from?\nChoices:\nA) leaf to root\nB) root to node\nC) root to leaf\nD) left subtree to right subtree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: The roots of the elements of the subtrees are smaller than the root of the heap.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Consider the below program. What is the expected output? , void fun(int arr[], int start, int end)\n{\n    while (start < end) {\n        int temp = arr[start];\n        arr[start] = arr[end];\n        arr[end] = temp;\n        start++;\n        end--;\n    }\n},\nChoices:\nA) swapping the elements pairwise\nB) sorting the elements\nC) Reverse an array\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Given two processes (conversion of postfix equation to infix notation and conversion of prefix notation to infix notation), which of the following is easier to implement?\nChoices:\nA) Both are easy to implement\nB) Conversion of postfix equation to infix equation is harder than converting a prefix notation to infix notation\nC) Conversion of postfix equation to infix equation is easier than converting a prefix notation to infix notation\nD) Insufficient data\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Which of the following represents the space complexity for an unrolled linked list?\nChoices:\nA) O(1)\nB) O(n)\nC) O(n2)\nD) O(n3)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: Consider these functions:\npush() : push an element into the stack\npop() : pop the top-of-the-stack element\ntop() : returns the item stored in top-of-the-stack-node\nWhat will be the output after performing these sequence of operations\nChoices:\nA) 20\nB) 4\nC) stack underflow\nD) 5\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: How many randomized binary search trees can be formed by the numbers (1, 3, 2)?\nChoices:\nA) 2\nB) 3\nC) 6\nD) 5\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Pointer manipulation is generally more time-consuming than multiplication and division.\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following is the self-adjusting binary search tree?\nChoices:\nA) AVL Tree\nB) Splay Tree\nC) Top Tree\nD) Ternary Tree\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Which matrix has most of the elements (not all) as Zero?\nChoices:\nA) Identity Matrix\nB) Unit Matrix\nC) Sparse Matrix\nD) Zero Matrix\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: In a full binary tree if there are L leaves, then total number of nodes N are?, ,\nChoices:\nA) N = 2*L\nB) N = L + 1\nC) N = L \u2013 1\nD) N = 2*L \u2013 1\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Let s and t be two vertices in a undirected graph G + (V, E) having distinct positive edge weights. Let [X, Y] be a partition of V such that s \u2208 X and t \u2208 Y. Consider the edge e having the minimum weight amongst all those edges that have one vertex in X and one vertex in Y The edge e must definitely belong to:, ,\nChoices:\nA) the minimum weighted spanning tree of G\nB) the weighted shortest path from s to t\nC) each path from s to t\nD) the weighted longest path from s to t\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: A min- Heap is a complete binary tree., ,\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Medium",
        "target_text": "Question: Which of the following is a palindromic string?, ,\nChoices:\nA) \"APPLE\"\nB) \"ABCDE\"\nC) \"APPLA\"\nD) \"ABCCBA\"\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: How many hashes will be needed for calculating Jaccard index with an expected error less than or equal to 0.05?\nChoices:\nA) 100\nB) 200\nC) 300\nD) 400\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What is the priority of a null node?\nChoices:\nA) 1\nB) 0\nC) random number\nD) infinity\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: 15. What is a bit array?\nChoices:\nA) Data structure that compactly stores bits\nB) Data structure for representing arrays of records\nC) Array in which elements are not present in continuous locations\nD) An array in which most of the elements have the same value\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: A complete binary tree with the property that the value at each node is as least as large as the values at its children is known as, ,\nChoices:\nA) Binary search tree\nB) AVL tree\nC) Completely balanced tree\nD) Heap\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Which of the following is an advantage of XOR list?\nChoices:\nA) Almost of debugging tools cannot follow the XOR chain, making debugging difficult\nB) You need to remember the address of the previously accessed node in order to calculate the next node\u2019s address\nC) In some contexts XOR of pointers is not defined\nD) XOR list decreases the space requirement in doubly linked list\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: Number of vertices with odd degrees in a graph having a eulerian walk is ________\nChoices:\nA) 0\nB) Can\u2019t be predicted\nC) 2\nD) either 0 or 2\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: What will be the minimum number of jumps required to reach the end of the array arr[] = {1,3,6,3,6,8,5}?\nChoices:\nA) 1\nB) 2\nC) 3\nD) not possible to reach the end\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: Consider the following operation performed on a stack of size 5.\n\nPush(1);\nPop();\nPush(2);\nPush(3);\nPop();\nPush(4);\nPop();\nPop();\nPush(5);\n\nAfter the completion of all operation, the number of elements present in stack is?\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Which of the following helps keys to be mapped into addresses?\nChoices:\nA) hash function\nB) separate chaining\nC) open addressing\nD) chaining using a linked list\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: 11. The prefix form of A-B/ (C * D ^ E) is?\nChoices:\nA) -A/B*C^DE\nB) -A/BC*^DE\nC) -ABCD*^DE\nD) -/*^ACBDE\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Representation of data structure in memory is   known as:, ,\nChoices:\nA) recursive\nB) abstract data type\nC) storage structure\nD) file structure\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What is the advantage of using a dynamic set in direct addressing?\nChoices:\nA) It saves time\nB) It saves space\nC) It saves both time and space\nD) It reduces code complexity\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following data structure can provide efficient searching of the elements?\nChoices:\nA) unordered lists\nB) binary search tree\nC) treap\nD) 2-3 tree\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Search and difficulty=Medium",
        "target_text": "Question: The self organizing list improves the efficiency of _______\nChoices:\nA) binary search\nB) jump search\nC) sublist search\nD) linear search\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: You have two jars, one jar which has 10 rings and the other has none. They are placed one above the other. You want to remove the last ring in the jar. And the second jar is weak and cannot be used to store rings for a long time.\nChoices:\nA) Empty the first jar by removing it one by one from the first jar and placing it into the second jar\nB) Empty the first jar by removing it one by one from the first jar and placing it into the second jar and empty the second jar by placing all the rings into the first jar one by one\nC) There exists no possible way to do this\nD) Break the jar and remove the last one\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which of the following is false?\nChoices:\nA) Suffix array is always sorted\nB) Suffix array is used in string matching problems\nC) Suffix array is always unsorted\nD) Suffix array contains all the suffixes of the given string\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What is the postfix expression for the corresponding infix expression?\nChoices:\nA) abc*+de*+\nB) abc+*de*+\nC) a+bc*de+*\nD) abc*+(de)*+\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: Which of the following statements for a simple graph is correct?\nChoices:\nA) Every path is a trail\nB) Every trail is a path\nC) Every trail is a path as well as every path is a trail\nD) Path and trail have no relation\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: Which of the following sequences of array elements forms a heap?, ,\nChoices:\nA) {23, 17, 14, 6, 13, 10, 1, 12, 7, 5}\nB) {23, 17, 14, 6, 13, 10, 1, 5, 7, 12}\nC) {23, 17, 14, 7, 13, 10, 1, 5, 6, 12}\nD) {23, 17, 14, 7, 13, 10, 1, 12, 5, 7}\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Which of the following method performs poorly when elements are accessed in sequential order?\nChoices:\nA) count method\nB) move to front method\nC) transpose meth\nD) ordering method\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Medium",
        "target_text": "Question: What the below program will  Print?, #// C program to find the length of string\n#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\n    string str = \"Hello Geeks\";\n    int i;\n    for (i = 0; str[i] != '\\0'; ++i)\n        ;\n    cout << i;\n\n    return 0;\n},\nCode: #include <bits/stdc++.h>\nChoices:\nA) 0\nB) 1\nC) 5\nD) 11\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Assume +, -, * are usual arithmetic operators. * has the lowest precedence, + has the highest precedence and the precedence of \u2013 is medium. + and * are left-associative whereas \u2013 is right-associative. What is the value of the expression 3 \u2013 8 + 2 \u2013 9 * 3?\nChoices:\nA) 4\nB) 6\nC) 8\nD) 10\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which of the following program prints the index of every matching parenthesis?\na)\n\npublic void dispIndex(String exp)\n{\n    Stack<Integer> stk = new Stack<Integer>();\n    for (int i = 0; i < len; i++)\n    {    \n        char ch = exp.charAt(i);\n        if (ch == '(')\n        stk.push(i);\n        else if (ch == ')')\n        {\n          try\n          {\n            int p = stk.pop() + 1;\n            System.out.println(\"')' at index \"+(i+1)+\" matched with ')' at index \"+p);\n          }\n          catch(Exception e)\n          {\n             System.out.println(\"')' at index \"+(i+1)+\" is unmatched\");\n          }\n        }            \n    }\n    while (!stk.isEmpty() )\n    System.out.println(\"'(' at index \"+(stk.pop() +1)+\" is unmatched\");\n}\npublic void dispIndex(String exp)\n{\n    Stack<Integer> stk = new Stack<Integer>();\n    for (int i = 0; i < len; i++)\n    {    \n        char ch = exp.charAt(i);\n        if (ch == '(')\n        stk.push(i);\n        else if (ch == ')')\n        {\n           try\n           {\n             int p = stk.pop() + 1;\n             System.out.println(\"')' at index \"+(i)+\" matched with ')' at index \"+p);\n           }\n           catch(Exception e)\n           {\n              System.out.println(\"')' at index \"+(i)+\" is unmatched\");\n           }\n        }            \n    }\n    while (!stk.isEmpty() )\n    System.out.println(\"'(' at index \"+(stk.pop() +1)+\" is unmatched\");\n}\npublic void dispIndex(String exp)\n{\n    Stack<Integer> stk = new Stack<Integer>();\n    for (int i = 0; i < len; i++)\n    {    \n        char ch = exp.charAt(i);\n        if (ch == ')')\n        stk.push(i);\n        else if (ch == '(')\n        {\n          try\n          {\n            int p = stk.pop() +1;\n            System.out.println(\"')' at index \"+(i+1)+\" matched with ')' at index \"+p);\n          }\n          catch(Exception e)\n          {\n             System.out.println(\"')' at index \"+(i+1)+\" is unmatched\");\n          }\n        }            \n    }\n    while (!stk.isEmpty() )\n    System.out.println(\"'(' at index \"+(stk.pop() +1)+\" is unmatched\");\n}\npublic void dispIndex(String exp)\n{\n    Stack<Integer> stk = new Stack<Integer>();\n    for (int i = 0; i < len; i++)\n    {    \n        char ch = exp.charAt(i);\n        if (ch == ')')\n        stk.push(i);\n        else if (ch == '(')\n        {\n          try\n          {\n            int p = stk.pop();\n            System.out.println(\"')' at index \"+(i+1)+\" matched with ')' at index \"+p);\n          }\n          catch(Exception e)\n          {\n            System.out.println(\"')' at index \"+(i+1)+\" is unmatched\");\n          }\n        }            \n    }\n    while (!stk.isEmpty() )\n    System.out.println(\"'(' at index \"+(stk.pop() +1)+\" is unmatched\");\n}\n\nd)\nChoices:\nA) public void dispIndex(String exp)\nB) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following is not true about the 2-3 tree?\nChoices:\nA) all leaves are at the same level\nB) it is perfectly balanced\nC) postorder traversal yields elements in sorted order\nD) it is B-tree of order 3\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which of the following statements are true?\ni) practical application of XOR linked lists are in environments with limited space requirements, such as embedded devices.\nii)xor lists are not suitable because most garbage collectors will fail to work properly with classes or structures that don\u2019t contain literal pointers\niii)in order to calculate the address of the next node you need to remember the address of the previous node\niv)xor lists are much efficient than single, doubly linked lists and arrays\nChoices:\nA) i, ii, iii, iv\nB) i, ii, iii\nC) i, ii\nD) i\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which of the following is the correct syntax to declare an ArrayList in Java?\nChoices:\nA) ArrayList al = new ArrayList();\nB) ArrayList al = new ArrayList[];\nC) ArrayList al() = new ArrayList();\nD) ArrayList al[] = new ArrayList[];\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: In linked list implementation of a queue, front and rear pointers are tracked. Which of these pointers will change during an insertion into EMPTY queue?\nChoices:\nA) Only front pointer\nB) Only rear pointer\nC) Both front and rear pointer\nD) No pointer will be changed\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: How many stacks are required for reversing a word algorithm?\nChoices:\nA) one\nB) two\nC) three\nD) four\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Which node contains a pointer to its parent?\nChoices:\nA) root node\nB) right most child\nC) left most child\nD) left sibling\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Consider the below program, and identify which Operation is performed., int solve(struct Node* head)\n{\n    if (head == NULL)\n        return 1;\n    struct Node* ptr;\n    ptr = head->next;\n    while (ptr != NULL && ptr != head)\n        ptr = ptr->next;\n    return (ptr == head);\n},\nChoices:\nA) Checking for List is empty of not\nB) Checking for the list is Circular or not\nC) count the number of elements in the list\nD) None\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: Adjacency matrix of all graphs are symmetric.\nChoices:\nA) False\nB) True\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which type of tree is tango tree?\nChoices:\nA) Ternary Tree\nB) AVL Tree\nC) Binary Search Tree\nD) K-ary Tree\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: A normal queue, if implemented using an array of size MAX_SIZE, gets full when?\nChoices:\nA) Rear = MAX_SIZE \u2013 1\nB) Front = (rear + 1)mod MAX_SIZE\nC) Front = rear + 1\nD) Rear = front\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: What traversal over trie gives the lexicographical sorting of the set of the strings?\nChoices:\nA) postorder\nB) preorders\nC) inorder\nD) level order\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What is the depth of any tree if the union operation is performed by height?\nChoices:\nA) O(N)\nB) O(log N)\nC) O(N log N)\nD) O(M log N)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Consider the following piece of code in C++, how many elements will be stored in the array \u2018arr\u2019 if the user enters the values of a, b, c and d as 10, 20, 30, and 40 respectively?\n\n#include<iostream>                                                  \nusing namespace std;                                                    \nint main() \n{                                                                               \n    int a, b, c, d;                                                        \n    cout<<\u201dEnter the value of a, b, c, d: \u201c;                       \n    cin>>a>>b>>c>>d;                \n    int arr[a - b/c + d];                                                 \n}\nCode: #include<iostream>\nChoices:\nA) 30\nB) 40\nC) 50\nD) 60\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following are used as an internal operation in Top tree?\nChoices:\nA) Merge\nB) Cut\nC) Expose\nD) Link\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: Consider the below program, and identify what the function is doing., #include <iostream>\n#include <queue>\n\nclass Node {\npublic:\n    int data;\n    Node* left;\n    Node* right;\n    Node(int item) {\n        data = item;\n        left = right = nullptr;\n    }\n};\n\nvoid function(Node* root) {\n    if (root == nullptr)\n        return;\n    std::queue<Node*> q;\n\n    q.push(root);\n\n    while (!q.empty()) {\n        Node* node = q.front();\n        q.pop();\n        std::cout << node->data << \" \";\n\n        if (node->left != nullptr)\n            q.push(node->left);\n\n        if (node->right != nullptr)\n            q.push(node->right);\n    }\n},\nCode: #include <iostream>\nChoices:\nA) In order traversal of a tree\nB) Normal traversal of a tree\nC) Level order traversal of  a tree\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: Why is this heap named leftist heap?\nChoices:\nA) only left subtrees exist\nB) the tree is biased to get deep down the left\nC) it is balanced\nD) right trees are unbalanced\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following traversing algorithm is not used to traverse in a tree?\nChoices:\nA) Post order\nB) Pre order\nC) Post order\nD) Randomized\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: The running time for creating a heap of size n is   \u2026\u2026\u2026\u2026., ,\nChoices:\nA) O(n)\nB) O(log n)\nC) O(n log n)\nD) O(n2)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: What is xor linked list?\nChoices:\nA) uses of bitwise XOR operation to decrease storage requirements for doubly linked lists\nB) uses of bitwise XOR operation to decrease storage requirements for linked lists\nC) uses of bitwise operations to decrease storage requirements for doubly linked lists\nD) just another form of linked list\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: Given the following adjacency matrix of a graph(G) determine the number of components in the G.\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The post-order traversal of a binary tree is O P Q R S T. Then possible pre-order traversal will be ________\nChoices:\nA) T Q R S O P\nB) T O Q R P S\nC) T Q O P S R\nD) T Q O S P R\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Who among the following provided the first suffix tree contribution for all alphabet?\nChoices:\nA) Weiner\nB) Farach\nC) Ukkonen\nD) Alexander Morse\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: The data structure required to check whether   213. The data structure required to check whether  an expression contains balanced parenthesis is   \u2026\u2026\u2026\u2026, ,\nChoices:\nA) Stack\nB) Queue\nC) Tree\nD) Array\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What does the below definations convey?\ni. A binary tree is balanced if for every node it is gonna hold that the number of inner nodes in the left subtree and the number of inner nodes in the right subtree differ by at most 1.\nii. A binary tree is balanced if for any two leaves the difference of the depth is at most 1.\nChoices:\nA) weight balanced and height balanced tree definations\nB) height balanced and weight balanced tree definations\nC) definations of weight balanced tree\nD) definations of height balanced tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: What does the following function do for a given Linked List with first node as head?\n\nvoid fun1(struct node* head)\n{\n    if(head == NULL)\n    return;\n    fun1(head->next);\n    printf(\"%d  \", head->data);\n}\nChoices:\nA) Prints all nodes of linked lists\nB) Prints all nodes of linked list in reverse order\nC) Prints alternate nodes of Linked List\nD) Prints alternate nodes in reverse order\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: What will be the suffix array of the string \u201cengineering\u201d?\nChoices:\nA) 2 3 8 4 9 1 7 5 0 6 10\nB) 5 0 6 1 4 9 1 7 0 2 3 8\nC) 5 0 6 10 2 4 9 1 7 3 8\nD) 5 0 6 10 2 3 8 4 9 1 7\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which of the following is identical to that of a separate chaining hash node?\nChoices:\nA) Linked list\nB) Array\nC) Stack\nD) Queue\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: In a linked list with n nodes, the time taken to   insert an element after an element pointed by some   pointer is \u2026\u2026\u2026\u2026.., ,\nChoices:\nA) O(1)\nB) O(log n)\nC) O(n)\nD) O(n 1og n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: The minimum number of comparisons required to determine if an integer appears more than n/2 times in a sorted array of n integers is, ,\nChoices:\nA) \u0398(n)\nB) \u0398(logn)\nC) \u0398(n*logn)\nD) \u0398(1)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: For the given hash table, in what location will the element 58 be hashed using quadratic probing?\n\n\u00ab Prev - Hash Tables with Linear Probing Multiple Choice Questions and Answers (MCQs)\n\u00bb Next - Hashing Functions Multiple Choice Questions and Answers (MCQs)\nChoices:\nA) 1\nB) 2\nC) 7\nD) 6\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Separate chaining is easier to implement as compared to open addressing.\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: The And Inverter Graph representation of a Boolean function is more efficient than the Binary Decision Diagram.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: AA Trees are implemented using?\nChoices:\nA) Colors\nB) Levels\nC) Node size\nD) Heaps\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Can child node be always called Leaf node in the ternary tree?\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Medium",
        "target_text": "Question: Which of the following statement is a binary string?, ,\nChoices:\nA) \"ab\"\nB) \"121212\"\nC) \"01010101110\"\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following data clustering algorithm uses suffix tree in search engines?\nChoices:\nA) Weiner\u2019s algorithm\nB) Farach\u2019s algorithm\nC) Lempel \u2013 Ziv \u2013 Welch\u2019s algorithm\nD) Suffix Tree Clustering\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: How many child nodes does each node of Ternary Tree contain?\nChoices:\nA) 4\nB) 6\nC) 5\nD) 3\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: All trees with n vertices consists of n-1 edges.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: A connected planar graph having 6 vertices, 7 edges contains _____________ regions.\nChoices:\nA) 15\nB) 3\nC) 1\nD) 11\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: The prefix form of A-B/ (C * D ^ E) is:   255. The prefix form of A-B/ (C * D ^ E) is:, ,\nChoices:\nA) -/*^ACBDE\nB) -ABCD*^DE\nC) -A/B*C^DE\nD) -A/BC*^DE\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: How many passes does the balancing symbols algorithm makes through the input?\nChoices:\nA) one\nB) two\nC) three\nD) four\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: Given a hash table T with 25 slots that stores 2000 elements, the load factor \u03b1 for T is __________, ,\nChoices:\nA) 80\nB) 0.0125\nC) 8000\nD) 1.25\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: The task of generating alternative indices for a node is called?\nChoices:\nA) Collision handling\nB) Collision detection\nC) Collision recovery\nD) Closed hashing\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which of the following is not the method to represent Sparse Matrix?\nChoices:\nA) Dictionary of Keys\nB) Linked List\nC) Array\nD) Heap\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: What data structure can be used to check if   syntax has balanced parenthesis?, ,\nChoices:\nA) Queue\nB) Tree\nC) List\nD) Stack\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The order of a leaf node in a B+ tree is the maximum number of children it can have. Suppose that block size is 1 kilobytes, the child pointer takes 7 bytes long and search field value takes 14 bytes long. The order of the leaf node is ________., ,\nChoices:\nA) 16\nB) 63\nC) 64\nD) 68\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Medium",
        "target_text": "Question: What is the output of the below code?, #include <iostream>\nusing namespace std;\n\nint main()\n{\n\n    string str = \"GeeksForGeeks\";\n    cout << str.substr(2).substr(4);\n    return 0;\n},\nCode: #include <iostream>\nChoices:\nA) eksForGeeks\nB) ForGEeks\nC) Geeks\nD) orGeeks\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: The time required to delete a node x from a   doubly linked list having n nodes is \u2026\u2026\u2026\u2026., ,\nChoices:\nA) O(n)\nB) O(log n)\nC) O(1)\nD) O(n log n)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: What is the number of vertices of degree 2 in a path graph having n vertices,here n>2.\nChoices:\nA) n-2\nB) n\nC) 2\nD) 0\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: How do you insert a node at the beginning of the list?\na)\n\npublic class insertFront(int data)\n{\n Node node = new Node(data, head, head.getNext());\n node.getNext().setPrev(node);\n head.setNext(node);\n size++;\n}\npublic class insertFront(int data)\n{\n Node node = new Node(data, head, head);\n node.getNext().setPrev(node);\n head.setNext(node);\n size++;\n}\npublic class insertFront(int data)\n{\n Node node = new Node(data, head, head.getNext());\n node.getNext().setPrev(head);\n head.setNext(node);\n size++;\n}\npublic class insertFront(int data)\n{\n Node node = new Node(data, head, head.getNext());\n node.getNext().setPrev(node);\n head.setNext(node.getNext());\n size++;\n}\n\nd)\nChoices:\nA) public class insertFront(int data)\nB) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following is a self \u2013 balancing binary search tree?\nChoices:\nA) 2-3 tree\nB) Threaded binary tree\nC) AA tree\nD) Treap\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: What happens if a node cannot fit an element in an unrolled linked list?\nChoices:\nA) The element is discarded\nB) The elements are moved to the next node\nC) The node is discarded\nD) Error message is shown\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: What is a bit array?\nChoices:\nA) Data structure for representing arrays of records\nB) Data structure that compactly stores bits\nC) An array in which most of the elements have the same value\nD) Array in which elements are not present in continuous locations\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: When are the members of two sets more common relatively?\nChoices:\nA) Jaccard Index is Closer to 1\nB) Jaccard Index is Closer to 0\nC) Jaccard Index is Closer to -1\nD) Jaccard Index is Farther to 1\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Medium",
        "target_text": "Question: The number of interchanges required to sort 5,   1, 6, 2, 4 in ascending order using Bubble Sort is, ,\nChoices:\nA) 6\nB) 5\nC) 7\nD) 8\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: For which of the following purpose a top pointer can be used?\nChoices:\nA) Storing the address of the head pointer\nB) Storing the address of the previous node\nC) Storing the address of the next node\nD) Storing equal values on the same level\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following algorithm of data compression uses a suffix tree?\nChoices:\nA) Weiner\u2019s algorithm\nB) Farach\u2019s algorithm\nC) Lempel \u2013 Ziv \u2013 Welch\u2019s algorithm\nD) Alexander Morse\u2019s algorithm\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: A binary tree with n > 1 nodes has n1, n2 and n3 nodes of degree one, two and three respectively. The degree of a node is defined as the number of its neighbors.\n\n\nStarting with the above tree, while there remains a node v of degree two in the tree, add an edge between the two neighbors of v and then remove v from the tree. How many edges will remain at the end of the process?, ,\nChoices:\nA) 2 * n1 - 3\nB) n2 + 2 * n1 - 2\nC) n3 - n2\nD) n2 + n1 - 2\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: Which of the following schemes does quadratic probing come under?\nChoices:\nA) rehashing\nB) extended hashing\nC) separate chaining\nD) open addressing\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: The postfix form of A*B+C/D is\u201d   230. The postfix form of A*B+C/D is\u201d, ,\nChoices:\nA) *AB/CD+\nB) AB*CD/+\nC) A*BC+/D\nD) ABCD+/*\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The height of a tree is the length of the longest root-to-leaf path in it. The maximum and minimum number of nodes in a binary tree of height 5 are, ,\nChoices:\nA) 63 and 6, respectively\nB) 64 and 5, respectively\nC) 32 and 6, respectively\nD) 31 and 5, respectively\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: How do you allocate a matrix using a single pointer in C?(r and c are the number of rows and columns respectively)\nChoices:\nA) int *arr = malloc(r * c * sizeof(int));\nB) int *arr = (int *)malloc(r * c * sizeof(int));\nC) int *arr = (int *)malloc(r + c * sizeof(int));\nD) int *arr = (int *)malloc(r * c * sizeof(arr));\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: An array of integers of size n can be converted into a heap by adjusting the heaps rooted at each internal node of the complete binary tree starting at the node \u230a(n - 1) /2\u230b, and doing this adjustment up to the root node (root node is at index 0) in the order \u230a(n - 1)/2\u230b, \u230a(n - 3)/ 2\u230b, ....., 0. The time required to construct a heap in this manner is, ,\nChoices:\nA) O(log n)\nB) O(n)\nC) O (n log log n)\nD) O(n log n)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: 22. Which of the following is also known as Rope data structure?\nChoices:\nA) Linked List\nB) Array\nC) String\nD) Cord\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: What does the following function do?\n\npublic Object some_func()throws emptyStackException\n{\n if(isEmpty())\n  throw new emptyStackException(\"underflow\");\n return first.getEle();\n}\nChoices:\nA) pop\nB) delete the top-of-the-stack element\nC) retrieve the top-of-the-stack element\nD) push operation\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: In linked list implementation of a queue, the important condition for a queue to be empty is?\nChoices:\nA) FRONT is null\nB) REAR is null\nC) LINK is empty\nD) FRONT==REAR-1\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which of the following is the predefined function for array reversal in C++ ?\nChoices:\nA) reverse()\nB) arr_reverse()\nC) array_reverse()\nD) rev()\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What is the total time spent for N-1 merges in a dynamic equivalence problem?\nChoices:\nA) O(N)\nB) O(log N)\nC) O(N log N)\nD) O(M log N)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: The prefix form of an infix expression p + q \u2212 r   * t is:, ,\nChoices:\nA) + pq \u2212 *rt\nB) \u2212 +pqr * t\nC) \u2212 +pq * rt \\n 268. The prefix form of an infix expression p + q \u2212 r \\n * t is: \\n (A) + pq \u2212 *rt \\n (B) \u2212 +pqr * t \\n (C) \u2212 +pq * rt\nD) \u2212 + * pqrt\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Efficiency of bin depends upon ___________\nChoices:\nA) size of query and candidates\nB) location of query and candidates\nC) location and size of query and candidates\nD) depends on the input\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Which of the following is a drawback of an unrolled linked list?\nChoices:\nA) Small memory overhead\nB) Cache management\nC) High overhead per node\nD) Slow insertion and deletion\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: Is the priority queue abstract data type.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: Which data structure is commonly used to implement the event-driven simulation of complex systems, such as in computer network simulations or traffic simulations?, ,\nChoices:\nA) Stack\nB) Tree\nC) Array\nD) Queue\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: A binary tree is balanced if the difference between left and right subtree of every node is not more than ____\nChoices:\nA) 1\nB) 3\nC) 2\nD) 0\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: Following is a pseudo code of a function that takes a number as an argument, and uses a stack S to do processing., def fun(n):\n    S = []  # Say it creates an empty stack S\n    while n > 0:\n        # This line pushes the value of n%2 to stack S\n        S.append(n % 2)\n        n = n // 2\n\n    # Run while Stack S is not empty\n    while S:\n        print(S.pop(), end=' ')  # pop an element from S and print it,\nChoices:\nA) Prints binary representation of n in reverse order\nB) Prints binary representation of n\nC) Prints the value of Logn\nD) Prints the value of Logn in reverse order\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: 5, ,\nChoices:\nA) 5\nB) 4\nC) 3\nD) 2\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: Consider a sequence of numbers to have repetitions, how a cartesian tree can be constructed in such situations without violating any rules?\nChoices:\nA) use any tie-breaking rule between repeated elements\nB) cartesian tree is impossible when repetitions are present\nC) construct a max heap in such cases\nD) construct a min heap in such cases\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Suffix array can be created by performing __________ traversal of a suffix tree.\nChoices:\nA) breadth-first\nB) level order\nC) depth-first\nD) either breadth-first or level order\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Advantages of linked list representation of binary trees over arrays?\nChoices:\nA) dynamic size\nB) ease of insertion/deletion\nC) ease in randomly accessing a node\nD) both dynamic size and ease in insertion/deletion\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: How is a bit vector better compared to a normal array for implementing the hash table?\nChoices:\nA) It saves time\nB) It saves space\nC) It saves both time and space\nD) It reduces code complexity\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: What are parallel arrays?\nChoices:\nA) Arrays of the same size\nB) Arrays allocated one after the other\nC) Arrays of the same number of elements\nD) Arrays allocated dynamically\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: Which data structure is needed to convert infix   notation to postfix notation?, ,\nChoices:\nA) Branch\nB) Queue\nC) Tree \\n (A) Branch \\n (B) Queue \\n (C) Tree\nD) Stack\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: Assume that the operators +, -, \u00d7 are left associative and ^ is right associative. The order of precedence (from highest to lowest) is ^, x , +, -. The postfix expression corresponding to the infix expression a + b \u00d7 c - d ^ e ^ f is, ,\nChoices:\nA) abc \u00d7 + def ^ ^ -\nB) abc \u00d7 + de ^ f ^ -\nC) ab + c \u00d7 d - e ^ f ^\nD) - + a \u00d7 bc ^ ^ def\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Consider the pseudo code:\n\nint avl(binarysearchtree root):\n     if(not root)\n       return 0\n     left_tree_height = avl(left_of_root)\n \n     if(left_tree_height== -1) \n       return left_tree_height\n \n     right_tree_height= avl(right_of_root)\n \n     if(right_tree_height==-1)\n       return right_tree_height\n\nDoes the above code can check if a binary search tree is an AVL tree?\nChoices:\nA) yes\nB) no\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: How much time does construction of suffix tree take?\nChoices:\nA) O (log M)\nB) O (M!)\nC) Exponential to Length of Tree\nD) Linear to Length of Tree\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: The Statement \u201cFibonacci heap has better amortized running time in compare to a binomial heap\u201d.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: What will be the order of new heap created after union of heap H1 and H2 when created by the following code.Initially both are of the order n.\nChoices:\nA) n+1\nB) n+n/2\nC) nlogn\nD) 2*n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Out of the following operators (|, *, +, &, $), the one having lowest priority is ________\nChoices:\nA) +\nB) $\nC) |\nD) &\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: 24. Which of the following data structure can provide efficient searching of the elements?\nChoices:\nA) binary search tree\nB) unordered lists\nC) 2-3 tree\nD) treap\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Which of the following performs the fetch operation?\na)\n\nd)\nChoices:\nA) d)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Search and difficulty=Hard",
        "target_text": "Question: In linear probing, the cost of an unsuccessful search can be used to compute the average cost of a successful search.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: 5. What is the output of the following Java code?\npublic class array\n{\n\tpublic static void main(String args[])\n\t{\n\t\tint []arr = {1,2,3,4,5};\n\t\tSystem.out.println(arr[2]);\n\t\tSystem.out.println(arr[4]);\n\t}\n}\nChoices:\nA) 3 and 5\nB) 5 and 3\nC) 2 and 4\nD) 4 and 2\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: 25. What is an AVL tree?\nChoices:\nA) a tree which is unbalanced and is a height balanced tree\nB) a tree which is balanced and is a height balanced tree\nC) a tree with atmost 3 children\nD) a tree with three children\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: Which property should ternary heap hold for execution?\nChoices:\nA) Associative\nB) Commutative\nC) Tree\nD) Heap\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Matrix A when multiplied with Matrix C gives the Identity matrix I, what is C?\nChoices:\nA) Identity matrix\nB) Inverse of A\nC) Square of A\nD) Transpose of A\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Is a skip list like balanced tree?\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: 29. Which is the most appropriate data structure for reversing a word?\nChoices:\nA) stack\nB) queue\nC) graph\nD) tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: What are the disadvantages of arrays?\nChoices:\nA) Data structure like queue or stack cannot be implemented\nB) There are chances of wastage of memory space if elements inserted in an array are lesser than the allocated size\nC) Index value of an array can be negative\nD) Elements are sequentially accessed\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: What does this pseudo_code return ?\n\nint myfun(heap_arr[])\n {\n  int mini=INF;\n  for(int i=0;i<tot_node;i++)\n  mini=min(mini,heap_arr)\n  return mini;\n }\nChoices:\nA) Last added element to heap\nB) First element added to heap\nC) Root of the heap\nD) Leftmost node of the heap\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: The largest element of an array index is called   its \u2026\u2026\u2026\u2026\u2026.., ,\nChoices:\nA) lower bound.\nB) range.\nC) upper bound.\nD) All of these.\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: For some sparse graph an adjacency list is more space efficient against an adjacency matrix.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following tree data structures is not a balanced binary tree?\nChoices:\nA) AVL tree\nB) Red-black tree\nC) Splay tree\nD) B-tree\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Find the output of the following prefix expression.\n\n*+2-2 1/-4 2+-5 3 1\nChoices:\nA) 2\nB) 12\nC) 10\nD) 4\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: Consider a max heap, represented by the array: 40, 30, 20, 10, 15, 16, 17, 8, 4. Now consider that a value 35 is inserted into this heap. After insertion, the new heap is, ,\nChoices:\nA) 40, 30, 20, 10, 15, 16, 17, 8, 4, 35\nB) 40, 35, 20, 10, 30, 16, 17, 8, 4, 15\nC) 40, 30, 20, 10, 35, 16, 17, 8, 4, 15\nD) 40, 35, 20, 10, 15, 16, 17, 8, 4, 30\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: What is the reason for the efficiency of a pairing heap?\nChoices:\nA) simplicity\nB) time-efficient\nC) space-efficient\nD) advanced\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Syntax trees are comparatively denser than parse trees.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: The average depth of a binary tree is given as?\nChoices:\nA) O(N)\nB) O(\u221aN)\nC) O(N2)\nD) O(log N)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: The data structure required to evaluate a   postfix expression is \u2026\u2026\u2026.., ,\nChoices:\nA) Queue\nB) Stack\nC) Array\nD) linked-list\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Where does the number 14 get inserted in the following table?\nChoices:\nA) 2\nB) 9\nC) 4\nD) 8\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Consider a singly linked list of the form where F is a pointer to the first element in the linked list and L is the pointer to the last element in the list. The time of which of the following operations depends on the length of the list?, ,\nChoices:\nA) Delete the last element of the list\nB) Delete the first element of the list\nC) Add an element after the last element of the list\nD) Interchange the first two elements of the list\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Which of the following bitwise operations will you use to set a particular bit to 0?\nChoices:\nA) OR\nB) AND\nC) XOR\nD) NAND\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: What is the advantage of the hash table over a linked list?\nChoices:\nA) faster access of data\nB) easy to implement\nC) very efficient for less number of entries\nD) exhibit good locality of reference\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: 16. Which of the following tree data structures is not a balanced binary tree?\nChoices:\nA) Splay tree\nB) B-tree\nC) AVL tree\nD) Red-black tree\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: The following formula will produce:   Fn = Fn-1 + Fn-2, ,\nChoices:\nA) Armstrong Number\nB) Fibonacci Series\nC) Euler Number\nD) Prime Number\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Evaluation of infix expression is done based on precedence of operators.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which of the following points is/are not true about Linked List data structure when it is compared with an array?\nChoices:\nA) Arrays have better cache locality that can make them better in terms of performance\nB) It is easy to insert and delete elements in Linked List\nC) Random access is not allowed in a typical implementation of Linked Lists\nD) Access of elements in linked list takes less time than compared to arrays\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What does the following piece of code do?\n\npublic void func(Tree root)\n{\n System.out.println(root.data());\n func(root.left());\n func(root.right());\n}\nChoices:\nA) Preorder traversal\nB) Inorder traversal\nC) Postorder traversal\nD) Level order traversal\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: How many nodes does a leftist tree with r nodes must have?\nChoices:\nA) 2r\nB) 2r-1\nC) 2r\nD) 2r-1\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: Which of the following technique is used for handling collisions in a hash table?\nChoices:\nA) Open addressing\nB) Hashing\nC) Searching\nD) Hash function\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: An array A consists of n integers in locations A[0], A[1] ....A[n-1]. It is required to shift the elements of the array cyclically to the left by k places, where 1 <= k <= (n-1). An incomplete algorithm for doing this in linear time, without using another array is given below. Complete the algorithm by filling in the blanks. Assume alt the variables are suitably declared., min = n; i = 0;\n\nwhile (___________) { \n\n     temp = A[i]; j = i;\n\n     while (________) {\n\n     A[j] = ________ \n\n     j= (j + k) mod n ;\n\n     If ( j< min ) then\n\n         min = j;\n\n}\n\nA[(n + i \u2014 k) mod n] = _________\n\ni = __________,\nChoices:\n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: The extra key inserted at the end of the array is   called a, \u2026\u2026\u2026\u2026\u2026., ,\nChoices:\nA) End key.\nB) Stop key.\nC) Sentinel.\nD) Transposition.\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The number of different directed trees with 3   nodes are:, ,\nChoices:\nA) 2\nB) 3\nC) 4\nD) 5\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Efficiency of finding the next record in B+ tree is ____\nChoices:\nA) O(n)\nB) O(log n)\nC) O(nlog n)\nD) O(1)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: In a binary min heap containing n elements, the largest element can be found in __________ time.\nChoices:\nA) O(n)\nB) O(nlogn)\nC) O(logn)\nD) O(1)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: A graph with n vertices will definitely have a   parallel edge or self loop of the total number of   edges are \u2026\u2026\u2026\u2026.., ,\nChoices:\nA) more than n\nB) more than n+1\nC) more than (n+1)/2\nD) more than n(n-1)/2\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Medium",
        "target_text": "Question: A characteristic of the data that binary search   uses but the linear search ignores is the \u2026\u2026\u2026\u2026\u2026\u2026, ,\nChoices:\nA) Order of the elements of the list.\nB) Length of the list.\nC) Maximum value in list.\nD) Type of elements of the list. \\n (A) Order of the elements of the list. \\n (B) Length of the list. \\n (C) Maximum value in list. \\n (D) Type of elements of the list.\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: In a min-heap with n elements with the smallest element at the root, the 7th smallest element can be found in time:, ,\nChoices:\nA) theta(nlogn)\nB) theta(n)\nC) theta(logn)\nD) theta(1)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: Which of the following is the simplest data structure that supports range searching?\nChoices:\nA) Heaps\nB) binary search trees\nC) AA-trees\nD) K-d trees\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Hard",
        "target_text": "Question: A stable sorting algorithm:, ,\nChoices:\nA) does not crash.\nB) does not run out of memory. \\n (A) does not crash. \\n (B) does not run out of memory.\nC) does not change the sequence of appearance of elements.\nD) does not exists.\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: n elements of a Queue are to be reversed using   another queue. The number of \u201cADD\u201d and   \u201cREMOVE\u201d operations required to do so is:, ,\nChoices:\nA) 2*n\nB) 4*n\nC) n\nD) The task cannot be accomplished\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What will be the output of the following code?\n\n#include <iostream>\nusing namespace std;\nint main()\n{   \n    int arr[] = {1,2,3,4,5,6};\n    int n = sizeof(arr)/sizeof(arr[0]);\n    int d=4;\n    int temp[10];\n \n    for(int i=0;i<d;i++)\n    temp[i]=arr[i];\n \n    int j=0;\n    for(int i=d;i<n;i++,j++)\n    arr[j]=arr[i];\n \n    int k=0;\n    for(int i=n-d;i<n;i++,k++)\n    arr[i]=temp[k];\n \n    for(int i=0;i<n;i++)\n    cout<<arr[i]<<\" \";\n    return 0;\n}\nCode: #include <iostream>\nChoices:\nA) 5 6 1 2 3 4\nB) 6 5 4 3 1 2\nC) 3 4 5 6 1 2\nD) error\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: The amortized time efficiency for performing deletion of a minimum element is?\nChoices:\nA) O(N)\nB) O(log N)\nC) O(N2)\nD) O(M log N)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: An expression tree is created using?\nChoices:\nA) postfix expression\nB) prefix expression\nC) infix expression\nD) paranthesized expression\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: Which is a simple form of hashing where the data is directly mapped to an index in a hash table., ,\nChoices:\nA) Collision\nB) Index Mapping\nC) Functional Mapping\nD) Hash function\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Out of the following operators (^, *, +, &, $), the one having highest priority is _________\nChoices:\nA) +\nB) $\nC) ^\nD) &\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Which of the following operations is performed   more efficiently by doubly linked list than by singly   linked list?, ,\nChoices:\nA) Deleting a node whose location in given\nB) Searching of an unsorted list for a given item\nC) Inverting a node after the node with given location\nD) Traversing a list to process each node\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Consider the following symbols and choose which of the symbols represent nodes having atleast one child?\n\ni) \u0394 ii) \u25ca iii) \u2207 iv) T v) \u22a5\nChoices:\nA) iv) and v)\nB) iii) iv) and v)\nC) i) and ii)\nD) i) and iii)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: When converting the prefix notation into an infix notation, the first step to be followed is ________\nChoices:\nA) Reverse the equation\nB) Push the equation to the stack\nC) Push the equation onto the queue\nD) Push the equation to the stack or queue\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: 31. Which of the following is the simplest data structure that supports range searching?\nChoices:\nA) AA-trees\nB) K-d trees\nC) Heaps\nD) binary search trees\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What are the worst-case complexities of insertion and deletion of a key in a binary search tree?, ,\nChoices:\nA) \u0398(logn) for both insertion and deletion\nB) \u0398(n) for both insertion and deletion\nC) \u0398(n) for insertion and \u0398(logn) for deletion\nD) \u0398(logn) for insertion and \u0398(n) for deletion\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: In a min-heap:, ,\nChoices:\nA) parent nodes have values greater than or equal to their \\n Childs\nB) parent nodes have values less than or equal to their \\n Childs\nC) both statements are true\nD) both statements are wrong\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: To create an adjacency list C++\u2019s map container can be used.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What will be output if the following sequence of operations are executed?\n\nPush(a,s);\nPush(b,s);\nPop(b);\nPush(c,s);\nChoices:\nA) abc\nB) b\nC) ac\nD) acb\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: In a leftist heap, the null path length of a null node is defined as?\nChoices:\nA) 0\nB) 1\nC) null\nD) -1\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: What is the complexity of given function of insertion.\n\ninsert(int n)\n {\n  if(buffer_size()< maxi_biffer_size())\n  buffer_aar[ind]==n;\n  else\n  move_to_heap(buffer,buffer+maxi_buffer_size())\n }\nChoices:\nA) O(logn)\nB) amortized O(1)\nC) O(n)\nD) O (n*logn)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: What is the functionality of the following piece of code?\n\npublic Object function(int row_index, int col_index)\n{\n        if (row_index < 0 || col_index > N)\n {\n            System.out.println(\"column index out of bounds\");\n   return;\n }\n        return (sparse_array[row_index].fetch(col_index));\n}\nChoices:\nA) Store the element in the specified position\nB) Get the element from the specified position\nC) Alter the element in the specified position\nD) Removes the element from the specified position\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is the code below trying to print?\n\nvoid print(tree *root,tree *node)\n{\n  if(root ==null) return 0\n  if(root-->left==node || root-->right==node) || print(root->left,node)\n  ||printf(root->right,node)\n  {\n     print(root->data)\n  }\n}\nChoices:\nA) just printing all nodes\nB) not a valid logic to do any task\nC) printing ancestors of a node passed as argument\nD) printing nodes from leaf node to a node passed as argument\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: A Double-ended queue supports operations such as adding and removing items from both the sides of the queue. They support four operations like addFront(adding item to top of the queue), addRear(adding item to the bottom of the queue), removeFront(removing item from the top of the queue) and removeRear(removing item from the bottom of the queue). You are given only stacks to implement this data structure. You can implement only push and pop operations. What are the total number of stacks required for this operation?(you can reuse the stack)\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: What data structure is used for depth first   traversal of a graph?, ,\nChoices:\nA) Queue\nB) Stack\nC) List\nD) None of these\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What is wrong with below code for inorder traversal of inorder threaded binary tree:\n\ninordertraversal(threadedtreenode root):\n   threadedtreenode q = inorderpredecessor(root)\n   while(q!=root):\n   q=inorderpredecessor(q)\n   print q.data\nChoices:\nA) inordersuccessor instead of inorderpredecessor must be done\nB) code is correct\nC) it is code for post order\nD) it is code for pre order\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: State the complexity of algorithm given below.\n\nint function(vector<int> arr)\n int len=arr.length();\n if(len==0)\n return;\n temp=arr[len-1];\n arr.pop_back();\n return temp;\nChoices:\nA) o(n)\nB) O(logn)\nC) O(1)\nD) O(n logn)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: Which of the following sorting algorithm is   stable?, ,\nChoices:\nA) Insertion sort\nB) Bubble sort\nC) Quick sort\nD) Heap sort\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What does \u2018stack overflow\u2019 refer to?\nChoices:\nA) accessing item from an undefined stack\nB) adding items to a full stack\nC) removing items from an empty stack\nD) index out of bounds exception\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: In which case adjacency list is preferred in front of an adjacency matrix?\nChoices:\nA) Dense graph\nB) Sparse graph\nC) Adjacency list is always preferred\nD) Complete graph\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: Which of the following is a widely used form of the hash tree?\nChoices:\nA) B+ \u2013 tree\nB) T tree\nC) Tiger tree hash\nD) Htree\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Which of the following operations is performed   more efficiently by doubly linked list than by singly   linked list?, ,\nChoices:\nA) Deleting a node whose location is given\nB) Searching of an unsorted list for a given item\nC) Inserting a new node after node whose location is given\nD) Traversing the list to process each node\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Consider the following pseudocode of insertion in XOR list and write the approximate code snippet of it.\n\nvoid xor-linked-list insert(struct node **head_ref, int value)\n{\n    node *new_node  = new (struct node);\n    new_node->value = value;\n    new_node->nodepointerxored = xor (*head_ref, NULL);\n    if (*head_pointer == NULL)\n    {\n        printf(\"invalid\");\n    }\n    else\n    {\n        let b,c,d are nodes and a is to be inserted at beginning,\n        a address field must contain NULL xor b and b \n        address filed must be a xor c.\n    }\n    *head_pointer = new_node;\n}\n\nd)\nChoices:\nA) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: What does the following Java code do?\n\npublic Object function()\n{\n if(isEmpty())\n return -999;\n else\n {\n  Object high;\n  high = q[front];\n  return high;\n }\n}\nChoices:\nA) Dequeue\nB) Enqueue\nC) Return the front element\nD) Return the last element\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: Which of the following properties is associated with a queue?\nChoices:\nA) First In Last Out\nB) First In First Out and Last in Last Out\nC) Last In First Out\nD) Last In Last Out Only\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: A hash table may become full in the case when we use open addressing.\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: By implementing separate chaining using list head we can reduce the number of collisions drastically.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Parse tree is constructed from the tokens produced by lexical analyzer.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Consider the following doubly linked list: head-1-2-3-4-5-tail. What will be the list after performing the given sequence of operations?\nChoices:\nA) head-0-1-2-3-4-5-6-tail\nB) head-1-2-3-4-5-6-tail\nC) head-6-1-2-3-4-5-0-tail\nD) head-0-1-2-3-4-5-tail\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: The data structure required to check whether an expression contains a balanced parenthesis is?\nChoices:\nA) Stack\nB) Queue\nC) Array\nD) Tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: Consider a hash table with 100 slots. Collisions are resolved using chaining. Assuming simple uniform hashing, what is the probability that the first 3 slots are unfilled after the first 3 insertions?, ,\nChoices:\nA) (97 \u00d7 97 \u00d7 97)/1003\nB) (99 \u00d7 98 \u00d7 97)/1003\nC) (97 \u00d7 96 \u00d7 95)/1003\nD) (97 \u00d7 96 \u00d7 95)/(3! \u00d7 1003)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Medium",
        "target_text": "Question: How many types of input characters are accepted by this algorithm?\nChoices:\nA) one\nB) two\nC) three\nD) four\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Which of the following is not possible with an   \f array in C programming language?, ,\nChoices:\nA) Declaration\nB) Definition\nC) Dynamic Allocation\nD) Array of strings\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What is the load factor for an open addressing technique?\nChoices:\nA) 1\nB) 0.5\nC) 1.5\nD) 0\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Which among the following is the pseudo code for post-order traversal?, ,\nChoices:\nA) Order(node):\\n    if node is not null:\\n       Order(node.left)\\n       Order(node.right)\\n       print node.value\nB) Order(node):\\n    if node is not null:\\n       Order(node.right)\\n       Order(node.left)\\n        print node.value\nC) Order(node):\\n    if node is not null:\\n       Order(node.left)\\n        print node.value\nD) None of the above\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: Given Adjacency matrices determine which of them are PseudoGraphs?\ni) {{1,0} {0,1}}\nii) {{0,1}{1,0}}\niii) {{0,0,1}{0,1,0}{1,0,0}}\nChoices:\nA) only i)\nB) ii) and iii)\nC) i) and iii)\nD) i) ii) and iii)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: Graph Structured Stack finds its application in _____________\nChoices:\nA) Bogo Sort\nB) Tomita\u2019s Algorithm\nC) Todd\u2013Coxeter algorithm\nD) Heap Sort\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: The matrix contains m rows and n columns. The matrix is called Sparse Matrix if ________\nChoices:\nA) Total number of Zero elements > (m*n)/2\nB) Total number of Zero elements = m + n\nC) Total number of Zero elements = m/n\nD) Total number of Zero elements = m-n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: The search technique for searching a sorted file   that requires increased amount of space is   \u2026\u2026\u2026\u2026\u2026., ,\nChoices:\nA) Indexed sequential search\nB) Interpolation search\nC) Sequential search\nD) Tree search\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Search and difficulty=Medium",
        "target_text": "Question: What is the search complexity in direct addressing?\nChoices:\nA) O(n)\nB) O(logn)\nC) O(nlogn)\nD) O(1)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: 7. When does the ArrayIndexOutOfBoundsException occur?\nChoices:\nA) Compile-time\nB) Run-time\nC) Not an error\nD) Not an exception at all\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: How many distinct binary search trees can be created out of 4 distinct keys?, ,\nChoices:\nA) 5\nB) 14\nC) 24\nD) 35\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: The searching technique that takes O(1) time to   find a data is, ,\nChoices:\nA) Linear Search\nB) Binary Search\nC) Hashing\nD) Tree Search\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Linked lists are not suitable for the implementation of ___________\nChoices:\nA) Insertion sort\nB) Radix sort\nC) Polynomial manipulation\nD) Binary search\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: For any two different vertices u and v of an Acyclic Directed Graph if v is reachable from u, u is also reachable from v?\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: Making the push operation costly, select the code snippet which implements the same.(let q1 and q2 be two queues)\na)\n\npublic void push(int x)\n{\n        if(empty())\n        {\n            q1.offer(x);\n        }\n        else{\n                if(q1.size()>0)\n                {\n                    q2.offer(x);\n                    int size = q1.size();\n                    while(size>0)\n                    {\n                        q2.offer(q1.poll());\n                        size--;\n                    }\n                }\n            else if(q2.size()>0)\n            {\n                q1.offer(x);\n                int size = q2.size();\n                while(size>0)\n                {\n                    q1.offer(q2.poll());\n                    size--;\n                }\n            }\n        }\n    }\npublic void push(int x)\n{\n        if(empty())\n        {\n            q1.offer(x);\n        }\n        else\n        {\n            if(q1.size()>0)\n            {\n                q1.offer(x);\n                int size = q1.size();\n                while(size>0)\n                {\n                    q2.offer(q1.poll());\n                    size--;\n                }\n            }\n            else if(q2.size()>0)\n            {\n                q2.offer(x);\n                int size = q2.size();\n                while(size>0)\n                {\n                    q1.offer(q2.poll());\n                    size--;\n                }\n            }\n        }\n}\npublic void push(int x)\n{\n        if(empty())\n        {\n            q1.offer(x);\n        }\n        else\n        {\n            if(q1.size()>0)\n            {\n                q2.offer(x);\n                int size = q1.size();\n                while(size>0)\n                {\n                    q1.offer(q2.poll());\n                    size--;\n                }\n            }\n            else if(q2.size()>0)\n            {\n                q1.offer(x);\n                int size = q2.size();\n                while(size>0)\n                {\n                    q2.offer(q1.poll());\n                    size--;\n                }\n            }\n        }\n}\npublic void push(int x)\n{\n        if(empty())\n        {\n            q1.offer(x);\n        }\n        else\n        {\n            if(q1.size()>0)\n            {\n                q2.offer(x);\n                int size = q1.size();\n                while(size>0)\n                {\n                    q2.offer(q2.poll());\n                    size--;\n                }\n            }\n            else if(q2.size()>0)\n            {\n                q1.offer(x);\n                int size = q2.size();\n                while(size>0)\n                {\n                    q2.offer(q1.poll());\n                    size--;\n                }\n            }\n        }\n}\npublic void pop()\n{\n        if(q1.size()>0)\n        {\n            q2.poll();\n        }\n        else if(q2.size()>0)\n        {\n            q1.poll();\n        }\n}\npublic void pop()\n{\n        if(q1.size()>0)\n        {\n            q1.poll();\n        }\n        else if(q2.size()>0)\n        {\n            q2.poll();\n        }\n}\npublic void pop()\n{\n        q1.poll();\n q2.poll();\n}\npublic void pop()\n{\n        if(q2.size()>0)\n        {\n            q1.poll();\n        }\n        else\n        {\n            q2.poll();\n        }\n}\npublic int top()\n{\n       if(q1.size()>0)\n       {\n            return q1.poll();\n       }\n       else if(q2.size()>0)\n       {\n            return q2.poll();\n       }\n       return 0;\n}\npublic int top()\n{\n       if(q1.size()==0)\n       {\n            return q1.peek();\n       }\n       else if(q2.size()==0)\n       {\n            return q2.peek();\n       }\n        return 0;\n    }\npublic int top()\n{\n       if(q1.size()>0)\n       {\n            return q1.peek();\n       }\n       else if(q2.size()>0)\n       {\n            return q2.peek();\n       }\n       return 0;\n}\npublic int top()\n{\n       if(q1.size()>0)\n       {\n            return q2.peek();\n       }\n       else if(q2.size()>0)\n       {\n            return q1.peek();\n       }\n       return 0;\n}\npublic int pop()\n{\n int res=-999,count=0;\n if(q1.size()>0)\n        {\n  count = q1.size();\n  while(count>0)\n   q2.offer(q1.poll());\n  res = q1.poll();\n }\n if(q2.size()>0)\n        {\n  count = q2.size();\n  while(count>0)\n   q1.offer(q2.poll());\n  res = q2.poll();\n }\n return res;\n}\npublic int pop()\n{\n int res=-999,count=0;\n if(q1.size()>0)\n        {\n  count = q1.size();\n  while(count>1)\n   q2.offer(q1.poll());\n  res = q2.poll();\n }\n if(q2.size()>0)\n        {\n  count = q2.size();\n  while(count>1)\n   q1.offer(q2.poll());\n  res = q1.poll();\n }\n return res;\n}\npublic int pop()\n{\n int res=-999,count=0;\n if(q1.size()>0)\n        {\n  count = q1.size();\n  while(count>1)\n   q2.offer(q1.poll());\n  res = q1.poll();\n }\n if(q2.size()>0)\n        {\n  count = q2.size();\n  while(count>1)\n   q1.offer(q2.poll());\n  res = q2.poll();\n }\n return res;\n}\npublic int pop()\n{\n int res=-999,count=0;\n if(q1.size()>0)\n        {\n  count = q2.size();\n  while(count>1)\n   q2.offer(q1.poll());\n  res = q1.poll();\n }\n if(q2.size()>0)\n        {\n  count = q1.size();\n  while(count>1)\n   q1.offer(q2.poll());\n  res = q2.poll();\n }\n return res;\n}\npublic void fun(int x)\n{\n q1.offer(x);\n}\nChoices:\nA) public void push(int x)\nB) Perform push() with push as the costlier operation\nC) Perform push() with pop as the costlier operation\nD) Perform pop() with push as the costlier operation\nE) Perform pop() with pop as the costlier operation\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: The order of a leaf node in a tree B+ is the maximum number of (value, data record pointer) pairs it can hold. Given that the block size is 1K bytes, data record pointer is 7 bytes long, the value field is 9 bytes long and a block pointer is 6 bytes long, what is the order of the leaf node?, ,\nChoices:\nA) 63\nB) 64\nC) 67\nD) 68\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: How many arguments are required by the predefined function rotate() in C++?\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: The postfix form of A*B+C/D is?\nChoices:\nA) *AB/CD+\nB) AB*CD/+\nC) A*BC+/D\nD) ABCD+/*\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What would be the Prefix notation for the given equation?\nChoices:\nA) +A*CB\nB) *B+AC\nC) +A*BC\nD) *A+CB\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: In the following given hash table, use linear probing to find the location of 49.\nChoices:\nA) 7\nB) 6\nC) 2\nD) 0\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What is the number of moves required to solve Tower of Hanoi problem for k disks?\nChoices:\nA) 2k \u2013 1\nB) 2k + 1\nC) 2k + 1\nD) 2k \u2013 1\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Under what condition the number of inversions in an array are maximum?\nChoices:\nA) when the array is sorted\nB) when the array is reverse sorted\nC) when the array is half sorted\nD) depends on the given array\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: What is a dequeue?\nChoices:\nA) A queue with insert/delete defined for both front and rear ends of the queue\nB) A queue implemented with a doubly linked list\nC) A queue implemented with both singly and doubly linked lists\nD) A queue with insert/delete defined for front side of the queue\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: The five items: A, B, C, D, and E are pushed in a stack, one after other starting from A. The stack is popped four items and each element is inserted in a queue. The two elements are deleted from the queue and pushed back on the stack. Now one item is popped from the stack. The popped item is, ,\nChoices:\nA) A\nB) B\nC) C\nD) D\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: Which of the following the BST is isometric with the 2-3 tree?\nChoices:\nA) Splay tree\nB) AA tree\nC) Heap\nD) Red \u2013 Black tree\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the functionality of the following piece of code?\n\npublic int function(int data)\n{\n Node temp = head;\n int var = 0;\n while(temp != null)\n {\n  if(temp.getData() == data)\n  {\n   return var;\n  }\n  var = var+1;\n  temp = temp.getNext();\n }\n return Integer.MIN_VALUE;\n}\nChoices:\nA) Find and delete a given element in the list\nB) Find and return the given element in the list\nC) Find and return the position of the given element in the list\nD) Find and insert a new element in the list\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which of the following program prints the index of every matching parenthesis?\na)\n\npublic void dispIndex(String exp)\n{\n    Stack<Integer> stk = new Stack<Integer>();\n    for (int i = 0; i < len; i++)\n    {    \n        char ch = exp.charAt(i);\n        if (ch == '(')\n        stk.push(i);\n        else if (ch == ')')\n        {\n          try\n          {\n            int p = stk.pop() + 1;\n            System.out.println(\"')' at index \"+(i+1)+\" matched with ')' at index \"+p);\n          }\n          catch(Exception e)\n          {\n             System.out.println(\"')' at index \"+(i+1)+\" is unmatched\");\n          }\n        }            \n    }\n    while (!stk.isEmpty() )\n    System.out.println(\"'(' at index \"+(stk.pop() +1)+\" is unmatched\");\n}\npublic void dispIndex(String exp)\n{\n    Stack<Integer> stk = new Stack<Integer>();\n    for (int i = 0; i < len; i++)\n    {    \n        char ch = exp.charAt(i);\n        if (ch == '(')\n        stk.push(i);\n        else if (ch == ')')\n        {\n           try\n           {\n             int p = stk.pop() + 1;\n             System.out.println(\"')' at index \"+(i)+\" matched with ')' at index \"+p);\n           }\n           catch(Exception e)\n           {\n              System.out.println(\"')' at index \"+(i)+\" is unmatched\");\n           }\n        }            \n    }\n    while (!stk.isEmpty() )\n    System.out.println(\"'(' at index \"+(stk.pop() +1)+\" is unmatched\");\n}\npublic void dispIndex(String exp)\n{\n    Stack<Integer> stk = new Stack<Integer>();\n    for (int i = 0; i < len; i++)\n    {    \n        char ch = exp.charAt(i);\n        if (ch == ')')\n        stk.push(i);\n        else if (ch == '(')\n        {\n          try\n          {\n            int p = stk.pop() +1;\n            System.out.println(\"')' at index \"+(i+1)+\" matched with ')' at index \"+p);\n          }\n          catch(Exception e)\n          {\n             System.out.println(\"')' at index \"+(i+1)+\" is unmatched\");\n          }\n        }            \n    }\n    while (!stk.isEmpty() )\n    System.out.println(\"'(' at index \"+(stk.pop() +1)+\" is unmatched\");\n}\npublic void dispIndex(String exp)\n{\n    Stack<Integer> stk = new Stack<Integer>();\n    for (int i = 0; i < len; i++)\n    {    \n        char ch = exp.charAt(i);\n        if (ch == ')')\n        stk.push(i);\n        else if (ch == '(')\n        {\n          try\n          {\n            int p = stk.pop();\n            System.out.println(\"')' at index \"+(i+1)+\" matched with ')' at index \"+p);\n          }\n          catch(Exception e)\n          {\n            System.out.println(\"')' at index \"+(i+1)+\" is unmatched\");\n          }\n        }            \n    }\n    while (!stk.isEmpty() )\n    System.out.println(\"'(' at index \"+(stk.pop() +1)+\" is unmatched\");\n}\n\nd)\nChoices:\nA) public void dispIndex(String exp)\nB) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: Assuming value of every weight to be greater than 10, in which of the following cases the shortest path of a directed weighted graph from 2 vertices u and v will never change?\nChoices:\nA) add all values by 10\nB) subtract 10 from all the values\nC) multiply all values by 10\nD) in both the cases of multiplying and adding by 10\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Suffix array can be created in O(nlogn) time.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: The leaf node for a heap of height h will be at which position.\nChoices:\nA) h\nB) h-1\nC) h or h-1\nD) h-2\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: What is the basic operation performed in a pairing heap?\nChoices:\nA) merge\nB) deletion\nC) insertion\nD) swapping\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: A Graph Structured Stack is a _____________\nChoices:\nA) Undirected Graph\nB) Directed Graph\nC) Directed Acyclic Graph\nD) Regular Graph\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: The minimum number of fields with each node of doubly linked list is, ,\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: Which of the following is an advantage of balanced binary search tree, like AVL tree, compared to binary heap?\nChoices:\nA) insertion takes less time\nB) deletion takes less time\nC) searching takes less time\nD) construction of the tree takes less time than binary heap\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Is partitioning method used by Tango Tree.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What is a hash function?\nChoices:\nA) A function has allocated memory to keys\nB) A function that computes the location of the key in the array\nC) A function that creates an array\nD) A function that computes the location of the values in the array\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Medium",
        "target_text": "Question: While evaluating a prefix expression, the string is read from?\nChoices:\nA) left to right\nB) right to left\nC) center to right\nD) center to left to right\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Which of the following is the name of the node having child nodes?\nChoices:\nA) Brother\nB) Sister\nC) Mother\nD) Parent\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: An algorithm is made up of two independent   time complexities f (n) and g (n). Then the   complexities of the algorithm is in the order of, ,\nChoices:\nA) f(n) x g(n)\nB) Max ( f(n),g(n))\nC) Min (f(n),g(n))\nD) f(n) + g(n)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What should be the condition for the level of a left node?\nChoices:\nA) It should be less than or equal to that of its parent\nB) It should be greater than that of its parent\nC) It should be strictly less than that of its parent\nD) The level should be equal to one\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: A program P reads in 500 integers in the range [0..100] representing the scores of 500 students. It then prints the frequency of each score above 50. What would be the best way for P to store the frequencies?\n , ,\nChoices:\nA) An array of 50 numbers\\n\nB) An array of 100 numbers\\n\nC) An array of 500 numbers\\n\nD) A dynamically allocated array of 550 numbers\\n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What is meant by physical size in a dynamic array?\nChoices:\nA) The size allocated to elements\nB) The size extended to add new elements\nC) The size of the underlying array at the back-end\nD) The size visible to users\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What is the probability of selecting a tree uniformly at random?\nChoices:\nA) Equal to Catalan Number\nB) Less Than Catalan Number\nC) Greater than Catalan Number\nD) Reciprocal of Catalan Number\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is the maximum height of any AVL-tree with 7 nodes? Assume that the height of a tree with a single node is 0., ,\nChoices:\nA) 2\nB) 3\nC) 4\nD) 5\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Which of the following piece of code has the functionality of counting the number of elements in the list?\na)\n\npublic int length(Node head)\n{\n int size = 0;\n Node cur = head;\n while(cur!=null)\n {\n     size++;\n     cur = cur.getNext();\n }\n return size;\n}\npublic int length(Node head)\n{\n        int size = 0;\n Node cur = head;\n while(cur!=null)\n {\n     cur = cur.getNext();\n     size++;\n }\n return size;\n}\npublic int length(Node head)\n{\n int size = 0;\n Node cur = head;\n while(cur!=null)\n {\n     size++;\n     cur = cur.getNext();\n }\n}\npublic int length(Node head)\n{\n int size = 0;\n Node cur = head;\n while(cur!=null)\n {\n     size++;\n     cur = cur.getNext().getNext();\n }\n return size;\n}\n\nd)\nChoices:\nA) public int length(Node head)\nB) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: In a full binary tree if number of internal nodes is I, then number of nodes N are?\nChoices:\nA) N = 2*I\nB) N = I + 1\nC) N = I \u2013 1\nD) N = 2*I + 1\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Which operation is used to break a preferred path into two sets of parts at a particular node?\nChoices:\nA) Differentiate\nB) Cut\nC) Integrate\nD) Join\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: All undirected Multigraphs contain eulerian cycles.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What would be the solution to the given prefix notation?\nChoices:\nA) 1\nB) 4\nC) 2\nD) 8\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What is missing in the given code?, #include <bits/stdc++.h>\nusing namespace std;\n\nvoid reverseStr(string& str)\n{\n\n    for (int i = 0; i < n / 2; i++)\n        swap(str[i], str[n - i - 1]);\n}\n\n// Driver program\nint main()\n{\n    string str = \"geeksforgeeks\";\n    reverseStr(str);\n    cout << str;\n    return 0;\n},\nCode: #include <bits/stdc++.h>\nChoices:\nA) swap function is not defined\nB) string is not defined here.\nC) Variable n is not declared anywhere.\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: A 3-ary max heap is like a binary max heap, but instead of 2 children, nodes have 3 children. A 3-ary heap can be represented by an array as follows: The root is stored in the first location, a[0], nodes in the next level, from left to right, is stored from a[1] to a[3]. The nodes from the second level of the tree from left to right are stored from a[4] location onward. An item x can be inserted into a 3-ary heap containing n items by placing x in the location a[n] and pushing it up the tree to satisfy the heap property. Which one of the following is a valid sequence of elements in an array representing 3-ary max heap?, ,\nChoices:\nA) 1, 3, 5, 6, 8, 9\nB) 9, 6, 3, 1, 8, 5\nC) 9, 3, 6, 8, 5, 1\nD) 9, 5, 6, 8, 3, 1\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: When we have red-black trees and AVL trees that can perform most of operations in logarithmic times, then what is the need for splay trees?\nChoices:\nA) no there is no special usage\nB) In real time it is estimated that 80% access is only to 20% data, hence most used ones must be easily available\nC) redblack and avl are not upto mark\nD) they are just another type of self balancing binary search trees\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: What will do the following code?, void fun(int arr[], int n)\n{\n    for (int i = 0; i < n; i++) {\n        for (int j = i; j < n; j++) {\n            for (int k = i; k <= j; k++)\n                cout << arr[k] << \" \";\n\n            cout << endl;\n        }\n    }\n},\nChoices:\nA) Prints the subsequence of the article.\nB) Prints the elements of the array\nC) Prints the subarray of the element.\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: What is the space complexity of a linear queue having n elements?\nChoices:\nA) O(n)\nB) O(nlogn)\nC) O(logn)\nD) O(1)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: For a given graph G having v vertices and e edges which is connected and has no cycles, which of the following statements is true?\nChoices:\nA) v=e\nB) v = e+1\nC) v + 1 = e\nD) v = e-1\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: O(n2), ,\nChoices:\nA) O(n logk)\nB) O(nk)\nC) O(n2)\nD) O(k2)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: The following  function takes a single-linked list of integers as a parameter and rearranges the elements of the list. The function is called with the list containing the integers 1, 2, 3, 4, 5, 6, 7 in the given order. What will be the contents of the list after the function completes execution? , class Node {\npublic:\n    int value;\n    Node* next;\n};\n\nvoid rearrange(Node* list) {\n    Node* p;\n    Node* q;\n    int temp;\n    if (list == nullptr || list->next == nullptr) {\n        return;\n    }\n    p = list;\n    q = list->next;\n    while (q != nullptr) {\n        temp = p->value;\n        p->value = q->value;\n        q->value = temp;\n        p = q->next;\n        q = (p != nullptr) ? p->next : nullptr;\n    }\n},\nChoices:\nA) 1,2,3,4,5,6,7\nB) 2,1,4,3,6,5,7\nC) 1,3,2,5,4,7,6\nD) 2,3,4,5,6,7,1\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: Suppose a circular queue of capacity (n \u2013 1) elements is implemented with an array of n elements. Assume that the insertion and deletion operation are carried out using REAR and FRONT as array index variables, respectively. Initially, REAR = FRONT = 0. The conditions to detect queue full and queue empty are, ,\nChoices:\nA) Full: (REAR+1) mod n == FRONT, empty: REAR == FRONT\nB) Full: (REAR+1) mod n == FRONT, empty: (FRONT+1) mod n == REAR\nC) Full: REAR == FRONT, empty: (REAR+1) mod n == FRONT\nD) Full: (FRONT+1) mod n == REAR, empty: REAR == FRONT\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What is the functionality of the following piece of code?\n\npublic int function()\n{\n Node temp = tail.getPrev();\n tail.setPrev(temp.getPrev());\n temp.getPrev().setNext(tail);\n size--;\n return temp.getItem();\n}\nChoices:\nA) Return the element at the tail of the list but do not remove it\nB) Return the element at the tail of the list and remove it from the list\nC) Return the last but one element from the list but do not remove it\nD) Return the last but one element at the tail of the list and remove it from the list\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Which of the following is valid reverse polish expression?\nChoices:\nA) a op b\nB) op a b\nC) a b op\nD) both op a b and a b op\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: A BST is traversed in the following order   recursively: Right, root, left The output sequence   will be in, ,\nChoices:\nA) Ascending order\nB) Descending order\nC) Bitomic sequence\nD) No specific order\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Identify the infix expression from the list of options given below.\nChoices:\nA) a/b+(c-d)\nB) abc*+d+ab+cd+*ce-f-\nC) ab-c-\nD) +ab\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: In a binary tree with n nodes, every node has an odd number of descendants. Every node is considered to be its own descendant. What is the number of nodes in the tree that have exactly one child?, ,\nChoices:\nA) 0\nB) 1\nC) (n-1)/2\nD) n-1\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: Do ternary heap have better memory cache behavior than binary heap.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Find the functionality of the given code-, void function(int data)\n{\n    int flag = 0;\n    if (head != null) {\n        Node temp = head.getNext();\n        while ((temp != head)\n               && (!(temp.getItem() == data))) {\n            temp = temp.getNext();\n            flag = 1;\n            break;\n        }\n    }\n    if (flag)\n        System.out.println(\"success\");\n    else\n        System.out.println(\"fail\");\n},\nChoices:\nA) Print success if a particular element is not found\nB) Print fail if a particular element is not found\nC) Print success if a particular element is equal to 1\nD) Print fail if the list is empty\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What will be the output of the following code?\n\n#include <bits/stdc++.h> \nusing namespace std; \n \nvoid func(int arr[], int left, int right) \n{     \n while (left < right) \n { \n  int temp = arr[left]; \n  arr[left] = arr[right]; \n  arr[right] = temp; \n  left++; \n  right--; \n } \n \n}  \n \nvoid printArray(int arr[], int size) \n{ \n    for (int i = 0; i < size; i++) \n    cout << arr[i] << \" \"; \n} \n \nint main() \n{ \n int arr[] = {1,4,3,5}; \n int n = sizeof(arr) / sizeof(arr[0]); \n func(arr, 0, n-1); \n printArray(arr, n); \n return 0; \n}\nCode: #include <bits/stdc++.h>\nChoices:\nA) 5 1 4 3\nB) 3 5 1 4\nC) 5 3 4 1\nD) error\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: A Binary Search Tree (BST) stores values in the range 37 to 573. Consider the following sequence of keys., ,\nChoices:\nA) II and III only\nB) I and III only\nC) III and IV only\nD) III only\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: In _____________ method, whenever a node is accessed, it might move to the head of the list if its number of accesses becomes greater than the records preceding it.\nChoices:\nA) least recently used\nB) count\nC) traspose\nD) exchange\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Bin is an example of a range query data structure.\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Select the incorrect statement. Binary search   trees (regardless of the order in which the values   are inserted into the tree):, ,\nChoices:\nA) Always have multiple links per node.\nB) Can be sorted efficiently.\nC) Always have the same shape for a particular set of data.\nD) Are nonlinear data structures.\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: which data structure is used to implement deque?, ,\nChoices:\nA) Stack\nB) Doubly linked  list\nC) circular array\nD) Both B and C\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Which of the following is incorrect with respect to binary trees?\nChoices:\nA) Let T be a binary tree. For every k \u2265 0, there are no more than 2k nodes in level k\nB) Let T be a binary tree with \u03bb levels. Then T has no more than 2\u03bb \u2013 1 nodes\nC) Let T be a binary tree with N nodes. Then the number of levels is at least ceil(log (N + 1))\nD) Let T be a binary tree with N nodes. Then the number of levels is at least floor(log (N + 1))\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Is Sparse Matrix also known as Dense Matrix?\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Which of the following is not an application of sorted array?\nChoices:\nA) Commercial computing\nB) Priority Scheduling\nC) Discrete Mathematics\nD) Hash Tables\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: How many pointers are contained as data   members in the nodes of a circular, doubly linked   list of integers with five nodes?, ,\nChoices:\nA) 5\nB) 8\nC) 10\nD) 15\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: In hash tables, how many traversal of links does a successful search require?\nChoices:\nA) 1+\u2144\nB) 1+\u21442\nC) 1+ (\u2144/2)\nD) \u21443\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: A binary tree with n > 1 nodes has n1, n2 and n3 nodes of degree one, two and three respectively. The degree of a node is defined as the number of its neighbors.\n\n\nn3 can be expressed as, ,\nChoices:\nA) n1 + n2 - 1\nB) n1 - 2\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: In open addressing the hash table can never become full.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: In an expression tree algorithm, what happens when an operand is encountered?\nChoices:\nA) create one node pointing to a stack\nB) pop the nodes from the stack\nC) clear stack\nD) merge all the nodes\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the expected error by the estimator Chernoff bound on the samples performed without replacement?\nChoices:\nA) O (log k!)\nB) O (k!)\nC) O (k2)\nD) O (1/k\u00bd)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: While inserting the elements 71, 65, 84, 69, 67, 83 in an empty binary search tree (BST) in the sequence shown, the element in the lowest level is, ,\nChoices:\nA) 65\nB) 67\nC) 69\nD) 83\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Select the code snippet which performs matrix multiplication.(a and b are the two given matrices, resultant marix is c)\na)\n\nd)\nChoices:\nA) d)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: What is the time per operation of merging, insertion and deletion operations in a skew heap?\nChoices:\nA) O(N)\nB) O(log N)\nC) O(N log N)\nD) O(N2)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: To evaluate an expression without any embedded function calls :\n , ,\nChoices:\nA) As many stacks as the height of the expression tree are needed\nB) One stack is enough\nC) Two stacks are needed\nD) A Turing machine is needed in the general case\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Assuming int is of 4bytes, what is the size of int arr[15];?\nChoices:\nA) 15\nB) 19\nC) 11\nD) 60\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: Which of the following is not an inherent application of stack?, ,\nChoices:\nA) Implementation of recursion\nB) Evaluation of a postfix expression\nC) Job scheduling\nD) Reverse a string\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: A mathematical-model with a collection of   operations defined on that model is called:, ,\nChoices:\nA) Data Structure\nB) Abstract Data Type\nC) Primitive Data Type\nD) Algorithm\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: The following three are known to be the preorder, inorder and postorder sequences of a binary tree. But it is not known which is which.\n\nMBCAFHPYK\n\nKAMCBYPFH\n\nMABCKYFPH\n\nPick the true statement from the following., ,\nChoices:\nA) I and II are preorder and inorder sequences, respectively\nB) I and III are preorder and postorder sequences, respectively\nC) II is the inorder sequence, but nothing more can be said about the other two sequences\nD) II and III are the preorder and inorder sequences, respectively\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: How do you insert an element at the beginning of the list?\na)\n\npublic void insertBegin(Node node)\n{\n node.setNext(head);\n head = node;\n size++;\n}\npublic void insertBegin(Node node)\n{\n head = node;\n node.setNext(head);\n size++;\n}\npublic void insertBegin(Node node)\n{\n Node temp = head.getNext()\n node.setNext(temp);\n head = node;\n size++;\n}\npublic void insertBegin(Node node)\n{\n Node temp = head.getNext()\n node.setNext(temp);\n node = head;\n size++;\n}\n\nd)\nChoices:\nA) public void insertBegin(Node node)\nB) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Unrolled linked-list requires more storage space for pointers compared to a singly linked list.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: Operations required for reversing a word or a string using stack are push() and pop().\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is the depth of the root node of the ternary tree?\nChoices:\nA) 2\nB) 1\nC) 0\nD) 3\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: Given a heap of n nodes.The maximum number of tree for building the heap is.\nChoices:\nA) n\nB) n-1\nC) n/2\nD) logn\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: What kind of deletion is implemented by hashing using open addressing?\nChoices:\nA) active deletion\nB) standard deletion\nC) lazy deletion\nD) no deletion\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: Which of the following is not an application of priority queue?\nChoices:\nA) Huffman codes\nB) Interrupt handling in operating system\nC) Undo operation in text editors\nD) Bayesian spam filter\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: The system throws an error if parentheses are encountered in an infix expression evaluation algorithm.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: 13. Which data structure is based on the Last In First Out (LIFO) principle?\nChoices:\nA) Tree\nB) Linked List\nC) Stack\nD) Queue\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is a splay operation?\nChoices:\nA) moving parent node to down of child\nB) moving a node to root\nC) moving root to leaf\nD) removing leaf node\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: The optimal data structure used to solve Tower of Hanoi is _________\nChoices:\nA) Tree\nB) Heap\nC) Priority queue\nD) Stack\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: Suppose we are given n keys, m hash table slots, and two simple uniform hash functions h1 and h2. Further, suppose our hashing scheme uses h1 for the odd keys and h2 for the even keys. What is the expected number of keys in a slot? , ,\nChoices:\nA) 2m\\nn\nB) m\\nn\nC) n\\nm\nD) m\\n2n\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What happens if the null path length is not updated?\nChoices:\nA) error occurs\nB) all null path lengths will be 0\nC) all null path lengths will be -1\nD) all null path lengths will be 1\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What is a memory efficient double linked list?\nChoices:\nA) Each node has only one pointer to traverse the list back and forth\nB) The list has breakpoints for faster traversal\nC) An auxiliary singly linked list acts as a helper list to traverse through the doubly linked list\nD) A doubly linked list that uses bitwise AND operator for storing addresses\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: An undirected graph G has n nodes. Its adjacency matrix is given by an n \u00d7 n square matrix whose (i) diagonal elements are 0\u2018s and (ii) non-diagonal elements are 1\u2018s. which one of the following is TRUE?, ,\nChoices:\nA) Graph G has no minimum spanning tree (MST)\nB) Graph G has a unique MST of cost n-1\nC) Graph G has multiple distinct MSTs, each of cost n-1\nD) Graph G has multiple spanning trees of different costs\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What would be the solution to the given prefix notation?\nChoices:\nA) 6\nB) -6\nC) 3\nD) -3\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: How many edges are present in path cluster?\nChoices:\nA) 2\nB) 3\nC) 6\nD) 1\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: In a leftist heap, all the operations should be performed on?\nChoices:\nA) left path\nB) centre path\nC) right path\nD) root\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Consider a weighted undirected graph with positive edge weights and let uv be an edge in the graph. It is known that the shortest path from the source vertex s to u has weight 53 and the shortest path from s to v has weight 65. Which one of the following statements is always true?, ,\nChoices:\nA) weight (u, v) < 12\nB) weight (u, v) \u2264 12\nC) weight (u, v) > 12\nD) weight (u, v) \u2265 12\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Which of the following performs deletion of the last element in the list? Given below is the Node class.\n\nclass Node\n{\n protected Node next;\n protected Object ele;\n Node(Object e,Node n)\n {\n  ele = e;\n  next = n;\n }\n public void setNext(Node n)\n {\n  next = n;\n }\n public void setEle(Object e)\n {\n  ele = e;\n }\n public Node getNext()\n {\n  return next;\n }\n public Object getEle()\n {\n  return ele;\n }\n}\nclass SLL \n{\n Node head;\n int size;\n SLL()\n {\n  size = 0;\n }\n}\npublic Node removeLast()\n{\n if(size == 0)\n return null;\n Node cur;\n Node temp;\n cur = head;\n while(cur.getNext() != null)\n {\n   temp = cur;\n   cur = cur.getNext();\n        }\n temp.setNext(null);\n size--;\n return cur;\n}\npublic void removeLast()\n{\n if(size == 0)\n return null;\n Node cur;\n Node temp;\n cur = head;\n while(cur != null)\n {\n  temp = cur;\n  cur = cur.getNext();\n        }\n temp.setNext(null);\n return cur;\n}\npublic void removeLast()\n{\n if(size == 0)\n     return null;\n Node cur;\n Node temp;\n cur = head;\n while(cur != null)\n {\n  cur = cur.getNext();\n  temp = cur;\n  }\n temp.setNext(null);\n return cur;\n}\npublic void removeLast()\n{\n if(size == 0)\n  return null;\n Node cur;\n Node temp;\n cur = head;\n while(cur.getNext() != null)\n {\n  cur = cur.getNext();\n  temp = cur;\n }\n temp.setNext(null);\n return cur;\n}\n\nd)\nChoices:\nA) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: 35. A data structure in which elements can be inserted or deleted at/from both ends but not in the middle is?\nChoices:\nA) Priority queue\nB) Dequeue\nC) Circular queue\nD) Queue\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: 28. What is the use of the bin data structure?\nChoices:\nA) to have efficient traversal\nB) to have efficient region query\nC) to have efficient deletion\nD) to have efficient insertion\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: When is it appropriate to use direct addressing?\nChoices:\nA) When the array is comparatively large\nB) When the universe U of keys is reasonably small\nC) When the universe U of keys is reasonably large\nD) When the array is comparatively small\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: Suppose a stack implementation supports an instruction REVERSE, which reverses the order of elements on the stack, in addition to the PUSH and POP instructions. Which one of the following statements is TRUE with respect to this modified stack?, ,\nChoices:\nA) A queue cannot be implemented using this stack.\nB) A queue can be implemented where ENQUEUE takes a single instruction and DEQUEUE takes a sequence of two instructions.\nC) A queue can be implemented where ENQUEUE takes a sequence of three instructions and DEQUEUE takes a single instruction.\nD) A queue can be implemented where both ENQUEUE and DEQUEUE take a single instruction each.\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Linked list data structure offers considerable saving in _____________\nChoices:\nA) Computational Time\nB) Space Utilization\nC) Space Utilization and Computational Time\nD) Speed Utilization\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: How many stacks are needed to implement a queue. Consider the situation where no other data structure like arrays, linked list is available to you., ,\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What would be the result if the left subtree of the root has a null path length of 1 and the right subtree has a null path length of 2?\nChoices:\nA) merge occurs without violation\nB) violation at left subtree\nC) violation at right subtree\nD) violation at the root\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: If in a DAG N sink vertices and M source vertices exists, then the number of possible stacks in the Graph Structured Stack representation would come out to be N*M.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Quadratic probing overcomes primary collision.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Which of the following is the correct definition for a horizontal link?\nChoices:\nA) connection between node and a child of equal levels\nB) connection between two nodes\nC) connection between two child nodes\nD) connection between root node and leaf node\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: How many common operations are performed in a binary tree?\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: What should be done when a left parenthesis \u2018(\u2018 is encountered?\nChoices:\nA) It is ignored\nB) It is placed in the output\nC) It is placed in the operator stack\nD) The contents of the operator stack is emptied\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What is a full binary tree?, ,\nChoices:\nA) Each node has exactly zero or two children\nB) Each node has exactly two children\nC) All the leaves are at the same level\nD) Each node has exactly one or two children\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What data organization method is used in hash tables?\nChoices:\nA) Stack\nB) Array\nC) Linked list\nD) Queue\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: What kind of linked list begins with a pointer to   the first node, and each node contains a pointer to   the next node, and the pointer in the last node   points back to the first node?, ,\nChoices:\nA) Circular, singly-linked list.\nB) Circular, doubly-linked list.\nC) Singly-linked list.\nD) Doubly-linked list.\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: How much space does construction of suffix tree takes?\nChoices:\nA) O (log M)\nB) Exponential to Length of Tree\nC) O (M!)\nD) Linear to Length of Tree\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: The result of evaluating the postfix expression 5, 4, 6, +, *, 4, 9, 3, /, +, * is?\nChoices:\nA) 600\nB) 350\nC) 650\nD) 588\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: Space complexity for storing only the edges in an adjacency list of an undirected graph is __________\nChoices:\nA) O(V)\nB) O(E*E)\nC) O(E)\nD) O(E+V)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: An implementation of a queue Q, using two stacks S1 and S2, is given below: , ,\nChoices:\nA) n+m <= x < 2n and 2m <= y <= n+m\nB) n+m <= x < 2n and 2m<= y <= 2n\nC) 2m <= x < 2n and 2m <= y <= n+m\nD) 2m <= x <2n and 2m <= y <= 2n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: The steps for finding post-order traversal are traverse the right subtree, traverse the left subtree or visit the current node.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The number of leaf nodes in a complete binary   tree of depth d is \u2026\u2026\u2026.., ,\nChoices:\nA) 2d\nB) 2d\u20131+1\nC) 2d+1+1\nD) 2d+1\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Which of the following is not the self balancing binary search tree?\nChoices:\nA) AVL Tree\nB) 2-3-4 Tree\nC) Red \u2013 Black Tree\nD) Splay Tree\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which of the following is the correct way to declare a multidimensional array in Java?\nChoices:\nA) int[] arr;\nB) int arr[[]];\nC) int[][]arr;\nD) int[[]] arr;\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Is it true that splay trees have O(logn) amortized complexity ?\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Select the appropriate code which reverses a word.\na)\n\nd)\nChoices:\nA) d)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: How many binary trees with 3 nodes which   when traversed in post order gives the sequence A,   B, C is ?, ,\nChoices:\nA) 3 \\n (A) 3\nB) 4\nC) 5\nD) 6\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: In general, the index of the first element in an array is __________\nChoices:\nA) 0\nB) -1\nC) 2\nD) 1\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: Multiplication and division to find children and parents cannot be implemented in a d-heap.\nChoices:\nA) true\nB) false\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: What is the run time efficiency of an insertion algorithm in d-heap?\nChoices:\nA) O(N)\nB) O(log N)\nC) O(logd N)\nD) O(Nd)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: In the graph given in above question, what is the minimum possible weight of a path P from vertex 1 to vertex 2 in this graph such that P contains at most 3 edges?, ,\nChoices:\nA) 7\nB) 8\nC) 9\nD) 10\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: What data structure is used for breadth first  traversal of a graph?, ,\nChoices:\nA) Queue\nB) Stack\nC) List\nD) None of these\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: Following is pseudo code of a function that takes a Queue as an argument, and uses a stack S to do processing. , void fun(Queue *Q) {\n    Stack S;  // Say it creates an empty stack S\n\n    // Run while Q is not empty\n    while (!isEmpty(Q)) {\n        // deQueue an item from Q and push the dequeued item to S\n        push(&S, deQueue(Q));\n    }\n\n    // Run while Stack S is not empty\n    while (!isEmpty(&S)) {\n        // Pop an item from S and enqueue the popped item to Q\n        enQueue(Q, pop(&S));\n    }\n},\nChoices:\nA) Removes the last from Q\nB) Keeps the Q same as it was before the call\nC) Makes Q empty\nD) Reverses the Q\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: G = (V, E) is an undirected simple graph in which each edge has a distinct weight, and e is a particular edge of G. Which of the following statements about the minimum spanning trees (MSTs) of G is/are TRUE, ,\nChoices:\nA) I only\nB) II only\nC) both I and II\nD) neither I nor II\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: 21. Which of the following is the most widely used external memory data structure?\nChoices:\nA) B-tree\nB) Red-black tree\nC) AVL tree\nD) Both AVL tree and Red-black tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: Which of the following logical operation can\u2019t be implemented by polynomial time graph manipulation algorithms using Binary Decision Diagrams?\nChoices:\nA) Conjunction\nB) Disjunction\nC) Negation\nD) Tautology Checking\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: Consider a 13 element hash table for which f(key)=key mod 13 is used with integer keys. Assuming linear probing is used for collision resolution, at which location would the key 103 be inserted, if the keys 661, 182, 24 and 103 are inserted in that order?, ,\nChoices:\nA) 0\nB) 1\nC) 11\nD) 12\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Given only a single array of size 10 and no other memory is available. Which of the following operation is not feasible to implement (Given only push and pop operation)?\nChoices:\nA) Push\nB) Pop\nC) Enqueue\nD) Returntop\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is the maximum number of keys that a B+ -tree of order 3 and of height 3 have?\nChoices:\nA) 3\nB) 80\nC) 27\nD) 26\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Let G be a directed graph whose vertex set is the set of numbers from 1 to 100. There is an edge from a vertex i to a vertex j if either j = i + 1 or j = 3i. The minimum number of edges in a path in G from vertex 1 to vertex 100 is    , ,\nChoices:\nA) 4\nB) 7\nC) 23\nD) 99\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: Stack is used for \u2026\u2026\u2026\u2026\u2026.., ,\nChoices:\nA) CPU Resource Allocation\nB) Breadth First Traversal\nC) Recursion\nD) None of the above\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The balance factor of a node in a binary tree is defined as _____\nChoices:\nA) addition of heights of left and right subtrees\nB) height of right subtree minus height of left subtree\nC) height of left subtree minus height of right subtree\nD) height of right subtree minus one\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Can leaf node be called child node in a ternary tree?\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: Which of the following methods is the best choice for complex applications?\nChoices:\nA) binary heap\nB) d-heap\nC) treap\nD) pairing heap\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Time complexities of three algorithms are   246. Time complexities of three algorithms are  given. Which should execute the slowest for large   values of N?, ,\nChoices:\nA) O(N1/2)\nB) O(N)\nC) O(log N)\nD) None of these\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: ___________ is one of the earliest forms of a self-adjustment strategy used in splay trees, skew heaps.\nChoices:\nA) Union by rank\nB) Equivalence function\nC) Dynamic function\nD) Path compression\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: Is it possible to perform a split operation on a string in the rope if the split point is in the middle of the string.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Consider the following statements:, ,\nChoices:\nA) (ii) is true\nB) (i) and (ii) are true\nC) (iii) is true\nD) (ii) and (iv) are true\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What is a sorted array?\nChoices:\nA) Arrays sorted in numerical order\nB) Arrays sorted in alphabetical order\nC) Elements of the array are placed at equally spaced addresses in the memory\nD) All of the mentioned\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What is the postfix form of the following prefix   *+ab\u2013cd, ,\nChoices:\nA) ab+cd\u2013*\nB) abc+*\nC) ab+*cd\nD) ab+*cd\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: What is the reason behind the simplicity of a treap?\nChoices:\nA) Each node has data and a pointer\nB) Each node is colored accordingly\nC) It is a binary search tree following heap principles\nD) Each node has a fixed priority field\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Suppose each set is represented as a linked list with elements in arbitrary order. Which of the operations among union, intersection, membership, cardinality will be the slowest? (GATE CS 2004), ,\nChoices:\nA) union\nB) membership\nC) cardinality\nD) union, intersection\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What will the output of the below code?, #include <iostream>\nusing namespace std;\n\nint main()\n{\n\n    int arr[2] = { 1, 2 };\n    cout << arr[0] << \", \" << arr[1] << endl;\n    return 0;\n},\nCode: #include <iostream>\nChoices:\nA) 1, 2\nB) Syntax error\nC) Run time error\nD) None\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: What is the time required for single variant hashing to maintain the minimum hash queue?\nChoices:\nA) O (log n!)\nB) O (n!)\nC) O (n2)\nD) O (n)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Given pointer to a node X in a singly linked list. Only one pointer is given, pointer to head node is not given, can we delete the node X from given linked list?, ,\nChoices:\nA) Possible if X is not last node. Use following two steps (a) Copy the data of next of X to X. (b)Update the pointer of node X to the node after the next node. Delete next of X.\nB) Possible if size of linked list is even.\nC) Possible if size of linked list is odd\nD) Possible if X is not first node. Use following two steps (a) Copy the data of next of X to X. (b) Delete next of X.\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: In general, the node content in a threaded binary tree is ________\nChoices:\nA) leftchild_pointer, left_tag, data, right_tag, rightchild_pointer\nB) leftchild_pointer, left_tag\nC) leftchild_pointer, left_tag, right_tag, rightchild_pointer\nD) leftchild_pointer, left_tag, data\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: How many types of the merge are available in skew heaps?\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The following numbers are inserted into an empty binary search tree in the given order: 10, 1, 3, 5, 15, 12, 16. What is the height of the binary search tree (the height is the maximum distance of a leaf node from the root)? (GATE CS 2004)\n , ,\nChoices:\nA) 2\\n\nB) 3\\n\nC) 4\\n\nD) 6\\n\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Which of the following is an advantage of using variable-length arrays?\nChoices:\nA) Deciding the length of an array at the time of execution\nB) Memory allocation at compile time\nC) Initializing array at compile time\nD) Faster execution of code\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The number of leaf nodes in a rooted tree of n nodes, with each node having 0 or 3 children is:, ,\nChoices:\nA) n/2\nB) (n-1)/3\nC) (n-1)/2\nD) (2n+1)/3\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: 10. The data structure required for Breadth First Traversal on a graph is?\nChoices:\nA) Array\nB) Stack\nC) Tree\nD) Queue\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: In a circular queue, how do you increment the rear end of the queue?\nChoices:\nA) rear++\nB) (rear+1) % CAPACITY\nC) (rear % CAPACITY)+1\nD) rear\u2013\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What datastructures can be used in implementing a free list?\nChoices:\nA) only linked list\nB) linked list or sort trees\nC) arrays\nD) trees\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What are splay trees?\nChoices:\nA) self adjusting binary search trees\nB) self adjusting binary trees\nC) a tree with strings\nD) a tree with probability distributions\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Each level in a k-d tree is made of?\nChoices:\nA) dimension only\nB) cutting and dimension\nC) color code of node\nD) size of the level\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What will be the output of the following code?\n\n#include <bits/stdc++.h> \nusing namespace std; \n \nvoid func(int arr[], int n) \n{  \n int count[n]; \n memset(count, 0, sizeof(count)); \n \n for (int i=n-2; i>=0; i--) \n { \n  if (arr[i] >= n - i - 1) \n   count[i]++; \n \n  for (int j=i+1; j < n-1 && j <= arr[i] + i; j++) \n \n   if (count[j] != -1) \n    count[i] += count[j]; \n \n  if (count[i] == 0) \n   count[i] = -1; \n } \n \n for (int i=0; i<n; i++) \n  cout << count[i] << \" \"; \n} \n \nint main() \n{ \n int arr[] = {1, 3, 5, 8, 9}; \n int n = sizeof(arr) / sizeof(arr[0]); \n func(arr, n); \n return 0; \n}\nCode: #include <bits/stdc++.h>\nChoices:\nA) 3\nB) 4\nC) 4 4 2 1 0\nD) 4 2 2 0 1\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Which data structure is used for implementing recursion?\nChoices:\nA) Queue\nB) Stack\nC) Array\nD) List\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The following numbers are inserted into an empty binary search tree in the given order: 10, 1, 3, 5, 15, 12, 16 What is the height of the binary search tree ?, ,\nChoices:\nA) 3\nB) 4\nC) 5\nD) 6\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Hard",
        "target_text": "Question: Merging 4 sorted files containing 50, 10, 25 and   15 records will take \u2026\u2026\u2026\u2026 time, ,\nChoices:\nA) O(100)\nB) O(200)\nC) O(175)\nD) O(125)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: The equivalent infix expression and value for the postfix form 1 2 + 3 * 4 5 * \u2013 will be ___________\nChoices:\nA) 1 + 2 * 3 \u2013 4 * 5 and -13\nB) (2 + 1) * (3 \u2013 4) * 5 and 13\nC) 1 + 2 * (3 \u2013 4) * 5 and -11\nD) (1 + 2) * 3 \u2013 (4 * 5) and -11\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Consider a situation of writing a binary tree into a file with memory storage efficiency in mind, is array representation of tree is good?\nChoices:\nA) yes because we are overcoming the need of pointers and so space efficiency\nB) yes because array values are indexable\nC) No it is not efficient in case of sparse trees and remaning cases it is fine\nD) No linked list representation of tree is only fine\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Which of the following is not the properties of XOR lists?\nChoices:\nA) X\u2295X = 0\nB) X\u22950 = X\nC) (X\u2295Y)\u2295Z = X\u2295(Y\u2295Z)\nD) X\u22950 = 1\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: Which of the following option is not correct?, ,\nChoices:\nA) If the queue is implemented with a linked list, keeping track of a front pointer, Only rear pointer s will change during an insertion into an non-empty queue.\nB) Queue data structure can be used to implement least recently used (LRU) page fault algorithm and Quick short algorithm.\nC) Queue data structure can be used to implement Quick short algorithm but not least recently used (LRU) page fault algorithm.\nD) Both (A) and (C)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What is the space complexity of the in-order traversal in the recursive fashion? (d is the tree depth and n is the number of nodes)\nChoices:\nA) O(1)\nB) O(nlogd)\nC) O(logd)\nD) O(d)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Travelling salesman problem is an example of   \u2026\u2026\u2026\u2026\u2026\u2026., ,\nChoices:\nA) Dynamic Algorithm\nB) Greedy Algorithm\nC) Recursive Approach\nD) Divide & Conquer\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Consider a two dimensional array A[20][10]. Assume 4 words per memory cell, the base address of array A is 100, elements are stored in row-major order and first element is A[0][0]. What is the address of A[11][5] ?, ,\nChoices:\nA) 560\nB) 460\nC) 570\nD) 575\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Which of the following is a disadvantage of dynamic arrays?\nChoices:\nA) Locality of reference\nB) Data cache utilization\nC) Random access\nD) Memory leak\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: Which of the following is not true?\nChoices:\nA) Trie requires less storage space than hashing\nB) Trie allows listing of all the words with same prefix\nC) Tries are collision free\nD) Trie is also known as prefix tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Search and difficulty=Hard",
        "target_text": "Question: What is the formula to find the expected number of probes for an unsuccessful search in linear probing?\na)\n1\n2\n1+1\n(1\u2212\u2144)\n\nb)\n1\n2\n1+1\n(1\u2212\u2144\n)\n2\n\nc)\n1\n2\n1+1\n(1+\u2144)\n\nd)\n1\n2\n1+1\n(1+\u2144)(1\u2212\u2144)\nChoices:\nA) 1\nB) 1\nC) 1\nD) 1\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: If locality is a concern, you can use \u2026\u2026\u2026\u2026\u2026. to   traverse the graph., ,\nChoices:\nA) Breadth First Search\nB) Depth First Search\nC) Either BFS or DFS\nD) None of these\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Which of the following is false?\nChoices:\nA) 2-3 tree requires less storage than the BST\nB) lookup in 2-3 tree is more efficient than in BST\nC) 2-3 tree is shallower than BST\nD) 2-3 tree is a balanced tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: How do you instantiate an array in Java?\nChoices:\nA) int arr[] = new int(3);\nB) int arr[];\nC) int arr[] = new int[3];\nD) int arr() = new int(3);\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Does Van Emde Boas data structure perform all operation in O (log (log M)) time where M = 2m.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: A queue is a,, ,\nChoices:\nA) FIFO (First In First Out) list.\nB) LIFO (Last In First Out) list.\nC) Ordered array.\nD) Linear tree.\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: What is the complexity of adding an element to the heap.\nChoices:\nA) O(log n)\nB) O(h)\nC) O(log n) & O(h)\nD) O(n)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Is mathematical randomized tree can be generated using beta distribution.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What is the space complexity of the code that uses merge sort for determining the number of inversions in an array?\nChoices:\nA) O(n)\nB) O(log n)\nC) O(1)\nD) O(n log n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Consider the following function that takes reference to head of a Doubly Linked List as parameter. Assume that a node of doubly linked list has previous pointer as prev and next pointer as next. , void fun(struct node **head_ref) {\n    struct node *temp = NULL;\n    struct node *current = *head_ref;\n\n    while (current != NULL) {\n        temp = current->prev;\n        current->prev = current->next;\n        current->next = temp;\n        current = current->prev;\n    }\n\n    if (temp != NULL)\n        *head_ref = temp->prev;\n},\nChoices:\nA) 2 <--> 1 <--> 4 <--> 3 <--> 6 <-->5\nB) 5 <--> 4 <--> 3 <--> 2 <--> 1 <-->6.\nC) 6 <--> 5 <--> 4 <--> 3 <--> 2 <--> 1.\nD) 6 <--> 5 <--> 4 <--> 3 <--> 1 <--> 2\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: Which of the following problems occur due to linear probing?\nChoices:\nA) Primary collision\nB) Secondary collision\nC) Separate chaining\nD) Extendible hashing\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: An error is thrown if the character \u2018\\n\u2019 is pushed in to the character stack.\nChoices:\nA) true\nB) false\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: : It is not possible to reach the end of an array if starting element of the array is 0.\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: The associativity of an exponentiation operator ^ is right side.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: What is the time taken to delete a minimum element in a leftist heap?\nChoices:\nA) O(N)\nB) O(N log N)\nC) O(log N)\nD) O(M log N)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Memory usage in triply linked list is higher than doubly linked list.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: In what time can a 2-d tree be constructed?\nChoices:\nA) O(N)\nB) O(N log N)\nC) O(N2)\nD) O(M log N)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: The process of accessing data stored in a serial   access memory is similar to manipulating data on a   \u2026\u2026\u2026\u2026\u2026, ,\nChoices:\nA) heap\nB) queue\nC) stack \\n (A) heap \\n (B) queue \\n (C) stack\nD) binary tree\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Dynamic arrays overcome the limit of static arrays.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What is sparsity of a matrix?\nChoices:\nA) The fraction of zero elements over the total number of elements\nB) The fraction of non-zero elements over the total number of elements\nC) The fraction of total number of elements over the zero elements\nD) The fraction of total number of elements over the non-zero elements\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: 34. What is a dequeue?\nChoices:\nA) A queue implemented with both singly and doubly linked lists\nB) A queue with insert/delete defined for front side of the queue\nC) A queue with insert/delete defined for both front and rear ends of the queue\nD) A queue implemented with a doubly linked list\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What is the disadvantage of using splay trees?\nChoices:\nA) height of a splay tree can be linear when accessing elements in non decreasing order.\nB) splay operations are difficult\nC) no significant disadvantage\nD) splay tree performs unnecessary splay when a node is only being read\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: Is decrease priority operation performed more quickly in a ternary heap with respect to the binary heap.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: A technique for direct search is \u2026\u2026\u2026\u2026, ,\nChoices:\nA) Binary Search\nB) Linear Search\nC) Tree Search\nD) Hashing\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What may be the psuedo code for finding the size of a tree?\nChoices:\nA) find_size(root_node\u2013>left_node) + 1 + find_size(root_node\u2013>right_node)\nB) find_size(root_node\u2013>left_node) + find_size(root_node\u2013>right_node)\nC) find_size(root_node\u2013>right_node) \u2013 1\nD) find_size(root_node\u2013>left_node + 1\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: If A \ua4f5 B (A and B are two clusters) is a singleton set then it is a Merge able cluster.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: Hashing can be used in online spelling checkers.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: To rotate an array by using the algorithm of rotating its elements one by one is an in place algorithm.\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: Binary Decision Diagram is a type of __________\nChoices:\nA) Multigraph\nB) Cyclic Graph\nC) Directed Acyclic Graph\nD) Directed Acyclic Word Graph\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: Which of the following are components of Hashing?, ,\nChoices:\nA) Key\nB) Hash Function\nC) Hash Table\nD) All of the above\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: Which among the following is the best technique to handle collision?\nChoices:\nA) Quadratic probing\nB) Linear probing\nC) Double hashing\nD) Separate chaining\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: What is the amortized cost per operation of a skew heap?\nChoices:\nA) O(N)\nB) O(N log N)\nC) O(N2)\nD) O(log N)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: A three dimensional array in \u2018C++\u2019 is declared as int A[x][y][z]. Consider that array elements are stored in row major order and indexing begins from 0. Here, the address of an item at the location A[p][q][r] can be computed as follows (where w is the word length of an integer):, ,\nChoices:\n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which of the following array position will be occupied by a new element being pushed for a stack of size N elements(capacity of stack > N)?\nChoices:\nA) S[N-1]\nB) S[N]\nC) S[1]\nD) S[0]\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What are the main applications of tree data structure?, ,\nChoices:\nA) 1, 2, 3, 4 and 6\nB) 1, 2, 3, 4 and 5\nC) 1, 3, 4, 5 and 6\nD) 1, 2, 3, 4, 5 and 6\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: The following steps in a linked list, ,\nChoices:\nA) pop operation in stack\nB) removal of a node\nC) inserting a node at beginning\nD) modifying an existing node\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: The nodes in a skip list may have many forward references. their number is determined\nChoices:\nA) probabilistically\nB) randomly\nC) sequentially\nD) orthogonally\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Medium",
        "target_text": "Question: What is the function present to sort a string in C++?, ,\nChoices:\nA) sort();\nB) sort(str.begin(), str.end());\nC) Sort_asec();\nD) None\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the definition for Ackermann\u2019s function?\nChoices:\nA) A(1,i) = i+1 for i>=1\nB) A(i,j) = i+j for i>=j\nC) A(i,j) = i+j for i = j\nD) A(1,i) = i+1 for i<1\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: Which of the following statement is incorrect with respect to infix to postfix conversion algorithm?\nChoices:\nA) operand is always placed in the output\nB) operator is placed in the stack when the stack operator has lower precedence\nC) parenthesis are included in the output\nD) higher and equal priority operators follow the same condition\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Which among the following best represents the computational complexity of GLR parsing?\nChoices:\nA) O(|G| x n)\nB) O(|G|2 x n)\nC) O(|G| x n2)\nD) O(|G|2 x n2)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: 2-3-4 trees are B-trees of order 4. They are an isometric of _____ trees.\nChoices:\nA) AVL\nB) AA\nC) 2-3\nD) Red-Black\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: Complete the given snippet of code for the adjacency list representation of a weighted directed graph.\nChoices:\nA) vertex, vertex\nB) neighbor, vertex\nC) neighbor, neighbor\nD) vertex, neighbor\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: What is a hash table?\nChoices:\nA) A structure that maps values to keys\nB) A structure that maps keys to values\nC) A structure used for storage\nD) A structure used to implement stack and queue\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Which of the following is an infix expression?\nChoices:\nA) (a+b)*(c+d)\nB) ab+c*\nC) +ab\nD) abc+*\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Is the given statement ((A+B) + [C-D]] valid with respect to balancing of symbols?\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: How many edges does a leaf cluster contain?\nChoices:\nA) 0\nB) 1\nC) 2\nD) 3\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What is the run time efficiency of an insertion algorithm?\nChoices:\nA) O(N)\nB) O(log N)\nC) O(N2)\nD) O(M log N)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the postfix expression for the following infix expression?\nChoices:\nA) abc^/d-\nB) ab/cd^-\nC) ab/^cd-\nD) abcd^/-\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: In C programming, when we remove an item   from bottom of the stack, then:, ,\nChoices:\nA) The stack will fall down.\nB) Stack will rearrange items. \\n (A) The stack will fall down. \\n (B) Stack will rearrange items.\nC) It will convert to LIFO\nD) This operation is not allowed.\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Which of the following is/are not applications of bit arrays?\nChoices:\nA) Used by the Linux kernel\nB) For the allocation of memory pages\nC) Bloom filter\nD) Implementation of Vectors and Matrices\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: What is the functionality of the following code? Choose the most appropriate answer., int function()\n{\n    if (head == null)\n        return Integer.MIN_VALUE;\n    int var;\n    Node temp = head;\n    while (temp.getNext() != head)\n        temp = temp.getNext();\n    if (temp == head) {\n        var = head.getItem();\n        head = null;\n        return var;\n    }\n    temp.setNext(head.getNext());\n    var = head.getItem();\n    head = head.getNext();\n    return var;\n},\nChoices:\nA) Return data from the end of the list\nB) Returns the data and deletes the node at the end of the list\nC) Returns the data from the beginning of the list\nD) Returns the data and deletes the node from the beginning of the list\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What is the following code segment doing?   void fn( ){   char c;   cin.get(c);   if (c != \u2018\\n\u2019) {   fn( );   \f cout.put(c);   }   }, ,\nChoices:\nA) The string entered is printed as it is.\nB) The string entered is printed in reverse order.\nC) It will go in an infinite loop.\nD) It will print an empty line.\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What must be the missing logic in place of missing lines for finding sum of nodes of binary tree in alternate levels?\n\n//e.g:-consider -complete binary tree:-height-3, [1,2,3,4,5,6,7]-answer must be 23\n  n=power(2,height)-1; //assume input is height and a[i] contains tree elements\n  for(i=1;i<=n;)\n  {\n        //present level is initialized to 1 and sum is initialized to  0\n        for(j=1;j<=pow(2,currentlevel-1);j++) \n        {\n           sum=sum+a[i];\n           i=i+1;\n        }\n     //missing logic\n  }\n\nd)\nChoices:\nA) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the condition for priority of a node in a treap?\nChoices:\nA) a node\u2019s priority should be greater than its parent\nB) a node\u2019s priority should be at least as large as its parent\nC) the priority is randomly assigned and can have any value\nD) a node\u2019s priority is always given in decreasing order\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: What is the disadvantage of hashing with chaining?\nChoices:\nA) not easy to implement\nB) takes more space\nC) quite sensitive to hash function\nD) table gets filled up easily\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: In infix to postfix conversion algorithm, the operators are associated from?\nChoices:\nA) right to left\nB) left to right\nC) centre to left\nD) centre to right\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What maximum difference in heights between the leafs of a AVL tree is possible?\nChoices:\nA) log(n) where n is the number of nodes\nB) n where n is the number of nodes\nC) 0 or 1\nD) atmost 1\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: The prefix form of A-B/ (C * D ^ E) is?\nChoices:\nA) -/*^ACBDE\nB) -ABCD*^DE\nC) -A/B*C^DE\nD) -A/BC*^DE\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: The essential condition which is checked before insertion in a linked queue is?\nChoices:\nA) Underflow\nB) Overflow\nC) Front value\nD) Rear value\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: At what position the number 72 gets inserted in the following table?\nChoices:\nA) 3\nB) 10\nC) 4\nD) 6\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: The smallest element of an array\u2019s index is   called its, ,\nChoices:\nA) lower bound\nB) upper bound\nC) range\nD) extraction\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: 2. What are the disadvantages of arrays?\nChoices:\nA) Index value of an array can be negative\nB) Elements are sequentially accessed\nC) Data structure like queue or stack cannot be implemented\nD) There are chances of wastage of memory space if elements inserted in an array are lesser than the allocated size\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: B+ trees are preferred to binary trees in databases because (GATE CS 2000), ,\nChoices:\nA) Disk capacities are greater than memory capacities\nB) Disk access is much slower than memory access\nC) Disk data transfer rates are much less than memory data transfer rates\nD) Disks are more reliable than memory\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is missing in this logic of finding a path in the tree for a given sum (i.e checking whether there will be a path from roots to leaf nodes with given sum)?\n\ncheckSum(struct bin-treenode *root , int sum) :\n  if(root==null)\n    return sum as 0\n  else :\n     leftover_sum=sum-root_node-->value\n     //missing\nif(rootnode):\n  mirror(rootnode-->left)\n  mirror(rootnode-->right)\n \n  //missing\n \nend\nChoices:\nA) swapping of left and right nodes is missing\nB) swapping of left with root nodes is missing\nC) swapping of right with root nodes is missing\nD) nothing is missing\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: A graph with all vertices having equal degree is known as a __________\nChoices:\nA) Multi Graph\nB) Regular Graph\nC) Simple Graph\nD) Complete Graph\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: 1. Which of these best describes an array?\nChoices:\nA) A data structure that shows a hierarchical behavior\nB) Container of objects of similar types\nC) Arrays are immutable once initialised\nD) Array is not a data structure\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: The OS of a computer may periodically collect   all the free memory space to form contiguous block   of free space. This is called:   154. The OS of a computer may periodically collect   all the free memory space to form contiguous block   of free space. This is called:, ,\nChoices:\nA) Concatenation\nB) Garbage collection\nC) Collision\nD) Dynamic Memory Allocation\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: Which of the following is difficult to determine the right path length?\nChoices:\nA) Skew heaps\nB) Binomial tree\nC) Leftist heap\nD) d-heap\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: If arity of operators is fixed, then which of the following notations can be used to parse expressions without parentheses? a) Infix Notation (Inorder traversal of a expression tree) b) Postfix Notation (Postorder traversal of a expression tree) c) Prefix Notation (Preorder traversal of a expression tree), ,\nChoices:\nA) b and c\nB) Only b\nC) a, b and c\nD) None of them\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: The process of accessing data stored in a serial access memory is similar to manipulating data on a ________\nChoices:\nA) Heap\nB) Binary Tree\nC) Array\nD) Stack\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: What is indexed skip list?\nChoices:\nA) it stores width of link in place of element\nB) it stores index values\nC) array based linked list\nD) indexed tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: Hash tree is generalization of ______\nChoices:\nA) Heap\nB) Hash list\nC) BST\nD) B \u2013 tree\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Of the following choices, which operator has the lowest precedence?\nChoices:\nA) ^\nB) +\nC) /\nD) #\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Elements in a tree can be indexed by its position under the ordering of the keys and the ordinal position of an element can be determined, both with good efficiency.\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: If there are c children of the root, how many calls to the merge procedure is required to reassemble the heap?\nChoices:\nA) c\nB) c+1\nC) c-1\nD) 1\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: What is the maximum possible number of edges in a directed graph with no self loops having 8 vertices?\nChoices:\nA) 28\nB) 64\nC) 256\nD) 56\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: LLRB maintains 1-1 correspondence with 2\u20133 trees.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: An undirected graph G with n vertices and e   edges is represented by adjacency list. What is the   time required to generate all the connected   components?, ,\nChoices:\nA) O(n)\nB) O(e)\nC) O(e+n)\nD) O(e2)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which data structure is used to maintain a dynamic forest using a link or cut operation?\nChoices:\nA) Top Tree\nB) Array\nC) Linked List\nD) Stack\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: What will be the position of 5, when a max heap is constructed on the input elements 5, 70, 45, 7, 12, 15, 13, 65, 30, 25?\nChoices:\nA) 5 will be at root\nB) 5 will be at last level\nC) 5 will be at second level\nD) 5 can be anywhere in heap\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: Can the two edges that are coming out of a node have labels of string beginning with the same character?\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Let G be a weighted graph with edge weights greater than one and G'be the graph constructed by squaring the weights of edges in G. Let T and T' be the minimum spanning trees of G and G', respectively, with total weights t and t'. Which of the following statements is TRUE?, ,\nChoices:\nD) None of the above\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Who among the following provided the first online contribution of Suffix Tree?\nChoices:\nA) Weiner\nB) Samuel F. B. Morse\nC) Ukkonen\nD) Alexander Morse\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: How many children does a binary tree have?\nChoices:\nA) 2\nB) any number of children\nC) 0 or 1 or 2\nD) 0 or 1\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: Which of the following technique stores data separately in case of a collision?\nChoices:\nA) Open addressing\nB) Double hashing\nC) Quadratic probing\nD) Chaining using a binary tree\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Following code snippet is the function to insert a string in a trie. Find the missing line.\n\nprivate void insert(String str)\n    {\n        TrieNode node = root;\n        for (int i = 0; i < length; i++)\n        {\n            int index = key.charAt(i) - 'a';\n            if (node.children[index] == null)\n                node.children[index] = new TrieNode();\n \n            ________________________\n        }\n \n        node.isEndOfWord = true;\n    }\nChoices:\nA) node = node.children[index];\nB) node = node.children[str.charAt(i + 1)];\nC) node = node.children[index++];\nD) node = node.children[index++];\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: The extra key inserted at the end of the array is   called a \u2026\u2026\u2026\u2026\u2026, ,\nChoices:\nA) End Key\nB) Stop Key\nC) Sentinel\nD) Transposition\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: Select the code snippet which performs level-order traversal.\na)\n\npublic static void levelOrder(Tree root) \n{  \n    Queue<Node> queue=new LinkedList<Node>();  \n    queue.add(root);  \n    while(!queue.isEmpty())  \n    {  \n        Node tempNode=queue.poll();  \n        System.out.println(\"%d \",tempNode.data);  \n        if(tempNode.left!=null)  \n        queue.add(tempNode.left);  \n        if(tempNode.right!=null)  \n        queue.add(tempNode.right);  \n    }  \n}\npublic static void levelOrder(Tree root) \n{  \n    Queue<Node> queue=new LinkedList<Node>();  \n    queue.add(root);  \n    while(!queue.isEmpty())  \n    {  \n        Node tempNode=queue.poll();  \n        System.out.println(\"%d \",tempNode.data);  \n        if(tempNode.left!=null)  \n        queue.add(tempNode.right);  \n        if(tempNode.right!=null)  \n        queue.add(tempNode.left);  \n    }  \n}\npublic static void levelOrder(Tree root) \n{  \n    Queue<Node> queue=new LinkedList<Node>();  \n    queue.add(root);  \n    while(!queue.isEmpty())  \n    {  \n        Node tempNode=queue.poll();  \n        System.out.println(\"%d \",tempNode.data);  \n        if(tempNode.right!=null)  \n        queue.add(tempNode.left);  \n        if(tempNode.left!=null)  \n        queue.add(tempNode.right);  \n    }  \n}\npublic static void levelOrder(Tree root) \n{  \n    Queue<Node> queue=new LinkedList<Node>();  \n    queue.add(root);  \n    while(!queue.isEmpty())  \n    {  \n        Node tempNode=queue.poll();  \n        System.out.println(\"%d \",tempNode.data);  \n        if(tempNode.right!=null)  \n        queue.add(tempNode.left.left);  \n        if(tempNode.left!=null)  \n        queue.add(tempNode.right.right);  \n    }  \n}\n\nd)\nChoices:\nA) public static void levelOrder(Tree root)\nB) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: What will be the resulting array after reversing arr[]={3,5,4,2}?\nChoices:\nA) 2,3,5,4\nB) 4,2,3,5\nC) 5,4,2,3\nD) 2,4,5,3\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Which type of data structure does rope represent?\nChoices:\nA) Array\nB) Linked List\nC) Queue\nD) Binary Tree\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: What will be the height of the hash tree with branching factor 2 and with 8 records?\nChoices:\nA) 3\nB) 5\nC) 4\nD) 6\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: In a Binary Decision Diagrams 0 values by a _________ line and the 1 values are represented by a _________ line.\nChoices:\nA) dashed, bold\nB) bold, dashed\nC) dotted, bold\nD) dotted, dashed\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: Quick sort is also known as \u2026\u2026\u2026\u2026., ,\nChoices:\nA) Merge sort\nB) Heap sort\nC) Bubble sort\nD) None of these\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What is the value of the Jaccard index when the two sets are disjoint?\nChoices:\nA) 1\nB) 2\nC) 3\nD) 0\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: A linear list of elements in which deletion can   be done from one end (front) and insertion can take   place only at the other end (rear) is known as a   \u2026\u2026\u2026\u2026\u2026.., ,\nChoices:\nA) Queue\nB) Stack\nC) Tree\nD) Linked list \\n (A) Queue \\n (B) Stack \\n (C) Tree \\n (D) Linked list\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: A complete binary min-heap is made by including each integer in [1, 1023] exactly once. The depth of a node in the heap is the length of the path from the root of the heap to that node. Thus, the root is at depth 0. The maximum depth at which integer 9 can appear is _____________, ,\nChoices:\nA) 6\nB) 7\nC) 8\nD) 9\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What would be the Prefix notation for the given equation?\nChoices:\nA) +*AB*CD\nB) *+AB*CD\nC) **AB+CD\nD) +*BA*CD\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: Which one of the following is an application of Queue Data Structure?, ,\nChoices:\nA) When a resource is shared among multiple consumers.\nB) When data is transferred asynchronously (data not necessarily received at same rate as sent) between two processes\nC) Load Balancing\nD) All of the above\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: Which of the following is not a technique to avoid a collision?\nChoices:\nA) Make the hash function appear random\nB) Use the chaining method\nC) Use uniform hashing\nD) Increasing hash table size\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: 13. Elements in an array are accessed _____________\nChoices:\nA) randomly\nB) sequentially\nC) exponentially\nD) logarithmically\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Choose the code snippet which inserts a node to the head of the list?, ,\nChoices:\nA) public void insertHead(int data)\\n{\\nNode temp = new Node(data);\\nNode cur = head;\\nwhile(cur.getNext() != head)\\n cur = cur.getNext()\\nif(head == null)\\n{\\n head = temp;\\n head.setNext(head);\\n}\\nelse\\n{\\n temp.setNext(head);\\n head = temp;\\n cur.setNext(temp);\\n}\\nsize++;\\n}\\n\nB) public void insertHead(int data)\\n{\\nNode temp = new Node(data);\\nwhile(cur != head)\\n cur = cur.getNext()\\nif(head == null)\\n{\\n head = temp;\\n head.setNext(head);\\n}\\nelse\\n{\\n temp.setNext(head.getNext());\\n cur.setNext(temp);\\n}\\nsize++;\\n}\nC) public void insertHead(int data)\\n{\\nNode temp = new Node(data);\\nif(head == null)\\n{\\n head = temp;\\n head.setNext(head);\\n}\\nelse\\n{\\n temp.setNext(head.getNext());\\n head = temp;\\n}\\nsize++;\\n}\nD) public void insertHead(int data)\\n{\\nNode temp = new Node(data);\\nif(head == null)\\n{\\n head = temp;\\n head.setNext(head.getNext());\\n}\\nelse\\n{\\n temp.setNext(head.getNext());\\n head = temp;\\n}\\nsize++;\\n}\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: A strictly binary tree with 10 leaves, ,\nChoices:\nA) cannot have more than 19 nodes\nB) has exactly 19 nodes\nC) has exactly 17 nodes\nD) has exactly 20 nodes\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: Which of the following techniques offer better cache performance?\nChoices:\nA) Quadratic probing\nB) Linear probing\nC) Double hashing\nD) Rehashing\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: 18. Which of the following data structures can be used for parentheses matching?\nChoices:\nA) n-ary tree\nB) queue\nC) priority queue\nD) stack\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: Convert the following Infix expression to Postfix form using a stack.\nx + y * z + (p * q + r) * s, Follow usual precedence rule and assume that the expression is legal.\nChoices:\nA) xyz*+pq*r+s*+\nB) xyz*+pq*r+s+*\nC) xyz+*pq*r+s*+\nD) xyzp+**qr+s*+\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Array is divided into two parts in ____________\nChoices:\nA) Hashed Array Tree\nB) Geometric Array\nC) Bounded-size dynamic array\nD) Sparse Array\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What is the upper bound for maximum leaves in K-ary tree with height h?\nChoices:\nA) K*h\nB) K^h\nC) K+h\nD) K-h\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: In balancing parentheses algorithm, the string is read from?\nChoices:\nA) right to left\nB) left to right\nC) center to right\nD) center to left\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: A sort which relatively passes through a list to   exchange the first element with any element less   than it and then repeats with a new first element is   called \u2026\u2026\u2026\u2026\u2026., ,\nChoices:\nA) Insertion sort\nB) Selection sort\nC) Heap sort\nD) Quick sort\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: The pre-order and post order traversal of a   Binary Tree generates the same output. The tree can   have maximum \u2026\u2026\u2026\u2026.., ,\nChoices:\nA) Three nodes\nB) Two nodes\nC) One node\nD) Any number of nodes\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Medium",
        "target_text": "Question: Guess the output:, ,\nChoices:\nA) \"10 20\"\nB) 30\nC) 10 20\nD) 1020\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: The column sum in an incidence matrix for a directed graph having no self loop is __________\nChoices:\nA) 0\nB) 1\nC) 2\nD) equal to the number of edges\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: Every Binary Decision Diagram is also a Propositional Directed Acyclic Graph.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: In postorder traversal of binary tree right subtree is traversed before visiting root.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: How many bits are needed to specify the single permutation by min-wise independent family?\nChoices:\nA) O (log n!)\nB) O (n!)\nC) \u03a9 (n2)\nD) \u03a9 (n)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Which of the following array element will return the top-of-the-stack-element for a stack of size N elements(capacity of stack > N)?\nChoices:\nA) S[N-1]\nB) S[N]\nC) S[N-2]\nD) S[N+1]\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: How many properties will an equivalent relationship satisfy?\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Which one of the following array elements represents a binary min heap?\nChoices:\nA) 12 10 8 25 14 17\nB) 8 10 12 25 14 17\nC) 25 17 14 12 10 8\nD) 14 17 25 10 12 8\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Auto complete and spell checkers can be implemented efficiently using the trie.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: What data structure is used when converting an infix notation to prefix notation?\nChoices:\nA) Stack\nB) Queue\nC) B-Trees\nD) Linked-list\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What is the prime condition of AA-tree which makes it simpler than a red-black tree?\nChoices:\nA) Only right children can be red\nB) Only left children can be red\nC) Right children should strictly be black\nD) There should be no left children\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: log2 n nodes, ,\nChoices:\nA) log2 n nodes\nB) n+1 nodes\nC) 2n nodes\nD) 2n+1 nodes\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: How will you implement dynamic arrays in Java?\nChoices:\nA) Set\nB) Map\nC) HashMap\nD) List\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: What is the advantage of a hash table as a data structure?\nChoices:\nA) faster access of data\nB) easy to implement\nC) very efficient for less number of entries\nD) exhibit good locality of reference\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Who coined the term Sparse Matrix?\nChoices:\nA) Harry Markowitz\nB) James Sylvester\nC) Chris Messina\nD) Arthur Cayley\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is the run time of finding the nearest neighbour in a k-d tree?\nChoices:\nA) O(2+ log N)\nB) O( log N)\nC) O(2d log N)\nD) O( N log N)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: In order to get the contents of a Binary search   tree in ascending order, one has to traverse it in   \u2026\u2026\u2026\u2026, ,\nChoices:\nA) pre-order\nB) in-order\nC) post order\nD) not possible\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: For the given conditions, which of the following is in the correct order of increasing space requirement?\ni) Undirected, no weight\nii) Directed, no weight\niii) Directed, weighted\niv) Undirected, weighted\nChoices:\nA) ii iii i iv\nB) i iii ii iv\nC) iv iii i ii\nD) i ii iii iv\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which of the following is not a sequence   container provided by the STL?, ,\nChoices:\nA) vector\nB) array\nC) list\nD) deque\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Which traversal is shown by this pseudo code?, ,\nChoices:\nA) In-order\nB) Level Order\nC) Post-order\nD) Pre-order\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Which among the following is a typical declaration of an unrolled linked list in C?\na)\n\nd)\nChoices:\nA) d)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Which data structure represents a waiting line   and limits insertions to be made at the back of the   data structure and limits removals to be made from   the front?, ,\nChoices:\nA) Stack\nB) Queue\nC) Binary tree\nD) Linked list\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which parsing approach is followed by syntax tree?\nChoices:\nA) Top-down parsing\nB) Bottom-up parsing\nC) Predictive parsing\nD) Shift reduce parsing\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: A queue follows __________\nChoices:\nA) FIFO (First In First Out) principle\nB) LIFO (Last In First Out) principle\nC) Ordered array\nD) Linear tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Arbitrary expressions can be used while declaring variable-length arrays.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: In quadratic probing, if the table size is prime, a new element cannot be inserted if the table is half full.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Medium",
        "target_text": "Question: To partition unsorted list a pivot element is   176. To partition unsorted list a pivot element is  used in \u2026\u2026\u2026\u2026\u2026, ,\nChoices:\nA) Merge Sort\nB) Quick Sort\nC) Insertion Sort\nD) Selection Sort\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: The number of structurally different possible binary trees with 4 nodes is, ,\nChoices:\nA) 14\nB) 12\nC) 336\nD) 168\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: Determine the number of vertices for the given Graph or Multigraph?\nG is a 4-regular Graph having 12 edges.\nChoices:\nA) 3\nB) 6\nC) 4\nD) Information given is insufficient\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Which type of binary tree does rope require to perform basic operations?\nChoices:\nA) Unbalanced\nB) Balanced\nC) Complete\nD) Full\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: How many child nodes does each node of K-ary Tree contain?\nChoices:\nA) 2\nB) 3\nC) more than k\nD) at most k\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: Output of given program is,, def findSymPairs(arr, row):\n    hM = dict()\n    for i in range(row):\n        first = arr[i][0]\n        sec = arr[i][1]\n        if (sec in hM.keys() and hM[sec] == first):\n            print(\"(\", sec,\",\", first, \")\")\n        else:\n            hM[first] = sec\n        \nif __name__ == '__main__':\n    arr = [[0 for i in range(2)]\n      for i in range(5)]\n    arr[0][0], arr[0][1] = 11, 20\n    arr[1][0], arr[1][1] = 30, 40\n    arr[2][0], arr[2][1] = 5, 10\n    arr[3][0], arr[3][1] = 40, 30\n    arr[4][0], arr[4][1] = 10, 5\n    findSymPairs(arr, 5),\nChoices:\nA) (30, 40)\\n(5, 10)\nB) (30, 40)\\n(5, 5)\nC) (30, 4)\\n(5, 1)\nD) (3, 4)\\n(5, 1)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: A queue data-structure can be used for   \u2026\u2026\u2026\u2026\u2026, ,\nChoices:\nA) expression parsing\nB) recursion\nC) resource allocation\nD) all of these\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: Which of the following is the application of minimum ternary heap?\nChoices:\nA) Prim\u2019s Algorithm\nB) Euclid\u2019s Algorithm\nC) Eight Queen Puzzle\nD) Tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Let A be a square matrix of size n x n. Consider the following program. What is the expected output? , ,\nChoices:\nA) The matrix A itself\nB) Transpose of matrix A\nC) Adding 100 to the upper diagonal elements and subtracting 100 from diagonal elements of A\nD) Inverse of matrix A\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: In binary heap, whenever the root is removed   then the rightmost element of last level is replaced   by the root. Why?, ,\nChoices:\nA) It is the easiest possible way.\nB) To make sure that it is still complete binary tree.\nC) Because left and right subtree might be missing.\nD) None of these\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: What will be the output of the following code?\n\n#include <bits/stdc++.h> \nusing namespace std; \nvoid func1(int arr[], int left, int right) \n{ \n while (left < right) \n { \n  int temp = arr[left]; \n  arr[left] = arr[right]; \n  arr[right] = temp; \n  left++; \n  right--; \n } \n} \n \nvoid func(int arr[], int d, int n) \n{ \n func1(arr, 0, d-1); \n func1(arr, d, n-1); \n func1(arr, 0, n-1); \n} \n \nvoid printArray(int arr[], int size) \n{ \n for (int i = 0; i < size; i++) \n cout << arr[i] << \" \"; \n} \n \nint main() \n{ \n int arr[] = {1, 2, 3, 4, 5}; \n int n = sizeof(arr)/sizeof(arr[0]); \n int d = 2; \n func(arr, d, n); \n printArray(arr, n); \n \n return 0; \n}\nCode: #include <bits/stdc++.h>\nChoices:\nA) 3 2 1 4 5\nB) 3 4 5 1 2\nC) 5 4 3 2 1\nD) error\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: Consider you have a stack whose elements in it are as follows.\n5 4 3 2 << top\nWhere the top element is 2.\nYou need to get the following stack\n6 5 4 3 2 << top\nThe operations that needed to be performed are (You can perform only push and pop):\nChoices:\nA) Push(pop()), push(6), push(pop())\nB) Push(pop()), push(6)\nC) Push(pop()), push(pop()), push(6)\nD) Push(6)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: In a hash table of size 10, where is element 7 placed?\nChoices:\nA) 6\nB) 7\nC) 17\nD) 16\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What will be the auxiliary space requirement of the following code?\n\n#include <bits/stdc++.h> \nusing namespace std; \nvoid func(int arr[], int left, int right) \n{     \n while (left < right) \n { \n  int temp = arr[left]; \n  arr[left] = arr[right]; \n  arr[right] = temp; \n  left++; \n  right--; \n } \n \n} \n \nvoid printArray(int arr[], int size) \n{ \n    for (int i = 0; i < size; i++) \n    cout << arr[i] << \" \"; \n} \n \nint main() \n{ \n int arr[] = {1,4,3,5}; \n int n = sizeof(arr) / sizeof(arr[0]); \n func(arr, 0, n-1); \n printArray(arr, n); \n return 0; \n}\nCode: #include <bits/stdc++.h>\nChoices:\nA) O(1)\nB) O(n)\nC) O(log n)\nD) O(n log n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The number of ways in which the numbers 1, 2, 3, 4, 5, 6, 7 can be inserted in an empty binary search tree, such that the resulting tree has height 6, is _____________ Note: The height of a tree with a single node is 0. [This question was originally a Fill-in-the-Blanks question], ,\nChoices:\nA) 2\nB) 4\nC) 64\nD) 32\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: The postorder traversal of a binary tree is 8, 9, 6, 7, 4, 5, 2, 3, 1. The inorder traversal of the same tree is 8, 6, 9, 4, 7, 2, 5, 1, 3. The height of a tree is the length of the longest path from the root to any leaf. The height of the binary tree above is ________ .\n\nNote -This was Numerical Type question., ,\nChoices:\nA) 2\nB) 3\nC) 4\nD) 5\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: If a stack S contains the integers 2, -3, 2, -1, 2 in order from bottom to top, what is f(S)?, ,\nChoices:\nA) 6\nB) 4\nC) 3\nD) 2\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: How would you store an element in a sparse matrix?\na)\n\npublic void store(int row_index, int col_index, Object val)\n{\n        if (row_index < 0 || row_index > N)\n {\n            System.out.println(\"row index out of bounds\");\n   return;\n }\n        if (col_index < 0 || col+index > N)\n {\n            System.out.println(\"column index out of bounds\");\n   return;\n }\n        sparse_array[row_index].store(col_index, val);\n}\npublic void store(int row_index, int col_index, Object val)\n{\n        if (row_index < 0 || row_index > N)\n {\n            System.out.println(\"column index out of bounds\");\n   return;\n }\n        if (col_index < 0 || col+index > N)\n {\n            System.out.println(\"row index out of bounds\");\n   return;\n }\n        sparse_array[row_index].store(col_index, val);\n}\npublic void store(int row_index, int col_index, Object val)\n{\n        if (row_index < 0 && row_index > N)\n {\n            System.out.println(\"row index out of bounds\");\n   return;\n }\n        if (col_index < 0 && col+index > N)\n {\n            System.out.println(\"column index out of bounds\");\n   return;\n }\n        sparse_array[row_index].store(col_index, val);\n    }\npublic void store(int row_index, int col_index, Object val)\n{\n        if (row_index < 0 && row_index > N)\n {\n            System.out.println(\"column index out of bounds\");\n   return;\n }\n        if (col_index < 0 && col+index > N)\n {\n            System.out.println(\"row index out of bounds\");\n   return;\n }\n        sparse_array[row_index].store(col_index, val);\n}\n\nd)\nChoices:\nA) public void store(int row_index, int col_index, Object val)\nB) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Trie is also known as _________\nChoices:\nA) Digital Tree\nB) Treap\nC) Binomial Tree\nD) 2-3 Tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: A node can have a minimum of one child.\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: How will you remove a left horizontal link in an AA-tree?\nChoices:\nA) by performing right rotation\nB) by performing left rotation\nC) by deleting both the elements\nD) by inserting a new element\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: Which of the following trait of a hash function is most desirable?\nChoices:\nA) it should cause less collisions\nB) it should cause more collisions\nC) it should occupy less space\nD) it should be easy to implement\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: In a B+ tree, both the internal nodes and the leaves have keys.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Search and difficulty=Hard",
        "target_text": "Question: In binary search, average number of   comparison required for searching an element in a   list if n numbers is:, ,\nChoices:\nA) log2 n\nB) n / 2\nC) n\nD) n \u2013 1\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: How much time a heap will take to Find Min/Max value?, ,\nChoices:\nA) O(logN)\nB) O(N)\nC) O(1)\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Choose the appropriate code that counts the number of non-zero(non-null) elements in the sparse array.\na)\n\nd)\nChoices:\nA) d)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What is the postfix expression for the infix expression?\nChoices:\nA) -ab-c\nB) ab \u2013 c \u2013\nC) \u2013 -abc\nD) -ab-c\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What is a dynamic array?\nChoices:\nA) A variable size data structure\nB) An array which is created at runtime\nC) The memory to the array is allocated at runtime\nD) An array which is reallocated everytime whenever new elements have to be added\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Where does the GNU C compiler allocates memory for variable-length arrays?\nChoices:\nA) Tree\nB) Stack\nC) Linked List\nD) Queue\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: Which of the following ways can be used to represent a graph?\nChoices:\nA) Adjacency List and Adjacency Matrix\nB) Incidence Matrix\nC) Adjacency List, Adjacency Matrix as well as Incidence Matrix\nD) No way to represent\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: Select the function which performs insertion at the front end of the dequeue?\na)\n\npublic void function(Object item)\n{\n Node temp = new Node(item,null);\n if(isEmpty())\n {\n  temp.setNext(trail);\n  head.setNext(temp);\n }\n else\n {\n  Node cur = head.getNext();\n  temp.setNext(cur);\n  head.setNext(temp);\n }\n size++;\n}\npublic void function(Object item)\n{\n Node temp = new Node(item,null);\n if(isEmpty())\n {\n  temp.setNext(trail);\n  head.setNext(trail);\n }\n else\n {\n  Node cur = head.getNext();\n  temp.setNext(cur);\n  head.setNext(temp);\n }\n size++;\n}\npublic void function(Object item)\n{\n Node temp = new Node(item,null);\n if(isEmpty())\n {\n  Node cur = head.getNext();\n  temp.setNext(cur);\n  head.setNext(temp);\n }\n else\n {\n  temp.setNext(trail);\n  head.setNext(temp);\n }\n size++;\n}\npublic void function(Object item)\n{\n Node temp = new Node(item,null);\n if(isEmpty())\n {\n  Node cur = head.getNext();\n  temp.setNext(cur);\n  cur.setNext(temp);\n }\n else\n {\n  head.setNext(trail);\n  trail.setNext(temp);\n }\n size++;\n}\npublic void function(Object item)\n{\n Node temp=new Node(item,trail);\n if(isEmpty())\n {\n  head.setNext(temp);\n  temp.setNext(trail);\n }\n else\n {\n  Node cur=head.getNext();\n  while(cur.getNext()!=trail)\n  {\n   cur=cur.getNext();\n  }\n  cur.setNext(temp);\n }\n size++;\n}\nChoices:\nA) public void function(Object item)\nB) Insert at the front end of the dequeue\nC) Insert at the rear end of the dequeue\nD) Fetch the element at the rear end of the dequeue\nE) Fetch the element at the front end of the dequeue\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: What should be done when an opening parentheses is read in a balancing symbols algorithm?\nChoices:\nA) push it on to the stack\nB) throw an error\nC) ignore the parentheses\nD) pop the stack\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Which of the following symbols represent nodes having exactly one child?\n\ni) \u0394 ii) \u25ca iii) \u2207 iv) T v) \u22a5\nChoices:\nA) iv) and v)\nB) v)\nC) i) and iii)\nD) iii)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: For an undirected graph G with n vertices and e   edges, the sum of the degrees of each vertex is \u2026\u2026..   135. For an undirected graph G with n vertices and e   edges, the sum of the degrees of each vertex is \u2026\u2026.., ,\nChoices:\nA) ne\nB) 2n\nC) 2e\nD) en\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Express -15 as a 6-bit signed binary number.\nChoices:\nA) 001111\nB) 101111\nC) 101110\nD) 001110\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What is the time required to locate the occurrences of a pattern P of length m in a string of length n using suffix array?\nChoices:\nA) O(nm)\nB) O(n2)\nC) O(mnlogn)\nD) O(mlogn)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Reverse Polish Notation is the reverse of a Polish Notation.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What are the disadvantages in implementing buddy system algorithm for free lists?\nChoices:\nA) internal fragmentation\nB) it takes so much space\nC) we no more have the hole lists in order of memory address, so it is difficult to detect if 2 holes remain adjacent in memory and shall be merged into one hole\nD) both a and c are correct\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: What is the number of unlabeled simple directed graph that can be made with 1 or 2 vertices?\nChoices:\nA) 2\nB) 4\nC) 5\nD) 9\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Which of the following types of expressions do   not require precedence rules for evaluation?, ,\nChoices:\nA) fully parenthesised infix expression\nB) postfix expression\nC) partially parenthesised infix expression\nD) more than one of the above\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Using what formula can a parent node be located in an array?\nChoices:\nA) (i+1)/2\nB) (i-1)/2\nC) i/2\nD) 2i/2\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Which of the following data structure is preferred to have lesser search time when the list size is small?\nChoices:\nA) search tree\nB) sorted list\nC) self organizing list\nD) linked list\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: If the address of A[1][1] and A[2][1] are 1000   and 1010 respectively and each element occupies 2   bytes then the array has been stored in \u2026\u2026\u2026\u2026\u2026   order., ,\nChoices:\nA) row major\nB) column major\nC) matrix major\nD) none of these\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What does the following function do for a given Linked List with first node as head?\n\nvoid fun1(struct node* head)\n{\n    if(head == NULL)\n    return;\n    fun1(head->next);\n    printf(\"%d  \", head->data);\n}\nChoices:\nA) Prints all nodes of linked lists\nB) Prints all nodes of linked list in reverse order\nC) Prints alternate nodes of Linked List\nD) Prints alternate nodes in reverse order\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: In linked list implementation of a queue, from where is the item deleted?\nChoices:\nA) At the head of link list\nB) At the centre position in the link list\nC) At the tail of the link list\nD) Node before the tail\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: On which data structure is a d-ary heap based?\nChoices:\nA) stack\nB) queue\nC) linked list\nD) priority queue\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: General ordered tree can be encoded into binary trees.\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: A binary tree in which if all its levels except   possibly the last, have the maximum number of   nodes and all the nodes at the last level appear as   far left as possible, is known as, ,\nChoices:\nA) full binary tree\nB) AVL tree\nC) threaded tree\nD) complete binary tree\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: How many inversions are there in the array arr = {1,5,4,2,3}?\nChoices:\nA) 0\nB) 3\nC) 4\nD) 5\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: Select the appropriate code for the recursive Tower of Hanoi problem.(n is the number of disks)\na)\n\npublic void solve(int n, String start, String auxiliary, String end)\n{\n       if (n == 1) \n       {\n           System.out.println(start + \" -> \" + end);\n       } \n       else\n       {\n           solve(n - 1, start, end, auxiliary);\n           System.out.println(start + \" -> \" + end);\n           solve(n - 1, auxiliary, start, end);\n       }\n}\npublic void solve(int n, String start, String auxiliary, String end) \n{\n       if (n == 1) \n       {\n           System.out.println(start + \" -> \" + end);\n       } \n       else \n       {\n           solve(n - 1, auxiliary, start, end);\n           System.out.println(start + \" -> \" + end);\n       }\n}\npublic void solve(int n, String start, String auxiliary, String end) \n{\n       if (n == 1) \n       {\n           System.out.println(start + \" -> \" + end);\n       } \n       else \n       {\n           System.out.println(start + \" -> \" + end);\n    solve(n - 1, auxiliary, start, end);\n       }\n}\npublic void solve(int n, String start, String auxiliary, String end)\n{\n       if (n == 1) \n       {\n           System.out.println(start + \" -> \" + end);\n       } \n       else\n       {\n           solve(n - 1, start, end, auxiliary);\n           System.out.println(start + \" -> \" + end);\n       }\n}\n\nd)\nChoices:\nA) public void solve(int n, String start, String auxiliary, String end)\nB) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What would be the solution to the given prefix notation?\nChoices:\nA) 1\nB) 0\nC) -1\nD) -2\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: Consider the following array of elements. \u232989, 19, 50, 17, 12, 15, 2, 5, 7, 11, 6, 9, 100\u232a. The minimum number of interchanges needed to convert it into a max-heap is, ,\nChoices:\nA) 4\nB) 5\nC) 2\nD) 3\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: In the given connected graph G, what is the value of rad(G) and diam(G)?\nChoices:\nA) 2, 3\nB) 3, 2\nC) 2, 2\nD) 3, 3\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: We have a binary heap on n elements and wish to insert n more elements (not necessarily one after another) into this heap. The total time required for this is (A) theta(logn) (B) theta(n) (C) theta(nlogn) (D) theta(n^2), ,\nChoices:\nA) A\nB) B\nC) C\nD) D\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: Circular queue is also called -----., ,\nChoices:\nA) Ring Buffer\nB) Rectangular Buffer\nC) Square Buffer\nD) None\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Which of the following is the name of the node having child nodes?\nChoices:\nA) Brother\nB) Sister\nC) Mother\nD) Parent\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What is the space complexity of a treap algorithm?\nChoices:\nA) O(N)\nB) O(log N)\nC) O(N log N)\nD) O(N2)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the advantage of the multiplication method?\nChoices:\nA) only 2 steps are involved\nB) using constant\nC) value of m not critical\nD) simple multiplication\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Bigger the query rectangle the better is the query efficiency.\nChoices:\nA) true\nB) false\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: How many strategies are followed to solve a dynamic equivalence problem?\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What is the upper bound for a tango tree if k is a number of interleaves?\nChoices:\nA) k+2 O (log (log n))\nB) k O (log n)\nC) K2 O (log n)\nD) k+1 O (log (log n))\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: The actual pairing heap implementation uses the right child and left child representation.\nChoices:\nA) true\nB) false\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: A node of the weight balanced tree has\nChoices:\nA) key, left and right pointers, size\nB) key, value\nC) key, size\nD) key\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: Let the following circular queue can   accommodate maximum six elements with the   following data   \f front = 2 rear = 4   queue = \u2026\u2026\u2026; L, M, N, \u2026., \u2026.   What will happen after ADD O operation takes   place?, ,\nChoices:\nA) front = 2 rear = 5 \\n queue = \u2026\u2026\u2026.; L, M, N, O, \u2026\u2026\u2026\nB) front = 3 rear = 5 \\n queue = L, M, N, O, \u2026\u2026\u2026\nC) front = 3 rear = 4 \\n queue = \u2026\u2026\u2026; L, M, N, O, \u2026\u2026\u2026\nD) front = 2 rear = 4 \\n queue = L, M, N, O, \u2026\u2026\u2026\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Which of the following is a typical declaration of a triply linked list in C?\na)\n\nd)\nChoices:\nA) d)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: When does the ArrayIndexOutOfBoundsException occur?\nChoices:\nA) Compile-time\nB) Run-time\nC) Not an error\nD) Not an exception at all\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Do all the nodes have at least two children in suffix tree.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: The number of edges from the root to the node is called __________ of the tree.\nChoices:\nA) Height\nB) Depth\nC) Length\nD) Width\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What does the other nodes of an expression tree(except leaves) contain?\nChoices:\nA) only operands\nB) only operators\nC) both operands and operators\nD) expression\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: Incidence matrix and Adjacency matrix of a graph will always have same dimensions?\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What is the postfix form of the following prefix   expression -A/B*C$DE ?, ,\nChoices:\nA) ABCDE$*/\nB) A-BCDE$*/\nC) ABC$ED*/\nD) A-BCDE$*/\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: 36. What is the output of the following Java code?\n\npublic class array\n{\n\tpublic static void main(String args[])\n\t{\n\t\tint []arr = {1,2,3,4,5};\n\t\tSystem.out.println(arr[2]);\n\t\tSystem.out.println(arr[4]);\n\t}\n}\nChoices:\nA) 4 and 2\nB) 2 and 4\nC) 5 and 3\nD) 3 and 5\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: Skip lists are similar to which of the following datastructure?\nChoices:\nA) stack\nB) heap\nC) binary search tree\nD) balanced binary search tree\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: A sorting technique which uses the binary tree   concept such that label of any node is larger than all   the labels in the subtrees, is called \u2026\u2026\u2026\u2026\u2026., ,\nChoices:\nA) Selection sort\nB) Insertion sort\nC) Heap sort\nD) Quick sort\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Using square brackets ([]) to retrieve vector   \f elements \u2026\u2026\u2026\u2026.. perform bounds checking; using   member function at to retrieve vector elements   \u2026\u2026\u2026\u2026\u2026. perform bounds checking., ,\nChoices:\nA) Does not, does not\nB) Does not, does\nC) Does, does not\nD) Does, does\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: Which is the most appropriate data structure for reversing a word?\nChoices:\nA) queue\nB) stack\nC) tree\nD) graph\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following is an application of Red-black trees and why?\nChoices:\nA) used to store strings efficiently\nB) used to store integers efficiently\nC) can be used in process schedulers, maps, sets\nD) for efficient sorting\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: 12. Which of the following points is/are not true about Linked List data structure when it is compared with an array?\nChoices:\nA) Random access is not allowed in a typical implementation of Linked Lists\nB) Access of elements in linked list takes less time than compared to arrays\nC) Arrays have better cache locality that can make them better in terms of performance\nD) It is easy to insert and delete elements in Linked List\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Which operation find the value associated with a given key?\nChoices:\nA) Insert\nB) Find Next\nC) Look up\nD) Delete\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Is tango tree represented as a tree of trees.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: How many bits would a succinct binary tree occupy?\nChoices:\nA) n+O(n)\nB) 2n+O(n)\nC) n/2\nD) n\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: Which of the following statement is true.\nChoices:\nA) There exists a Simple Graph having 10 vertices such that minimum degree of the graph is 0 and maximum degree is 9\nB) There exists a MultiGraph having 10 vertices such that minimum degree of the graph is 0 and maximum degree is 9\nC) There exists a MultiGraph as well as a Simple Graph having 10 vertices such that minimum degree of the graph is 0 and maximum degree is 9\nD) None of the mentioned\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: How many basic operations can be performed in a d-heap?\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Given the following program, what will be the 3rd number that\u2019d get printed in the output sequence for the given input?\n\n#include <bits/stdc++.h> \nusing namespace std; \nint cur=0; \nint G[10][10]; \nbool visited[10]; \ndeque <int> q; \n \nvoid fun(int n); \n \nint main()\n{   \n int num=0; \n int n; \n cin>>n; \n \n for(int i=0;i<n;i++) \n       for(int j=0;j<n;j++) \n         cin>>G[i][j]; \n \n for(int i=0;i<n;i++) \n        visited[i]=false; \n \n        fun(n); \n return 0; \n} \n \nvoid fun(int n)\n{ \n cout<<cur<<\" \"; \n visited[cur]=true; \n q.push_back(cur); \n \n do\n        { \n  for(int j=0;j<n;j++)\n                { \n      if(G[cur][j]==1 && !visited[j])\n                    { \n          q.push_back(j); \n          cout<<j<<\" \"; \n          visited[j]=true; \n             } \n \n                 } \n \n  q.pop_front(); \n  if(!q.empty()) \n  cur=q.front(); \n  }while(!q.empty()); \n}\nCode: #include <bits/stdc++.h>\nChoices:\nA) 2\nB) 6\nC) 8\nD) 4\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: What is the output of the following Java code?\n\npublic class array\n{\n public static void main(String args[])\n {\n  int []arr = {1,2,3,4,5};\n  System.out.println(arr[2]);\n  System.out.println(arr[4]);\n }\n}\nChoices:\nA) 3 and 5\nB) 5 and 3\nC) 2 and 4\nD) 4 and 2\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: What is the value of m\u2019 if the value of m is 19?\n\n\n\u00ab Prev - Hashing Functions Multiple Choice Questions and Answers (MCQs)\n\u00bb Next - Hash Tree Multiple Choice Questions and Answers (MCQs)\nChoices:\nA) 11\nB) 18\nC) 17\nD) 15\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Comparing the speed of execution of Red-Black trees and AA-trees, which one has the faster search time?\nChoices:\nA) AA-tree\nB) Red-Black tree\nC) Both have an equal search time\nD) It depends\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: A data structure in which elements can be inserted or deleted at/from both ends but not in the middle is?\nChoices:\nA) Queue\nB) Circular queue\nC) Dequeue\nD) Priority queue\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: Consider the following statements:, ,\nChoices:\nA) (ii) is true\nB) (i) and (ii) are true\nC) (iii) is true\nD) (ii) and (iv) are true\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What does the number of inversions in an array indicate?\nChoices:\nA) mean value of the elements of array\nB) measure of how close or far the array is from being sorted\nC) the distribution of values in the array\nD) median value of the elements of array\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: Hash tree is used in effective data verification in distributed systems.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What will be the auxiliary space complexity of the following code?\n\n#include <bits/stdc++.h> \nusing namespace std; \nvoid func1(int arr[], int n) \n{ \n int k = arr[0], i; \n for (i = 0; i < n - 1; i++) \n  arr[i] = arr[i + 1]; \n \n arr[i] = k; \n} \n \nvoid func(int arr[], int d, int n) \n{ \n for (int i = 0; i < d; i++) \n  func1(arr, n); \n} \n \nvoid printArray(int arr[], int n) \n{ \n for (int i = 0; i < n; i++) \n  cout << arr[i] << \" \"; \n} \n \nint main() \n{ \n int arr[] = { 1, 2, 3, 4, 5}; \n int n = sizeof(arr) / sizeof(arr[0]); \n \n    int d = 3;\n func(arr, d, n); \n printArray(arr, n); \n \n return 0; \n}\nCode: #include <bits/stdc++.h>\nChoices:\nA) O(1)\nB) O(n)\nC) O(d)\nD) O(n*d)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Cartesian trees solve range minimum query problem in constant time.\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: For which type of graph, the given program won\u2019t run infinitely? The Input would be in the form of an adjacency Matrix and n is its dimension (1<n<10).\n\n#include <bits/stdc++.h> \nusing namespace std; \nint G[10][10]; \nvoid fun(int n); \n \nint main()\n{\n int num=0; \n int n; \n cin>>n; \n for(int i=0;i<n;i++) \n   for(int j=0;j<n;j++) \n          cin>>G[i][j]; \n     fun(n); \n return 0; \n}  \n \nvoid fun(int n)\n{ \n for(int i=0;i<n;i++) \n for(int j=0;j<n;j++) \n if(G[i][j]==1) \n j--; \n}\nCode: #include <bits/stdc++.h>\nChoices:\nA) All Fully Connected Graphs\nB) All Empty Graphs\nC) All Bipartite Graphs\nD) All simple graphs\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What is the relation between Sparsity and Density of a matrix?\nChoices:\nA) Sparsity = 1 \u2013 Density\nB) Sparsity = 1 + Density\nC) Sparsity = Density*Total number of elements\nD) Sparsity = Density/Total number of elements\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: Which one of the below is not divide and   conquer approach?, ,\nChoices:\nA) Insertion Sort\nB) Merge Sort\nC) Shell Sort\nD) Heap Sort\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: Which of the following is not the type of queue?\nChoices:\nA) Ordinary queue\nB) Single ended queue\nC) Circular queue\nD) Priority queue\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: A full binary tree with \u2018n\u2019 non-leaf nodes   contains \u2026\u2026\u2026\u2026.., ,\nChoices:\nA) log2 n nodes\nB) n+1 nodes\nC) 2n nodes\nD) 2n+l nodes\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which of the following code snippet is used to convert decimal to binary numbers?\na)\n\npublic void convertBinary(int num)\n{\n     int bin[] = new int[50];\n     int index = 0;\n     while(num > 0)\n     {\n       bin[index++] = num%2;\n       num = num/2;\n     }\n     for(int i = index-1;i >= 0;i--)\n     {\n       System.out.print(bin[i]);\n     }\n}\npublic void convertBinary(int num)\n{\n     int bin[] = new int[50];\n     int index = 0;\n     while(num > 0)\n     {\n       bin[++index] = num%2;\n       num = num/2;\n     }\n     for(int i = index-1;i >= 0;i--)\n     {\n       System.out.print(bin[i]);\n     }\n}\npublic void convertBinary(int num)\n{\n     int bin[] = new int[50];\n     int index = 0;\n     while(num > 0)\n     {\n         bin[index++] = num/2;\n         num = num%2;\n     }\n     for(int i = index-1;i >= 0;i--)\n     {\n         System.out.print(bin[i]);\n     }\n}\npublic void convertBinary(int num)\n {\n     int bin[] = new int[50];\n     int index = 0;\n     while(num > 0)\n     {\n         bin[++index] = num/2;\n         num = num%2;\n     }\n     for(int i = index-1;i >= 0;i--)\n     {\n         System.out.print(bin[i]);\n     }\n  }\n\nd)\nChoices:\nA) public void convertBinary(int num)\nB) Answer: d\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What will the output of the below code, be if the base address of the array is 1200?, #include <iostream>\nusing namespace std;\n\nint main()\n{\n\n    int arr[] = { 1, 2, 3, 4, 5 };\n    cout << arr << \", \" << &arr << \", \" << &arr[0] << endl;\n    return 0;\n},\nCode: #include <iostream>\nChoices:\nA) 1200, 1202, 1204\nB) 1200 1200 1200\nC) 1200, 1204, 1208\nD) 1200, 1204, 1208\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Medium",
        "target_text": "Question: 23. What will be the output of the following program?\n\nmain()  \n{  \n   char str[]=\"san foundry\";  \n   int len = strlen(str);  \n   int i;  \n\n   for(i=0;i<len;i++)  \n        push(str[i]);\n\n   for(i=0;i<len;i++)  \n      pop();\n}\nChoices:\nA) yrdnuof nas\nB) foundry nas\nC) sanfoundry\nD) san foundry\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: Which data structure is needed to convert infix notation to postfix notation?\nChoices:\nA) Branch\nB) Tree\nC) Queue\nD) Stack\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: How many comparisons will occur while performing a delete-min operation?\nChoices:\nA) d\nB) d-1\nC) d+1\nD) 1\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: In a binomial heap the root value is greater than left child and less than right child.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: What is a ternary heap?\nChoices:\nA) An array with three elements\nB) Linked list with three elements\nC) Tree with three children\nD) Heap with all nodes having three children\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Which of the following is not an advantage of trees?\nChoices:\nA) Hierarchical structure\nB) Faster search\nC) Router algorithms\nD) Undo/Redo operations in a notepad\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: e = 2n+i, ,\nChoices:\nA) e = i+n\nB) e = i+2n\nC) e = 2i+n\nD) e = 2n+i\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: Size of an And Inverter Graph is the number of _______ gates and the number of logic levels is number of ________ gates on the __________ path from a primary input to a primary output.\nChoices:\nA) AND, AND, average\nB) AND, OR, longest\nC) OR, OR, shortest\nD) AND, AND, longest\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: In Linked List implementation, a node carries information regarding ___________\nChoices:\nA) Data\nB) Link\nC) Data and Link\nD) Node\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: An adjacency matrix representation of a graph   cannot contain information of :, ,\nChoices:\nA) nodes\nB) edges\nC) direction of edges\nD) parallel edges\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Given the intervals [(1, 4), (3, 6), (5, 7), (8, 9)], what would be the output of calling a function that solves the Job Scheduling Algorithm?, ,\nChoices:\n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: For the adjacency matrix of a directed graph the row sum is the _________ degree and the column sum is the ________ degree.\nChoices:\nA) in, out\nB) out, in\nC) in, total\nD) total, out\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What is the average running time of a treap?\nChoices:\nA) O(N)\nB) O(N log N)\nC) O(log N)\nD) O(M log N)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: The concatenation of two lists is to be performed in O(1) time. Which of the following implementations of a list should be used?, ,\nChoices:\nA) singly linked list\nB) doubly linked list\nC) circular doubly linked list\nD) array implementation of lists\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Medium",
        "target_text": "Question: What is the output of the following code?, #include <iostream>\nusing namespace std;\n\nint main() {\n\n    cout << \"GFG!\"[0] <<\" \"<<\"GFG!\"[3] ;\n    return 0;\n},\nCode: #include <iostream>\nChoices:\nA) Error\nB) G !\nC) F !\nD) None\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: How many stacks are required for applying evaluation of infix expression algorithm?\nChoices:\nA) one\nB) two\nC) three\nD) four\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: Which of the following is a HyperGraph, where V is the set of vertices, E is the set of edges?\nChoices:\nA) V = {v1, v2, v3} E = {e1, e2} = {{v2, v3} {v1, v3}}\nB) V = {v1, v2} E = {e1} = {{v1, v2}}\nC) V = {v1, v2, v3} E = {e1, e2, e3} = {{v2, v3}{v3, v1}{v2, v1}}\nD) All of the mentioned\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Which type of tree does Van Emde Boas require to perform basic operations?\nChoices:\nA) Unbalanced\nB) Balanced\nC) Complete\nD) Non \u2013 Binary\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: The postfix expression abc+de/*- is equivalent to which of the following infix expression?\nChoices:\nA) abc+-de*/\nB) (a+b)-d/e*c\nC) a-(b+c)*(d/e)\nD) abc+*-(d/e)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: Two or more And Inverter Graphs can represent same function.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: What is the table size when the value of p is 7 in multiplication method of creating hash functions?\nChoices:\nA) 14\nB) 128\nC) 49\nD) 127\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Which of the following is the correct function definition for linear probing?\nChoices:\nA) F(i)= 1\nB) F(i)=i\nC) F(i)=i2\nD) F(i)=i+1\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Who developed the concept of tango tree?\nChoices:\nA) Erik Demaine\nB) Mihai Patrascu\nC) John Lacono\nD) All of the mentioned\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Search and difficulty=Hard",
        "target_text": "Question: What technique is used in Transpose method?\nChoices:\nA) searched node is swapped with its predecessor\nB) node with highest access count is moved to head of the list\nC) searched node is swapped with the head of list\nD) searched nodes are rearranged based on their proximity to the head node\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: What is the efficiency of merge used in leftist heaps?\nChoices:\nA) O(N)\nB) O(N log N)\nC) O(M log N)\nD) O(log N)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: The leaves of an expression tree always contain?\nChoices:\nA) operators\nB) operands\nC) null\nD) expression\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: The case in which a key other than the desired one is kept at the identified location is called?\nChoices:\nA) Hashing\nB) Collision\nC) Chaining\nD) Open addressing\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: What are the applications of weight balanced tree?\nChoices:\nA) dynamic sets, dictionaries, sequences, maps\nB) heaps\nC) sorting\nD) storing strings\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: What is the parent for a node \u2018w\u2019 of a complete binary tree in an array representation when w is not 0?\nChoices:\nA) floor(w-1/2)\nB) ceil(w-1/2)\nC) w-1/2\nD) w/2\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: Who invented d-ary heap?\nChoices:\nA) Carl Rick\nB) Alan Turing\nC) Donald Johnson\nD) Euclid\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: 1. What is a data structure?\nChoices:\nA) A programming language\nB) A collection of algorithms\nC) A way to store and organize data\nD) A type of computer hardware\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: A doubly linked list is declared as, struct Node {\n       int Value;\n       struct Node *Fwd;\n       struct Node *Bwd;\n);,\nChoices:\nA) X->Bwd->Fwd = X->Fwd; X->Fwd->Bwd = X->Bwd ;\nB) X->Bwd.Fwd = X->Fwd ; X.Fwd->Bwd = X->Bwd ;\nC) X.Bwd->Fwd = X.Bwd ; X->Fwd.Bwd = X.Bwd ;\nD) X->Bwd->Fwd = X->Bwd ; X->Fwd->Bwd = X->Fwd;\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: The concatenation of two lists can be performed in O(1) time. Which of the following variation of the linked list can be used?\nChoices:\nA) Singly linked list\nB) Doubly linked list\nC) Circular doubly linked list\nD) Array implementation of list\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: Which of the following statement(s) is TRUE?, ,\nChoices:\nA) I only\nB) II and III only\nC) I and III only\nD) II only\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: In a file which contains 1 million records and the order of the tree is 100, then what is the maximum number of nodes to be accessed if B+ tree index is used?, ,\nChoices:\nA) 5\nB) 4\nC) 3\nD) 10\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: The maximum degree of any vertex in a simple   graph with n vertices is:, ,\nChoices:\nA) n\u20131\nB) n+1\nC) 2n\u20131\nD) n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Select the code snippet which performs in-order traversal.\na)\n\npublic void inorder(Tree root)\n{\n System.out.println(root.data);\n inorder(root.left);\n inorder(root.right);\n}\nb)\n\npublic void inorder(Tree root)\n{\n inorder(root.left);\n System.out.println(root.data);\n inorder(root.right);\n}\nc)\n\npublic void inorder(Tree root)\n{\n System.out.println(root.data);\n inorder(root.right);\n inorder(root.left);\n}\nd)\n\npublic void inorder(Tree root)\n{\n inorder(root.right);\n inorder(root.left);\n System.out.println(root.data);\n}\nChoices:\nA) public void inorder(Tree root)\nB) public void inorder(Tree root)\nC) public void inorder(Tree root)\nD) public void inorder(Tree root)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What would be the solution to the given prefix notation?\nChoices:\nA) 2\nB) 5\nC) 10\nD) 7\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Which of the following piece of code removes the node from a given position?\na)\n\npublic void remove(int pos)\n{\n if(pos<0 || pos>=size)\n {\n  System.out.println(\"Invalid position\");\n  return;\n }\n else\n {\n  if(head == null)\n   return;\n  if(pos == 0)\n  {\n   head = head.getNext();\n   if(head == null)\n   tail = null;\n  }\n         else\n         {\n   Node temp = head;\n   for(int i=1; i<position; i++)\n   temp = temp.getNext();\n  }\n  temp.getNext().setPrev(temp.getPrev());\n  temp.getPrev().setNext(temp.getNext());\n }\n size--;\n}\npublic void remove(int pos)\n{\n if(pos<0 || pos>=size)\n {\n  System.out.println(\"Invalid position\");\n  return;\n }\n else\n {\n  if(head == null)\n  return;\n  if(pos == 0)\n  {\n   head = head.getNext();\n   if(head == null)\n   tail = null;\n  }\n  else\n  {\n   Node temp = head;\n   for(int i=1; i<position; i++)\n   temp = temp.getNext();\n  }\n  temp.getNext().setPrev(temp.getNext());\n  temp.getPrev().setNext(temp.getPrev());\n }\n size--;\n}\npublic void remove(int pos)\n{\n if(pos<0 || pos>=size)\n {\n  System.out.println(\"Invalid position\");\n  return;\n }\n else\n {\n  if(head == null)\n   return;\n  if(pos == 0)\n  {\n   head = head.getNext();\n   if(head == null)\n   tail = null;\n  }\n  else\n  {\n   Node temp = head;\n   for(int i=1; i<position; i++)\n   temp = temp.getNext().getNext();\n  }\n  temp.getNext().setPrev(temp.getPrev());\n  temp.getPrev().setNext(temp.getNext());\n }\n size--;\n}\npublic void remove(int pos)\n{\n if(pos<0 || pos>=size)\n {\n  System.out.println(\"Invalid position\");\n  return;\n }\n else\n {\n  if(head == null)\n   return;\n  if(pos == 0)\n  {\n   head = head.getNext();\n   if(head == null)\n   tail = null;\n  }\n  else\n  {\n   Node temp = head;\n   for(int i=1; i<position; i++)\n   temp = temp.getNext().getNext();\n  }\n  temp.getNext().setPrev(temp.getNext());\n  temp.getPrev().setNext(temp.getPrev());\n }\n size--;\n}\n\nd)\nChoices:\nA) public void remove(int pos)\nB) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What is the advantage of using a doubly linked list for chaining over singly linked list?\nChoices:\nA) it takes less memory\nB) it is easy to implement\nC) it makes the process of insertion and deletion faster\nD) it causes less collisions\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Which of the following bitwise operations will you use to set a particular bit to 1?\nChoices:\nA) OR\nB) AND\nC) XOR\nD) NOR\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: Using division method, in a given hash table of size 157, the key of value 172 be placed at position ____\nChoices:\nA) 19\nB) 72\nC) 15\nD) 17\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which property makes top tree a binary tree?\nChoices:\nA) Nodes as Cluster\nB) Leaves as Edges\nC) Root is Tree Itself\nD) All of the mentioned\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: A binary tree is a rooted tree but not an ordered tree.\nChoices:\nA) true\nB) false\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Medium",
        "target_text": "Question: Are the below statements true about skiplists?\nIn a sorted set of elements skip lists can implement the below operations\ni.given a element find closest element to the given value in the sorted set in O(logn)\nii.find the number of elements in the set whose values fall a given range in O(logn)\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Which tree provides a linear time solution for substring operation?\nChoices:\nA) Rope Tree\nB) Suffix Tree\nC) Tango Tree\nD) Top Tree\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: One can convert a binary tree into its mirror   image by traversing it in, ,\nChoices:\nA) in-order\nB) pre-order\nC) post-order\nD) any order\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: What are the dimensions of an incidence matrix?\nChoices:\nA) Number of edges*number of edges\nB) Number of edges*number of vertices\nC) Number of vertices*number of vertices\nD) Number of edges * (1\u20442 * number of vertices)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What is a complete binary tree?\nChoices:\nA) Each node has exactly zero or two children\nB) A binary tree, which is completely filled, with the possible exception of the bottom level, which is filled from right to left\nC) A binary tree, which is completely filled, with the possible exception of the bottom level, which is filled from left to right\nD) A tree In which all nodes have degree 2\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: If the tree is not a complete binary tree then what changes can be made for easy access of children of a node in the array?\nChoices:\nA) every node stores data saying which of its children exist in the array\nB) no need of any changes continue with 2w and 2w+1, if node is at i\nC) keep a seperate table telling children of a node\nD) use another array parallel to the array with tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: With what data structure can a priority queue be implemented?\nChoices:\nA) Array\nB) List\nC) Heap\nD) Tree\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Which of these is not an application of a linked list?\nChoices:\nA) To implement file systems\nB) For separate chaining in hash-tables\nC) To implement non-binary trees\nD) Random Access of elements\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: Which application of stack is used to ensure that the pair of parentheses is properly nested?\nChoices:\nA) Balancing symbols\nB) Reversing a stack\nC) Conversion of an infix to postfix expression\nD) Conversion of an infix to prefix expression\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Is Treap a randomized tree.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: What is the value of the sum of the minimum in-degree and maximum out-degree of an Directed Acyclic Graph?\nChoices:\nA) Depends on a Graph\nB) Will always be zero\nC) Will always be greater than zero\nD) May be zero or greater than zero\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Maximum number of nodes in a binary tree   with height k, root is at height 0, is:, ,\nChoices:\nA) 2k \u2212 1\nB) 2k+1 \u2212 1\nC) 2k-1 + 1\nD) 2k + 1\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What would be the Prefix notation for the given equation?\nChoices:\nA) +A*B^CD\nB) +A^B*CD\nC) *A+B^CD\nD) ^A*B+CD\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: What is the probability of a collision when hashing n keys into a hash table of size m, assuming that the hash function produces a uniform random distribution?, ,\nChoices:\nA) O(1/n)\nB) O(n/m)\nC) O(logn)\nD) O(m/n)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: What is the space used by programs when we use Hashmap in our program?, ,\nChoices:\nA) O(1)\nB) O(LogN)\nC) O(N)\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Which of these operations have same complexities?\nChoices:\nA) Insertion, find_min\nB) Find_min, union\nC) Union, Insertion\nD) Deletion, Find _max\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which one of the below mentioned is linear   data structure?, ,\nChoices:\nA) Queue \\n (A) Queue\nB) Stack\nC) Arrays\nD) All of these\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Breadth First Search (BFS) is started on a binary tree beginning from the root vertex. There is a vertex t at a distance four from the root. If t is the n-th vertex in this BFS traversal, then the maximum possible value of n is ________ [This Question was originally a Fill-in-the-blanks Question], ,\nChoices:\nA) 15\nB) 16\nC) 31\nD) 32\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following properties are obeyed by all three tree \u2013 traversals?\nChoices:\nA) Left subtrees are visited before right subtrees\nB) Right subtrees are visited before left subtrees\nC) Root node is visited before left subtree\nD) Root node is visited before right subtree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the correct postfix expression for the following expression?\nChoices:\nA) abc^de-fg+*^*+i-\nB) abcde^-fg*+*^h*+i-\nC) abcd^e-fgh*+^*+i-\nD) ab^-dc*+ef^gh*+i-\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which process forms the randomized binary search tree?\nChoices:\nA) Stochastic Process\nB) Branching Process\nC) Diffusion Process\nD) Aggregation Process\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Which of these algorithmic approaches tries to   achieve localized optimum solution?, ,\nChoices:\nA) Greedy approach\nB) Divide and conquer approach\nC) Dynamic approach\nD) All of the above\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: How does implicit free lists(garbage collection) works in adding memory to free list ?\nChoices:\nA) whichever comes last will be added to free list\nB) whichever comes first will be added to free list\nC) certain blocks cannot be used if there are no pointers to them and hence they can be freed\nD) makes a probabilistic guess\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Both Dynamic array and Dynamically memory allocated array are same.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Re-balancing of AVL tree costs \u2026\u2026\u2026\u2026.., ,\nChoices:\nA) \u039f(1)\nB) \u039f(log n)\nC) \u039f(n)\nD) \u039f(n2)\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: Let S be a stack of size n >= 1. Starting with the empty stack, suppose we push the first n natural numbers in sequence, and then perform n pop operations. Assume that Push and Pop operation take X seconds each, and Y seconds elapse between the end of one such stack operation and the start of the next operation. For m >= 1, define the stack-life of m as the time elapsed from the end of Push(m) to the start of the pop operation that removes m from S. The average stack-life of an element of this stack is, ,\nChoices:\nA) n(X+ Y)\nB) 3Y + 2X\nC) n(X + Y)-X\nD) Y + 2X\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: Consider a double hashing scheme in which the primary hash function is h1(k) = k mod 23, and the secondary hash function is h2(k) = 1+(k mod 19). Assume that the table size is 23. Then the address returned by probe 1 in the probe sequence (assume that the probe sequence begins at probe 0) for key value k = 90 is ________ . , ,\nChoices:\nA) 13\nB) 15\nC) 21\nD) 23\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Which of the following statement is incorrect?\nChoices:\nA) Postfix operators use value to their right\nB) Postfix operators use value to their left\nC) Prefix operators use value to their right\nD) In postfix expression, operands are followed by operators\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: Choose the option with function having same complexity for a fibonacci heap.\nChoices:\nA) Insertion, Union\nB) Insertion, Deletion\nC) extract_min, insertion\nD) Union, delete\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: The height of a binary tree is the maximum number of edges in any root to leaf path. The maximum number of nodes in a binary tree of height h is:, ,\nChoices:\nA) 2h\u22121\nB) 2h\u22121 -1\nC) 2h+1-1\nD) 2h+1\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Which of the following technique stores data in the hash table itself in case of a collision?\nChoices:\nA) Open addressing\nB) Chaining using linked list\nC) Chaining using doubly linked list\nD) Chaining using binary tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: Which of these methods of class String is used to obtain the length of the String object?, ,\nChoices:\nA) get()\nB) Sizeof()\nC) lengthof()\nD) length()\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Search and difficulty=Medium",
        "target_text": "Question: The average number of key comparisons done   in successful sequential search in a list of length n is   \u2026\u2026\u2026\u2026.., ,\nChoices:\nA) log n\nB) (n-1)/2\nC) n/2\nD) (n+1)/2\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Possible number of labelled simple Directed, Pseudo and Multigarphs exist having 2 vertices?\nChoices:\nA) 3, Infinite, 4\nB) 4, 3, Infinite\nC) 4, Infinite, infinite\nD) 4, Infinite, Infinite\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: What is the functionality of the following piece of code?\n\npublic void display() \n{\n if(size == 0)\n  System.out.println(\"underflow\");\n else\n {\n  Node current = first;\n  while(current != null)\n  {\n   System.out.println(current.getEle());\n   current = current.getNext();\n  }\n }\n}\nChoices:\nA) reverse the list\nB) display the list\nC) display the list excluding top-of-the-stack-element\nD) reverse the list excluding top-of-the-stack-element\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Suppose that we have numbers between 1 and 100 in a binary search tree and want to search for the number 55. Which of the following sequences CANNOT be the sequence of nodes examined?, ,\nChoices:\nA) {10, 75, 64, 43, 60, 57, 55}\nB) {90, 12, 68, 34, 62, 45, 55}\nC) {9, 85, 47, 68, 43, 57, 55}\nD) {79, 14, 72, 56, 16, 53, 55}\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: Which one of the following hash functions on integers will distribute keys most uniformly over 10 buckets numbered 0 to 9 for i ranging from 0 to 2020?\n , ,\nChoices:\nA) h(i) = (12 \u2217 i) mod 10\\n\nB) h(i) = (11 \u2217 i2) mod 10\\n\nC) h(i) =i3 mod 10\\n\nD) h(i) =i2 mod 10 \\n\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: In a Binary Decision Diagram, how many types of terminal exists?\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: The result of the postfix expression 5 3 * 9 + 6 / 8 4 / + is _____________\nChoices:\nA) 8\nB) 6\nC) 10\nD) 9\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: 32. What is the advantage of a hash table as a data structure?\nChoices:\nA) easy to implement\nB) faster access of data\nC) exhibit good locality of reference\nD) very efficient for less number of entries\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: What are the application(s) of linked list?, ,\nChoices:\nA) Implementation of stacks and queues.\nB) Maintaining a directory of names\nC) None of the above\nD) Both a and b\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Which of the following is defined as the ratio of total elements of intersection and union of two sets?\nChoices:\nA) Rope Tree\nB) Jaccard Coefficient Index\nC) Tango Tree\nD) MinHash Coefficient\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: What does Hamming weight/population count mean in Bit arrays?\nChoices:\nA) Finding the number of 1 bit in a bit array\nB) Finding the number of 0 bit in a bit array\nC) Finding the sum of bits in a bit array\nD) Finding the average number of 1\u2019s and 0\u2019s in bit arrays\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: If a simple graph G, contains n vertices and m edges, the number of edges in the Graph G'(Complement of G) is ___________\nChoices:\nA) (n*n-n-2*m)/2\nB) (n*n+n+2*m)/2\nC) (n*n-n-2*m)/2\nD) (n*n-n+2*m)/2\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: After performing these set of operations, what does the final list look contain?\nChoices:\nA) 10 30 10 15\nB) 20 30 40 15\nC) 20 30 40 10\nD) 10 30 40 15\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: If h is any hashing function and is used to hash   n keys in to a table of size m, where n<=m, the   expected number of collisions involving a particular   key x is :, ,\nChoices:\nA) less than 1\nB) less than n\nC) less than m\nD) less than n/2\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: How many of the following statements are correct?\ni) All cyclic graphs are complete graphs.\nii) All complete graphs are cyclic graphs.\niii) All paths are bipartite.\niv) All cyclic graphs are bipartite.\nv) There are cyclic graphs which are complete.\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What can be the value of m in the division method?\nChoices:\nA) Any prime number\nB) Any even number\nC) 2p \u2013 1\nD) 2p\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: 8. Which of the following concepts make extensive use of arrays?\nChoices:\nA) Binary trees\nB) Scheduling of processes\nC) Caching\nD) Spatial locality\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: Suppose the elements 7, 2, 10 and 4 are inserted, in that order, into the valid 3- ary max heap found in the above question, Which one of the following is the sequence of items in the array representing the resultant heap?, ,\nChoices:\nA) 10, 7, 9, 8, 3, 1, 5, 2, 6, 4\nB) 10, 9, 8, 7, 6, 5, 4, 3, 2, 1\nC) 10, 9, 4, 5, 7, 6, 8, 2, 1, 3\nD) 10, 8, 6, 9, 7, 2, 3, 4, 1, 5\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Medium",
        "target_text": "Question: What is the output of the following code?, #include<bits/stdc++.h> \nusing namespace std;\n\nint main()\n{\n    // Write C++ code here\n    char str_array2[] = \"Geeks\";\n    cout << sizeof(str_array2) << \" \";\n    char str_array[] = { 'G', 'e', 'e', 'k', 's'};\n    cout << sizeof(str_array);\n    return 0;\n},\nCode: #include<bits/stdc++.h>\nChoices:\nA) 6, 6\nB) 5, 6\nC) 6, 5\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: A B-tree of order 4 and of height 3 will have a maximum of _______ keys.\nChoices:\nA) 255\nB) 63\nC) 127\nD) 188\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: In a simple graph, the number of edges is equal to twice the sum of the degrees of the vertices.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: The growth factor of ArrayList in Java is _______\nChoices:\nA) 1\nB) 1.5\nC) 2\nD) 0\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: What is the functionality of the following piece of Java code?\nAssume: \u2018a\u2019 is a non empty array of integers, the Stack class creates an array of specified size and provides a top pointer indicating TOS(top of stack), push and pop have normal meaning.\n\npublic void some_function(int[] a)\n{\n Stack S=new Stack(a.length);\n int[] b=new int[a.length];\n for(int i=0;i<a.length;i++)\n {\n  S.push(a[i]);\n }\n for(int i=0;i<a.length;i++)\n {\n  b[i]=(int)(S.pop());\n }\n System.out.println(\"output :\");\n for(int i=0;i<b.length;i++)\n {\n  System.out.println(b[i]);\n }\n}\nChoices:\nA) print alternate elements of array\nB) duplicate the given array\nC) parentheses matching\nD) reverse the array\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: Consider any array representation of an n element binary heap where the elements are stored from index 1 to index n of the array. For the element stored at index i of the array (i <= n), the index of the parent is, ,\nChoices:\nA) i - 1\nB) floor(i/2)\nC) ceiling(i/2)\nD) (i+1)/2\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: Consider the stack\n| 5 |\n| 4 |\n| 3 |\n| 2 |.\nAt this point, \u2018*\u2019 is encountered. What has to be done?\nChoices:\nA) 5*4=20 is pushed into the stack\nB) * is pushed into the stack\nC) 2*3=6 is pushed into the stack\nD) * is ignored\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: What is the speciality of cartesian sorting?\nChoices:\nA) it sorts partially sorted set of data quickly\nB) it considers cartesian product of elements\nC) it sorts elements in less than O(logn)\nD) it is a self balancing tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: What is the fundamental operation performed in skew heaps?\nChoices:\nA) intersection\nB) difference\nC) merging\nD) sorting\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Which of the following variant of a hash table has the best cache performance?\nChoices:\nA) hash table using a linked list for separate chaining\nB) hash table using binary search tree for separate chaining\nC) hash table using open addressing\nD) hash table using a doubly linked list for separate chaining\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: After which city is tango tree named?\nChoices:\nA) Vatican City\nB) Buenos Aires\nC) New York\nD) California\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Several other operations like union set difference and intersection can be done in treaps.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: In the above question would using arrays and swaping of elements in place of xor linked list would have been more efficient?\nChoices:\nA) no not all\nB) yes arrays would have been better than xor lists\nC) both would be same in efficiency\nD) can\u2019t say\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: Minimum number of queues to implement stack is ___________\nChoices:\nA) 3\nB) 4\nC) 1\nD) 2\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Medium",
        "target_text": "Question: What will the output of the following questions:, #include <bits/stdc++.h>\nusing namespace std;\n\nint main()\n{\n\n    string a = \"Hello\";\n    string b = \"World\";\n    string c = b.append(a);\n    cout << c << endl;\n\n    return 0;\n},\nCode: #include <bits/stdc++.h>\nChoices:\nA) Hello world\nB) World hello\nC) WorldHello\nD) Error\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: A relation R on a set S, defined as x R y if and only if y R x. This is an example of?\nChoices:\nA) reflexive relation\nB) symmetric relation\nC) transitive relation\nD) invalid relation\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: For a binary tree the first node visited in in-order and post-order traversal is same.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the run time efficiency of delete-min operation?\nChoices:\nA) O(log N)\nB) O(logd N)\nC) O(d logd N)\nD) O(d)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Which of the following statements are not correct with respect to Singly Linked List(SLL) and Doubly Linked List(DLL)?\nChoices:\nA) Complexity of Insertion and Deletion at known position is O(n) in SLL and O(1) in DLL\nB) SLL uses lesser memory per node than DLL\nC) DLL has more searching power than SLL\nD) Number of node fields in SLL is more than DLL\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: Which of the following represents a dequeue operation? (count is the number of elements in the queue)\na)\n\npublic Object dequeue()\n{\n if(count == 0)\n {\n  System.out.println(\"Queue underflow\");\n  return 0;\n }\n else\n {\n  Object ele = q[front];\n  q[front] = null;\n  front = (front+1)%CAPACITY;\n  count--;\n  return ele;\n }\n}\npublic Object dequeue()\n{\n if(count == 0)\n {\n  System.out.println(\"Queue underflow\");\n  return 0;\n }\n else\n {\n  Object ele = q[front];\n  front = (front+1)%CAPACITY;\n  q[front] = null;\n  count--;\n  return ele;\n }\n}\npublic Object dequeue()\n{\n if(count == 0)\n {\n  System.out.println(\"Queue underflow\");\n  return 0;\n }\n else\n {\n  front = (front+1)%CAPACITY;\n  Object ele = q[front];\n  q[front] = null;\n  count--;\n  return ele;\n }\n}\npublic Object dequeue()\n{\n if(count == 0)\n {\n  System.out.println(\"Queue underflow\");\n  return 0;\n }\n else\n {\n  Object ele = q[front];\n  q[front] = null;\n  front = (front+1)%CAPACITY;\n  return ele;\n  count--;\n }\n}\n\nd)\nChoices:\nA) public Object dequeue()\nB) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Medium",
        "target_text": "Question: Interpret the given character string as an integer expressed in suitable radix notation.\n\nCharacter string = pt\nChoices:\nA) 14963\nB) 14392\nC) 12784\nD) 14452\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: Which of the following best describes the growth of a linear queue at runtime? (Q is the original queue, size() returns the number of elements in the queue)\na)\n\nprivate void expand()\n{\n int length = size();\n int[] newQ = new int[length<<1];\n for(int i=front; i<=rear; i++)\n {\n  newQ[i-front] = Q[i%CAPACITY];\n }\n Q = newQ;\n front = 0;\n rear = size()-1;\n}\nprivate void expand()\n{\n int length = size();\n int[] newQ = new int[length<<1];\n for(int i=front; i<=rear; i++)\n {\n  newQ[i-front] = Q[i%CAPACITY];\n }\n Q = newQ;\n}\nprivate void expand()\n{\n int length = size();\n int[] newQ = new int[length<<1];\n for(int i=front; i<=rear; i++)\n {\n  newQ[i-front] = Q[i];\n }\n Q = newQ;\n front = 0;\n rear = size()-1;\n}\nprivate void expand()\n{\n int length = size();\n int[] newQ = new int[length*2];\n for(int i=front; i<=rear; i++)\n {\n  newQ[i-front] = Q[i%CAPACITY];\n }\n Q = newQ;\n}\n\nd)\nChoices:\nA) private void expand()\nB) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: Given the pseudo code, state whether the function for merging of two heap is correct or not?\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: A graph having an edge from each vertex to every other vertex is called a ___________\nChoices:\nA) Tightly Connected\nB) Strongly Connected\nC) Weakly Connected\nD) Loosely Connected\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which of the following is a difference between   vectors and arrays?, ,\nChoices:\n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Which of the following arrays are used in the implementation of list data type in python?\nChoices:\nA) Bit array\nB) Dynamic arrays\nC) Sparse arrays\nD) Parallel arrays\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: The procedure given below is used to maintain min-order in the min heap. Find out the missing statements, represented as X.\n\nswap A[m] and A[parent(m)]\nswap A[i] and A[parent(m)]\nswap A[m] and A[parent(m)]\nswap A[i] and A[parent(m)]\nChoices:\nA) if A[m] > A[parent(m)] then\nB) if A[m] > A[parent(m)] then\nC) if A[m] < A[parent(m)] then\nD) if A[m] > A[parent(m)] then\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What data structure would you mostly likely   see in a non-recursive implementation of a   recursive algorithm?, ,\nChoices:\nA) Stack\nB) Linked list\nC) Queue\nD) Trees\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: Following is an incorrect pseudocode for the algorithm which is supposed to determine whether a sequence of parentheses is balanced: ,    declare a character stack \n   while ( more input is available)\n   {\n      read a character\n      if ( the character is a '(' ) \n         push it on the stack\n      else if ( the character is a ')' and the stack is not empty )\n         pop a character off the stack\n      else\n         print \"unbalanced\" and exit\n    }\n    print \"balanced\",\nChoices:\nA) ((())\nB) ())(()\nC) (()()))\nD) (()))()\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Which of the following symbols represent leaf nodes?\n\ni) \u0394 ii) \u25ca iii) \u2207 iv) T v) \u22a5\nChoices:\nA) iv) and v)\nB) v)\nC) i) and iii)\nD) ii)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Which of the following pair\u2019s traversals on a binary tree can build the tree uniquely?\nChoices:\nA) post-order and pre-order\nB) post-order and in-order\nC) post-order and level order\nD) level order and preorder\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the location of a parent node for any arbitary node i?\nChoices:\nA) (i/2) position\nB) (i+1)/ position\nC) floor(i/2) position\nD) ceil(i/2) position\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: Two directed graphs(G and H) are isomorphic if and only if A=PBP-1, where P and A are adjacency matrices of G and H respectively.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: 2-3 tree is a specific form of _________\nChoices:\nA) B \u2013 tree\nB) B+ \u2013 tree\nC) AVL tree\nD) Heap\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: On which abstract data type does van Emde Boas tree performs the operation?\nChoices:\nA) Tree\nB) Linked List\nC) Heap\nD) Associative Array\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Search and difficulty=Hard",
        "target_text": "Question: Several kinds of queries are possible on a k-d called as?\nChoices:\nA) partial queries\nB) range queries\nC) neighbour queries\nD) search queries\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What are the set of functions that are to be executed to get the following output?\ncat\npop(s); pop(s); pop(s);\nChoices:\nA) push(c, s); push(a, s); push(t, s);\nB) push(c,s); pop(s); push(a,s); pop(s);push(t,s);pop(s);\nC) pop(c ); pop(a); pop(t);\nD) push(c,s); push(a,s); pop(t);\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=String and difficulty=Hard",
        "target_text": "Question: What can be the maximum depth of the trie with n strings and m as the maximum sting the length?\nChoices:\nA) log2n\nB) log2m\nC) n\nD) m\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: What are the operations that can be performed on weight balanced tree?\nChoices:\nA) all basic operations and set intersection, set union and subset test\nB) all basic operations\nC) set intersection, set union and subset test\nD) only insertion and deletion\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: Recursion is memory-intensive because:, ,\nChoices:\nA) Recursive functions tend to declare many local variables.\nB) Previous function calls are still open when the function \\n calls itself and the activation records of these previous calls \\n still occupy space on the call stack.\nC) Many copies of the function code are created.\nD) It requires large data values.\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Medium",
        "target_text": "Question: The number of possible undirected graphs which may have self loops but no multiple edges and have n vertices is ________\nChoices:\nA) 2((n*(n-1))/2)\nB) 2((n*(n+1))/2)\nC) 2((n-1)*(n-1))/2)\nD) 2((n*n)/2)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: What is the maximum number of edges present in a simple directed graph with 7 vertices if there exists no cycles in the graph?\nChoices:\nA) 21\nB) 7\nC) 6\nD) 49\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Assume +, -, *, / are usual arithmetic operator, + has highest precedence and right associative and -, *, / have equal precedence and left associative. What is the output of the expression 23 * 3 \u2013 6 + 11 \u2013 2 * 8 / 4?\nChoices:\nA) 110\nB) 100\nC) 130\nD) 120\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Which special balanced binary search tree is used to store the nodes of auxiliary tree?\nChoices:\nA) Red \u2013 Black Tree\nB) Red \u2013 Brown Tree\nC) Red \u2013 Yellow Tree\nD) Red \u2013 Tango Tree\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: What is a sparse array?\nChoices:\nA) Data structure for representing arrays of records\nB) Data structure that compactly stores bits\nC) An array in which most of the elements have the same value\nD) An array in which memory is allocated in run time\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What does the following function check for? (all necessary headers to be included and function is called from main)\n\n#define MAX 10\n \ntypedef struct stack\n{\n    int top;\n    int item[MAX];\n}stack;\n \nint function(stack *s)\n{\n    if(s->top == -1)\n        return 1;\n    else return 0;\n}\nChoices:\nA) full stack\nB) invalid index\nC) empty stack\nD) infinite stack\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: d-heap is shallower than a binary heap.\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: The type of expression in which operator succeeds its operands is?\nChoices:\nA) Infix Expression\nB) Prefix Expression\nC) Postfix Expression\nD) Both Prefix and Postfix Expressions\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: What does \u2018stack underflow\u2019 refer to?\nChoices:\nA) accessing item from an undefined stack\nB) adding items to a full stack\nC) removing items from an empty stack\nD) index out of bounds exception\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: The essential condition which is checked before deletion in a linked queue is?\nChoices:\nA) Underflow\nB) Overflow\nC) Front value\nD) Rear value\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The preorder traversal of a binary search tree is 15, 10, 12, 11, 20, 18, 16, 19. Which one of the following is the postorder traversal of the tree ?, ,\nChoices:\nA) 10, 11, 12, 15, 16, 18, 19, 20\nB) 11, 12, 10, 16, 19, 18, 20, 15\nC) 20, 19, 18, 16, 15, 12, 11, 10\nD) 19, 16, 18, 20, 11, 12, 10, 15\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: How many types of insertion are performed in a binary tree?\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: The minimum number of multiplications and   additions required to evaluate the polynomial P =   200. The minimum number of multiplications and   additions required to evaluate the polynomial P =  4\u00d73+3\u00d72-15x+45 is, ,\nChoices:\nA) 6 & 3\nB) 4 & 2\nC) 3 & 3\nD) 8 & 3\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: 5. Which of the following is not the application of stack?\nChoices:\nA) Data Transfer between two asynchronous process\nB) Compiler Syntax Analyzer\nC) Tracking of local variables at run time\nD) A parentheses balancing program\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: How many steps are involved in creating a hash function using a multiplication method?\nChoices:\nA) 1\nB) 4\nC) 3\nD) 2\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: Parentheses are simply ignored in the conversion of infix to postfix expression.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: A treap is a combination of a tree and a heap.\nChoices:\nA) false\nB) true\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: How many properties does a leftist heap support?\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: O(n0.5), ,\nChoices:\nA) O(n0.5)\nB) O(n)\nC) O(log n)\nD) O(n log n)\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: 4. Which of the following is the correct way to declare a multidimensional array in Java?\nChoices:\nA) int[] arr;\nB) int arr[[]];\nC) int[][]arr;\nD) int[[]] arr;\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: How to search for a key in a binary search tree?\na)\n\npublic Tree search(Tree root, int key)\n{\n if( root == null || root.key == key )\n        {\n  return root;\n }\n if( root.key < key )\n        {\n  return search(root.right,key);\n }\n else\n return search(root.left,key);\n}\npublic Tree search(Tree root, int key)\n{\n if( root == null || root.key == key )\n        {\n  return root;\n }\n if( root.key < key )\n        {\n  return search(root.left,key);\n }\n else\n return search(root.right,key);\n}\npublic Tree search(Tree root, int key)\n{\n if( root == null)\n        {\n  return root;\n }\n if( root.key < key )\n        {\n  return search(root.right,key);\n }\n else\n  return search(root.left,key);\n}\npublic Tree search(Tree root, int key)\n{\n if( root == null)\n        {\n  return root;\n }\n if( root.key < key )\n        {\n  return search(root.right.right,key);\n }\n else\n  return search(root.left.left,key);\n}\n\nd)\nChoices:\nA) public Tree search(Tree root, int key)\nB) Answer: a\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: What are the two different operations done in an AA-Tree?\nChoices:\nA) shift and color\nB) skew and split\nC) zig and zag\nD) enqueue and dequeue\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: The deque which stores elements in strictly increasing order or in strictly decreasing order is called ------., ,\nChoices:\nA) Priority  Queue\nB) Double ended Queue\nC) Monotonic Deque\nD) None\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: What is the value for the number of nodes of rank r?\nChoices:\nA) N\nB) N/2\nC) N/2r\nD) Nr\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What is the functionality of the following piece of code? Select the most appropriate.\n\npublic void function(int data)\n{\n int flag = 0;\n if( head != null)\n {\n  Node temp = head.getNext();\n  while((temp != head) && (!(temp.getItem() == data)))\n  {\n   temp = temp.getNext();\n   flag = 1;\n   break;\n  }\n }\n if(flag)\n  System.out.println(\"success\");\n else\n  System.out.println(\"fail\");\n}\nChoices:\nA) Print success if a particular element is not found\nB) Print fail if a particular element is not found\nC) Print success if a particular element is equal to 1\nD) Print fail if the list is empty\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: In linked list each node contains a minimum of two fields. One field is data field to store the data second field is?\nChoices:\nA) Pointer to character\nB) Pointer to integer\nC) Pointer to node\nD) Node\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Reducing search space by eliminating irrelevant trees is known as?\nChoices:\nA) pruning\nB) partial results\nC) freeing space\nD) traversing\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: The preorder traversal sequence of a binary search tree is 30, 20, 10, 15, 25, 23, 39, 35, 42. Which one of the following is the postorder traversal sequence of the same tree?, ,\nChoices:\nA) 10, 20, 15, 23, 25, 35, 42, 39, 30\nB) 15, 10, 25, 23, 20, 42, 35, 39, 30\nC) 15, 20, 10, 23, 25, 42, 35, 39, 30\nD) 15, 10, 23, 25, 20, 35, 42, 39, 30\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Medium",
        "target_text": "Question: q[0], ,\nChoices:\n\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: What is the necessary condition for a Tree to be a heap?, ,\nChoices:\nA) Only the tree must be complete.\nD) None\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: What data structure would you most likely see in non recursive implementation of a recursive algorithm?\nChoices:\nA) Linked List\nB) Stack\nC) Queue\nD) Tree\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What is/are the disadvantages of implementing tree using normal arrays?\nChoices:\nA) difficulty in knowing children nodes of a node\nB) difficult in finding the parent of a node\nC) have to know the maximum number of nodes possible before creation of trees\nD) difficult to implement\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: In a full binary tree if there are L leaves, then total number of nodes N are?\nChoices:\nA) N = 2*L\nB) N = L + 1\nC) N = L \u2013 1\nD) N = 2*L \u2013 1\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Given a directed graph where weight of every edge is same, we can efficiently find shortest path from a given source to destination using?\n , ,\nChoices:\nA) Breadth First Traversal\nD) Depth First Search\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Bit fields and Bit arrays are same.\nChoices:\nA) True\nB) False\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Hard",
        "target_text": "Question: How many constraints are to be met to successfully implement quadratic probing?\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: What will be the output of the following code?\n\n#include <bits/stdc++.h> \nusing namespace std; \n \nvoid func1(int arr[], int n) \n{ \n int k = arr[0], i; \n for (i = 0; i < n - 1; i++) \n  arr[i] = arr[i + 1]; \n \n arr[i] = k; \n} \n \nvoid func(int arr[], int d, int n) \n{ \n for (int i = 0; i < d; i++) \n  func1(arr, n); \n} \n \nvoid printArray(int arr[], int n) \n{ \n for (int i = 0; i < n; i++) \n  cout << arr[i] << \" \"; \n} \n \nint main() \n{ \n int arr[] = { 1, 2, 3, 4, 5}; \n int n = sizeof(arr) / sizeof(arr[0]); \n \n \n func(arr, 3, n); \n printArray(arr, n); \n \n return 0; \n}\nCode: #include <bits/stdc++.h>\nChoices:\nA) 4 5 1 2 3\nB) 3 4 5 1 2\nC) 5 4 3 1 2\nD) error\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: What is the advantage of using linked list over the doubly linked list for chaining?\nChoices:\nA) it takes less memory\nB) it causes more collisions\nC) it makes the process of insertion and deletion faster\nD) it causes less collisions\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The pre-order and in-order are traversals of a binary tree are T M L N P O Q and L M N T O P Q. Which of following is post-order traversal of the tree?\nChoices:\nA) L N M O Q P T\nB) N M O P O L T\nC) L M N O P Q T\nD) O P L M N Q T\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
        "target_text": "Question: What is the hash function used in Double Hashing?\nChoices:\nA) (h1(k) \u2013 i*h2(k))mod m\nB) h1(k) + h2(k)\nC) (h1(k) + i*h2(k))mod m\nD) (h1(k) + h2(k))mod m\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: Convert the following infix expressions into its equivalent postfix expressions.\n(A + B \u22c0D)/(E \u2013 F)+G\nChoices:\nA) (A B D \u22c0 + E F \u2013 / G +)\nB) (A B D +\u22c0 E F \u2013 / G +)\nC) (A B D \u22c0 + E F/- G +)\nD) (A B D E F + \u22c0 / \u2013 G +)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: AVL trees are more balanced than Red-black trees.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: What are the time complexities of finding 8th element from beginning and 8th element from end in a singly linked list? Let n be the number of nodes in linked list, you may assume that n > 8., ,\nChoices:\nA) O(1) and O(n)\nB) O(1) and O(1)\nC) O(n) and O(1)\nD) O(n) and O(n)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Queue and difficulty=Hard",
        "target_text": "Question: If the elements \u201cA\u201d, \u201cB\u201d, \u201cC\u201d and \u201cD\u201d are placed in a queue and are deleted one at a time, in what order will they be removed?\nChoices:\nA) ABCD\nB) DCBA\nC) DCAB\nD) ABDC\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Medium",
        "target_text": "Question: What will be the word obtained if the word \u201cabbcabb\u201d is reversed using a stack?\nChoices:\nA) bbabbca\nB) abbcabb\nC) bbacbba\nD) bbacabb\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Stack and difficulty=Hard",
        "target_text": "Question: 27. The optimal data structure used to solve Tower of Hanoi is _________\nChoices:\nA) Tree\nB) Heap\nC) Priority queue\nD) Stack\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Consider the following piece of code in C++. What does the following code implement?\n\n#include <iostream>   \nusing namespace std;\nint main()\n{\n    int *arr_vla;\n    int size;\n    cout<<\"Enter the size of variable length array: \";\n    cin>>size;\n    arr_vla = new int [size];\n    for (int i = 0; i < size; i++)\n    {\n        cout<<\"Enter the integers to be inserted in the variable length array: \";\n        cin>>arr_vla[i];\n    }\n    for(int i = 0; i < size; i++)\n    {\n        cout<<arr_vla[i]<<\"  \";\n    }\n    cout<<endl;\n    return 0;\n}\nCode: #include <iostream>\nChoices:\nA) Variable-length array\nB) Fixed-size array\nC) Dynamic memory allocation\nD) Error\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: A scheme for storing binary trees in an array X is as follows. Indexing of X starts at 1 instead of 0. the root is stored at X[1]. For a node stored at X[i], the left child, if any, is stored in X[2i] and the right child, if any, in X[2i+1]. To be able to store any binary tree on n vertices the minimum size of X should be. (GATE CS 2006), ,\nChoices:\nA) log2n\nB) n\nC) 2n + 1\nD) 2^n \u2014 1\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: What is the other name for Suffix Tree?\nChoices:\nA) Array\nB) Stack\nC) Priority Queue\nD) PAT Tree\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: The number of edges from the node to the deepest leaf is called _________ of the tree.\nChoices:\nA) Height\nB) Depth\nC) Length\nD) Width\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: If a node in a BST has two children, then its in  order predecessor has \u2026\u2026\u2026\u2026., ,\nChoices:\nA) no left child\nB) no right child\nC) two children\nD) no child\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: A Binary Search Tree (BST) stores values in the range 37 to 573. Consider the following sequence of keys.\n\nI. 81, 537, 102, 439, 285, 376, 305\n\nII. 52, 97, 121, 195, 242, 381, 472\n\nIII. 142, 248, 520, 386, 345, 270, 307\n\nIV. 550, 149, 507, 395, 463, 402, 270\n\nWhich of the following statements is TRUE?, ,\nChoices:\nA) I, II and IV are inorder sequences of three different BSTs\nB) I is a preorder sequence of some BST with 439 as the root\nC) II is an inorder sequence of some BST where 121 is the root and 52 is a leaf\nD) IV is a postorder sequence of some BST with 149 as the root\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: Does there exist a heap with seven distinct elements so that the Inorder traversal gives the element in sorted order.\nChoices:\nA) Yes\nB) No\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: Which of the following don\u2019t use matrices?\nChoices:\nA) In solving linear equations\nB) Image processing\nC) Graph theory\nD) Sorting numbers\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
        "target_text": "Question: Consider the function f defined below. , #include <iostream>\n\nstruct item {\n    int data;\n    struct item *next;\n};\n\nint f(struct item *p) {\n    return (\n        (p == NULL) || \n        (p->next == NULL) || \n        ((p->data <= p->next->data) && f(p->next))\n    );\n},\nCode: #include <iostream>\nChoices:\nA) not all elements in the list have the same data value.\nB) the elements in the list are sorted in non-decreasing order of data value\nC) the elements in the list are sorted in non-increasing order of data value\nD) None of them\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: Every Directed Acyclic Graph has at least one sink vertex.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Sorting and difficulty=Medium",
        "target_text": "Question: Interpolation search is an improved variant of   binary search. It is necessary for this search   algorithm to work that:, ,\nChoices:\nA) data collection should be in sorted form and equally \\n distributed.\nB) data collection should be in sorted form and but not \\n equally distributed.\nC) data collection should be equally distributed but not \\n sorted.\nD) None of these.\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Which of the following is/are advantages suffix array one suffix tree?\nI. Lesser space requirement\nII. Improved cache locality\nIII. Easy construction in linear time\nChoices:\nA) Only I\nB) All I, II and III\nC) Only I and III\nD) Only II and III\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Medium",
        "target_text": "Question: Which one of the following is the correct formulae to find the parent node at index I?\nChoices:\nA) (I-1)/K\nB) (I+1)/K\nC) (I*1)/K\nD) (I-2)/K\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Free lists are used in\nChoices:\nA) static memory allocation\nB) dynamic memory allocation\nC) contagious allocations\nD) are used for speeding up linked list operations\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
        "target_text": "Question: What is the hash function used in multiplication method?\nChoices:\nA) h(k) = floor( m(kA mod 1))\nB) h(k) = ceil( m(kA mod 1))\nC) h(k) = floor(kA mod m)\nD) h(k) = ceil( kA mod m)\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: Which of the following is false about a binary search tree?\nChoices:\nA) The left child is always lesser than its parent\nB) The right child is always greater than its parent\nC) The left and right sub-trees should also be binary search trees\nD) In order sequence gives decreasing order of elements\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: Should leaves in ternary heap be distributed from left to right.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
        "target_text": "Question: Consider below sequences.\n\nHow to achieve the above operation efficiently?\nChoices:\nA) use linked lists\nB) use avl trees\nC) use red-black trees\nD) use treaps (cartesian trees)\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: The size value of various nodes in a weight balanced tree are\nleaf \u2013 zero\ninternal node \u2013 size of it\u2019s two children\nis this true?\nChoices:\nA) true\nB) false\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: 33. Which type of data structure is a ternary heap?\nChoices:\nA) Hash\nB) Array\nC) Priority Stack\nD) Priority Queue\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: Min heap can be used to implement selection sort.\nChoices:\nA) True\nB) False\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: Which type of data structure is a ternary heap?\nChoices:\nA) Array\nB) Hash\nC) Priority Queue\nD) Priority Stack\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Search and difficulty=Medium",
        "target_text": "Question: The self organizing list improves _____\nChoices:\nA) average access time\nB) insertion\nC) deletion\nD) binary search\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Hard",
        "target_text": "Question: ___________ is a self-adjusting version of a leftist heap.\nChoices:\nA) Rightist heap\nB) Skew heap\nC) d-heap\nD) Binary heap\nAnswer: B"
    },
    {
        "input_text": "Generate a question on topic=Heap and difficulty=Medium",
        "target_text": "Question: How many secondary operations are performed in a d-heap?\nChoices:\nA) 1\nB) 2\nC) 3\nD) 4\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Graph and difficulty=Hard",
        "target_text": "Question: Given an adjacency matrix A = [ [0, 1, 1], [1, 0, 1], [1, 1, 0] ], The total no. of ways in which every vertex can walk to itself using 2 edges is ________\nChoices:\nA) 2\nB) 4\nC) 6\nD) 8\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Theory and difficulty=Medium",
        "target_text": "Question: What is the correct notation for a load factor?\nChoices:\nA) \u2126\nB) \u221e\nC) \u2211\nD) \u2144\nAnswer: D"
    },
    {
        "input_text": "Generate a question on topic=Array and difficulty=Hard",
        "target_text": "Question: What is the use of a hash function?\nChoices:\nA) to calculate and return the index of corresponding data\nB) to store data\nC) to erase data\nD) to change data\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Medium",
        "target_text": "Question: Is the following statement valid? A Red-Black Tree which is also a perfect Binary Tree can have all black nodes, ,\nChoices:\nA) Yes\nB) No\nAnswer: A"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: A B+ -tree index is to be built on the Name attribute of the relation STUDENT. Assume that all student names are of length 8 bytes, disk block are size 512 bytes, and index pointers are of size 4 bytes. Given this scenario, what would be the best choice of the degree (i.e. the number of pointers per node) of the B+ -tree?, ,\nChoices:\nA) 16\nB) 42\nC) 43\nD) 44\nAnswer: C"
    },
    {
        "input_text": "Generate a question on topic=Tree and difficulty=Hard",
        "target_text": "Question: How many nodes are required to create a Binary Decision Tree having 4 variables?\nChoices:\nA) 24\nB) 24-1\nC) 25\nD) 25-1\nAnswer: D"
    }
]