  [










  






 



 





 
























































    {
      "input_text": "Generate a question on topic=Queue and difficulty=Hard",
      "target_text": "How many stacks are needed to implement a queue. Consider the situation where no other data structure like arrays, linked list is available to you., , Choices: ['A\\n1', 'B\\n2', 'C\\n3', 'D\\n4'], Answer: B\n2"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "What would be the result if the left subtree of the root has a null path length of 1 and the right subtree has a null path length of 2?\na) merge occurs without violation\nb) violation at left subtree\nc) violation at right subtree\nd) violation at the root\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Hard",
      "target_text": "If in a DAG N sink vertices and M source vertices exists, then the number of possible stacks in the Graph Structured Stack representation would come out to be N*M.\na) True\nb) False\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "Quadratic probing overcomes primary collision.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "Which of the following is the correct definition for a horizontal link?\na) connection between node and a child of equal levels\nb) connection between two nodes\nc) connection between two child nodes\nd) connection between root node and leaf node\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "How many common operations are performed in a binary tree?\na) 1\nb) 2\nc) 3\nd) 4\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Hard",
      "target_text": "What should be done when a left parenthesis \u2018(\u2018 is encountered?\na) It is ignored\nb) It is placed in the output\nc) It is placed in the operator stack\nd) The contents of the operator stack is emptied\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "What is a full binary tree?, , Choices: ['A\\nEach node has exactly zero or two children', 'B\\nEach node has exactly two children', 'C\\nAll the leaves are at the same level', 'D\\nEach node has exactly one or two children'], Answer: A\nEach node has exactly zero or two children"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "What data organization method is used in hash tables?\na) Stack\nb) Array\nc) Linked list\nd) Queue\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
      "target_text": "What kind of linked list begins with a pointer to   the first node, and each node contains a pointer to   the next node, and the pointer in the last node   points back to the first node?, , Choices: ['A\\nCircular, singly-linked list.', 'B\\nCircular, doubly-linked list.', 'C\\nSingly-linked list.', 'D\\nDoubly-linked list.'], Answer: A\nCircular, singly-linked list."
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "How much space does construction of suffix tree takes?\na) O (log M)\nb) Exponential to Length of Tree\nc) O (M!)\nd) Linear to Length of Tree\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "The result of evaluating the postfix expression 5, 4, 6, +, *, 4, 9, 3, /, +, * is?\na) 600\nb) 350\nc) 650\nd) 588\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "Space complexity for storing only the edges in an adjacency list of an undirected graph is __________\na) O(V)\nb) O(E*E)\nc) O(E)\nd) O(E+V)\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Medium",
      "target_text": "An implementation of a queue Q, using two stacks S1 and S2, is given below: , , Choices: ['A\\nn+m <= x < 2n and 2m <= y <= n+m', 'B\\nn+m <= x < 2n and 2m<= y <= 2n', 'C\\n2m <= x < 2n and 2m <= y <= n+m', 'D\\n2m <= x <2n and 2m <= y <= 2n'], Answer: A\nn+m <= x < 2n and 2m <= y <= n+m"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "The steps for finding post-order traversal are traverse the right subtree, traverse the left subtree or visit the current node.\na) True\nb) False\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "The number of leaf nodes in a complete binary   tree of depth d is \u2026\u2026\u2026.., , Choices: ['A\\n2d', 'B\\n2d\u20131+1', 'C\\n2d+1+1', 'D\\n2d+1'], Answer: A\n2d"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "Which of the following is not the self balancing binary search tree?\na) AVL Tree\nb) 2-3-4 Tree\nc) Red \u2013 Black Tree\nd) Splay Tree\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "Which of the following is the correct way to declare a multidimensional array in Java?\na) int[] arr;\nb) int arr[[]];\nc) int[][]arr;\nd) int[[]] arr;\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "Is it true that splay trees have O(logn) amortized complexity ?\na) true\nb) false\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "Select the appropriate code which reverses a word.\na)\n\nd)\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "How many binary trees with 3 nodes which   when traversed in post order gives the sequence A,   B, C is ?, , Choices: ['A\\n3 \\n (A) 3', 'B\\n4', 'C\\n5', 'D\\n6'], Answer: C\n5"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "In general, the index of the first element in an array is __________\na) 0\nb) -1\nc) 2\nd) 1\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "Multiplication and division to find children and parents cannot be implemented in a d-heap.\na) true\nb) false\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Medium",
      "target_text": "What is the run time efficiency of an insertion algorithm in d-heap?\na) O(N)\nb) O(log N)\nc) O(logd N)\nd) O(Nd)\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "In the graph given in above question, what is the minimum possible weight of a path P from vertex 1 to vertex 2 in this graph such that P contains at most 3 edges?, , Choices: ['A\\n7', 'B\\n8', 'C\\n9', 'D\\n10'], Answer: B\n8"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Medium",
      "target_text": "What data structure is used for breadth first  traversal of a graph?, , Choices: ['A\\nQueue', 'B\\nStack', 'C\\nList', 'D\\nNone of these'], Answer: A\nQueue"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Hard",
      "target_text": "Following is pseudo code of a function that takes a Queue as an argument, and uses a stack S to do processing. , void fun(Queue *Q) {\n    Stack S;  // Say it creates an empty stack S\n\n    // Run while Q is not empty\n    while (!isEmpty(Q)) {\n        // deQueue an item from Q and push the dequeued item to S\n        push(&S, deQueue(Q));\n    }\n\n    // Run while Stack S is not empty\n    while (!isEmpty(&S)) {\n        // Pop an item from S and enqueue the popped item to Q\n        enQueue(Q, pop(&S));\n    }\n}, Choices: ['A\\nRemoves the last from Q', 'B\\nKeeps the Q same as it was before the call', 'C\\nMakes Q empty', 'D\\nReverses the Q'], Answer: D\nReverses the Q"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "G = (V, E) is an undirected simple graph in which each edge has a distinct weight, and e is a particular edge of G. Which of the following statements about the minimum spanning trees (MSTs) of G is/are TRUE, , Choices: ['A\\nI only', 'B\\nII only', 'C\\nboth I and II', 'D\\nneither I nor II'], Answer: B\nII only"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "21. Which of the following is the most widely used external memory data structure?\na) B-tree\nb) Red-black tree\nc) AVL tree\nd) Both AVL tree and Red-black tree\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Medium",
      "target_text": "Which of the following logical operation can\u2019t be implemented by polynomial time graph manipulation algorithms using Binary Decision Diagrams?\na) Conjunction\nb) Disjunction\nc) Negation\nd) Tautology Checking\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
      "target_text": "Consider a 13 element hash table for which f(key)=key mod 13 is used with integer keys. Assuming linear probing is used for collision resolution, at which location would the key 103 be inserted, if the keys 661, 182, 24 and 103 are inserted in that order?, , Choices: ['A\\n0', 'B\\n1', 'C\\n11', 'D\\n12'], Answer: B\n1"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "Given only a single array of size 10 and no other memory is available. Which of the following operation is not feasible to implement (Given only push and pop operation)?\na) Push\nb) Pop\nc) Enqueue\nd) Returntop\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "What is the maximum number of keys that a B+ -tree of order 3 and of height 3 have?\na) 3\nb) 80\nc) 27\nd) 26\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "Let G be a directed graph whose vertex set is the set of numbers from 1 to 100. There is an edge from a vertex i to a vertex j if either j = i + 1 or j = 3i. The minimum number of edges in a path in G from vertex 1 to vertex 100 is    , , Choices: ['A\\n4', 'B\\n7', 'C\\n23', 'D\\n99'], Answer: B\n7"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Hard",
      "target_text": "Stack is used for \u2026\u2026\u2026\u2026\u2026.., , Choices: ['A\\nCPU Resource Allocation', 'B\\nBreadth First Traversal', 'C\\nRecursion', 'D\\nNone of the above'], Answer: C\nRecursion"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "The balance factor of a node in a binary tree is defined as _____\na) addition of heights of left and right subtrees\nb) height of right subtree minus height of left subtree\nc) height of left subtree minus height of right subtree\nd) height of right subtree minus one\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "Can leaf node be called child node in a ternary tree?\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Medium",
      "target_text": "Which of the following methods is the best choice for complex applications?\na) binary heap\nb) d-heap\nc) treap\nd) pairing heap\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "Time complexities of three algorithms are   246. Time complexities of three algorithms are  given. Which should execute the slowest for large   values of N?, , Choices: ['A\\nO(N1/2)', 'B\\nO(N)', 'C\\nO(log N)', 'D\\nNone of these'], Answer: B\nO(N)"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Medium",
      "target_text": "___________ is one of the earliest forms of a self-adjustment strategy used in splay trees, skew heaps.\na) Union by rank\nb) Equivalence function\nc) Dynamic function\nd) Path compression\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=String and difficulty=Hard",
      "target_text": "Is it possible to perform a split operation on a string in the rope if the split point is in the middle of the string.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
      "target_text": "Consider the following statements:, , Choices: ['A\\n(ii) is true', 'B\\n(i) and (ii) are true', 'C\\n(iii) is true', 'D\\n(ii) and (iv) are true'], Answer: C\n(iii) is true"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "What is a sorted array?\na) Arrays sorted in numerical order\nb) Arrays sorted in alphabetical order\nc) Elements of the array are placed at equally spaced addresses in the memory\nd) All of the mentioned\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "What is the postfix form of the following prefix   *+ab\u2013cd, , Choices: ['A\\nab+cd\u2013*', 'B\\nabc+*', 'C\\nab+*cd', 'D\\nab+*cd'], Answer: A\nab+cd\u2013*"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "What is the reason behind the simplicity of a treap?\na) Each node has data and a pointer\nb) Each node is colored accordingly\nc) It is a binary search tree following heap principles\nd) Each node has a fixed priority field\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
      "target_text": "Suppose each set is represented as a linked list with elements in arbitrary order. Which of the operations among union, intersection, membership, cardinality will be the slowest? (GATE CS 2004), , Choices: ['A\\nunion ', 'B\\n membership', 'C\\ncardinality', 'D\\n union, intersection'], Answer: D\n union, intersection"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "What will the output of the below code?, #include <iostream>\nusing namespace std;\n\nint main()\n{\n\n    int arr[2] = { 1, 2 };\n    cout << arr[0] << \", \" << arr[1] << endl;\n    return 0;\n}, Choices: ['A\\n1, 2', 'B\\nSyntax error', 'C\\nRun time error', 'D\\nNone'], Answer: A\n1, 2"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Medium",
      "target_text": "What is the time required for single variant hashing to maintain the minimum hash queue?\na) O (log n!)\nb) O (n!)\nc) O (n2)\nd) O (n)\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
      "target_text": "Given pointer to a node X in a singly linked list. Only one pointer is given, pointer to head node is not given, can we delete the node X from given linked list?, , Choices: ['A\\nPossible if X is not last node. Use following two steps (a) Copy the data of next of X to X. (b)Update the pointer of node X to the node after the next node. Delete next of X.', 'B\\nPossible if size of linked list is even.', 'C\\nPossible if size of linked list is odd', 'D\\nPossible if X is not first node. Use following two steps (a) Copy the data of next of X to X. (b) Delete next of X.'], Answer: A\nPossible if X is not last node. Use following two steps (a) Copy the data of next of X to X. (b)Update the pointer of node X to the node after the next node. Delete next of X."
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "In general, the node content in a threaded binary tree is ________\na) leftchild_pointer, left_tag, data, right_tag, rightchild_pointer\nb) leftchild_pointer, left_tag\nc) leftchild_pointer, left_tag, right_tag, rightchild_pointer\nd) leftchild_pointer, left_tag, data\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "How many types of the merge are available in skew heaps?\na) 1\nb) 2\nc) 3\nd) 4\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "The following numbers are inserted into an empty binary search tree in the given order: 10, 1, 3, 5, 15, 12, 16. What is the height of the binary search tree (the height is the maximum distance of a leaf node from the root)? (GATE CS 2004)\n , , Choices: ['A\\n2\\n ', 'B\\n3\\n ', 'C\\n4\\n ', 'D\\n6\\n '], Answer: B\n3"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "Which of the following is an advantage of using variable-length arrays?\na) Deciding the length of an array at the time of execution\nb) Memory allocation at compile time\nc) Initializing array at compile time\nd) Faster execution of code\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "The number of leaf nodes in a rooted tree of n nodes, with each node having 0 or 3 children is:, , Choices: ['A\\nn/2', 'B\\n(n-1)/3', 'C\\n(n-1)/2', 'D\\n(2n+1)/3'], Answer: D\n(2n+1)/3"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "10. The data structure required for Breadth First Traversal on a graph is?\na) Array\nb) Stack\nc) Tree\nd) Queue\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Medium",
      "target_text": "In a circular queue, how do you increment the rear end of the queue?\na) rear++\nb) (rear+1) % CAPACITY\nc) (rear % CAPACITY)+1\nd) rear\u2013\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "What datastructures can be used in implementing a free list?\na) only linked list\nb) linked list or sort trees\nc) arrays\nd) trees\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "What are splay trees?\na) self adjusting binary search trees\nb) self adjusting binary trees\nc) a tree with strings\nd) a tree with probability distributions\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "Each level in a k-d tree is made of?\na) dimension only\nb) cutting and dimension\nc) color code of node\nd) size of the level\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "What will be the output of the following code?\n\n#include <bits/stdc++.h> \nusing namespace std; \n \nvoid func(int arr[], int n) \n{  \n int count[n]; \n memset(count, 0, sizeof(count)); \n \n for (int i=n-2; i>=0; i--) \n { \n  if (arr[i] >= n - i - 1) \n   count[i]++; \n \n  for (int j=i+1; j < n-1 && j <= arr[i] + i; j++) \n \n   if (count[j] != -1) \n    count[i] += count[j]; \n \n  if (count[i] == 0) \n   count[i] = -1; \n } \n \n for (int i=0; i<n; i++) \n  cout << count[i] << \" \"; \n} \n \nint main() \n{ \n int arr[] = {1, 3, 5, 8, 9}; \n int n = sizeof(arr) / sizeof(arr[0]); \n func(arr, n); \n return 0; \n}\n\na) 3\nb) 4\nc) 4 4 2 1 0\nd) 4 2 2 0 1\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "Which data structure is used for implementing recursion?\na) Queue\nb) Stack\nc) Array\nd) List\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "The following numbers are inserted into an empty binary search tree in the given order: 10, 1, 3, 5, 15, 12, 16 What is the height of the binary search tree ?, , Choices: ['A\\n3', 'B\\n4', 'C\\n5', 'D\\n6'], Answer: A\n3"
    },
    {
      "input_text": "Generate a question on topic=Sorting and difficulty=Hard",
      "target_text": "Merging 4 sorted files containing 50, 10, 25 and   15 records will take \u2026\u2026\u2026\u2026 time, , Choices: ['A\\nO(100)', 'B\\nO(200)', 'C\\nO(175)', 'D\\nO(125)'], Answer: A\nO(100)"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "The equivalent infix expression and value for the postfix form 1 2 + 3 * 4 5 * \u2013 will be ___________\na) 1 + 2 * 3 \u2013 4 * 5 and -13\nb) (2 + 1) * (3 \u2013 4) * 5 and 13\nc) 1 + 2 * (3 \u2013 4) * 5 and -11\nd) (1 + 2) * 3 \u2013 (4 * 5) and -11\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "Consider a situation of writing a binary tree into a file with memory storage efficiency in mind, is array representation of tree is good?\na) yes because we are overcoming the need of pointers and so space efficiency\nb) yes because array values are indexable\nc) No it is not efficient in case of sparse trees and remaning cases it is fine\nd) No linked list representation of tree is only fine\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "Which of the following is not the properties of XOR lists?\na) X\u2295X = 0\nb) X\u22950 = X\nc) (X\u2295Y)\u2295Z = X\u2295(Y\u2295Z)\nd) X\u22950 = 1\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Hard",
      "target_text": "Which of the following option is not correct?, , Choices: ['A\\nIf the queue is implemented with a linked list, keeping track of a front pointer, Only rear pointer s will change during an insertion into an non-empty queue.', 'B\\nQueue data structure can be used to implement least recently used (LRU) page fault algorithm and Quick short algorithm.', 'C\\nQueue data structure can be used to implement Quick short algorithm but not least recently used (LRU) page fault algorithm.', 'D\\nBoth (A) and (C)'], Answer: C\nQueue data structure can be used to implement Quick short algorithm but not least recently used (LRU) page fault algorithm."
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "What is the space complexity of the in-order traversal in the recursive fashion? (d is the tree depth and n is the number of nodes)\na) O(1)\nb) O(nlogd)\nc) O(logd)\nd) O(d)\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "Travelling salesman problem is an example of   \u2026\u2026\u2026\u2026\u2026\u2026., , Choices: ['A\\nDynamic Algorithm', 'B\\nGreedy Algorithm', 'C\\nRecursive Approach', 'D\\nDivide & Conquer'], Answer: A\nGreedy Algorithm"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "Consider a two dimensional array A[20][10]. Assume 4 words per memory cell, the base address of array A is 100, elements are stored in row-major order and first element is A[0][0]. What is the address of A[11][5] ?, , Choices: ['A\\n560', 'B\\n460', 'C\\n570', 'D\\n575'], Answer: A\n560"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "Which of the following is a disadvantage of dynamic arrays?\na) Locality of reference\nb) Data cache utilization\nc) Random access\nd) Memory leak\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
      "target_text": "Which of the following is not true?\na) Trie requires less storage space than hashing\nb) Trie allows listing of all the words with same prefix\nc) Tries are collision free\nd) Trie is also known as prefix tree\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Search and difficulty=Hard",
      "target_text": "What is the formula to find the expected number of probes for an unsuccessful search in linear probing?\na)\n1\n2\n1+1\n(1\u2212\u2144)\n\nb)\n1\n2\n1+1\n(1\u2212\u2144\n)\n2\n\nc)\n1\n2\n1+1\n(1+\u2144)\n\nd)\n1\n2\n1+1\n(1+\u2144)(1\u2212\u2144)\n\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Medium",
      "target_text": "If locality is a concern, you can use \u2026\u2026\u2026\u2026\u2026. to   traverse the graph., , Choices: ['A\\nBreadth First Search', 'B\\nDepth First Search', 'C\\nEither BFS or DFS', 'D\\nNone of these'], Answer: B\nDepth First Search"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "Which of the following is false?\na) 2-3 tree requires less storage than the BST\nb) lookup in 2-3 tree is more efficient than in BST\nc) 2-3 tree is shallower than BST\nd) 2-3 tree is a balanced tree\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "How do you instantiate an array in Java?\na) int arr[] = new int(3);\nb) int arr[];\nc) int arr[] = new int[3];\nd) int arr() = new int(3);\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "Does Van Emde Boas data structure perform all operation in O (log (log M)) time where M = 2m.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "A queue is a,, , Choices: ['A\\nFIFO (First In First Out) list.', 'B\\nLIFO (Last In First Out) list.', 'C\\nOrdered array.', 'D\\nLinear tree.'], Answer: A\nFIFO (First In First Out) list."
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "What is the complexity of adding an element to the heap.\na) O(log n)\nb) O(h)\nc) O(log n) & O(h)\nd) O(n)\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "Is mathematical randomized tree can be generated using beta distribution.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "What is the space complexity of the code that uses merge sort for determining the number of inversions in an array?\na) O(n)\nb) O(log n)\nc) O(1)\nd) O(n log n)\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
      "target_text": "Consider the following function that takes reference to head of a Doubly Linked List as parameter. Assume that a node of doubly linked list has previous pointer as prev and next pointer as next. , void fun(struct node **head_ref) {\n    struct node *temp = NULL;\n    struct node *current = *head_ref;\n\n    while (current != NULL) {\n        temp = current->prev;\n        current->prev = current->next;\n        current->next = temp;\n        current = current->prev;\n    }\n\n    if (temp != NULL)\n        *head_ref = temp->prev;\n}, Choices: ['A\\n2 <--> 1 <--> 4 <--> 3 <--> 6 <-->5', 'B\\n5 <--> 4 <--> 3 <--> 2 <--> 1 <-->6.', 'C\\n6 <--> 5 <--> 4 <--> 3 <--> 2 <--> 1.', 'D\\n6 <--> 5 <--> 4 <--> 3 <--> 1 <--> 2'], Answer: C\n6 <--> 5 <--> 4 <--> 3 <--> 2 <--> 1."
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
      "target_text": "Which of the following problems occur due to linear probing?\na) Primary collision\nb) Secondary collision\nc) Separate chaining\nd) Extendible hashing\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Medium",
      "target_text": "An error is thrown if the character \u2018\\n\u2019 is pushed in to the character stack.\na) true\nb) false\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": ": It is not possible to reach the end of an array if starting element of the array is 0.\na) true\nb) false\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "The associativity of an exponentiation operator ^ is right side.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "What is the time taken to delete a minimum element in a leftist heap?\na) O(N)\nb) O(N log N)\nc) O(log N)\nd) O(M log N)\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
      "target_text": "Memory usage in triply linked list is higher than doubly linked list.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "In what time can a 2-d tree be constructed?\na) O(N)\nb) O(N log N)\nc) O(N2)\nd) O(M log N)\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Medium",
      "target_text": "The process of accessing data stored in a serial   access memory is similar to manipulating data on a   \u2026\u2026\u2026\u2026\u2026, , Choices: ['A\\nheap', 'B\\nqueue', 'C\\nstack \\n (A) heap \\n (B) queue \\n (C) stack', 'D\\nbinary tree'], Answer: C\nstack \n (A) heap \n (B) queue \n (C) stack"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "Dynamic arrays overcome the limit of static arrays.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "What is sparsity of a matrix?\na) The fraction of zero elements over the total number of elements\nb) The fraction of non-zero elements over the total number of elements\nc) The fraction of total number of elements over the zero elements\nd) The fraction of total number of elements over the non-zero elements\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
      "target_text": "34. What is a dequeue?\na) A queue implemented with both singly and doubly linked lists\nb) A queue with insert/delete defined for front side of the queue\nc) A queue with insert/delete defined for both front and rear ends of the queue\nd) A queue implemented with a doubly linked list\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "What is the disadvantage of using splay trees?\na) height of a splay tree can be linear when accessing elements in non decreasing order.\nb) splay operations are difficult\nc) no significant disadvantage\nd) splay tree performs unnecessary splay when a node is only being read\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "Is decrease priority operation performed more quickly in a ternary heap with respect to the binary heap.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
      "target_text": "A technique for direct search is \u2026\u2026\u2026\u2026, , Choices: ['A\\nBinary Search', 'B\\nLinear Search', 'C\\nTree Search', 'D\\nHashing'], Answer: D\nHashing"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "What may be the psuedo code for finding the size of a tree?\na) find_size(root_node\u2013>left_node) + 1 + find_size(root_node\u2013>right_node)\nb) find_size(root_node\u2013>left_node) + find_size(root_node\u2013>right_node)\nc) find_size(root_node\u2013>right_node) \u2013 1\nd) find_size(root_node\u2013>left_node + 1\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "If A \ua4f5 B (A and B are two clusters) is a singleton set then it is a Merge able cluster.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
      "target_text": "Hashing can be used in online spelling checkers.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "To rotate an array by using the algorithm of rotating its elements one by one is an in place algorithm.\na) true\nb) false\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "Binary Decision Diagram is a type of __________\na) Multigraph\nb) Cyclic Graph\nc) Directed Acyclic Graph\nd) Directed Acyclic Word Graph\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
      "target_text": "Which of the following are components of Hashing?, , Choices: ['A\\nKey', 'B\\nHash Function', 'C\\nHash Table', 'D\\nAll of the above'], Answer: D\nAll of the above"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
      "target_text": "Which among the following is the best technique to handle collision?\na) Quadratic probing\nb) Linear probing\nc) Double hashing\nd) Separate chaining\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Medium",
      "target_text": "What is the amortized cost per operation of a skew heap?\na) O(N)\nb) O(N log N)\nc) O(N2)\nd) O(log N)\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "A three dimensional array in \u2018C++\u2019 is declared as int A[x][y][z]. Consider that array elements are stored in row major order and indexing begins from 0. Here, the address of an item at the location A[p][q][r] can be computed as follows (where w is the word length of an integer):, , Choices: ['A\\n&A[0][0][0] + w(y * z * q + z * p + r)', 'B\\n&A[0][0][0] + w(y * z * p + z*q + r)', 'C\\n&A[0][0][0] + w(x * y * p + z * q+ r)', 'D\\n&A[0][0][0] + w(x * y * q + z * p + r)'], Answer: B\n&A[0][0][0] + w(y * z * p + z*q + r)"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "Which of the following array position will be occupied by a new element being pushed for a stack of size N elements(capacity of stack > N)?\na) S[N-1]\nb) S[N]\nc) S[1]\nd) S[0]\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "What are the main applications of tree data structure?, , Choices: ['A\\n1, 2, 3, 4 and 6', 'B\\n1, 2, 3, 4 and 5', 'C\\n1, 3, 4, 5 and 6', 'D\\n1, 2, 3, 4, 5 and 6'], Answer: D\n1, 2, 3, 4, 5 and 6"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
      "target_text": "The following steps in a linked list, , Choices: ['A\\npop operation in stack', 'B\\nremoval of a node', 'C\\ninserting a node at beginning ', 'D\\nmodifying an existing node'], Answer: C\ninserting a node at beginning"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "The nodes in a skip list may have many forward references. their number is determined\na) probabilistically\nb) randomly\nc) sequentially\nd) orthogonally\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=String and difficulty=Medium",
      "target_text": "What is the function present to sort a string in C++?, , Choices: ['A\\nsort();', 'B\\n sort(str.begin(), str.end());', 'C\\nSort_asec();', 'D\\nNone'], Answer: B\n sort(str.begin(), str.end());"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "What is the definition for Ackermann\u2019s function?\na) A(1,i) = i+1 for i>=1\nb) A(i,j) = i+j for i>=j\nc) A(i,j) = i+j for i = j\nd) A(1,i) = i+1 for i<1\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Medium",
      "target_text": "Which of the following statement is incorrect with respect to infix to postfix conversion algorithm?\na) operand is always placed in the output\nb) operator is placed in the stack when the stack operator has lower precedence\nc) parenthesis are included in the output\nd) higher and equal priority operators follow the same condition\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "Which among the following best represents the computational complexity of GLR parsing?\na) O(|G| x n)\nb) O(|G|2 x n)\nc) O(|G| x n2)\nd) O(|G|2 x n2)\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "2-3-4 trees are B-trees of order 4. They are an isometric of _____ trees.\na) AVL\nb) AA\nc) 2-3\nd) Red-Black\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "Complete the given snippet of code for the adjacency list representation of a weighted directed graph.\n\na) vertex, vertex\nb) neighbor, vertex\nc) neighbor, neighbor\nd) vertex, neighbor\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Medium",
      "target_text": "What is a hash table?\na) A structure that maps values to keys\nb) A structure that maps keys to values\nc) A structure used for storage\nd) A structure used to implement stack and queue\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "Which of the following is an infix expression?\na) (a+b)*(c+d)\nb) ab+c*\nc) +ab\nd) abc+*\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "Is the given statement ((A+B) + [C-D]] valid with respect to balancing of symbols?\na) True\nb) False\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "How many edges does a leaf cluster contain?\na) 0\nb) 1\nc) 2\nd) 3\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "What is the run time efficiency of an insertion algorithm?\na) O(N)\nb) O(log N)\nc) O(N2)\nd) O(M log N)\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "What is the postfix expression for the following infix expression?\n\na) abc^/d-\nb) ab/cd^-\nc) ab/^cd-\nd) abcd^/-\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Medium",
      "target_text": "In C programming, when we remove an item   from bottom of the stack, then:, , Choices: ['A\\nThe stack will fall down.', 'B\\nStack will rearrange items. \\n (A) The stack will fall down. \\n (B) Stack will rearrange items.', 'C\\nIt will convert to LIFO', 'D\\nThis operation is not allowed.'], Answer: D\nThis operation is not allowed."
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "Which of the following is/are not applications of bit arrays?\na) Used by the Linux kernel\nb) For the allocation of memory pages\nc) Bloom filter\nd) Implementation of Vectors and Matrices\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
      "target_text": "What is the functionality of the following code? Choose the most appropriate answer., int function()\n{\n    if (head == null)\n        return Integer.MIN_VALUE;\n    int var;\n    Node temp = head;\n    while (temp.getNext() != head)\n        temp = temp.getNext();\n    if (temp == head) {\n        var = head.getItem();\n        head = null;\n        return var;\n    }\n    temp.setNext(head.getNext());\n    var = head.getItem();\n    head = head.getNext();\n    return var;\n}, Choices: ['A\\nReturn data from the end of the list', 'B\\nReturns the data and deletes the node at the end of the list', 'C\\nReturns the data from the beginning of the list', 'D\\nReturns the data and deletes the node from the beginning of the list'], Answer: D\nReturns the data and deletes the node from the beginning of the list"
    },
    {
      "input_text": "Generate a question on topic=String and difficulty=Hard",
      "target_text": "What is the following code segment doing?   void fn( ){   char c;   cin.get(c);   if (c != \u2018\\n\u2019) {   fn( );   \f cout.put(c);   }   }, , Choices: ['A\\nThe string entered is printed as it is.', 'B\\nThe string entered is printed in reverse order.', 'C\\nIt will go in an infinite loop.', 'D\\nIt will print an empty line.'], Answer: B\nThe string entered is printed in reverse order."
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "What must be the missing logic in place of missing lines for finding sum of nodes of binary tree in alternate levels?\n\n//e.g:-consider -complete binary tree:-height-3, [1,2,3,4,5,6,7]-answer must be 23\n  n=power(2,height)-1; //assume input is height and a[i] contains tree elements\n  for(i=1;i<=n;)\n  {\n        //present level is initialized to 1 and sum is initialized to  0\n        for(j=1;j<=pow(2,currentlevel-1);j++) \n        {\n           sum=sum+a[i];\n           i=i+1;\n        }\n     //missing logic\n  }\n\nd)\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "What is the condition for priority of a node in a treap?\na) a node\u2019s priority should be greater than its parent\nb) a node\u2019s priority should be at least as large as its parent\nc) the priority is randomly assigned and can have any value\nd) a node\u2019s priority is always given in decreasing order\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
      "target_text": "What is the disadvantage of hashing with chaining?\na) not easy to implement\nb) takes more space\nc) quite sensitive to hash function\nd) table gets filled up easily\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "In infix to postfix conversion algorithm, the operators are associated from?\na) right to left\nb) left to right\nc) centre to left\nd) centre to right\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "What maximum difference in heights between the leafs of a AVL tree is possible?\na) log(n) where n is the number of nodes\nb) n where n is the number of nodes\nc) 0 or 1\nd) atmost 1\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "The prefix form of A-B/ (C * D ^ E) is?\na) -/*^ACBDE\nb) -ABCD*^DE\nc) -A/B*C^DE\nd) -A/BC*^DE\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Medium",
      "target_text": "The essential condition which is checked before insertion in a linked queue is?\na) Underflow\nb) Overflow\nc) Front value\nd) Rear value\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "At what position the number 72 gets inserted in the following table?\n\na) 3\nb) 10\nc) 4\nd) 6\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "The smallest element of an array\u2019s index is   called its, , Choices: ['A\\nlower bound', 'B\\nupper bound', 'C\\nrange', 'D\\nextraction'], Answer: A\nlower bound"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "2. What are the disadvantages of arrays?\na) Index value of an array can be negative\nb) Elements are sequentially accessed\nc) Data structure like queue or stack cannot be implemented\nd) There are chances of wastage of memory space if elements inserted in an array are lesser than the allocated size\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "B+ trees are preferred to binary trees in databases because (GATE CS 2000), , Choices: ['A\\nDisk capacities are greater than memory capacities', 'B\\nDisk access is much slower than memory access', 'C\\nDisk data transfer rates are much less than memory data transfer rates', 'D\\nDisks are more reliable than memory'], Answer: B\nDisk access is much slower than memory access"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "What is missing in this logic of finding a path in the tree for a given sum (i.e checking whether there will be a path from roots to leaf nodes with given sum)?\n\ncheckSum(struct bin-treenode *root , int sum) :\n  if(root==null)\n    return sum as 0\n  else :\n     leftover_sum=sum-root_node-->value\n     //missing\nif(rootnode):\n  mirror(rootnode-->left)\n  mirror(rootnode-->right)\n \n  //missing\n \nend\n\na) swapping of left and right nodes is missing\nb) swapping of left with root nodes is missing\nc) swapping of right with root nodes is missing\nd) nothing is missing\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Medium",
      "target_text": "A graph with all vertices having equal degree is known as a __________\na) Multi Graph\nb) Regular Graph\nc) Simple Graph\nd) Complete Graph\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "1. Which of these best describes an array?\na) A data structure that shows a hierarchical behavior\nb) Container of objects of similar types\nc) Arrays are immutable once initialised\nd) Array is not a data structure\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "The OS of a computer may periodically collect   all the free memory space to form contiguous block   of free space. This is called:   154. The OS of a computer may periodically collect   all the free memory space to form contiguous block   of free space. This is called:, , Choices: ['A\\nConcatenation', 'B\\nGarbage collection', 'C\\nCollision', 'D\\nDynamic Memory Allocation'], Answer: B\nGarbage collection"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "Which of the following is difficult to determine the right path length?\na) Skew heaps\nb) Binomial tree\nc) Leftist heap\nd) d-heap\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "If arity of operators is fixed, then which of the following notations can be used to parse expressions without parentheses? a) Infix Notation (Inorder traversal of a expression tree) b) Postfix Notation (Postorder traversal of a expression tree) c) Prefix Notation (Preorder traversal of a expression tree), , Choices: ['A\\nb and c', 'B\\nOnly b', 'C\\na, b and c', 'D\\nNone of them'], Answer: A\nb and c"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "The process of accessing data stored in a serial access memory is similar to manipulating data on a ________\na) Heap\nb) Binary Tree\nc) Array\nd) Stack\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "What is indexed skip list?\na) it stores width of link in place of element\nb) it stores index values\nc) array based linked list\nd) indexed tree\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "Hash tree is generalization of ______\na) Heap\nb) Hash list\nc) BST\nd) B \u2013 tree\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "Of the following choices, which operator has the lowest precedence?\na) ^\nb) +\nc) /\nd) #\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "Elements in a tree can be indexed by its position under the ordering of the keys and the ordinal position of an element can be determined, both with good efficiency.\na) true\nb) false\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Medium",
      "target_text": "If there are c children of the root, how many calls to the merge procedure is required to reassemble the heap?\na) c\nb) c+1\nc) c-1\nd) 1\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "What is the maximum possible number of edges in a directed graph with no self loops having 8 vertices?\na) 28\nb) 64\nc) 256\nd) 56\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "LLRB maintains 1-1 correspondence with 2\u20133 trees.\na) True\nb) False"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "An undirected graph G with n vertices and e   edges is represented by adjacency list. What is the   time required to generate all the connected   components?, , Choices: ['A\\nO(n)', 'B\\nO(e)', 'C\\nO(e+n)', 'D\\nO(e2)'], Answer: C\nO(e+n)"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "Which data structure is used to maintain a dynamic forest using a link or cut operation?\na) Top Tree\nb) Array\nc) Linked List\nd) Stack\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "What will be the position of 5, when a max heap is constructed on the input elements 5, 70, 45, 7, 12, 15, 13, 65, 30, 25?\na) 5 will be at root\nb) 5 will be at last level\nc) 5 will be at second level\nd) 5 can be anywhere in heap\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Medium",
      "target_text": "Can the two edges that are coming out of a node have labels of string beginning with the same character?\na) True\nb) False\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "Let G be a weighted graph with edge weights greater than one and G'be the graph constructed by squaring the weights of edges in G. Let T and T' be the minimum spanning trees of G and G', respectively, with total weights t and t'. Which of the following statements is TRUE?, , Choices: [\"A\\nT' = T with total weight t' = t2\", \"B\\nT' = T with total weight t' < t2\", \"C\\nT' != T but total weight t' = t2\", 'D\\nNone of the above'], Answer: D\nNone of the above"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "Who among the following provided the first online contribution of Suffix Tree?\na) Weiner\nb) Samuel F. B. Morse\nc) Ukkonen\nd) Alexander Morse\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "How many children does a binary tree have?\na) 2\nb) any number of children\nc) 0 or 1 or 2\nd) 0 or 1\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
      "target_text": "Which of the following technique stores data separately in case of a collision?\na) Open addressing\nb) Double hashing\nc) Quadratic probing\nd) Chaining using a binary tree\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "Following code snippet is the function to insert a string in a trie. Find the missing line.\n\nprivate void insert(String str)\n    {\n        TrieNode node = root;\n        for (int i = 0; i < length; i++)\n        {\n            int index = key.charAt(i) - 'a';\n            if (node.children[index] == null)\n                node.children[index] = new TrieNode();\n \n            ________________________\n        }\n \n        node.isEndOfWord = true;\n    }\n\na) node = node.children[index];\nb) node = node.children[str.charAt(i + 1)];\nc) node = node.children[index++];\nd) node = node.children[index++];\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "The extra key inserted at the end of the array is   called a \u2026\u2026\u2026\u2026\u2026, , Choices: ['A\\nEnd Key', 'B\\nStop Key', 'C\\nSentinel', 'D\\nTransposition'], Answer: C\nSentinel"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Hard",
      "target_text": "Select the code snippet which performs level-order traversal.\na)\n\npublic static void levelOrder(Tree root) \n{  \n    Queue<Node> queue=new LinkedList<Node>();  \n    queue.add(root);  \n    while(!queue.isEmpty())  \n    {  \n        Node tempNode=queue.poll();  \n        System.out.println(\"%d \",tempNode.data);  \n        if(tempNode.left!=null)  \n        queue.add(tempNode.left);  \n        if(tempNode.right!=null)  \n        queue.add(tempNode.right);  \n    }  \n}\npublic static void levelOrder(Tree root) \n{  \n    Queue<Node> queue=new LinkedList<Node>();  \n    queue.add(root);  \n    while(!queue.isEmpty())  \n    {  \n        Node tempNode=queue.poll();  \n        System.out.println(\"%d \",tempNode.data);  \n        if(tempNode.left!=null)  \n        queue.add(tempNode.right);  \n        if(tempNode.right!=null)  \n        queue.add(tempNode.left);  \n    }  \n}\npublic static void levelOrder(Tree root) \n{  \n    Queue<Node> queue=new LinkedList<Node>();  \n    queue.add(root);  \n    while(!queue.isEmpty())  \n    {  \n        Node tempNode=queue.poll();  \n        System.out.println(\"%d \",tempNode.data);  \n        if(tempNode.right!=null)  \n        queue.add(tempNode.left);  \n        if(tempNode.left!=null)  \n        queue.add(tempNode.right);  \n    }  \n}\npublic static void levelOrder(Tree root) \n{  \n    Queue<Node> queue=new LinkedList<Node>();  \n    queue.add(root);  \n    while(!queue.isEmpty())  \n    {  \n        Node tempNode=queue.poll();  \n        System.out.println(\"%d \",tempNode.data);  \n        if(tempNode.right!=null)  \n        queue.add(tempNode.left.left);  \n        if(tempNode.left!=null)  \n        queue.add(tempNode.right.right);  \n    }  \n}\n\nd)\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "What will be the resulting array after reversing arr[]={3,5,4,2}?\na) 2,3,5,4\nb) 4,2,3,5\nc) 5,4,2,3\nd) 2,4,5,3\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "Which type of data structure does rope represent?\na) Array\nb) Linked List\nc) Queue\nd) Binary Tree\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
      "target_text": "What will be the height of the hash tree with branching factor 2 and with 8 records?\na) 3\nb) 5\nc) 4\nd) 6"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "In a Binary Decision Diagrams 0 values by a _________ line and the 1 values are represented by a _________ line.\na) dashed, bold\nb) bold, dashed\nc) dotted, bold\nd) dotted, dashed\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Medium",
      "target_text": "Quick sort is also known as \u2026\u2026\u2026\u2026., , Choices: ['A\\nMerge sort', 'B\\nHeap sort', 'C\\nBubble sort', 'D\\nNone of these'], Answer: D\nNone of these"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "What is the value of the Jaccard index when the two sets are disjoint?\na) 1\nb) 2\nc) 3\nd) 0\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
      "target_text": "A linear list of elements in which deletion can   be done from one end (front) and insertion can take   place only at the other end (rear) is known as a   \u2026\u2026\u2026\u2026\u2026.., , Choices: ['A\\nQueue', 'B\\nStack', 'C\\nTree', 'D\\nLinked list \\n (A) Queue \\n (B) Stack \\n (C) Tree \\n (D) Linked list'], Answer: A\nQueue"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "A complete binary min-heap is made by including each integer in [1, 1023] exactly once. The depth of a node in the heap is the length of the path from the root of the heap to that node. Thus, the root is at depth 0. The maximum depth at which integer 9 can appear is _____________, , Choices: ['A\\n6', 'B\\n7', 'C\\n8', 'D\\n9'], Answer: C\n8"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "What would be the Prefix notation for the given equation?\n\na) +*AB*CD\nb) *+AB*CD\nc) **AB+CD\nd) +*BA*CD\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Hard",
      "target_text": "Which one of the following is an application of Queue Data Structure?, , Choices: ['A\\nWhen a resource is shared among multiple consumers.', 'B\\nWhen data is transferred asynchronously (data not necessarily received at same rate as sent) between two processes', 'C\\nLoad Balancing', 'D\\nAll of the above'], Answer: D\nAll of the above"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
      "target_text": "Which of the following is not a technique to avoid a collision?\na) Make the hash function appear random\nb) Use the chaining method\nc) Use uniform hashing\nd) Increasing hash table size\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "13. Elements in an array are accessed _____________\na) randomly\nb) sequentially\nc) exponentially\nd) logarithmically\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
      "target_text": "Choose the code snippet which inserts a node to the head of the list?, , Choices: ['A\\npublic void insertHead(int data)\\n{\\nNode temp = new Node(data);\\nNode cur = head;\\nwhile(cur.getNext() != head)\\n cur = cur.getNext()\\nif(head == null)\\n{\\n head = temp;\\n head.setNext(head);\\n}\\nelse\\n{\\n temp.setNext(head);\\n head = temp;\\n cur.setNext(temp);\\n}\\nsize++;\\n}\\n ', 'B\\npublic void insertHead(int data)\\n{\\nNode temp = new Node(data);\\nwhile(cur != head)\\n cur = cur.getNext()\\nif(head == null)\\n{\\n head = temp;\\n head.setNext(head);\\n}\\nelse\\n{\\n temp.setNext(head.getNext());\\n cur.setNext(temp);\\n}\\nsize++;\\n}', 'C\\npublic void insertHead(int data)\\n{\\nNode temp = new Node(data);\\nif(head == null)\\n{\\n head = temp;\\n head.setNext(head);\\n}\\nelse\\n{\\n temp.setNext(head.getNext());\\n head = temp;\\n}\\nsize++;\\n}', 'D\\npublic void insertHead(int data)\\n{\\nNode temp = new Node(data);\\nif(head == null)\\n{\\n head = temp;\\n head.setNext(head.getNext());\\n}\\nelse\\n{\\n temp.setNext(head.getNext());\\n head = temp;\\n}\\nsize++;\\n}'], Answer: A\npublic void insertHead(int data)\n{\nNode temp = new Node(data);\nNode cur = head;\nwhile(cur.getNext() != head)\n cur = cur.getNext()\nif(head == null)\n{\n head = temp;\n head.setNext(head);\n}\nelse\n{\n temp.setNext(head);\n head = temp;\n cur.setNext(temp);\n}\nsize++;\n}"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "A strictly binary tree with 10 leaves, , Choices: ['A\\ncannot have more than 19 nodes', 'B\\nhas exactly 19 nodes', 'C\\nhas exactly 17 nodes', 'D\\nhas exactly 20 nodes'], Answer: B\nhas exactly 19 nodes"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
      "target_text": "Which of the following techniques offer better cache performance?\na) Quadratic probing\nb) Linear probing\nc) Double hashing\nd) Rehashing\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Hard",
      "target_text": "18. Which of the following data structures can be used for parentheses matching?\na) n-ary tree\nb) queue\nc) priority queue\nd) stack\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Medium",
      "target_text": "Convert the following Infix expression to Postfix form using a stack.\nx + y * z + (p * q + r) * s, Follow usual precedence rule and assume that the expression is legal.\na) xyz*+pq*r+s*+\nb) xyz*+pq*r+s+*\nc) xyz+*pq*r+s*+\nd) xyzp+**qr+s*+\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "Array is divided into two parts in ____________\na) Hashed Array Tree\nb) Geometric Array\nc) Bounded-size dynamic array\nd) Sparse Array\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "What is the upper bound for maximum leaves in K-ary tree with height h?\na) K*h\nb) K^h\nc) K+h\nd) K-h\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=String and difficulty=Hard",
      "target_text": "In balancing parentheses algorithm, the string is read from?\na) right to left\nb) left to right\nc) center to right\nd) center to left\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Medium",
      "target_text": "A sort which relatively passes through a list to   exchange the first element with any element less   than it and then repeats with a new first element is   called \u2026\u2026\u2026\u2026\u2026., , Choices: ['A\\nInsertion sort', 'B\\nSelection sort', 'C\\nHeap sort', 'D\\nQuick sort'], Answer: B\nQuick sort"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "The pre-order and post order traversal of a   Binary Tree generates the same output. The tree can   have maximum \u2026\u2026\u2026\u2026.., , Choices: ['A\\nThree nodes', 'B\\nTwo nodes', 'C\\nOne node', 'D\\nAny number of nodes'], Answer: C\nOne node"
    },
    {
      "input_text": "Generate a question on topic=String and difficulty=Medium",
      "target_text": "Guess the output:, , Choices: ['A\\n\"10 20\"', 'B\\n30', 'C\\n10 20', 'D\\n1020'], Answer: D\n1020"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "The column sum in an incidence matrix for a directed graph having no self loop is __________\na) 0\nb) 1\nc) 2\nd) equal to the number of edges\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Medium",
      "target_text": "Every Binary Decision Diagram is also a Propositional Directed Acyclic Graph.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "In postorder traversal of binary tree right subtree is traversed before visiting root.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "How many bits are needed to specify the single permutation by min-wise independent family?\na) O (log n!)\nb) O (n!)\nc) \u03a9 (n2)\nd) \u03a9 (n)\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "Which of the following array element will return the top-of-the-stack-element for a stack of size N elements(capacity of stack > N)?\na) S[N-1]\nb) S[N]\nc) S[N-2]\nd) S[N+1]\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "How many properties will an equivalent relationship satisfy?\na) 1\nb) 2\nc) 3\nd) 4\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "Which one of the following array elements represents a binary min heap?\na) 12 10 8 25 14 17\nb) 8 10 12 25 14 17\nc) 25 17 14 12 10 8\nd) 14 17 25 10 12 8"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "Auto complete and spell checkers can be implemented efficiently using the trie.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Hard",
      "target_text": "What data structure is used when converting an infix notation to prefix notation?\na) Stack\nb) Queue\nc) B-Trees\nd) Linked-list\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "What is the prime condition of AA-tree which makes it simpler than a red-black tree?\na) Only right children can be red\nb) Only left children can be red\nc) Right children should strictly be black\nd) There should be no left children\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "log2 n nodes, , Choices: ['A\\nlog2 n nodes', 'B\\nn+1 nodes', 'C\\n2n nodes', 'D\\n2n+1 nodes'], Answer: D\n2n+1 nodes"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "How will you implement dynamic arrays in Java?\na) Set\nb) Map\nc) HashMap\nd) List\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
      "target_text": "What is the advantage of a hash table as a data structure?\na) faster access of data\nb) easy to implement\nc) very efficient for less number of entries\nd) exhibit good locality of reference\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "Who coined the term Sparse Matrix?\na) Harry Markowitz\nb) James Sylvester\nc) Chris Messina\nd) Arthur Cayley\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "What is the run time of finding the nearest neighbour in a k-d tree?\na) O(2+ log N)\nb) O( log N)\nc) O(2d log N)\nd) O( N log N)\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "In order to get the contents of a Binary search   tree in ascending order, one has to traverse it in   \u2026\u2026\u2026\u2026, , Choices: ['A\\npre-order', 'B\\nin-order', 'C\\npost order', 'D\\nnot possible'], Answer: B\nin-order"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "For the given conditions, which of the following is in the correct order of increasing space requirement?\ni) Undirected, no weight\nii) Directed, no weight\niii) Directed, weighted\niv) Undirected, weighted\na) ii iii i iv\nb) i iii ii iv\nc) iv iii i ii\nd) i ii iii iv\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "Which of the following is not a sequence   container provided by the STL?, , Choices: ['A\\nvector', 'B\\narray', 'C\\nlist', 'D\\ndeque'], Answer: B\narray"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "Which traversal is shown by this pseudo code?, , Choices: ['A\\nIn-order', 'B\\nLevel Order', 'C\\nPost-order', 'D\\nPre-order'], Answer: A\nIn-order"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
      "target_text": "Which among the following is a typical declaration of an unrolled linked list in C?\na)\n\nd)\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
      "target_text": "Which data structure represents a waiting line   and limits insertions to be made at the back of the   data structure and limits removals to be made from   the front?, , Choices: ['A\\nStack', 'B\\nQueue', 'C\\nBinary tree', 'D\\nLinked list'], Answer: B\nQueue"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "Which parsing approach is followed by syntax tree?\na) Top-down parsing\nb) Bottom-up parsing\nc) Predictive parsing\nd) Shift reduce parsing\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "A queue follows __________\na) FIFO (First In First Out) principle\nb) LIFO (Last In First Out) principle\nc) Ordered array\nd) Linear tree\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "Arbitrary expressions can be used while declaring variable-length arrays.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "In quadratic probing, if the table size is prime, a new element cannot be inserted if the table is half full.\na) True\nb) False\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Sorting and difficulty=Medium",
      "target_text": "To partition unsorted list a pivot element is   176. To partition unsorted list a pivot element is  used in \u2026\u2026\u2026\u2026\u2026, , Choices: ['A\\nMerge Sort', 'B\\nQuick Sort', 'C\\nInsertion Sort', 'D\\nSelection Sort'], Answer: B\nQuick Sort"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "The number of structurally different possible binary trees with 4 nodes is, , Choices: ['A\\n14', 'B\\n12', 'C\\n336', 'D\\n168'], Answer: A\n14"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Medium",
      "target_text": "Determine the number of vertices for the given Graph or Multigraph?\nG is a 4-regular Graph having 12 edges.\na) 3\nb) 6\nc) 4\nd) Information given is insufficient\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "Which type of binary tree does rope require to perform basic operations?\na) Unbalanced\nb) Balanced\nc) Complete\nd) Full\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "How many child nodes does each node of K-ary Tree contain?\na) 2\nb) 3\nc) more than k\nd) at most k\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
      "target_text": "Output of given program is,, def findSymPairs(arr, row):\n    hM = dict()\n    for i in range(row):\n        first = arr[i][0]\n        sec = arr[i][1]\n        if (sec in hM.keys() and hM[sec] == first):\n            print(\"(\", sec,\",\", first, \")\")\n        else:\n            hM[first] = sec\n        \nif __name__ == '__main__':\n    arr = [[0 for i in range(2)]\n      for i in range(5)]\n    arr[0][0], arr[0][1] = 11, 20\n    arr[1][0], arr[1][1] = 30, 40\n    arr[2][0], arr[2][1] = 5, 10\n    arr[3][0], arr[3][1] = 40, 30\n    arr[4][0], arr[4][1] = 10, 5\n    findSymPairs(arr, 5), Choices: ['A\\n(30, 40)\\n(5, 10)', 'B\\n(30, 40)\\n(5, 5)', 'C\\n(30, 4)\\n(5, 1)', 'D\\n(3, 4)\\n(5, 1)'], Answer: A\n(30, 40)\n(5, 10)"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Medium",
      "target_text": "A queue data-structure can be used for   \u2026\u2026\u2026\u2026\u2026, , Choices: ['A\\nexpression parsing', 'B\\nrecursion', 'C\\nresource allocation', 'D\\nall of these'], Answer: C\nresource allocation"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "Which of the following is the application of minimum ternary heap?\na) Prim\u2019s Algorithm\nb) Euclid\u2019s Algorithm\nc) Eight Queen Puzzle\nd) Tree\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "Let A be a square matrix of size n x n. Consider the following program. What is the expected output? , , Choices: ['A\\nThe matrix A itself', 'B\\nTranspose of matrix A', 'C\\nAdding 100 to the upper diagonal elements and subtracting 100 from diagonal elements of A', 'D\\nInverse of matrix A'], Answer: A\nThe matrix A itself"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "In binary heap, whenever the root is removed   then the rightmost element of last level is replaced   by the root. Why?, , Choices: ['A\\nIt is the easiest possible way.', 'B\\nTo make sure that it is still complete binary tree.', 'C\\nBecause left and right subtree might be missing.', 'D\\nNone of these'], Answer: B\nTo make sure that it is still complete binary tree."
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "What will be the output of the following code?\n\n#include <bits/stdc++.h> \nusing namespace std; \nvoid func1(int arr[], int left, int right) \n{ \n while (left < right) \n { \n  int temp = arr[left]; \n  arr[left] = arr[right]; \n  arr[right] = temp; \n  left++; \n  right--; \n } \n} \n \nvoid func(int arr[], int d, int n) \n{ \n func1(arr, 0, d-1); \n func1(arr, d, n-1); \n func1(arr, 0, n-1); \n} \n \nvoid printArray(int arr[], int size) \n{ \n for (int i = 0; i < size; i++) \n cout << arr[i] << \" \"; \n} \n \nint main() \n{ \n int arr[] = {1, 2, 3, 4, 5}; \n int n = sizeof(arr)/sizeof(arr[0]); \n int d = 2; \n func(arr, d, n); \n printArray(arr, n); \n \n return 0; \n}\n\na) 3 2 1 4 5\nb) 3 4 5 1 2\nc) 5 4 3 2 1\nd) error\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Hard",
      "target_text": "Consider you have a stack whose elements in it are as follows.\n5 4 3 2 << top\nWhere the top element is 2.\nYou need to get the following stack\n6 5 4 3 2 << top\nThe operations that needed to be performed are (You can perform only push and pop):\na) Push(pop()), push(6), push(pop())\nb) Push(pop()), push(6)\nc) Push(pop()), push(pop()), push(6)\nd) Push(6)\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
      "target_text": "In a hash table of size 10, where is element 7 placed?\na) 6\nb) 7\nc) 17\nd) 16\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "What will be the auxiliary space requirement of the following code?\n\n#include <bits/stdc++.h> \nusing namespace std; \nvoid func(int arr[], int left, int right) \n{     \n while (left < right) \n { \n  int temp = arr[left]; \n  arr[left] = arr[right]; \n  arr[right] = temp; \n  left++; \n  right--; \n } \n \n} \n \nvoid printArray(int arr[], int size) \n{ \n    for (int i = 0; i < size; i++) \n    cout << arr[i] << \" \"; \n} \n \nint main() \n{ \n int arr[] = {1,4,3,5}; \n int n = sizeof(arr) / sizeof(arr[0]); \n func(arr, 0, n-1); \n printArray(arr, n); \n return 0; \n}\n\na) O(1)\nb) O(n)\nc) O(log n)\nd) O(n log n)\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "The number of ways in which the numbers 1, 2, 3, 4, 5, 6, 7 can be inserted in an empty binary search tree, such that the resulting tree has height 6, is _____________ Note: The height of a tree with a single node is 0. [This question was originally a Fill-in-the-Blanks question], , Choices: ['A\\n2', 'B\\n4', 'C\\n64', 'D\\n32'], Answer: C\n64"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "The postorder traversal of a binary tree is 8, 9, 6, 7, 4, 5, 2, 3, 1. The inorder traversal of the same tree is 8, 6, 9, 4, 7, 2, 5, 1, 3. The height of a tree is the length of the longest path from the root to any leaf. The height of the binary tree above is ________ .\n\nNote -This was Numerical Type question., , Choices: ['A\\n2', 'B\\n3', 'C\\n4', 'D\\n5'], Answer: C\n4"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Medium",
      "target_text": "If a stack S contains the integers 2, -3, 2, -1, 2 in order from bottom to top, what is f(S)?, , Choices: ['A\\n6', 'B\\n4', 'C\\n3', 'D\\n2'], Answer: D\n2"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "How would you store an element in a sparse matrix?\na)\n\npublic void store(int row_index, int col_index, Object val)\n{\n        if (row_index < 0 || row_index > N)\n {\n            System.out.println(\"row index out of bounds\");\n   return;\n }\n        if (col_index < 0 || col+index > N)\n {\n            System.out.println(\"column index out of bounds\");\n   return;\n }\n        sparse_array[row_index].store(col_index, val);\n}\npublic void store(int row_index, int col_index, Object val)\n{\n        if (row_index < 0 || row_index > N)\n {\n            System.out.println(\"column index out of bounds\");\n   return;\n }\n        if (col_index < 0 || col+index > N)\n {\n            System.out.println(\"row index out of bounds\");\n   return;\n }\n        sparse_array[row_index].store(col_index, val);\n}\npublic void store(int row_index, int col_index, Object val)\n{\n        if (row_index < 0 && row_index > N)\n {\n            System.out.println(\"row index out of bounds\");\n   return;\n }\n        if (col_index < 0 && col+index > N)\n {\n            System.out.println(\"column index out of bounds\");\n   return;\n }\n        sparse_array[row_index].store(col_index, val);\n    }\npublic void store(int row_index, int col_index, Object val)\n{\n        if (row_index < 0 && row_index > N)\n {\n            System.out.println(\"column index out of bounds\");\n   return;\n }\n        if (col_index < 0 && col+index > N)\n {\n            System.out.println(\"row index out of bounds\");\n   return;\n }\n        sparse_array[row_index].store(col_index, val);\n}\n\nd)\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "Trie is also known as _________\na) Digital Tree\nb) Treap\nc) Binomial Tree\nd) 2-3 Tree\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "A node can have a minimum of one child.\na) true\nb) false\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "How will you remove a left horizontal link in an AA-tree?\na) by performing right rotation\nb) by performing left rotation\nc) by deleting both the elements\nd) by inserting a new element\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
      "target_text": "Which of the following trait of a hash function is most desirable?\na) it should cause less collisions\nb) it should cause more collisions\nc) it should occupy less space\nd) it should be easy to implement\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "In a B+ tree, both the internal nodes and the leaves have keys.\na) True\nb) False\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Search and difficulty=Hard",
      "target_text": "In binary search, average number of   comparison required for searching an element in a   list if n numbers is:, , Choices: ['A\\nlog2 n', 'B\\nn / 2', 'C\\nn', 'D\\nn \u2013 1'], Answer: A\nlog2 n"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Medium",
      "target_text": "How much time a heap will take to Find Min/Max value?, , Choices: ['A\\nO(logN)', 'B\\nO(N)', 'C\\nO(1)', 'D\\nNone'], Answer: C\nO(1)"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "Choose the appropriate code that counts the number of non-zero(non-null) elements in the sparse array.\na)\n\nd)\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "What is the postfix expression for the infix expression?\n\na) -ab-c\nb) ab \u2013 c \u2013\nc) \u2013 -abc\nd) -ab-c\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "What is a dynamic array?\na) A variable size data structure\nb) An array which is created at runtime\nc) The memory to the array is allocated at runtime\nd) An array which is reallocated everytime whenever new elements have to be added\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "Where does the GNU C compiler allocates memory for variable-length arrays?\na) Tree\nb) Stack\nc) Linked List\nd) Queue\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "Which of the following ways can be used to represent a graph?\na) Adjacency List and Adjacency Matrix\nb) Incidence Matrix\nc) Adjacency List, Adjacency Matrix as well as Incidence Matrix\nd) No way to represent\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Medium",
      "target_text": "Select the function which performs insertion at the front end of the dequeue?\na)\n\npublic void function(Object item)\n{\n Node temp = new Node(item,null);\n if(isEmpty())\n {\n  temp.setNext(trail);\n  head.setNext(temp);\n }\n else\n {\n  Node cur = head.getNext();\n  temp.setNext(cur);\n  head.setNext(temp);\n }\n size++;\n}\npublic void function(Object item)\n{\n Node temp = new Node(item,null);\n if(isEmpty())\n {\n  temp.setNext(trail);\n  head.setNext(trail);\n }\n else\n {\n  Node cur = head.getNext();\n  temp.setNext(cur);\n  head.setNext(temp);\n }\n size++;\n}\npublic void function(Object item)\n{\n Node temp = new Node(item,null);\n if(isEmpty())\n {\n  Node cur = head.getNext();\n  temp.setNext(cur);\n  head.setNext(temp);\n }\n else\n {\n  temp.setNext(trail);\n  head.setNext(temp);\n }\n size++;\n}\npublic void function(Object item)\n{\n Node temp = new Node(item,null);\n if(isEmpty())\n {\n  Node cur = head.getNext();\n  temp.setNext(cur);\n  cur.setNext(temp);\n }\n else\n {\n  head.setNext(trail);\n  trail.setNext(temp);\n }\n size++;\n}\npublic void function(Object item)\n{\n Node temp=new Node(item,trail);\n if(isEmpty())\n {\n  head.setNext(temp);\n  temp.setNext(trail);\n }\n else\n {\n  Node cur=head.getNext();\n  while(cur.getNext()!=trail)\n  {\n   cur=cur.getNext();\n  }\n  cur.setNext(temp);\n }\n size++;\n}\n\na) Insert at the front end of the dequeue\nb) Insert at the rear end of the dequeue\nc) Fetch the element at the rear end of the dequeue\nd) Fetch the element at the front end of the dequeue\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Hard",
      "target_text": "What should be done when an opening parentheses is read in a balancing symbols algorithm?\na) push it on to the stack\nb) throw an error\nc) ignore the parentheses\nd) pop the stack\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "Which of the following symbols represent nodes having exactly one child?\n\ni) \u0394 ii) \u25ca iii) \u2207 iv) T v) \u22a5\n\na) iv) and v)\nb) v)\nc) i) and iii)\nd) iii)\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "For an undirected graph G with n vertices and e   edges, the sum of the degrees of each vertex is \u2026\u2026..   135. For an undirected graph G with n vertices and e   edges, the sum of the degrees of each vertex is \u2026\u2026.., , Choices: ['A\\nne', 'B\\n2n', 'C\\n2e', 'D\\nen'], Answer: C\n2e"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "Express -15 as a 6-bit signed binary number.\na) 001111\nb) 101111\nc) 101110\nd) 001110\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "What is the time required to locate the occurrences of a pattern P of length m in a string of length n using suffix array?\na) O(nm)\nb) O(n2)\nc) O(mnlogn)\nd) O(mlogn)\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "Reverse Polish Notation is the reverse of a Polish Notation.\na) True\nb) False\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "What are the disadvantages in implementing buddy system algorithm for free lists?\na) internal fragmentation\nb) it takes so much space\nc) we no more have the hole lists in order of memory address, so it is difficult to detect if 2 holes remain adjacent in memory and shall be merged into one hole\nd) both a and c are correct\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Medium",
      "target_text": "What is the number of unlabeled simple directed graph that can be made with 1 or 2 vertices?\na) 2\nb) 4\nc) 5\nd) 9"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "Which of the following types of expressions do   not require precedence rules for evaluation?, , Choices: ['A\\nfully parenthesised infix expression', 'B\\npostfix expression', 'C\\npartially parenthesised infix expression', 'D\\nmore than one of the above'], Answer: A\nfully parenthesised infix expression"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "Using what formula can a parent node be located in an array?\na) (i+1)/2\nb) (i-1)/2\nc) i/2\nd) 2i/2\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
      "target_text": "Which of the following data structure is preferred to have lesser search time when the list size is small?\na) search tree\nb) sorted list\nc) self organizing list\nd) linked list\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "If the address of A[1][1] and A[2][1] are 1000   and 1010 respectively and each element occupies 2   bytes then the array has been stored in \u2026\u2026\u2026\u2026\u2026   order., , Choices: ['A\\nrow major', 'B\\ncolumn major', 'C\\nmatrix major', 'D\\nnone of these'], Answer: A\nrow major"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
      "target_text": "What does the following function do for a given Linked List with first node as head?\n\nvoid fun1(struct node* head)\n{\n    if(head == NULL)\n    return;\n    fun1(head->next);\n    printf(\"%d  \", head->data);\n}\n\na) Prints all nodes of linked lists\nb) Prints all nodes of linked list in reverse order\nc) Prints alternate nodes of Linked List\nd) Prints alternate nodes in reverse order\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
      "target_text": "In linked list implementation of a queue, from where is the item deleted?\na) At the head of link list\nb) At the centre position in the link list\nc) At the tail of the link list\nd) Node before the tail\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
      "target_text": "On which data structure is a d-ary heap based?\na) stack\nb) queue\nc) linked list\nd) priority queue\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "General ordered tree can be encoded into binary trees.\na) true\nb) false\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "A binary tree in which if all its levels except   possibly the last, have the maximum number of   nodes and all the nodes at the last level appear as   far left as possible, is known as, , Choices: ['A\\nfull binary tree', 'B\\nAVL tree', 'C\\nthreaded tree', 'D\\ncomplete binary tree'], Answer: D\nfull binary tree"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "How many inversions are there in the array arr = {1,5,4,2,3}?\na) 0\nb) 3\nc) 4\nd) 5\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=String and difficulty=Hard",
      "target_text": "Select the appropriate code for the recursive Tower of Hanoi problem.(n is the number of disks)\na)\n\npublic void solve(int n, String start, String auxiliary, String end)\n{\n       if (n == 1) \n       {\n           System.out.println(start + \" -> \" + end);\n       } \n       else\n       {\n           solve(n - 1, start, end, auxiliary);\n           System.out.println(start + \" -> \" + end);\n           solve(n - 1, auxiliary, start, end);\n       }\n}\npublic void solve(int n, String start, String auxiliary, String end) \n{\n       if (n == 1) \n       {\n           System.out.println(start + \" -> \" + end);\n       } \n       else \n       {\n           solve(n - 1, auxiliary, start, end);\n           System.out.println(start + \" -> \" + end);\n       }\n}\npublic void solve(int n, String start, String auxiliary, String end) \n{\n       if (n == 1) \n       {\n           System.out.println(start + \" -> \" + end);\n       } \n       else \n       {\n           System.out.println(start + \" -> \" + end);\n    solve(n - 1, auxiliary, start, end);\n       }\n}\npublic void solve(int n, String start, String auxiliary, String end)\n{\n       if (n == 1) \n       {\n           System.out.println(start + \" -> \" + end);\n       } \n       else\n       {\n           solve(n - 1, start, end, auxiliary);\n           System.out.println(start + \" -> \" + end);\n       }\n}\n\nd)\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "What would be the solution to the given prefix notation?\n\na) 1\nb) 0\nc) -1\nd) -2\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "Consider the following array of elements. \u232989, 19, 50, 17, 12, 15, 2, 5, 7, 11, 6, 9, 100\u232a. The minimum number of interchanges needed to convert it into a max-heap is, , Choices: ['A\\n4', 'B\\n5', 'C\\n2', 'D\\n3'], Answer: D\n3"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Medium",
      "target_text": "In the given connected graph G, what is the value of rad(G) and diam(G)?\na) 2, 3\nb) 3, 2\nc) 2, 2\nd) 3, 3\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "We have a binary heap on n elements and wish to insert n more elements (not necessarily one after another) into this heap. The total time required for this is (A) theta(logn) (B) theta(n) (C) theta(nlogn) (D) theta(n^2), , Choices: ['A\\nA', 'B\\nB', 'C\\nC', 'D\\nD'], Answer: B\nB"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Medium",
      "target_text": "Circular queue is also called -----., , Choices: ['A\\nRing Buffer', 'B\\nRectangular Buffer', 'C\\nSquare Buffer', 'D\\nNone'], Answer: A\nRing Buffer"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "Which of the following is the name of the node having child nodes?\na) Brother\nb) Sister\nc) Mother\nd) Parent\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "What is the space complexity of a treap algorithm?\na) O(N)\nb) O(log N)\nc) O(N log N)\nd) O(N2)\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "What is the advantage of the multiplication method?\na) only 2 steps are involved\nb) using constant\nc) value of m not critical\nd) simple multiplication\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "Bigger the query rectangle the better is the query efficiency.\na) true\nb) false\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "How many strategies are followed to solve a dynamic equivalence problem?\na) 1\nb) 2\nc) 3\nd) 4\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "What is the upper bound for a tango tree if k is a number of interleaves?\na) k+2 O (log (log n))\nb) k O (log n)\nc) K2 O (log n)\nd) k+1 O (log (log n))\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "The actual pairing heap implementation uses the right child and left child representation.\na) true\nb) false\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "A node of the weight balanced tree has\na) key, left and right pointers, size\nb) key, value\nc) key, size\nd) key\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Hard",
      "target_text": "Let the following circular queue can   accommodate maximum six elements with the   following data   \f front = 2 rear = 4   queue = \u2026\u2026\u2026; L, M, N, \u2026., \u2026.   What will happen after ADD O operation takes   place?, , Choices: ['A\\nfront = 2 rear = 5 \\n queue = \u2026\u2026\u2026.; L, M, N, O, \u2026\u2026\u2026', 'B\\nfront = 3 rear = 5 \\n queue = L, M, N, O, \u2026\u2026\u2026', 'C\\nfront = 3 rear = 4 \\n queue = \u2026\u2026\u2026; L, M, N, O, \u2026\u2026\u2026', 'D\\nfront = 2 rear = 4 \\n queue = L, M, N, O, \u2026\u2026\u2026'], Answer: A\nfront = 2 rear = 5 \n queue = \u2026\u2026\u2026.; L, M, N, O, \u2026\u2026\u2026"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
      "target_text": "Which of the following is a typical declaration of a triply linked list in C?\na)\n\nd)\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "When does the ArrayIndexOutOfBoundsException occur?\na) Compile-time\nb) Run-time\nc) Not an error\nd) Not an exception at all\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "Do all the nodes have at least two children in suffix tree.\na) True\nb) False\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "The number of edges from the root to the node is called __________ of the tree.\na) Height\nb) Depth\nc) Length\nd) Width\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "What does the other nodes of an expression tree(except leaves) contain?\na) only operands\nb) only operators\nc) both operands and operators\nd) expression\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "Incidence matrix and Adjacency matrix of a graph will always have same dimensions?\na) True\nb) False\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "What is the postfix form of the following prefix   expression -A/B*C$DE ?, , Choices: ['A\\nABCDE$*/', 'B\\nA-BCDE$*/', 'C\\nABC$ED*/', 'D\\nA-BCDE$*/'], Answer: A\nABCDE$*/"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "36. What is the output of the following Java code?\n\npublic class array\n{\n\tpublic static void main(String args[])\n\t{\n\t\tint []arr = {1,2,3,4,5};\n\t\tSystem.out.println(arr[2]);\n\t\tSystem.out.println(arr[4]);\n\t}\n}\na) 4 and 2\nb) 2 and 4\nc) 5 and 3\nd) 3 and 5\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Medium",
      "target_text": "Skip lists are similar to which of the following datastructure?\na) stack\nb) heap\nc) binary search tree\nd) balanced binary search tree\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "A sorting technique which uses the binary tree   concept such that label of any node is larger than all   the labels in the subtrees, is called \u2026\u2026\u2026\u2026\u2026., , Choices: ['A\\nSelection sort', 'B\\nInsertion sort', 'C\\nHeap sort', 'D\\nQuick sort'], Answer: C\nHeap sort"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "Using square brackets ([]) to retrieve vector   \f elements \u2026\u2026\u2026\u2026.. perform bounds checking; using   member function at to retrieve vector elements   \u2026\u2026\u2026\u2026\u2026. perform bounds checking., , Choices: ['A\\nDoes not, does not', 'B\\nDoes not, does', 'C\\nDoes, does not', 'D\\nDoes, does'], Answer: B\nDoes not, does"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Hard",
      "target_text": "Which is the most appropriate data structure for reversing a word?\na) queue\nb) stack\nc) tree\nd) graph\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "Which of the following is an application of Red-black trees and why?\na) used to store strings efficiently\nb) used to store integers efficiently\nc) can be used in process schedulers, maps, sets\nd) for efficient sorting\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "12. Which of the following points is/are not true about Linked List data structure when it is compared with an array?\na) Random access is not allowed in a typical implementation of Linked Lists\nb) Access of elements in linked list takes less time than compared to arrays\nc) Arrays have better cache locality that can make them better in terms of performance\nd) It is easy to insert and delete elements in Linked List\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "Which operation find the value associated with a given key?\na) Insert\nb) Find Next\nc) Look up\nd) Delete\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "Is tango tree represented as a tree of trees.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "How many bits would a succinct binary tree occupy?\na) n+O(n)\nb) 2n+O(n)\nc) n/2\nd) n\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "Which of the following statement is true.\na) There exists a Simple Graph having 10 vertices such that minimum degree of the graph is 0 and maximum degree is 9\nb) There exists a MultiGraph having 10 vertices such that minimum degree of the graph is 0 and maximum degree is 9\nc) There exists a MultiGraph as well as a Simple Graph having 10 vertices such that minimum degree of the graph is 0 and maximum degree is 9\nd) None of the mentioned\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Medium",
      "target_text": "How many basic operations can be performed in a d-heap?\na) 1\nb) 2\nc) 3\nd) 4\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "Given the following program, what will be the 3rd number that\u2019d get printed in the output sequence for the given input?\n\n#include <bits/stdc++.h> \nusing namespace std; \nint cur=0; \nint G[10][10]; \nbool visited[10]; \ndeque <int> q; \n \nvoid fun(int n); \n \nint main()\n{   \n int num=0; \n int n; \n cin>>n; \n \n for(int i=0;i<n;i++) \n       for(int j=0;j<n;j++) \n         cin>>G[i][j]; \n \n for(int i=0;i<n;i++) \n        visited[i]=false; \n \n        fun(n); \n return 0; \n} \n \nvoid fun(int n)\n{ \n cout<<cur<<\" \"; \n visited[cur]=true; \n q.push_back(cur); \n \n do\n        { \n  for(int j=0;j<n;j++)\n                { \n      if(G[cur][j]==1 && !visited[j])\n                    { \n          q.push_back(j); \n          cout<<j<<\" \"; \n          visited[j]=true; \n             } \n \n                 } \n \n  q.pop_front(); \n  if(!q.empty()) \n  cur=q.front(); \n  }while(!q.empty()); \n}\n\na) 2\nb) 6\nc) 8\nd) 4\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "What is the output of the following Java code?\n\npublic class array\n{\n public static void main(String args[])\n {\n  int []arr = {1,2,3,4,5};\n  System.out.println(arr[2]);\n  System.out.println(arr[4]);\n }\n}\n\na) 3 and 5\nb) 5 and 3\nc) 2 and 4\nd) 4 and 2\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
      "target_text": "What is the value of m\u2019 if the value of m is 19?\na) 11\nb) 18\nc) 17\nd) 15\n\n\n\u00ab Prev - Hashing Functions Multiple Choice Questions and Answers (MCQs)\n\u00bb Next - Hash Tree Multiple Choice Questions and Answers (MCQs)\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "Comparing the speed of execution of Red-Black trees and AA-trees, which one has the faster search time?\na) AA-tree\nb) Red-Black tree\nc) Both have an equal search time\nd) It depends\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Hard",
      "target_text": "A data structure in which elements can be inserted or deleted at/from both ends but not in the middle is?\na) Queue\nb) Circular queue\nc) Dequeue\nd) Priority queue\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Medium",
      "target_text": "Consider the following statements:, , Choices: ['A\\n(ii) is true', 'B\\n(i) and (ii) are true', 'C\\n(iii) is true', 'D\\n(ii) and (iv) are true'], Answer: C\n(iii) is true"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "What does the number of inversions in an array indicate?\na) mean value of the elements of array\nb) measure of how close or far the array is from being sorted\nc) the distribution of values in the array\nd) median value of the elements of array\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
      "target_text": "Hash tree is used in effective data verification in distributed systems.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "What will be the auxiliary space complexity of the following code?\n\n#include <bits/stdc++.h> \nusing namespace std; \nvoid func1(int arr[], int n) \n{ \n int k = arr[0], i; \n for (i = 0; i < n - 1; i++) \n  arr[i] = arr[i + 1]; \n \n arr[i] = k; \n} \n \nvoid func(int arr[], int d, int n) \n{ \n for (int i = 0; i < d; i++) \n  func1(arr, n); \n} \n \nvoid printArray(int arr[], int n) \n{ \n for (int i = 0; i < n; i++) \n  cout << arr[i] << \" \"; \n} \n \nint main() \n{ \n int arr[] = { 1, 2, 3, 4, 5}; \n int n = sizeof(arr) / sizeof(arr[0]); \n \n    int d = 3;\n func(arr, d, n); \n printArray(arr, n); \n \n return 0; \n}\n\na) O(1)\nb) O(n)\nc) O(d)\nd) O(n*d)\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "Cartesian trees solve range minimum query problem in constant time.\na) true\nb) false\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "For which type of graph, the given program won\u2019t run infinitely? The Input would be in the form of an adjacency Matrix and n is its dimension (1<n<10).\n\n#include <bits/stdc++.h> \nusing namespace std; \nint G[10][10]; \nvoid fun(int n); \n \nint main()\n{\n int num=0; \n int n; \n cin>>n; \n for(int i=0;i<n;i++) \n   for(int j=0;j<n;j++) \n          cin>>G[i][j]; \n     fun(n); \n return 0; \n}  \n \nvoid fun(int n)\n{ \n for(int i=0;i<n;i++) \n for(int j=0;j<n;j++) \n if(G[i][j]==1) \n j--; \n}\n\na) All Fully Connected Graphs\nb) All Empty Graphs\nc) All Bipartite Graphs\nd) All simple graphs\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "What is the relation between Sparsity and Density of a matrix?\na) Sparsity = 1 \u2013 Density\nb) Sparsity = 1 + Density\nc) Sparsity = Density*Total number of elements\nd) Sparsity = Density/Total number of elements\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "Which one of the below is not divide and   conquer approach?, , Choices: ['A\\nInsertion Sort', 'B\\nMerge Sort', 'C\\nShell Sort', 'D\\nHeap Sort'], Answer: C\nMerge Sort"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Medium",
      "target_text": "Which of the following is not the type of queue?\na) Ordinary queue\nb) Single ended queue\nc) Circular queue\nd) Priority queue\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "A full binary tree with \u2018n\u2019 non-leaf nodes   contains \u2026\u2026\u2026\u2026.., , Choices: ['A\\nlog2 n nodes', 'B\\nn+1 nodes', 'C\\n2n nodes', 'D\\n2n+l nodes'], Answer: C\n2n+l nodes"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "Which of the following code snippet is used to convert decimal to binary numbers?\na)\n\npublic void convertBinary(int num)\n{\n     int bin[] = new int[50];\n     int index = 0;\n     while(num > 0)\n     {\n       bin[index++] = num%2;\n       num = num/2;\n     }\n     for(int i = index-1;i >= 0;i--)\n     {\n       System.out.print(bin[i]);\n     }\n}\npublic void convertBinary(int num)\n{\n     int bin[] = new int[50];\n     int index = 0;\n     while(num > 0)\n     {\n       bin[++index] = num%2;\n       num = num/2;\n     }\n     for(int i = index-1;i >= 0;i--)\n     {\n       System.out.print(bin[i]);\n     }\n}\npublic void convertBinary(int num)\n{\n     int bin[] = new int[50];\n     int index = 0;\n     while(num > 0)\n     {\n         bin[index++] = num/2;\n         num = num%2;\n     }\n     for(int i = index-1;i >= 0;i--)\n     {\n         System.out.print(bin[i]);\n     }\n}\npublic void convertBinary(int num)\n {\n     int bin[] = new int[50];\n     int index = 0;\n     while(num > 0)\n     {\n         bin[++index] = num/2;\n         num = num%2;\n     }\n     for(int i = index-1;i >= 0;i--)\n     {\n         System.out.print(bin[i]);\n     }\n  }\n\nd)\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "What will the output of the below code, be if the base address of the array is 1200?, #include <iostream>\nusing namespace std;\n\nint main()\n{\n\n    int arr[] = { 1, 2, 3, 4, 5 };\n    cout << arr << \", \" << &arr << \", \" << &arr[0] << endl;\n    return 0;\n}, Choices: ['A\\n1200, 1202, 1204', 'B\\n1200 1200 1200', 'C\\n1200, 1204, 1208', 'D\\n1200, 1204, 1208'], Answer: B\n1200 1200 1200"
    },
    {
      "input_text": "Generate a question on topic=String and difficulty=Medium",
      "target_text": "23. What will be the output of the following program?\n\nmain()  \n{  \n   char str[]=\"san foundry\";  \n   int len = strlen(str);  \n   int i;  \n\n   for(i=0;i<len;i++)  \n        push(str[i]);\n\n   for(i=0;i<len;i++)  \n      pop();\n}\na) yrdnuof nas\nb) foundry nas\nc) sanfoundry\nd) san foundry\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Hard",
      "target_text": "Which data structure is needed to convert infix notation to postfix notation?\na) Branch\nb) Tree\nc) Queue\nd) Stack\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "How many comparisons will occur while performing a delete-min operation?\na) d\nb) d-1\nc) d+1\nd) 1\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "In a binomial heap the root value is greater than left child and less than right child.\na) True\nb) False\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "What is a ternary heap?\na) An array with three elements\nb) Linked list with three elements\nc) Tree with three children\nd) Heap with all nodes having three children\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "Which of the following is not an advantage of trees?\na) Hierarchical structure\nb) Faster search\nc) Router algorithms\nd) Undo/Redo operations in a notepad\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "e = 2n+i, , Choices: ['A\\ne = i+n', 'B\\ne = i+2n', 'C\\ne = 2i+n', 'D\\ne = 2n+i'], Answer: B\ne = i+2n"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "Size of an And Inverter Graph is the number of _______ gates and the number of logic levels is number of ________ gates on the __________ path from a primary input to a primary output.\na) AND, AND, average\nb) AND, OR, longest\nc) OR, OR, shortest\nd) AND, AND, longest\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
      "target_text": "In Linked List implementation, a node carries information regarding ___________\na) Data\nb) Link\nc) Data and Link\nd) Node\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "An adjacency matrix representation of a graph   cannot contain information of :, , Choices: ['A\\nnodes', 'B\\nedges', 'C\\ndirection of edges', 'D\\nparallel edges'], Answer: D\nparallel edges"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "Given the intervals [(1, 4), (3, 6), (5, 7), (8, 9)], what would be the output of calling a function that solves the Job Scheduling Algorithm?, , Choices: ['A\\n[(1, 4), (5, 7), (8, 9)]', 'B\\n [(1, 4), (3, 6), (8, 9)]', 'C\\n [(1, 4), (3, 6)]', 'D\\n [(1, 4), (3, 6), (5, 7)]'], Answer: C\n [(1, 4), (3, 6)]"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "For the adjacency matrix of a directed graph the row sum is the _________ degree and the column sum is the ________ degree.\na) in, out\nb) out, in\nc) in, total\nd) total, out\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "What is the average running time of a treap?\na) O(N)\nb) O(N log N)\nc) O(log N)\nd) O(M log N)\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
      "target_text": "The concatenation of two lists is to be performed in O(1) time. Which of the following implementations of a list should be used?, , Choices: ['A\\nsingly linked list', 'B\\ndoubly linked list', 'C\\ncircular doubly linked list', 'D\\narray implementation of lists'], Answer: C\ncircular doubly linked list"
    },
    {
      "input_text": "Generate a question on topic=String and difficulty=Medium",
      "target_text": "What is the output of the following code?, #include <iostream>\nusing namespace std;\n\nint main() {\n\n    cout << \"GFG!\"[0] <<\" \"<<\"GFG!\"[3] ;\n    return 0;\n}, Choices: ['A\\nError', 'B\\nG !', 'C\\nF !', 'D\\nNone'], Answer: B\nG !"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Hard",
      "target_text": "How many stacks are required for applying evaluation of infix expression algorithm?\na) one\nb) two\nc) three\nd) four\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Medium",
      "target_text": "Which of the following is a HyperGraph, where V is the set of vertices, E is the set of edges?\na) V = {v1, v2, v3} E = {e1, e2} = {{v2, v3} {v1, v3}}\nb) V = {v1, v2} E = {e1} = {{v1, v2}}\nc) V = {v1, v2, v3} E = {e1, e2, e3} = {{v2, v3}{v3, v1}{v2, v1}}\nd) All of the mentioned\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "Which type of tree does Van Emde Boas require to perform basic operations?\na) Unbalanced\nb) Balanced\nc) Complete\nd) Non \u2013 Binary\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "The postfix expression abc+de/*- is equivalent to which of the following infix expression?\na) abc+-de*/\nb) (a+b)-d/e*c\nc) a-(b+c)*(d/e)\nd) abc+*-(d/e)\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "Two or more And Inverter Graphs can represent same function.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
      "target_text": "What is the table size when the value of p is 7 in multiplication method of creating hash functions?\na) 14\nb) 128\nc) 49\nd) 127\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "Which of the following is the correct function definition for linear probing?\na) F(i)= 1\nb) F(i)=i\nc) F(i)=i2\nd) F(i)=i+1\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "Who developed the concept of tango tree?\na) Erik Demaine\nb) Mihai Patrascu\nc) John Lacono\nd) All of the mentioned\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Search and difficulty=Hard",
      "target_text": "What technique is used in Transpose method?\na) searched node is swapped with its predecessor\nb) node with highest access count is moved to head of the list\nc) searched node is swapped with the head of list\nd) searched nodes are rearranged based on their proximity to the head node\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Medium",
      "target_text": "What is the efficiency of merge used in leftist heaps?\na) O(N)\nb) O(N log N)\nc) O(M log N)\nd) O(log N)\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "The leaves of an expression tree always contain?\na) operators\nb) operands\nc) null\nd) expression\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
      "target_text": "The case in which a key other than the desired one is kept at the identified location is called?\na) Hashing\nb) Collision\nc) Chaining\nd) Open addressing\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "What are the applications of weight balanced tree?\na) dynamic sets, dictionaries, sequences, maps\nb) heaps\nc) sorting\nd) storing strings\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "What is the parent for a node \u2018w\u2019 of a complete binary tree in an array representation when w is not 0?\na) floor(w-1/2)\nb) ceil(w-1/2)\nc) w-1/2\nd) w/2\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "Who invented d-ary heap?\na) Carl Rick\nb) Alan Turing\nc) Donald Johnson\nd) Euclid\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "1. What is a data structure?\na) A programming language\nb) A collection of algorithms\nc) A way to store and organize data\nd) A type of computer hardware\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
      "target_text": "A doubly linked list is declared as, struct Node {\n       int Value;\n       struct Node *Fwd;\n       struct Node *Bwd;\n);, Choices: ['A\\nX->Bwd->Fwd = X->Fwd; X->Fwd->Bwd = X->Bwd ;', 'B\\nX->Bwd.Fwd = X->Fwd ; X.Fwd->Bwd = X->Bwd ;', 'C\\nX.Bwd->Fwd = X.Bwd ; X->Fwd.Bwd = X.Bwd ;', 'D\\nX->Bwd->Fwd = X->Bwd ; X->Fwd->Bwd = X->Fwd;'], Answer: A\nX->Bwd->Fwd = X->Fwd; X->Fwd->Bwd = X->Bwd ;"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "The concatenation of two lists can be performed in O(1) time. Which of the following variation of the linked list can be used?\na) Singly linked list\nb) Doubly linked list\nc) Circular doubly linked list\nd) Array implementation of list\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
      "target_text": "Which of the following statement(s) is TRUE?, , Choices: ['A\\nI only', 'B\\nII and III only', 'C\\nI and III only', 'D\\nII only'], Answer: C\nI and III only"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "In a file which contains 1 million records and the order of the tree is 100, then what is the maximum number of nodes to be accessed if B+ tree index is used?, , Choices: ['A\\n5', 'B\\n4', 'C\\n3', 'D\\n10'], Answer: B\n4"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "The maximum degree of any vertex in a simple   graph with n vertices is:, , Choices: ['A\\nn\u20131', 'B\\nn+1', 'C\\n2n\u20131', 'D\\nn'], Answer: A\nn\u20131"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "Select the code snippet which performs in-order traversal.\na)\n\npublic void inorder(Tree root)\n{\n System.out.println(root.data);\n inorder(root.left);\n inorder(root.right);\n}\nb)\n\npublic void inorder(Tree root)\n{\n inorder(root.left);\n System.out.println(root.data);\n inorder(root.right);\n}\nc)\n\npublic void inorder(Tree root)\n{\n System.out.println(root.data);\n inorder(root.right);\n inorder(root.left);\n}\nd)\n\npublic void inorder(Tree root)\n{\n inorder(root.right);\n inorder(root.left);\n System.out.println(root.data);\n}\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "What would be the solution to the given prefix notation?\n\na) 2\nb) 5\nc) 10\nd) 7\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "Which of the following piece of code removes the node from a given position?\na)\n\npublic void remove(int pos)\n{\n if(pos<0 || pos>=size)\n {\n  System.out.println(\"Invalid position\");\n  return;\n }\n else\n {\n  if(head == null)\n   return;\n  if(pos == 0)\n  {\n   head = head.getNext();\n   if(head == null)\n   tail = null;\n  }\n         else\n         {\n   Node temp = head;\n   for(int i=1; i<position; i++)\n   temp = temp.getNext();\n  }\n  temp.getNext().setPrev(temp.getPrev());\n  temp.getPrev().setNext(temp.getNext());\n }\n size--;\n}\npublic void remove(int pos)\n{\n if(pos<0 || pos>=size)\n {\n  System.out.println(\"Invalid position\");\n  return;\n }\n else\n {\n  if(head == null)\n  return;\n  if(pos == 0)\n  {\n   head = head.getNext();\n   if(head == null)\n   tail = null;\n  }\n  else\n  {\n   Node temp = head;\n   for(int i=1; i<position; i++)\n   temp = temp.getNext();\n  }\n  temp.getNext().setPrev(temp.getNext());\n  temp.getPrev().setNext(temp.getPrev());\n }\n size--;\n}\npublic void remove(int pos)\n{\n if(pos<0 || pos>=size)\n {\n  System.out.println(\"Invalid position\");\n  return;\n }\n else\n {\n  if(head == null)\n   return;\n  if(pos == 0)\n  {\n   head = head.getNext();\n   if(head == null)\n   tail = null;\n  }\n  else\n  {\n   Node temp = head;\n   for(int i=1; i<position; i++)\n   temp = temp.getNext().getNext();\n  }\n  temp.getNext().setPrev(temp.getPrev());\n  temp.getPrev().setNext(temp.getNext());\n }\n size--;\n}\npublic void remove(int pos)\n{\n if(pos<0 || pos>=size)\n {\n  System.out.println(\"Invalid position\");\n  return;\n }\n else\n {\n  if(head == null)\n   return;\n  if(pos == 0)\n  {\n   head = head.getNext();\n   if(head == null)\n   tail = null;\n  }\n  else\n  {\n   Node temp = head;\n   for(int i=1; i<position; i++)\n   temp = temp.getNext().getNext();\n  }\n  temp.getNext().setPrev(temp.getNext());\n  temp.getPrev().setNext(temp.getPrev());\n }\n size--;\n}\n\nd)\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
      "target_text": "What is the advantage of using a doubly linked list for chaining over singly linked list?\na) it takes less memory\nb) it is easy to implement\nc) it makes the process of insertion and deletion faster\nd) it causes less collisions\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "Which of the following bitwise operations will you use to set a particular bit to 1?\na) OR\nb) AND\nc) XOR\nd) NOR\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
      "target_text": "Using division method, in a given hash table of size 157, the key of value 172 be placed at position ____\na) 19\nb) 72\nc) 15\nd) 17\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "Which property makes top tree a binary tree?\na) Nodes as Cluster\nb) Leaves as Edges\nc) Root is Tree Itself\nd) All of the mentioned\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "A binary tree is a rooted tree but not an ordered tree.\na) true\nb) false\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Sorting and difficulty=Medium",
      "target_text": "Are the below statements true about skiplists?\nIn a sorted set of elements skip lists can implement the below operations\ni.given a element find closest element to the given value in the sorted set in O(logn)\nii.find the number of elements in the set whose values fall a given range in O(logn)\na) true\nb) false\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "Which tree provides a linear time solution for substring operation?\na) Rope Tree\nb) Suffix Tree\nc) Tango Tree\nd) Top Tree\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "One can convert a binary tree into its mirror   image by traversing it in, , Choices: ['A\\nin-order', 'B\\npre-order', 'C\\npost-order', 'D\\nany order'], Answer: C\npost-order"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "What are the dimensions of an incidence matrix?\na) Number of edges*number of edges\nb) Number of edges*number of vertices\nc) Number of vertices*number of vertices\nd) Number of edges * (1\u20442 * number of vertices)\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "What is a complete binary tree?\na) Each node has exactly zero or two children\nb) A binary tree, which is completely filled, with the possible exception of the bottom level, which is filled from right to left\nc) A binary tree, which is completely filled, with the possible exception of the bottom level, which is filled from left to right\nd) A tree In which all nodes have degree 2\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "If the tree is not a complete binary tree then what changes can be made for easy access of children of a node in the array?\na) every node stores data saying which of its children exist in the array\nb) no need of any changes continue with 2w and 2w+1, if node is at i\nc) keep a seperate table telling children of a node\nd) use another array parallel to the array with tree\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "With what data structure can a priority queue be implemented?\na) Array\nb) List\nc) Heap\nd) Tree\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
      "target_text": "Which of these is not an application of a linked list?\na) To implement file systems\nb) For separate chaining in hash-tables\nc) To implement non-binary trees\nd) Random Access of elements\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Medium",
      "target_text": "Which application of stack is used to ensure that the pair of parentheses is properly nested?\na) Balancing symbols\nb) Reversing a stack\nc) Conversion of an infix to postfix expression\nd) Conversion of an infix to prefix expression\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "Is Treap a randomized tree.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Medium",
      "target_text": "What is the value of the sum of the minimum in-degree and maximum out-degree of an Directed Acyclic Graph?\na) Depends on a Graph\nb) Will always be zero\nc) Will always be greater than zero\nd) May be zero or greater than zero\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "Maximum number of nodes in a binary tree   with height k, root is at height 0, is:, , Choices: ['A\\n2k \u2212 1', 'B\\n2k+1 \u2212 1', 'C\\n2k-1 + 1', 'D\\n2k + 1'], Answer: B\n2k+1 \u2212 1"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "What would be the Prefix notation for the given equation?\n\na) +A*B^CD\nb) +A^B*CD\nc) *A+B^CD\nd) ^A*B+CD\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
      "target_text": "What is the probability of a collision when hashing n keys into a hash table of size m, assuming that the hash function produces a uniform random distribution?, , Choices: ['A\\nO(1/n)', 'B\\nO(n/m)', 'C\\nO(logn)', 'D\\nO(m/n)'], Answer: B\nO(n/m)"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
      "target_text": "What is the space used by programs when we use Hashmap in our program?, , Choices: ['A\\nO(1)', 'B\\nO(LogN)', 'C\\nO(N)', 'D\\nNone'], Answer: C\nO(N)"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "Which of these operations have same complexities?\na) Insertion, find_min\nb) Find_min, union\nc) Union, Insertion\nd) Deletion, Find _max\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "Which one of the below mentioned is linear   data structure?, , Choices: ['A\\nQueue \\n (A) Queue', 'B\\nStack', 'C\\nArrays', 'D\\nAll of these'], Answer: D\nAll of these"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "Breadth First Search (BFS) is started on a binary tree beginning from the root vertex. There is a vertex t at a distance four from the root. If t is the n-th vertex in this BFS traversal, then the maximum possible value of n is ________ [This Question was originally a Fill-in-the-blanks Question], , Choices: ['A\\n15', 'B\\n16', 'C\\n31', 'D\\n32'], Answer: C\n31"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "Which of the following properties are obeyed by all three tree \u2013 traversals?\na) Left subtrees are visited before right subtrees\nb) Right subtrees are visited before left subtrees\nc) Root node is visited before left subtree\nd) Root node is visited before right subtree\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "What is the correct postfix expression for the following expression?\n\na) abc^de-fg+*^*+i-\nb) abcde^-fg*+*^h*+i-\nc) abcd^e-fgh*+^*+i-\nd) ab^-dc*+ef^gh*+i-\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "Which process forms the randomized binary search tree?\na) Stochastic Process\nb) Branching Process\nc) Diffusion Process\nd) Aggregation Process\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "Which of these algorithmic approaches tries to   achieve localized optimum solution?, , Choices: ['A\\nGreedy approach', 'B\\nDivide and conquer approach', 'C\\nDynamic approach', 'D\\nAll of the above'], Answer: A\nGreedy approach"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "How does implicit free lists(garbage collection) works in adding memory to free list ?\na) whichever comes last will be added to free list\nb) whichever comes first will be added to free list\nc) certain blocks cannot be used if there are no pointers to them and hence they can be freed\nd) makes a probabilistic guess\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "Both Dynamic array and Dynamically memory allocated array are same.\na) True\nb) False\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "Re-balancing of AVL tree costs \u2026\u2026\u2026\u2026.., , Choices: ['A\\n\u039f(1)', 'B\\n\u039f(log n)', 'C\\n\u039f(n)', 'D\\n\u039f(n2)'], Answer: B\n\u039f(log n)"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Hard",
      "target_text": "Let S be a stack of size n >= 1. Starting with the empty stack, suppose we push the first n natural numbers in sequence, and then perform n pop operations. Assume that Push and Pop operation take X seconds each, and Y seconds elapse between the end of one such stack operation and the start of the next operation. For m >= 1, define the stack-life of m as the time elapsed from the end of Push(m) to the start of the pop operation that removes m from S. The average stack-life of an element of this stack is, , Choices: ['A\\nn(X+ Y)', 'B\\n3Y + 2X', 'C\\nn(X + Y)-X', 'D\\nY + 2X'], Answer: C\nn(X + Y)-X"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
      "target_text": "Consider a double hashing scheme in which the primary hash function is h1(k) = k mod 23, and the secondary hash function is h2(k) = 1+(k mod 19). Assume that the table size is 23. Then the address returned by probe 1 in the probe sequence (assume that the probe sequence begins at probe 0) for key value k = 90 is ________ . , , Choices: ['A\\n13', 'B\\n15', 'C\\n21', 'D\\n23'], Answer: A\n13"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "Which of the following statement is incorrect?\na) Postfix operators use value to their right\nb) Postfix operators use value to their left\nc) Prefix operators use value to their right\nd) In postfix expression, operands are followed by operators\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Medium",
      "target_text": "Choose the option with function having same complexity for a fibonacci heap.\na) Insertion, Union\nb) Insertion, Deletion\nc) extract_min, insertion\nd) Union, delete\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "The height of a binary tree is the maximum number of edges in any root to leaf path. The maximum number of nodes in a binary tree of height h is:, , Choices: ['A\\n2h\u22121', 'B\\n2h\u22121 -1', 'C\\n2h+1-1', 'D\\n2h+1'], Answer: C\n2h+1-1"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
      "target_text": "Which of the following technique stores data in the hash table itself in case of a collision?\na) Open addressing\nb) Chaining using linked list\nc) Chaining using doubly linked list\nd) Chaining using binary tree\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=String and difficulty=Hard",
      "target_text": "Which of these methods of class String is used to obtain the length of the String object?, , Choices: ['A\\nget()', 'B\\nSizeof()', 'C\\nlengthof()', 'D\\nlength()'], Answer: D\nlength()"
    },
    {
      "input_text": "Generate a question on topic=Search and difficulty=Medium",
      "target_text": "The average number of key comparisons done   in successful sequential search in a list of length n is   \u2026\u2026\u2026\u2026.., , Choices: ['A\\nlog n', 'B\\n(n-1)/2', 'C\\nn/2', 'D\\n(n+1)/2'], Answer: D\n(n+1)/2"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "Possible number of labelled simple Directed, Pseudo and Multigarphs exist having 2 vertices?\na) 3, Infinite, 4\nb) 4, 3, Infinite\nc) 4, Infinite, infinite\nd) 4, Infinite, Infinite\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Medium",
      "target_text": "What is the functionality of the following piece of code?\n\npublic void display() \n{\n if(size == 0)\n  System.out.println(\"underflow\");\n else\n {\n  Node current = first;\n  while(current != null)\n  {\n   System.out.println(current.getEle());\n   current = current.getNext();\n  }\n }\n}\n\na) reverse the list\nb) display the list\nc) display the list excluding top-of-the-stack-element\nd) reverse the list excluding top-of-the-stack-element\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "Suppose that we have numbers between 1 and 100 in a binary search tree and want to search for the number 55. Which of the following sequences CANNOT be the sequence of nodes examined?, , Choices: ['A\\n{10, 75, 64, 43, 60, 57, 55}', 'B\\n{90, 12, 68, 34, 62, 45, 55}', 'C\\n{9, 85, 47, 68, 43, 57, 55}', 'D\\n{79, 14, 72, 56, 16, 53, 55}'], Answer: C\n{9, 85, 47, 68, 43, 57, 55}"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
      "target_text": "Which one of the following hash functions on integers will distribute keys most uniformly over 10 buckets numbered 0 to 9 for i ranging from 0 to 2020?\n , , Choices: ['A\\nh(i) = (12 \u2217 i) mod 10\\n ', 'B\\nh(i) = (11 \u2217 i2) mod 10\\n ', 'C\\nh(i) =i3 mod 10\\n ', 'D\\nh(i) =i2 mod 10 \\n '], Answer: C\nh(i) =i3 mod 10"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "In a Binary Decision Diagram, how many types of terminal exists?\na) 1\nb) 2\nc) 3\nd) 4\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "The result of the postfix expression 5 3 * 9 + 6 / 8 4 / + is _____________\na) 8\nb) 6\nc) 10\nd) 9\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
      "target_text": "32. What is the advantage of a hash table as a data structure?\na) easy to implement\nb) faster access of data\nc) exhibit good locality of reference\nd) very efficient for less number of entries\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
      "target_text": "What are the application(s) of linked list?, , Choices: ['A\\nImplementation of stacks and queues.', 'B\\nMaintaining a directory of names', 'C\\nNone of the above', 'D\\nBoth a and b'], Answer: D\nBoth a and b"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "Which of the following is defined as the ratio of total elements of intersection and union of two sets?\na) Rope Tree\nb) Jaccard Coefficient Index\nc) Tango Tree\nd) MinHash Coefficient\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "What does Hamming weight/population count mean in Bit arrays?\na) Finding the number of 1 bit in a bit array\nb) Finding the number of 0 bit in a bit array\nc) Finding the sum of bits in a bit array\nd) Finding the average number of 1\u2019s and 0\u2019s in bit arrays\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "If a simple graph G, contains n vertices and m edges, the number of edges in the Graph G'(Complement of G) is ___________\na) (n*n-n-2*m)/2\nb) (n*n+n+2*m)/2\nc) (n*n-n-2*m)/2\nd) (n*n-n+2*m)/2\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "After performing these set of operations, what does the final list look contain?\n\na) 10 30 10 15\nb) 20 30 40 15\nc) 20 30 40 10\nd) 10 30 40 15\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
      "target_text": "If h is any hashing function and is used to hash   n keys in to a table of size m, where n<=m, the   expected number of collisions involving a particular   key x is :, , Choices: ['A\\nless than 1', 'B\\nless than n', 'C\\nless than m', 'D\\nless than n/2'], Answer: A\nless than 1"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Medium",
      "target_text": "How many of the following statements are correct?\ni) All cyclic graphs are complete graphs.\nii) All complete graphs are cyclic graphs.\niii) All paths are bipartite.\niv) All cyclic graphs are bipartite.\nv) There are cyclic graphs which are complete.\na) 1\nb) 2\nc) 3\nd) 4\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "What can be the value of m in the division method?\na) Any prime number\nb) Any even number\nc) 2p \u2013 1\nd) 2p\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "8. Which of the following concepts make extensive use of arrays?\na) Binary trees\nb) Scheduling of processes\nc) Caching\nd) Spatial locality\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "Suppose the elements 7, 2, 10 and 4 are inserted, in that order, into the valid 3- ary max heap found in the above question, Which one of the following is the sequence of items in the array representing the resultant heap?, , Choices: ['A\\n10, 7, 9, 8, 3, 1, 5, 2, 6, 4', 'B\\n10, 9, 8, 7, 6, 5, 4, 3, 2, 1', 'C\\n10, 9, 4, 5, 7, 6, 8, 2, 1, 3', 'D\\n10, 8, 6, 9, 7, 2, 3, 4, 1, 5'], Answer: A\n10, 7, 9, 8, 3, 1, 5, 2, 6, 4"
    },
    {
      "input_text": "Generate a question on topic=String and difficulty=Medium",
      "target_text": "What is the output of the following code?, #include<bits/stdc++.h> \nusing namespace std;\n\nint main()\n{\n    // Write C++ code here\n    char str_array2[] = \"Geeks\";\n    cout << sizeof(str_array2) << \" \";\n    char str_array[] = { 'G', 'e', 'e', 'k', 's'};\n    cout << sizeof(str_array);\n    return 0;\n}, Choices: ['A\\n6, 6', 'B\\n5, 6', 'C\\n6, 5', 'D\\nNone'], Answer: C\n6, 5"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "A B-tree of order 4 and of height 3 will have a maximum of _______ keys.\na) 255\nb) 63\nc) 127\nd) 188\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Medium",
      "target_text": "In a simple graph, the number of edges is equal to twice the sum of the degrees of the vertices.\na) True\nb) False\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "The growth factor of ArrayList in Java is _______\na) 1\nb) 1.5\nc) 2\nd) 0\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "What is the functionality of the following piece of Java code?\nAssume: \u2018a\u2019 is a non empty array of integers, the Stack class creates an array of specified size and provides a top pointer indicating TOS(top of stack), push and pop have normal meaning.\n\npublic void some_function(int[] a)\n{\n Stack S=new Stack(a.length);\n int[] b=new int[a.length];\n for(int i=0;i<a.length;i++)\n {\n  S.push(a[i]);\n }\n for(int i=0;i<a.length;i++)\n {\n  b[i]=(int)(S.pop());\n }\n System.out.println(\"output :\");\n for(int i=0;i<b.length;i++)\n {\n  System.out.println(b[i]);\n }\n}\n\na) print alternate elements of array\nb) duplicate the given array\nc) parentheses matching\nd) reverse the array\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "Consider any array representation of an n element binary heap where the elements are stored from index 1 to index n of the array. For the element stored at index i of the array (i <= n), the index of the parent is, , Choices: ['A\\ni - 1', 'B\\nfloor(i/2)', 'C\\nceiling(i/2)', 'D\\n(i+1)/2'], Answer: B\nfloor(i/2)"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Medium",
      "target_text": "Consider the stack\n| 5 |\n| 4 |\n| 3 |\n| 2 |.\nAt this point, \u2018*\u2019 is encountered. What has to be done?\na) 5*4=20 is pushed into the stack\nb) * is pushed into the stack\nc) 2*3=6 is pushed into the stack\nd) * is ignored\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "What is the speciality of cartesian sorting?\na) it sorts partially sorted set of data quickly\nb) it considers cartesian product of elements\nc) it sorts elements in less than O(logn)\nd) it is a self balancing tree\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Medium",
      "target_text": "What is the fundamental operation performed in skew heaps?\na) intersection\nb) difference\nc) merging\nd) sorting\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
      "target_text": "Which of the following variant of a hash table has the best cache performance?\na) hash table using a linked list for separate chaining\nb) hash table using binary search tree for separate chaining\nc) hash table using open addressing\nd) hash table using a doubly linked list for separate chaining\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Medium",
      "target_text": "After which city is tango tree named?\na) Vatican City\nb) Buenos Aires\nc) New York\nd) California\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "Several other operations like union set difference and intersection can be done in treaps.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "In the above question would using arrays and swaping of elements in place of xor linked list would have been more efficient?\na) no not all\nb) yes arrays would have been better than xor lists\nc) both would be same in efficiency\nd) can\u2019t say\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Hard",
      "target_text": "Minimum number of queues to implement stack is ___________\na) 3\nb) 4\nc) 1\nd) 2\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=String and difficulty=Medium",
      "target_text": "What will the output of the following questions:, #include <bits/stdc++.h>\nusing namespace std;\n\nint main()\n{\n\n    string a = \"Hello\";\n    string b = \"World\";\n    string c = b.append(a);\n    cout << c << endl;\n\n    return 0;\n}, Choices: ['A\\nHello world', 'B\\nWorld hello', 'C\\nWorldHello', 'D\\nError'], Answer: C\nWorldHello"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "A relation R on a set S, defined as x R y if and only if y R x. This is an example of?\na) reflexive relation\nb) symmetric relation\nc) transitive relation\nd) invalid relation\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "For a binary tree the first node visited in in-order and post-order traversal is same.\na) True\nb) False\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "What is the run time efficiency of delete-min operation?\na) O(log N)\nb) O(logd N)\nc) O(d logd N)\nd) O(d)\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
      "target_text": "Which of the following statements are not correct with respect to Singly Linked List(SLL) and Doubly Linked List(DLL)?\na) Complexity of Insertion and Deletion at known position is O(n) in SLL and O(1) in DLL\nb) SLL uses lesser memory per node than DLL\nc) DLL has more searching power than SLL\nd) Number of node fields in SLL is more than DLL\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Hard",
      "target_text": "Which of the following represents a dequeue operation? (count is the number of elements in the queue)\na)\n\npublic Object dequeue()\n{\n if(count == 0)\n {\n  System.out.println(\"Queue underflow\");\n  return 0;\n }\n else\n {\n  Object ele = q[front];\n  q[front] = null;\n  front = (front+1)%CAPACITY;\n  count--;\n  return ele;\n }\n}\npublic Object dequeue()\n{\n if(count == 0)\n {\n  System.out.println(\"Queue underflow\");\n  return 0;\n }\n else\n {\n  Object ele = q[front];\n  front = (front+1)%CAPACITY;\n  q[front] = null;\n  count--;\n  return ele;\n }\n}\npublic Object dequeue()\n{\n if(count == 0)\n {\n  System.out.println(\"Queue underflow\");\n  return 0;\n }\n else\n {\n  front = (front+1)%CAPACITY;\n  Object ele = q[front];\n  q[front] = null;\n  count--;\n  return ele;\n }\n}\npublic Object dequeue()\n{\n if(count == 0)\n {\n  System.out.println(\"Queue underflow\");\n  return 0;\n }\n else\n {\n  Object ele = q[front];\n  q[front] = null;\n  front = (front+1)%CAPACITY;\n  return ele;\n  count--;\n }\n}\n\nd)\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=String and difficulty=Medium",
      "target_text": "Interpret the given character string as an integer expressed in suitable radix notation.\n\nCharacter string = pt\n\na) 14963\nb) 14392\nc) 12784\nd) 14452\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Hard",
      "target_text": "Which of the following best describes the growth of a linear queue at runtime? (Q is the original queue, size() returns the number of elements in the queue)\na)\n\nprivate void expand()\n{\n int length = size();\n int[] newQ = new int[length<<1];\n for(int i=front; i<=rear; i++)\n {\n  newQ[i-front] = Q[i%CAPACITY];\n }\n Q = newQ;\n front = 0;\n rear = size()-1;\n}\nprivate void expand()\n{\n int length = size();\n int[] newQ = new int[length<<1];\n for(int i=front; i<=rear; i++)\n {\n  newQ[i-front] = Q[i%CAPACITY];\n }\n Q = newQ;\n}\nprivate void expand()\n{\n int length = size();\n int[] newQ = new int[length<<1];\n for(int i=front; i<=rear; i++)\n {\n  newQ[i-front] = Q[i];\n }\n Q = newQ;\n front = 0;\n rear = size()-1;\n}\nprivate void expand()\n{\n int length = size();\n int[] newQ = new int[length*2];\n for(int i=front; i<=rear; i++)\n {\n  newQ[i-front] = Q[i%CAPACITY];\n }\n Q = newQ;\n}\n\nd)\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Medium",
      "target_text": "Given the pseudo code, state whether the function for merging of two heap is correct or not?\n\na) True\nb) False\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "A graph having an edge from each vertex to every other vertex is called a ___________\na) Tightly Connected\nb) Strongly Connected\nc) Weakly Connected\nd) Loosely Connected\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "Which of the following is a difference between   vectors and arrays?, , Choices: ['A\\nAccess to any element using the [] operator.', 'B\\nStored in contiguous blocks of memory.', 'C\\nThe ability to change size dynamically.', 'D\\nEfficient direct access to any element.'], Answer: C\nThe ability to change size dynamically."
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "Which of the following arrays are used in the implementation of list data type in python?\na) Bit array\nb) Dynamic arrays\nc) Sparse arrays\nd) Parallel arrays\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Medium",
      "target_text": "The procedure given below is used to maintain min-order in the min heap. Find out the missing statements, represented as X.\n\na) if A[m] > A[parent(m)] then\nswap A[m] and A[parent(m)]\nb) if A[m] > A[parent(m)] then\nswap A[i] and A[parent(m)]\nc) if A[m] < A[parent(m)] then\nswap A[m] and A[parent(m)]\nd) if A[m] > A[parent(m)] then\nswap A[i] and A[parent(m)]\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
      "target_text": "What data structure would you mostly likely   see in a non-recursive implementation of a   recursive algorithm?, , Choices: ['A\\nStack', 'B\\nLinked list', 'C\\nQueue', 'D\\nTrees'], Answer: A\nStack"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Medium",
      "target_text": "Following is an incorrect pseudocode for the algorithm which is supposed to determine whether a sequence of parentheses is balanced: ,    declare a character stack \n   while ( more input is available)\n   {\n      read a character\n      if ( the character is a '(' ) \n         push it on the stack\n      else if ( the character is a ')' and the stack is not empty )\n         pop a character off the stack\n      else\n         print \"unbalanced\" and exit\n    }\n    print \"balanced\", Choices: ['A\\n((())', 'B\\n())(()', 'C\\n(()()))', 'D\\n(()))()'], Answer: A\n((())"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "Which of the following symbols represent leaf nodes?\n\ni) \u0394 ii) \u25ca iii) \u2207 iv) T v) \u22a5\n\na) iv) and v)\nb) v)\nc) i) and iii)\nd) ii)\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "Which of the following pair\u2019s traversals on a binary tree can build the tree uniquely?\na) post-order and pre-order\nb) post-order and in-order\nc) post-order and level order\nd) level order and preorder\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "What is the location of a parent node for any arbitary node i?\na) (i/2) position\nb) (i+1)/ position\nc) floor(i/2) position\nd) ceil(i/2) position\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Medium",
      "target_text": "Two directed graphs(G and H) are isomorphic if and only if A=PBP-1, where P and A are adjacency matrices of G and H respectively.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "2-3 tree is a specific form of _________\na) B \u2013 tree\nb) B+ \u2013 tree\nc) AVL tree\nd) Heap\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "On which abstract data type does van Emde Boas tree performs the operation?\na) Tree\nb) Linked List\nc) Heap\nd) Associative Array\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Search and difficulty=Hard",
      "target_text": "Several kinds of queries are possible on a k-d called as?\na) partial queries\nb) range queries\nc) neighbour queries\nd) search queries\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "What are the set of functions that are to be executed to get the following output?\ncat\na) push(c, s); push(a, s); push(t, s);\npop(s); pop(s); pop(s);\nb) push(c,s); pop(s); push(a,s); pop(s);push(t,s);pop(s);\nc) pop(c ); pop(a); pop(t);\nd) push(c,s); push(a,s); pop(t);\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=String and difficulty=Hard",
      "target_text": "What can be the maximum depth of the trie with n strings and m as the maximum sting the length?\na) log2n\nb) log2m\nc) n\nd) m\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "What are the operations that can be performed on weight balanced tree?\na) all basic operations and set intersection, set union and subset test\nb) all basic operations\nc) set intersection, set union and subset test\nd) only insertion and deletion\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Hard",
      "target_text": "Recursion is memory-intensive because:, , Choices: ['A\\nRecursive functions tend to declare many local variables.', 'B\\nPrevious function calls are still open when the function \\n calls itself and the activation records of these previous calls \\n still occupy space on the call stack.', 'C\\nMany copies of the function code are created.', 'D\\nIt requires large data values.'], Answer: B\nPrevious function calls are still open when the function \n calls itself and the activation records of these previous calls \n still occupy space on the call stack."
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Medium",
      "target_text": "The number of possible undirected graphs which may have self loops but no multiple edges and have n vertices is ________\na) 2((n*(n-1))/2)\nb) 2((n*(n+1))/2)\nc) 2((n-1)*(n-1))/2)\nd) 2((n*n)/2)\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "What is the maximum number of edges present in a simple directed graph with 7 vertices if there exists no cycles in the graph?\na) 21\nb) 7\nc) 6\nd) 49\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "Assume +, -, *, / are usual arithmetic operator, + has highest precedence and right associative and -, *, / have equal precedence and left associative. What is the output of the expression 23 * 3 \u2013 6 + 11 \u2013 2 * 8 / 4?\na) 110\nb) 100\nc) 130\nd) 120"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "Which special balanced binary search tree is used to store the nodes of auxiliary tree?\na) Red \u2013 Black Tree\nb) Red \u2013 Brown Tree\nc) Red \u2013 Yellow Tree\nd) Red \u2013 Tango Tree\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "What is a sparse array?\na) Data structure for representing arrays of records\nb) Data structure that compactly stores bits\nc) An array in which most of the elements have the same value\nd) An array in which memory is allocated in run time\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "What does the following function check for? (all necessary headers to be included and function is called from main)\n\n#define MAX 10\n \ntypedef struct stack\n{\n    int top;\n    int item[MAX];\n}stack;\n \nint function(stack *s)\n{\n    if(s->top == -1)\n        return 1;\n    else return 0;\n}\n\na) full stack\nb) invalid index\nc) empty stack\nd) infinite stack\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Medium",
      "target_text": "d-heap is shallower than a binary heap.\na) true\nb) false\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "The type of expression in which operator succeeds its operands is?\na) Infix Expression\nb) Prefix Expression\nc) Postfix Expression\nd) Both Prefix and Postfix Expressions\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "What does \u2018stack underflow\u2019 refer to?\na) accessing item from an undefined stack\nb) adding items to a full stack\nc) removing items from an empty stack\nd) index out of bounds exception\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Hard",
      "target_text": "The essential condition which is checked before deletion in a linked queue is?\na) Underflow\nb) Overflow\nc) Front value\nd) Rear value\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "The preorder traversal of a binary search tree is 15, 10, 12, 11, 20, 18, 16, 19. Which one of the following is the postorder traversal of the tree ?, , Choices: ['A\\n10, 11, 12, 15, 16, 18, 19, 20', 'B\\n11, 12, 10, 16, 19, 18, 20, 15', 'C\\n20, 19, 18, 16, 15, 12, 11, 10', 'D\\n19, 16, 18, 20, 11, 12, 10, 15'], Answer: B\n11, 12, 10, 16, 19, 18, 20, 15"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "How many types of insertion are performed in a binary tree?\na) 1\nb) 2\nc) 3\nd) 4\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "The minimum number of multiplications and   additions required to evaluate the polynomial P =   200. The minimum number of multiplications and   additions required to evaluate the polynomial P =  4\u00d73+3\u00d72-15x+45 is, , Choices: ['A\\n6 & 3', 'B\\n4 & 2', 'C\\n3 & 3', 'D\\n8 & 3'], Answer: C\n3 & 3"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Hard",
      "target_text": "5. Which of the following is not the application of stack?\na) Data Transfer between two asynchronous process\nb) Compiler Syntax Analyzer\nc) Tracking of local variables at run time\nd) A parentheses balancing program\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
      "target_text": "How many steps are involved in creating a hash function using a multiplication method?\na) 1\nb) 4\nc) 3\nd) 2\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "Parentheses are simply ignored in the conversion of infix to postfix expression.\na) True\nb) False\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Medium",
      "target_text": "A treap is a combination of a tree and a heap.\na) false\nb) true\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "How many properties does a leftist heap support?\na) 1\nb) 2\nc) 3\nd) 4\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "O(n0.5), , Choices: ['A\\nO(n0.5)', 'B\\nO(n)', 'C\\nO(log n)', 'D\\nO(n log n)'], Answer: C\nO(log n)"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "4. Which of the following is the correct way to declare a multidimensional array in Java?\na) int[] arr;\nb) int arr[[]];\nc) int[][]arr;\nd) int[[]] arr;\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "How to search for a key in a binary search tree?\na)\n\npublic Tree search(Tree root, int key)\n{\n if( root == null || root.key == key )\n        {\n  return root;\n }\n if( root.key < key )\n        {\n  return search(root.right,key);\n }\n else\n return search(root.left,key);\n}\npublic Tree search(Tree root, int key)\n{\n if( root == null || root.key == key )\n        {\n  return root;\n }\n if( root.key < key )\n        {\n  return search(root.left,key);\n }\n else\n return search(root.right,key);\n}\npublic Tree search(Tree root, int key)\n{\n if( root == null)\n        {\n  return root;\n }\n if( root.key < key )\n        {\n  return search(root.right,key);\n }\n else\n  return search(root.left,key);\n}\npublic Tree search(Tree root, int key)\n{\n if( root == null)\n        {\n  return root;\n }\n if( root.key < key )\n        {\n  return search(root.right.right,key);\n }\n else\n  return search(root.left.left,key);\n}\n\nd)\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Hard",
      "target_text": "What are the two different operations done in an AA-Tree?\na) shift and color\nb) skew and split\nc) zig and zag\nd) enqueue and dequeue\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Medium",
      "target_text": "The deque which stores elements in strictly increasing order or in strictly decreasing order is called ------., , Choices: ['A\\nPriority  Queue', 'B\\nDouble ended Queue', 'C\\nMonotonic Deque', 'D\\nNone'], Answer: C\nMonotonic Deque"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "What is the value for the number of nodes of rank r?\na) N\nb) N/2\nc) N/2r\nd) Nr\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "What is the functionality of the following piece of code? Select the most appropriate.\n\npublic void function(int data)\n{\n int flag = 0;\n if( head != null)\n {\n  Node temp = head.getNext();\n  while((temp != head) && (!(temp.getItem() == data)))\n  {\n   temp = temp.getNext();\n   flag = 1;\n   break;\n  }\n }\n if(flag)\n  System.out.println(\"success\");\n else\n  System.out.println(\"fail\");\n}\n\na) Print success if a particular element is not found\nb) Print fail if a particular element is not found\nc) Print success if a particular element is equal to 1\nd) Print fail if the list is empty\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
      "target_text": "In linked list each node contains a minimum of two fields. One field is data field to store the data second field is?\na) Pointer to character\nb) Pointer to integer\nc) Pointer to node\nd) Node\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "Reducing search space by eliminating irrelevant trees is known as?\na) pruning\nb) partial results\nc) freeing space\nd) traversing\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "The preorder traversal sequence of a binary search tree is 30, 20, 10, 15, 25, 23, 39, 35, 42. Which one of the following is the postorder traversal sequence of the same tree?, , Choices: ['A\\n10, 20, 15, 23, 25, 35, 42, 39, 30', 'B\\n15, 10, 25, 23, 20, 42, 35, 39, 30', 'C\\n15, 20, 10, 23, 25, 42, 35, 39, 30', 'D\\n15, 10, 23, 25, 20, 35, 42, 39, 30'], Answer: D\n15, 10, 23, 25, 20, 35, 42, 39, 30"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Medium",
      "target_text": "q[0], , Choices: ['A\\nq[0]', 'B\\nq[1]', 'C\\nq[9]', 'D\\nq[10]'], Answer: A\nq[0]"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "What is the necessary condition for a Tree to be a heap?, , Choices: ['A\\nOnly the tree must be complete.', \"B\\nEvery Root value should be greater or smaller than the children's value only.\", \"C\\nThe tree must be complete and Every Root value should be greater or smaller than the children's value.\", 'D\\nNone'], Answer: C\nThe tree must be complete and Every Root value should be greater or smaller than the children's value."
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
      "target_text": "What data structure would you most likely see in non recursive implementation of a recursive algorithm?\na) Linked List\nb) Stack\nc) Queue\nd) Tree\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "What is/are the disadvantages of implementing tree using normal arrays?\na) difficulty in knowing children nodes of a node\nb) difficult in finding the parent of a node\nc) have to know the maximum number of nodes possible before creation of trees\nd) difficult to implement\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "In a full binary tree if there are L leaves, then total number of nodes N are?\na) N = 2*L\nb) N = L + 1\nc) N = L \u2013 1\nd) N = 2*L \u2013 1\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "Given a directed graph where weight of every edge is same, we can efficiently find shortest path from a given source to destination using?\n , , Choices: ['A\\nBreadth First Traversal', \"B\\nDijkstra\\\\'s Shortest Path Algorithm\", \"C\\nNeither Breadth First Traversal nor Dijkstra\\\\'s algorithm can be used\", 'D\\nDepth First Search'], Answer: A\nBreadth First Traversal"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "Bit fields and Bit arrays are same.\na) True\nb) False\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Hard",
      "target_text": "How many constraints are to be met to successfully implement quadratic probing?\na) 1\nb) 2\nc) 3\nd) 4\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "What will be the output of the following code?\n\n#include <bits/stdc++.h> \nusing namespace std; \n \nvoid func1(int arr[], int n) \n{ \n int k = arr[0], i; \n for (i = 0; i < n - 1; i++) \n  arr[i] = arr[i + 1]; \n \n arr[i] = k; \n} \n \nvoid func(int arr[], int d, int n) \n{ \n for (int i = 0; i < d; i++) \n  func1(arr, n); \n} \n \nvoid printArray(int arr[], int n) \n{ \n for (int i = 0; i < n; i++) \n  cout << arr[i] << \" \"; \n} \n \nint main() \n{ \n int arr[] = { 1, 2, 3, 4, 5}; \n int n = sizeof(arr) / sizeof(arr[0]); \n \n \n func(arr, 3, n); \n printArray(arr, n); \n \n return 0; \n}\n\na) 4 5 1 2 3\nb) 3 4 5 1 2\nc) 5 4 3 1 2\nd) error\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
      "target_text": "What is the advantage of using linked list over the doubly linked list for chaining?\na) it takes less memory\nb) it causes more collisions\nc) it makes the process of insertion and deletion faster\nd) it causes less collisions\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "The pre-order and in-order are traversals of a binary tree are T M L N P O Q and L M N T O P Q. Which of following is post-order traversal of the tree?\na) L N M O Q P T\nb) N M O P O L T\nc) L M N O P Q T\nd) O P L M N Q T"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Hard",
      "target_text": "What is the hash function used in Double Hashing?\na) (h1(k) \u2013 i*h2(k))mod m\nb) h1(k) + h2(k)\nc) (h1(k) + i*h2(k))mod m\nd) (h1(k) + h2(k))mod m\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "Convert the following infix expressions into its equivalent postfix expressions.\n(A + B \u22c0D)/(E \u2013 F)+G\na) (A B D \u22c0 + E F \u2013 / G +)\nb) (A B D +\u22c0 E F \u2013 / G +)\nc) (A B D \u22c0 + E F/- G +)\nd) (A B D E F + \u22c0 / \u2013 G +)\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "AVL trees are more balanced than Red-black trees.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
      "target_text": "What are the time complexities of finding 8th element from beginning and 8th element from end in a singly linked list? Let n be the number of nodes in linked list, you may assume that n > 8., , Choices: ['A\\nO(1) and O(n)', 'B\\nO(1) and O(1)', 'C\\nO(n) and O(1)', 'D\\nO(n) and O(n)'], Answer: A\nO(1) and O(n)"
    },
    {
      "input_text": "Generate a question on topic=Queue and difficulty=Hard",
      "target_text": "If the elements \u201cA\u201d, \u201cB\u201d, \u201cC\u201d and \u201cD\u201d are placed in a queue and are deleted one at a time, in what order will they be removed?\na) ABCD\nb) DCBA\nc) DCAB\nd) ABDC\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Medium",
      "target_text": "What will be the word obtained if the word \u201cabbcabb\u201d is reversed using a stack?\na) bbabbca\nb) abbcabb\nc) bbacbba\nd) bbacabb\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Stack and difficulty=Hard",
      "target_text": "27. The optimal data structure used to solve Tower of Hanoi is _________\na) Tree\nb) Heap\nc) Priority queue\nd) Stack\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "Consider the following piece of code in C++. What does the following code implement?\n\n#include <iostream>   \nusing namespace std;\nint main()\n{\n    int *arr_vla;\n    int size;\n    cout<<\"Enter the size of variable length array: \";\n    cin>>size;\n    arr_vla = new int [size];\n    for (int i = 0; i < size; i++)\n    {\n        cout<<\"Enter the integers to be inserted in the variable length array: \";\n        cin>>arr_vla[i];\n    }\n    for(int i = 0; i < size; i++)\n    {\n        cout<<arr_vla[i]<<\"  \";\n    }\n    cout<<endl;\n    return 0;\n}\n\na) Variable-length array\nb) Fixed-size array\nc) Dynamic memory allocation\nd) Error\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "A scheme for storing binary trees in an array X is as follows. Indexing of X starts at 1 instead of 0. the root is stored at X[1]. For a node stored at X[i], the left child, if any, is stored in X[2i] and the right child, if any, in X[2i+1]. To be able to store any binary tree on n vertices the minimum size of X should be. (GATE CS 2006), , Choices: ['A\\nlog2n', 'B\\nn', 'C\\n2n + 1', 'D\\n2^n \u2014 1'], Answer: D\n2^n \u2014 1"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "What is the other name for Suffix Tree?\na) Array\nb) Stack\nc) Priority Queue\nd) PAT Tree\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "The number of edges from the node to the deepest leaf is called _________ of the tree.\na) Height\nb) Depth\nc) Length\nd) Width\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "If a node in a BST has two children, then its in  order predecessor has \u2026\u2026\u2026\u2026., , Choices: ['A\\nno left child', 'B\\nno right child', 'C\\ntwo children', 'D\\nno child'], Answer: B\nno right child"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "A Binary Search Tree (BST) stores values in the range 37 to 573. Consider the following sequence of keys.\n\nI. 81, 537, 102, 439, 285, 376, 305\n\nII. 52, 97, 121, 195, 242, 381, 472\n\nIII. 142, 248, 520, 386, 345, 270, 307\n\nIV. 550, 149, 507, 395, 463, 402, 270\n\nWhich of the following statements is TRUE?, , Choices: ['A\\nI, II and IV are inorder sequences of three different BSTs', 'B\\nI is a preorder sequence of some BST with 439 as the root', 'C\\nII is an inorder sequence of some BST where 121 is the root and 52 is a leaf', 'D\\nIV is a postorder sequence of some BST with 149 as the root'], Answer: C\nII is an inorder sequence of some BST where 121 is the root and 52 is a leaf"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Medium",
      "target_text": "Does there exist a heap with seven distinct elements so that the Inorder traversal gives the element in sorted order.\na) Yes\nb) No\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "Which of the following don\u2019t use matrices?\na) In solving linear equations\nb) Image processing\nc) Graph theory\nd) Sorting numbers\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Medium",
      "target_text": "Consider the function f defined below. , #include <iostream>\n\nstruct item {\n    int data;\n    struct item *next;\n};\n\nint f(struct item *p) {\n    return (\n        (p == NULL) || \n        (p->next == NULL) || \n        ((p->data <= p->next->data) && f(p->next))\n    );\n}, Choices: ['A\\nnot all elements in the list have the same data value.', 'B\\nthe elements in the list are sorted in non-decreasing order of data value', 'C\\nthe elements in the list are sorted in non-increasing order of data value', 'D\\nNone of them'], Answer: B\nthe elements in the list are sorted in non-decreasing order of data value"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "Every Directed Acyclic Graph has at least one sink vertex.\na) True\nb) False\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Sorting and difficulty=Medium",
      "target_text": "Interpolation search is an improved variant of   binary search. It is necessary for this search   algorithm to work that:, , Choices: ['A\\ndata collection should be in sorted form and equally \\n distributed.', 'B\\ndata collection should be in sorted form and but not \\n equally distributed.', 'C\\ndata collection should be equally distributed but not \\n sorted.', 'D\\nNone of these.'], Answer: A\ndata collection should be in sorted form and equally \n distributed."
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "Which of the following is/are advantages suffix array one suffix tree?\nI. Lesser space requirement\nII. Improved cache locality\nIII. Easy construction in linear time\na) Only I\nb) All I, II and III\nc) Only I and III\nd) Only II and III\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Medium",
      "target_text": "Which one of the following is the correct formulae to find the parent node at index I?\na) (I-1)/K\nb) (I+1)/K\nc) (I*1)/K\nd) (I-2)/K\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
      "target_text": "Free lists are used in\na) static memory allocation\nb) dynamic memory allocation\nc) contagious allocations\nd) are used for speeding up linked list operations\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Hashing and difficulty=Medium",
      "target_text": "What is the hash function used in multiplication method?\na) h(k) = floor( m(kA mod 1))\nb) h(k) = ceil( m(kA mod 1))\nc) h(k) = floor(kA mod m)\nd) h(k) = ceil( kA mod m)\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "Which of the following is false about a binary search tree?\na) The left child is always lesser than its parent\nb) The right child is always greater than its parent\nc) The left and right sub-trees should also be binary search trees\nd) In order sequence gives decreasing order of elements\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Medium",
      "target_text": "Should leaves in ternary heap be distributed from left to right.\na) True\nb) False\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Linked List and difficulty=Hard",
      "target_text": "Consider below sequences.\n\nHow to achieve the above operation efficiently?\na) use linked lists\nb) use avl trees\nc) use red-black trees\nd) use treaps (cartesian trees)\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "The size value of various nodes in a weight balanced tree are\nleaf \u2013 zero\ninternal node \u2013 size of it\u2019s two children\nis this true?\na) true\nb) false\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "33. Which type of data structure is a ternary heap?\na) Hash\nb) Array\nc) Priority Stack\nd) Priority Queue\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Medium",
      "target_text": "Min heap can be used to implement selection sort.\na) True\nb) False\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "Which type of data structure is a ternary heap?\na) Array\nb) Hash\nc) Priority Queue\nd) Priority Stack\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Search and difficulty=Medium",
      "target_text": "The self organizing list improves _____\na) average access time\nb) insertion\nc) deletion\nd) binary search\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Hard",
      "target_text": "___________ is a self-adjusting version of a leftist heap.\na) Rightist heap\nb) Skew heap\nc) d-heap\nd) Binary heap\n\n\nAnswer: b"
    },
    {
      "input_text": "Generate a question on topic=Heap and difficulty=Medium",
      "target_text": "How many secondary operations are performed in a d-heap?\na) 1\nb) 2\nc) 3\nd) 4\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Graph and difficulty=Hard",
      "target_text": "Given an adjacency matrix A = [ [0, 1, 1], [1, 0, 1], [1, 1, 0] ], The total no. of ways in which every vertex can walk to itself using 2 edges is ________\na) 2\nb) 4\nc) 6\nd) 8\n\n\nAnswer: c"
    },
    {
      "input_text": "Generate a question on topic=Theory and difficulty=Medium",
      "target_text": "What is the correct notation for a load factor?\na) \u2126\nb) \u221e\nc) \u2211\nd) \u2144\n\n\nAnswer: d"
    },
    {
      "input_text": "Generate a question on topic=Array and difficulty=Hard",
      "target_text": "What is the use of a hash function?\na) to calculate and return the index of corresponding data\nb) to store data\nc) to erase data\nd) to change data\n\n\nAnswer: a"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Medium",
      "target_text": "Is the following statement valid? A Red-Black Tree which is also a perfect Binary Tree can have all black nodes, , Choices: ['A\\nYes', 'B\\nNo'], Answer: A\nYes"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "A B+ -tree index is to be built on the Name attribute of the relation STUDENT. Assume that all student names are of length 8 bytes, disk block are size 512 bytes, and index pointers are of size 4 bytes. Given this scenario, what would be the best choice of the degree (i.e. the number of pointers per node) of the B+ -tree?, , Choices: ['A\\n16', 'B\\n42', 'C\\n43', 'D\\n44'], Answer: C\n43"
    },
    {
      "input_text": "Generate a question on topic=Tree and difficulty=Hard",
      "target_text": "How many nodes are required to create a Binary Decision Tree having 4 variables?\na) 24\nb) 24-1\nc) 25\nd) 25-1\n\n\nAnswer: d"
    }
  ]