[
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M8_5_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/5) + n^4 for n being a power of 5.\nChoices:\na) Θ(n^1.292)\nb) Θ(n^4)\nc) Θ(n^4 log n)\nd) Θ(n^1.292 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S5974_255.",
        "target_text": "Question: Array length n=5974, find max-sum subarray of fixed length k=255. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN925692_513291.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=925692, B=513291. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Binary search on addresses\nc) Hash addresses of first list\nd) Advance pointers; when one ends, jump to the other head\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS682.",
        "target_text": "Question: Compute stock span for 682 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Hash table\nc) Priority queue\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA4051.",
        "target_text": "Question: Circular-array queue with capacity 4051: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Head==Tail means full\nc) Require power-of-two capacity\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM797_329328.",
        "target_text": "Question: Merge k=797 sorted streams totaling N=329328 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log N)\nc) Θ(k log N)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH8192.",
        "target_text": "Question: In open addressing with double hashing over table size m=8192, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) Choose m even and g(k) even\nc) g(k) coprime with m for all keys\nd) Make both hash functions identical\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR434513.",
        "target_text": "Question: In a BST with distinct keys (id=434513), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Postorder\nc) Inorder\nd) Level-order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS492615_2413572.",
        "target_text": "Question: A directed graph with V=492615, E≈2413572. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if the graph is connected\nc) Only if edges are unweighted\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z52881.",
        "target_text": "Question: For string S (id=52881), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Number of mismatches at i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Next index of S[i]\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS70921.",
        "target_text": "Question: Keys are integers in range [0..70921]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Heap sort\nc) Shell sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS8275706.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=8275706 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M4_4_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/4) + n^3 for n being a power of 4.\nChoices:\na) Θ(n^3 log n)\nb) Θ(n^3)\nc) Θ(n^1.0)\nd) Θ(n^1.0 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP12623_597.",
        "target_text": "Question: Sorted array length n=12623. Decide if any pair sums to 597. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Two-pointer scan in Θ(n)\nc) Hash set in Θ(n log n)\nd) Divide and conquer in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL49646.",
        "target_text": "Question: Check if a singly linked list of length n=49646 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Find middle, reverse second half, compare\nc) Copy to array and two-pointer check\nd) Sort and compare with original\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS161.",
        "target_text": "Question: Compute stock span for 161 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Hash table\nc) Priority queue\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS9022.",
        "target_text": "Question: A queue via two stacks handles a burst of 9022 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) Both Θ(log n)\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH6515742.",
        "target_text": "Question: Build a binary heap from n=6515742 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.01.",
        "target_text": "Question: In separate chaining with load factor α=1.01, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H76273505.",
        "target_text": "Question: For a balanced BST with n=76273505 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D598542.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 598542]. Why?\nChoices:\na) Graph must be undirected\nb) Self-loops must be absent\nc) Distinct weights are required\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB45155.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=45155. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Queue of rolling hashes only\nc) Binary heap of substrings\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS761291.",
        "target_text": "Question: Heapsort stability check id=761291: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort always beats merge sort\nc) Heapsort is not stable by default\nd) Heapsort needs extra Θ(n) memory\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS6510495.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=6510495 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(log n) average\nc) Θ(n) average\nd) O(1) worst-case\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_6_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^3, f3=n^3 (log n)^6, f4=n^7?\nChoices:\na) Θ(n^7)\nb) Θ(n^3)\nc) Θ((log n)^6)\nd) Θ(n^3 (log n)^6)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM41271.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=41271-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Hash all present values then scan\nc) Scan linearly counting gaps\nd) Use a heap of differences\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN241951.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 241951, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Copy next node’s data here and bypass next\nc) Impossible under any model\nd) Traverse from head to find predecessor\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1201.",
        "target_text": "Question: Verify whether a pop sequence of length n=1201 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Sort both sequences then compare\nc) Use a queue to mirror the stack\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ264161.",
        "target_text": "Question: For 264161 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Binary heap\nc) Deque\nd) Stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC42818631.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=42818631?\nChoices:\na) Θ(log log n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Adversarial patterns are neutralized by random choice. Variant UH10000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=10000 slots yields what benefit?\nChoices:\na) Zero collisions guaranteed\nb) Cryptographic security by default\nc) Expected constant-time operations against adversaries\nd) Eliminates need for resizing\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR372907.",
        "target_text": "Question: In a BST with distinct keys (id=372907), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Level-order\nc) Preorder\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF14948.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=14948 can handle which case while detecting it?\nChoices:\na) Equal runtime on all graphs\nb) Negative edge weights and negative cycles\nc) Faster runtime on sparse nonnegative graphs\nd) Only acyclic graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK911382323_998244353.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=998244353 achieves expected linear time due to what?\nChoices:\na) Trie of all substrings\nb) Low collision probability of rolling hash\nc) Use of a min-heap\nd) Suffix tree guaranteeing O(1) per char\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS658758.",
        "target_text": "Question: Keys are integers in range [0..658758]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Counting sort\nc) Shell sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS3559737.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=3559737 typically runs in?\nChoices:\na) O(log log n) average\nb) O(1) worst-case\nc) Θ(n) average\nd) Θ(log n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M4_4_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/4) + n^4 for n being a power of 4.\nChoices:\na) Θ(n^4 log n)\nb) Θ(n^4)\nc) Θ(n^1.0 log n)\nd) Θ(n^1.0)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P900093.",
        "target_text": "Question: Answer 900093 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Recompute sums per query in Θ(n)\nb) Use a stack to store partial sums\nc) Build prefix-sum array; O(1) per query\nd) Sort once and binary search per query\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN637976_21687.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=637976, B=21687. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Advance pointers; when one ends, jump to the other head\nc) Reverse one list then compare\nd) Binary search on addresses\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS5.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 5 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Sort segments then concatenate\nc) Greedy left-to-right without memory\nd) Use BFS on substring graph\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B258033.",
        "target_text": "Question: Run BFS on an unweighted graph with 258033 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) All simple paths before all edges\nc) Minimum memory footprint\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA13_15680439.",
        "target_text": "Question: In a d-ary heap with d=13 and n=15680439 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(log_13 n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF3658848_0.56.",
        "target_text": "Question: Chaining hash table with n=3658848 keys at load factor α=0.56. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(α log α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA177968.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=177968 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Naive parent climbing O(n) per query\nc) Euler tour + RMQ yields O(1) per query\nd) Sort node labels then binary search\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR18900.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=18900 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Tarjan’s low-link DFS\nc) Kruskal’s algorithm\nd) Dijkstra’s algorithm\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB74957.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=74957. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) BST over all substrings\nc) Binary heap of substrings\nd) Queue of rolling hashes only\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST654996.",
        "target_text": "Question: Stability (id=654996): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Quick sort (stable), Selection sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU5116653.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=5116653. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Heap-based selection\nc) Linear scan with early exit\nd) Hashing with chaining\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M6_2_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/2) + n^4 for n being a power of 2.\nChoices:\na) Θ(n^2.585)\nb) Θ(n^4)\nc) Θ(n^4 log n)\nd) Θ(n^2.585 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P397994.",
        "target_text": "Question: Answer 397994 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Recompute sums per query in Θ(n)\nc) Use a stack to store partial sums\nd) Sort once and binary search per query\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK85_3313.",
        "target_text": "Question: Merge k=85 sorted linked lists totaling n=3313 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log n)\nc) Θ(n log k)\nd) Θ(k n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE74210.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=74210. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Decreasing stack\nc) Binary search tree\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ692534.",
        "target_text": "Question: Schedule 692534 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Unordered array\nc) Circular queue\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC31626239.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=31626239?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(1)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH16384.",
        "target_text": "Question: In open addressing with double hashing over table size m=16384, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) Use g(k)=0 for some keys\nc) g(k) coprime with m for all keys\nd) Make both hash functions identical\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS729397.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=729397-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(√n)\nc) Θ(1)\nd) Θ(k)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR609800.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=609800 edges. What algorithmic idea achieves linear time?\nChoices:\na) Tarjan’s low-link DFS\nb) Kruskal’s algorithm\nc) Dijkstra’s algorithm\nd) Topological sorting\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK257_1000000009.",
        "target_text": "Question: Rabin–Karp with base=257, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Use of a min-heap\nb) Suffix tree guaranteeing O(1) per char\nc) Low collision probability of rolling hash\nd) Trie of all substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST732651.",
        "target_text": "Question: Stability (id=732651): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Counting sort (unstable)\nc) Heap sort (stable), Merge sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS2300006.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=2300006 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(n log n)\nd) Θ(1) expected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M5_3_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/3) + n^3 for n being a power of 3.\nChoices:\na) Θ(n^1.465 log n)\nb) Θ(n^3 log n)\nc) Θ(n^3)\nd) Θ(n^1.465)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM76313.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=76313-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Binary search on index vs value gap\nc) Scan linearly counting gaps\nd) Use a heap of differences\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK96_2424.",
        "target_text": "Question: Merge k=96 sorted linked lists totaling n=2424 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n log k)\nc) Θ(n + k^2)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS4.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 4 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Greedy left-to-right without memory\nc) Sort segments then concatenate\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW6233_972.",
        "target_text": "Question: Sliding window maximum for array length n=6233 and window w=972. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n)\nc) Θ(nw)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH6681.",
        "target_text": "Question: Build a binary heap from n=6681 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n^2)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF9749687_0.21.",
        "target_text": "Question: Chaining hash table with n=9749687 keys at load factor α=0.21. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(α log α)\nd) Θ(nα)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS516077.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=516077-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(k)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST138823.",
        "target_text": "Question: MST question id=138823: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) MST is always unique in connected graphs\nd) Prim requires the entire edge set to be sorted first\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000009.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Use of a min-heap\nb) Low collision probability of rolling hash\nc) Suffix tree guaranteeing O(1) per char\nd) Trie of all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS866.",
        "target_text": "Question: Array is nearly sorted with at most 866 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Insertion sort\nc) Radix sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX546229107.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈546229107. Why?\nChoices:\na) Sorts the array first\nb) Uses hashing to index unknown segments\nc) Requires the array to be cyclic\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T2_2_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^2, f3=n^2 (log n)^2, f4=n^8?\nChoices:\na) Θ(n^2 (log n)^2)\nb) Θ(n^8)\nc) Θ(n^2)\nd) Θ((log n)^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S19870_155.",
        "target_text": "Question: Array length n=19870, find max-sum subarray of fixed length k=155. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL91366.",
        "target_text": "Question: Check if a singly linked list of length n=91366 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Find middle, reverse second half, compare\nc) Sort and compare with original\nd) Copy to array and two-pointer check\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1453.",
        "target_text": "Question: Verify whether a pop sequence of length n=1453 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Backtrack with recursion in Θ(2^n)\nc) Sort both sequences then compare\nd) Use a queue to mirror the stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS8984.",
        "target_text": "Question: A queue via two stacks handles a burst of 8984 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH1183889.",
        "target_text": "Question: Build a binary heap from n=1183889 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(n log n)\nd) Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Threshold-based expansion preserves performance. Variant RS0.5.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.5?\nChoices:\na) To sort keys implicitly\nb) To reduce memory usage to exact size\nc) To keep expected O(1) operations\nd) To maintain key stability\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR950912.",
        "target_text": "Question: In a BST with distinct keys (id=950912), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Inorder\nc) Postorder\nd) Preorder\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF45772.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=45772 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Only acyclic graphs\nc) Equal runtime on all graphs\nd) Negative edge weights and negative cycles\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Randomized hashing makes spurious matches rare. Variant RK911382323_998244353.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=998244353 achieves expected linear time due to what?\nChoices:\na) Use of a min-heap\nb) Trie of all substrings\nc) Suffix tree guaranteeing O(1) per char\nd) Low collision probability of rolling hash\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX10_1024.",
        "target_text": "Question: Radix sort with d=10 digits and base b=1024 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·n·log b)\nb) Θ(b^d)\nc) Θ(n log n)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU5500786.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=5500786. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Hashing with chaining\nc) Linear scan with early exit\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M6_6_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/6) + n^0 for n being a power of 6.\nChoices:\na) Θ(n^1.0)\nb) Θ(n^0)\nc) Θ(n^0 log n)\nd) Θ(n^1.0 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM79140.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=79140-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Hash all present values then scan\nc) Use a heap of differences\nd) Scan linearly counting gaps\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Phase difference accumulates around the cycle. Variant C2.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 2× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(n) space\nb) Θ(log n) time, Θ(1) space\nc) Θ(n) time, Θ(1) space\nd) Θ(1) time, Θ(1) space\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1324.",
        "target_text": "Question: Verify whether a pop sequence of length n=1324 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Simulate using one stack in Θ(n)\nc) Backtrack with recursion in Θ(2^n)\nd) Use a queue to mirror the stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS957.",
        "target_text": "Question: A queue via two stacks handles a burst of 957 operations. Amortized costs?\nChoices:\na) ENQUEUE and DEQUEUE both amortized Θ(1)\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) Both Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH7118692.",
        "target_text": "Question: Build a binary heap from n=7118692 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(n^2)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH16384.",
        "target_text": "Question: In open addressing with double hashing over table size m=16384, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) g(k) coprime with m for all keys\nc) Use g(k)=0 for some keys\nd) Choose m even and g(k) even\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS437972.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=437972-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(k)\nc) Θ(log n)\nd) Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF4349.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=4349 can handle which case while detecting it?\nChoices:\na) Only acyclic graphs\nb) Negative edge weights and negative cycles\nc) Faster runtime on sparse nonnegative graphs\nd) Equal runtime on all graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Randomized hashing makes spurious matches rare. Variant RK257_1000000009.",
        "target_text": "Question: Rabin–Karp with base=257, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Low collision probability of rolling hash\nb) Trie of all substrings\nc) Use of a min-heap\nd) Suffix tree guaranteeing O(1) per char\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS474865.",
        "target_text": "Question: Keys are integers in range [0..474865]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Counting sort\nc) Heap sort\nd) Quick sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU453482.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=453482. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Binary search with left/right bias\nc) Hashing with chaining\nd) Linear scan with early exit\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T4_3_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^4, f3=n^4 (log n)^3, f4=n^7?\nChoices:\na) Θ(n^4)\nb) Θ((log n)^3)\nc) Θ(n^4 (log n)^3)\nd) Θ(n^7)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P536372.",
        "target_text": "Question: Answer 536372 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Sort once and binary search per query\nc) Recompute sums per query in Θ(n)\nd) Use a stack to store partial sums\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN69032_999068.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=69032, B=999068. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Advance pointers; when one ends, jump to the other head\nc) Hash addresses of first list\nd) Binary search on addresses\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS702.",
        "target_text": "Question: Compute stock span for 702 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Priority queue\nc) Hash table\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA5887.",
        "target_text": "Question: Circular-array queue with capacity 5887: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Track count or keep one slot empty\nc) Require prime capacity\nd) Head==Tail means full\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK8.",
        "target_text": "Question: In a d-ary heap (d=8), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It makes the operation constant time\nb) No effect whatsoever\nc) It increases height linearly\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.19.",
        "target_text": "Question: In separate chaining with load factor α=1.19, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H475115680.",
        "target_text": "Question: For a balanced BST with n=475115680 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR465312.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=465312 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Dijkstra’s algorithm\nc) Kruskal’s algorithm\nd) Tarjan’s low-link DFS\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000007.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000007 achieves expected linear time due to what?\nChoices:\na) Trie of all substrings\nb) Suffix tree guaranteeing O(1) per char\nc) Low collision probability of rolling hash\nd) Use of a min-heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB58672256.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=58672256 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n log n)\nc) Ω(n)\nd) Ω(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI70_616.",
        "target_text": "Question: Binary search over half-open range [70, 616)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Keep inclusive bounds on both ends\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Increase both lo and hi to skip duplicates\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M5_2_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/2) + n^0 for n being a power of 2.\nChoices:\na) Θ(n^0 log n)\nb) Θ(n^2.3219)\nc) Θ(n^0)\nd) Θ(n^2.3219 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM35915.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=35915-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Scan linearly counting gaps\nc) Use a heap of differences\nd) Hash all present values then scan\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN226565_7427.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=226565, B=7427. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Binary search on addresses\nc) Hash addresses of first list\nd) Reverse one list then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS2555.",
        "target_text": "Question: Compute stock span for 2555 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Hash table\nc) Fenwick tree\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ77124.",
        "target_text": "Question: For 77124 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Binary heap\nc) Queue\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA7_24739905.",
        "target_text": "Question: In a d-ary heap with d=7 and n=24739905 nodes, what is the height?\nChoices:\na) Θ(log_7 n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC1.32.",
        "target_text": "Question: In separate chaining with load factor α=1.32, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(log n)\nc) Θ(α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA438033.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=438033 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) Naive parent climbing O(n) per query\nc) DFS from root each time\nd) Sort node labels then binary search\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST307261.",
        "target_text": "Question: MST question id=307261: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) MST minimizes number of edges\nc) MST is always unique in connected graphs\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z355127.",
        "target_text": "Question: For string S (id=355127), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Next index of S[i]\nc) Number of distinct substrings up to i\nd) Number of mismatches at i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS132370.",
        "target_text": "Question: Heapsort stability check id=132370: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort always beats merge sort\nc) Heapsort is stable\nd) Heapsort needs extra Θ(n) memory\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU3538337.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=3538337. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Heap-based selection\nc) Binary search with left/right bias\nd) Linear scan with early exit\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T4_4_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^4, f3=n^4 (log n)^4, f4=n^9?\nChoices:\na) Θ(n^9)\nb) Θ((log n)^4)\nc) Θ(n^4 (log n)^4)\nd) Θ(n^4)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM483902.",
        "target_text": "Question: Find a majority element in an array of length n=483902 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Boyer–Moore voting with verification\nc) Counting sort\nd) Divide-and-conquer merges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN22740.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 22740, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Impossible under any model\nc) Traverse from head to find predecessor\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Operator handling via stacks preserves associativity rules. Variant IP2_3.",
        "target_text": "Question: Evaluate an infix expression with 2–3 precedence levels and parentheses. Linear-time method?\nChoices:\na) Convert to postfix and evaluate with a stack\nb) Build a tree without any stack\nc) Left-to-right without stacks\nd) Sort tokens by precedence then scan\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS9458.",
        "target_text": "Question: A queue via two stacks handles a burst of 9458 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) Both Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL126_663034.",
        "target_text": "Question: Find the k=126-th largest element among n=663034 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Heapsort then index\nc) Deterministic selection (median-of-medians)\nd) Binary search on value domain\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Probe sequences align and form contiguous clusters. Variant LP931.",
        "target_text": "Question: What clustering effect harms performance in linear probing, and what mitigates it?\nChoices:\na) Path compression mitigated by union-find\nb) Primary clustering mitigated by double hashing\nc) AVL imbalance mitigated by rotations\nd) Cache thrashing mitigated by padding\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR783615.",
        "target_text": "Question: In a BST with distinct keys (id=783615), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Level-order\nc) Preorder\nd) Postorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS208618_1829981.",
        "target_text": "Question: A directed graph with V=208618, E≈1829981. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When all vertices have outdegree ≥ 1\nc) Only if edges are unweighted\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP74581.",
        "target_text": "Question: KMP matches a pattern of length m=74581 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) LPS (failure) function\nc) Suffix array\nd) Rolling hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX6_1024.",
        "target_text": "Question: Radix sort with d=6 digits and base b=1024 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(n log n)\nc) Θ(d·n·log b)\nd) Θ(b^d)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI47_4305.",
        "target_text": "Question: Binary search over half-open range [47, 4305)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Keep inclusive bounds on both ends\nc) Increase both lo and hi to skip duplicates\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T3_1_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^3, f3=n^3 (log n)^1, f4=n^10?\nChoices:\na) Θ(n^10)\nb) Θ(n^3 (log n)^1)\nc) Θ(n^3)\nd) Θ((log n)^1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM32934.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=32934-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Binary search on index vs value gap\nc) Hash all present values then scan\nd) Use a heap of differences\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN367219.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 367219, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Traverse from head to find predecessor\nc) Copy next node’s data here and bypass next\nd) Impossible under any model\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE16777.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=16777. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Decreasing stack\nc) Queue\nd) Max-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA3678.",
        "target_text": "Question: Circular-array queue with capacity 3678: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Require prime capacity\nc) Head==Tail means full\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH6138971.",
        "target_text": "Question: Build a binary heap from n=6138971 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(log n)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.66.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.66?\nChoices:\na) To maintain key stability\nb) To keep expected O(1) operations\nc) To sort keys implicitly\nd) To reduce memory usage to exact size\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR922001.",
        "target_text": "Question: In a BST with distinct keys (id=922001), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Postorder\nc) Inorder\nd) Level-order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST307446.",
        "target_text": "Question: MST question id=307446: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) MST is always unique in connected graphs\nc) Kruskal adds the smallest edge that doesn't create a cycle\nd) Prim requires the entire edge set to be sorted first\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN227774.",
        "target_text": "Question: Check anagrams for strings of length n=227774 over fixed alphabet. Optimal approach?\nChoices:\na) Use a stack\nb) DFS on character graph\nc) Count character frequencies in Θ(n)\nd) Sort both in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS775.",
        "target_text": "Question: Array is nearly sorted with at most 775 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Radix sort\nc) Insertion sort\nd) Heap sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS7547262.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=7547262 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(1) expected\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M6_4_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/4) + n^2 for n being a power of 4.\nChoices:\na) Θ(n^1.2925 log n)\nb) Θ(n^2)\nc) Θ(n^1.2925)\nd) Θ(n^2 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP13885_739.",
        "target_text": "Question: Sorted array length n=13885. Decide if any pair sums to 739. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Hash set in Θ(n log n)\nc) Brute force in Θ(n^2)\nd) Two-pointer scan in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C4.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 4× and 1×. Complexity?\nChoices:\na) Θ(1) time, Θ(1) space\nb) Θ(log n) time, Θ(1) space\nc) Θ(n) time, Θ(1) space\nd) Θ(n) time, Θ(n) space\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS2.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 2 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Greedy left-to-right without memory\nb) Use BFS on substring graph\nc) Use two stacks for counts and fragments\nd) Sort segments then concatenate\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA6560.",
        "target_text": "Question: Circular-array queue with capacity 6560: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Head==Tail means full\nc) Require power-of-two capacity\nd) Require prime capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL160_611014.",
        "target_text": "Question: Find the k=160-th largest element among n=611014 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Build max-heap and extract k times\nc) Binary search on value domain\nd) Heapsort then index\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.66.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.66?\nChoices:\na) To sort keys implicitly\nb) To maintain key stability\nc) To reduce memory usage to exact size\nd) To keep expected O(1) operations\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H27298936.",
        "target_text": "Question: For a balanced BST with n=27298936 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP563035.",
        "target_text": "Question: Test bipartiteness (id=563035) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Sort vertices and deduplicate\nc) Compute an MST then inspect edges\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Character-by-character descent. Variant TRIE26.",
        "target_text": "Question: Search a trie over alphabet size σ=26 for a key of length m. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(1) average for all m\nc) Θ(m)\nd) Θ(m log σ)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST588907.",
        "target_text": "Question: Stability (id=588907): which pairing is correct?\nChoices:\na) Heap sort (stable), Merge sort (unstable)\nb) Quick sort (stable), Selection sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Counting sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Geometric level distribution mirrors balanced trees. Variant SL0.25.",
        "target_text": "Question: Skip list with level promotion probability p=0.25: expected complexity of search/insert/delete?\nChoices:\na) Θ(n) for all three\nb) Θ(√n) for all three\nc) Θ(1) for all three\nd) Θ(log n) for all three\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T2_4_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^2, f3=n^2 (log n)^4, f4=n^7?\nChoices:\na) Θ(n^2)\nb) Θ((log n)^4)\nc) Θ(n^2 (log n)^4)\nd) Θ(n^7)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S10792_339.",
        "target_text": "Question: Array length n=10792, find max-sum subarray of fixed length k=339. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n)\nc) Θ(k log n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN866528.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 866528, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Reverse list then delete head\nc) Traverse from head to find predecessor\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS1935.",
        "target_text": "Question: Compute stock span for 1935 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Monotonic stack\nc) Priority queue\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA1924.",
        "target_text": "Question: Circular-array queue with capacity 1924: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Require power-of-two capacity\nc) Head==Tail means full\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM382_63822.",
        "target_text": "Question: Merge k=382 sorted streams totaling N=63822 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log k)\nc) Θ(N log N)\nd) Θ(N + k^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH65536.",
        "target_text": "Question: In open addressing with double hashing over table size m=65536, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) g(k) coprime with m for all keys\nc) Choose m even and g(k) even\nd) Make both hash functions identical\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Black-height constraints cap the height by 2·log2(n+1). Variant RB3634.",
        "target_text": "Question: Which invariant is essential in Red–Black trees to bound height?\nChoices:\na) Adjacent reds allowed\nb) Same number of black nodes on every root-to-leaf path\nc) Leaves can be any color without restriction\nd) Root is always red\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS865590_1501647.",
        "target_text": "Question: A directed graph with V=865590, E≈1501647. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When all vertices have outdegree ≥ 1\nc) When it is a DAG (no directed cycles)\nd) Only if edges are unweighted\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE256.",
        "target_text": "Question: Search a trie over alphabet size σ=256 for a key of length m. Time complexity?\nChoices:\na) Θ(m)\nb) Θ(m log σ)\nc) Θ(log n)\nd) Θ(1) average for all m\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS788090.",
        "target_text": "Question: Heapsort stability check id=788090: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort is stable\nc) Heapsort always beats merge sort\nd) Heapsort needs extra Θ(n) memory\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI98_1450.",
        "target_text": "Question: Binary search over half-open range [98, 1450)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Increase both lo and hi to skip duplicates\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Geometric resizing spreads copying cost over many operations. Variant A4.",
        "target_text": "Question: A dynamic array starts with capacity 4 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(1)\nb) Θ(m)\nc) Θ(log m)\nd) Θ(√m)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P647047.",
        "target_text": "Question: Answer 647047 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Recompute sums per query in Θ(n)\nb) Use a stack to store partial sums\nc) Build prefix-sum array; O(1) per query\nd) Sort once and binary search per query\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN636092_453457.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=636092, B=453457. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Hash addresses of first list\nc) Binary search on addresses\nd) Reverse one list then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS4037.",
        "target_text": "Question: Compute stock span for 4037 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Fenwick tree\nc) Monotonic stack\nd) Hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B406381.",
        "target_text": "Question: Run BFS on an unweighted graph with 406381 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) Nondecreasing distance from source\nc) Minimum memory footprint\nd) All simple paths before all edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL996_213102.",
        "target_text": "Question: Find the k=996-th largest element among n=213102 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Binary search on value domain\nc) Deterministic selection (median-of-medians)\nd) Heapsort then index\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF1880490_0.4.",
        "target_text": "Question: Chaining hash table with n=1880490 keys at load factor α=0.4. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(log n)\nc) Θ(α log α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS181485.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=181485-th smallest?\nChoices:\na) Θ(k)\nb) Θ(log n)\nc) Θ(1)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST510431.",
        "target_text": "Question: MST question id=510431: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) Prim requires the entire edge set to be sorted first\nc) MST minimizes number of edges\nd) MST is always unique in connected graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP68880.",
        "target_text": "Question: KMP matches a pattern of length m=68880 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Z-array exclusively\nc) Suffix array\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS31327.",
        "target_text": "Question: Keys are integers in range [0..31327]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Heap sort\nc) Counting sort\nd) Quick sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX944272934.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈944272934. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Sorts the array first\nc) Doubles the bound to bracket, then binary search\nd) Requires the array to be cyclic\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T3_6_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^3, f3=n^3 (log n)^6, f4=n^6?\nChoices:\na) Θ((log n)^6)\nb) Θ(n^6)\nc) Θ(n^3 (log n)^6)\nd) Θ(n^3)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S3452_254.",
        "target_text": "Question: Array length n=3452, find max-sum subarray of fixed length k=254. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN302678.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 302678, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Traverse from head to find predecessor\nc) Impossible under any model\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE70934.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=70934. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Binary search tree\nc) Decreasing stack\nd) Max-heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B479664.",
        "target_text": "Question: Run BFS on an unweighted graph with 479664 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) Lexicographic vertex order\nc) All simple paths before all edges\nd) Minimum memory footprint\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH1387367.",
        "target_text": "Question: Build a binary heap from n=1387367 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n^2)\nc) Θ(n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH131072.",
        "target_text": "Question: In open addressing with double hashing over table size m=131072, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) Choose m even and g(k) even\nc) Make both hash functions identical\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H681714846.",
        "target_text": "Question: For a balanced BST with n=681714846 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(log log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D609265.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 609265]. Why?\nChoices:\na) Distinct weights are required\nb) Self-loops must be absent\nc) Graph must be undirected\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP75297.",
        "target_text": "Question: KMP matches a pattern of length m=75297 in linear time using which table?\nChoices:\na) Suffix array\nb) LPS (failure) function\nc) Rolling hash table\nd) Z-array exclusively\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS388629.",
        "target_text": "Question: Keys are integers in range [0..388629]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Quick sort\nc) Counting sort\nd) Heap sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU8063099.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=8063099. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Heap-based selection\nc) Linear scan with early exit\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T1_4_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^1, f3=n^1 (log n)^4, f4=n^6?\nChoices:\na) Θ((log n)^4)\nb) Θ(n^1)\nc) Θ(n^1 (log n)^4)\nd) Θ(n^6)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P762759.",
        "target_text": "Question: Answer 762759 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Build prefix-sum array; O(1) per query\nc) Recompute sums per query in Θ(n)\nd) Use a stack to store partial sums\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Phase difference accumulates around the cycle. Variant C5.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 5× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(1) space\nb) Θ(log n) time, Θ(1) space\nc) Θ(1) time, Θ(1) space\nd) Θ(n) time, Θ(n) space\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP858.",
        "target_text": "Question: Verify whether a pop sequence of length n=858 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Backtrack with recursion in Θ(2^n)\nc) Sort both sequences then compare\nd) Use a queue to mirror the stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW6625_75.",
        "target_text": "Question: Sliding window maximum for array length n=6625 and window w=75. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(w log n)\nc) Θ(n log n)\nd) Θ(nw)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL372_132569.",
        "target_text": "Question: Find the k=372-th largest element among n=132569 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Deterministic selection (median-of-medians)\nc) Build max-heap and extract k times\nd) Binary search on value domain\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Adversarial patterns are neutralized by random choice. Variant UH1000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=1000 slots yields what benefit?\nChoices:\na) Expected constant-time operations against adversaries\nb) Cryptographic security by default\nc) Zero collisions guaranteed\nd) Eliminates need for resizing\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H175816339.",
        "target_text": "Question: For a balanced BST with n=175816339 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP521093.",
        "target_text": "Question: Test bipartiteness (id=521093) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Sort vertices and deduplicate\nd) Check all degrees even\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Randomized hashing makes spurious matches rare. Variant RK911382323_998244353.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=998244353 achieves expected linear time due to what?\nChoices:\na) Low collision probability of rolling hash\nb) Use of a min-heap\nc) Suffix tree guaranteeing O(1) per char\nd) Trie of all substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS394.",
        "target_text": "Question: Array is nearly sorted with at most 394 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Shell sort with fixed gaps\nc) Insertion sort\nd) Heap sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI0_628.",
        "target_text": "Question: Binary search over half-open range [0, 628)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Keep inclusive bounds on both ends\nd) Increase both lo and hi to skip duplicates\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M5_4_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/4) + n^2 for n being a power of 4.\nChoices:\na) Θ(n^1.161 log n)\nb) Θ(n^2)\nc) Θ(n^1.161)\nd) Θ(n^2 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P118615.",
        "target_text": "Question: Answer 118615 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Sort once and binary search per query\nc) Use a stack to store partial sums\nd) Recompute sums per query in Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN521871.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 521871, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Copy next node’s data here and bypass next\nc) Impossible under any model\nd) Reverse list then delete head\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Per-node metadata preserves constant-time MIN. Variant MS18.",
        "target_text": "Question: Support PUSH, POP, and MIN in worst-case Θ(1). What augmentation works?\nChoices:\na) Keep a global heap\nb) Periodically rebuild the stack\nc) Scan on demand for MIN\nd) Store (value, currentMin) per node\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ581886.",
        "target_text": "Question: For 581886 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Deque\nc) Queue\nd) Stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA5_24030678.",
        "target_text": "Question: In a d-ary heap with d=5 and n=24030678 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(log_5 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF680757_0.64.",
        "target_text": "Question: Chaining hash table with n=680757 keys at load factor α=0.64. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(α log α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H486790665.",
        "target_text": "Question: For a balanced BST with n=486790665 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(log log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP24693.",
        "target_text": "Question: Test bipartiteness (id=24693) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Sort vertices and deduplicate\nc) Compute an MST then inspect edges\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS66381.",
        "target_text": "Question: In KMP, what does LPS[66381] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Total distinct prefixes up to i\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Number of mismatches up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX3_32.",
        "target_text": "Question: Radix sort with d=3 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(n log n)\nc) Θ(d·n·log b)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX438246450.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈438246450. Why?\nChoices:\na) Requires the array to be cyclic\nb) Doubles the bound to bracket, then binary search\nc) Sorts the array first\nd) Uses hashing to index unknown segments\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M8_5_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/5) + n^1 for n being a power of 5.\nChoices:\na) Θ(n^1.292)\nb) Θ(n^1 log n)\nc) Θ(n^1)\nd) Θ(n^1.292 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R215296.",
        "target_text": "Question: Rotate an array right by r=215296 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Single-step rotate repeated r times\nc) Selection sort then shift\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN791014.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 791014, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Impossible under any model\nc) Copy next node’s data here and bypass next\nd) Traverse from head to find predecessor\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE8733.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=8733. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Queue\nc) Decreasing stack\nd) Binary search tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW7245_790.",
        "target_text": "Question: Sliding window maximum for array length n=7245 and window w=790. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(nw)\nc) Θ(n)\nd) Θ(w log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH5302915.",
        "target_text": "Question: Build a binary heap from n=5302915 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH65536.",
        "target_text": "Question: In open addressing with double hashing over table size m=65536, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) Choose m even and g(k) even\nc) g(k) coprime with m for all keys\nd) Make both hash functions identical\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS242239.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=242239-th smallest?\nChoices:\na) Θ(k)\nb) Θ(√n)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC507209.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=507209 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(E log V)\nc) Θ(VE)\nd) Θ(V log V)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z401680.",
        "target_text": "Question: For string S (id=401680), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Number of mismatches at i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of distinct substrings up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS966.",
        "target_text": "Question: Array is nearly sorted with at most 966 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Insertion sort\nc) Shell sort with fixed gaps\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS1340344.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=1340344 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(n) average\nc) Θ(log n) average\nd) O(1) worst-case\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M7_3_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/3) + n^3 for n being a power of 3.\nChoices:\na) Θ(n^3)\nb) Θ(n^1.7712)\nc) Θ(n^1.7712 log n)\nd) Θ(n^3 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P453194.",
        "target_text": "Question: Answer 453194 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Recompute sums per query in Θ(n)\nc) Sort once and binary search per query\nd) Use a stack to store partial sums\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN797532.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 797532, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Traverse from head to find predecessor\nc) Copy next node’s data here and bypass next\nd) Impossible under any model\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Operator handling via stacks preserves associativity rules. Variant IP4_5.",
        "target_text": "Question: Evaluate an infix expression with 4–5 precedence levels and parentheses. Linear-time method?\nChoices:\na) Left-to-right without stacks\nb) Convert to postfix and evaluate with a stack\nc) Sort tokens by precedence then scan\nd) Build a tree without any stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA1025.",
        "target_text": "Question: Circular-array queue with capacity 1025: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Require prime capacity\nc) Head==Tail means full\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL343_17241.",
        "target_text": "Question: Find the k=343-th largest element among n=17241 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Deterministic selection (median-of-medians)\nc) Binary search on value domain\nd) Heapsort then index\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.83.",
        "target_text": "Question: In separate chaining with load factor α=0.83, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(α)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR341549.",
        "target_text": "Question: In a BST with distinct keys (id=341549), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Preorder\nc) Level-order\nd) Postorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR86283.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=86283 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Kruskal’s algorithm\nc) Tarjan’s low-link DFS\nd) Dijkstra’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z88566.",
        "target_text": "Question: For string S (id=88566), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Number of mismatches at i\nc) Number of distinct substrings up to i\nd) Next index of S[i]\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB50411748.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=50411748 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(log n)\nc) Ω(n log n)\nd) Ω(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU6823612.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=6823612. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Linear scan with early exit\nc) Binary search with left/right bias\nd) Hashing with chaining\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_2_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^1, f3=n^1 (log n)^2, f4=n^4?\nChoices:\na) Θ(n^4)\nb) Θ(n^1)\nc) Θ(n^1 (log n)^2)\nd) Θ((log n)^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P403756.",
        "target_text": "Question: Answer 403756 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Use a stack to store partial sums\nc) Sort once and binary search per query\nd) Recompute sums per query in Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL80819.",
        "target_text": "Question: Check if a singly linked list of length n=80819 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Find middle, reverse second half, compare\nc) Sort and compare with original\nd) Copy to array and two-pointer check\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS3117.",
        "target_text": "Question: Compute stock span for 3117 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Fenwick tree\nc) Priority queue\nd) Hash table\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA7806.",
        "target_text": "Question: Circular-array queue with capacity 7806: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require prime capacity\nc) Head==Tail means full\nd) Require power-of-two capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC27344995.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=27344995?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.83.",
        "target_text": "Question: In separate chaining with load factor α=0.83, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Two-step rotations repair misaligned subtrees. Variant AVL615.",
        "target_text": "Question: After inserting into an AVL tree, a Left-Right imbalance occurs at node X. Which fix is correct?\nChoices:\na) Right rotate right child of X, then left rotate X\nb) Single left rotate X\nc) Left rotate left child of X, then right rotate X\nd) Single right rotate X\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP737204.",
        "target_text": "Question: Test bipartiteness (id=737204) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Check all degrees even\nc) Compute an MST then inspect edges\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Character-by-character descent. Variant TRIE128.",
        "target_text": "Question: Search a trie over alphabet size σ=128 for a key of length m. Time complexity?\nChoices:\na) Θ(m)\nb) Θ(log n)\nc) Θ(m log σ)\nd) Θ(1) average for all m\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX9_2.",
        "target_text": "Question: Radix sort with d=9 digits and base b=2 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(d·n·log b)\nc) Θ(d·(n + b))\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX3639174.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈3639174. Why?\nChoices:\na) Sorts the array first\nb) Uses hashing to index unknown segments\nc) Doubles the bound to bracket, then binary search\nd) Requires the array to be cyclic\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T5_2_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^5, f3=n^5 (log n)^2, f4=n^9?\nChoices:\na) Θ((log n)^2)\nb) Θ(n^5 (log n)^2)\nc) Θ(n^5)\nd) Θ(n^9)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM783439.",
        "target_text": "Question: Find a majority element in an array of length n=783439 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Divide-and-conquer merges\nc) Boyer–Moore voting with verification\nd) Binary search on value domain\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK67_7545.",
        "target_text": "Question: Merge k=67 sorted linked lists totaling n=7545 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n + k^2)\nc) Θ(n log k)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Operator handling via stacks preserves associativity rules. Variant IP2_3.",
        "target_text": "Question: Evaluate an infix expression with 2–3 precedence levels and parentheses. Linear-time method?\nChoices:\na) Sort tokens by precedence then scan\nb) Convert to postfix and evaluate with a stack\nc) Left-to-right without stacks\nd) Build a tree without any stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B59428.",
        "target_text": "Question: Run BFS on an unweighted graph with 59428 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) All simple paths before all edges\nc) Nondecreasing distance from source\nd) Minimum memory footprint\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC93960628.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=93960628?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF6905676_0.86.",
        "target_text": "Question: Chaining hash table with n=6905676 keys at load factor α=0.86. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(α log α)\nd) Θ(nα)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Two-step rotations repair misaligned subtrees. Variant AVL3699.",
        "target_text": "Question: After inserting into an AVL tree, a Left-Right imbalance occurs at node X. Which fix is correct?\nChoices:\na) Single right rotate X\nb) Single left rotate X\nc) Left rotate left child of X, then right rotate X\nd) Right rotate right child of X, then left rotate X\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP824897.",
        "target_text": "Question: Test bipartiteness (id=824897) of an undirected graph efficiently. Which method works?\nChoices:\na) Attempt 2-coloring via BFS; failure indicates odd cycle\nb) Sort vertices and deduplicate\nc) Compute an MST then inspect edges\nd) Check all degrees even\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Randomized hashing makes spurious matches rare. Variant RK911382323_998244353.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=998244353 achieves expected linear time due to what?\nChoices:\na) Trie of all substrings\nb) Suffix tree guaranteeing O(1) per char\nc) Low collision probability of rolling hash\nd) Use of a min-heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX8_16.",
        "target_text": "Question: Radix sort with d=8 digits and base b=16 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·n·log b)\nb) Θ(n log n)\nc) Θ(d·(n + b))\nd) Θ(b^d)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI53_1951.",
        "target_text": "Question: Binary search over half-open range [53, 1951)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Increase both lo and hi to skip duplicates\nc) Keep inclusive bounds on both ends\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Geometric resizing spreads copying cost over many operations. Variant A16.",
        "target_text": "Question: A dynamic array starts with capacity 16 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(log m)\nb) Θ(1)\nc) Θ(√m)\nd) Θ(m)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM577764.",
        "target_text": "Question: Find a majority element in an array of length n=577764 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Divide-and-conquer merges\nc) Binary search on value domain\nd) Counting sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR3.",
        "target_text": "Question: Reverse a singly linked list in groups of k=3 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS4148.",
        "target_text": "Question: Compute stock span for 4148 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Priority queue\nc) Hash table\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA2601.",
        "target_text": "Question: Circular-array queue with capacity 2601: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Head==Tail means full\nc) Require power-of-two capacity\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC95209879.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=95209879?\nChoices:\na) Θ(log log n)\nb) Θ(1)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.43.",
        "target_text": "Question: In separate chaining with load factor α=1.43, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(α)\nc) Θ(1/α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS479040.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=479040-th smallest?\nChoices:\na) Θ(k)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC273394.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=273394 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(E log V)\nc) Θ(V log V)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z711574.",
        "target_text": "Question: For string S (id=711574), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Next index of S[i]\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of mismatches at i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX2_4.",
        "target_text": "Question: Radix sort with d=2 digits and base b=4 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(n log n)\nc) Θ(d·n·log b)\nd) Θ(b^d)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI86_4234.",
        "target_text": "Question: Binary search over half-open range [86, 4234)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Increase both lo and hi to skip duplicates\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Keep inclusive bounds on both ends\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M5_5_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/5) + n^4 for n being a power of 5.\nChoices:\na) Θ(n^4)\nb) Θ(n^1.0 log n)\nc) Θ(n^1.0)\nd) Θ(n^4 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R119941.",
        "target_text": "Question: Rotate an array right by r=119941 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Heapify then extract\nc) Selection sort then shift\nd) Single-step rotate repeated r times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Phase difference accumulates around the cycle. Variant C5.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 5× and 1×. Complexity?\nChoices:\na) Θ(1) time, Θ(1) space\nb) Θ(n) time, Θ(1) space\nc) Θ(n) time, Θ(n) space\nd) Θ(log n) time, Θ(1) space\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS8.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 8 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Use BFS on substring graph\nc) Sort segments then concatenate\nd) Greedy left-to-right without memory\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA2971.",
        "target_text": "Question: Circular-array queue with capacity 2971: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require prime capacity\nc) Require power-of-two capacity\nd) Head==Tail means full\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL397_870288.",
        "target_text": "Question: Find the k=397-th largest element among n=870288 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Binary search on value domain\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC1.25.",
        "target_text": "Question: In separate chaining with load factor α=1.25, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(1/α)\nd) Θ(α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA630868.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=630868 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Naive parent climbing O(n) per query\nc) Euler tour + RMQ yields O(1) per query\nd) DFS from root each time\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP323569.",
        "target_text": "Question: Test bipartiteness (id=323569) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Check all degrees even\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Sort vertices and deduplicate\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP36879.",
        "target_text": "Question: KMP matches a pattern of length m=36879 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Rolling hash table\nc) Suffix array\nd) Z-array exclusively\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS585203.",
        "target_text": "Question: Heapsort stability check id=585203: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is not stable by default\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is stable\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS3940642.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=3940642 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A8.",
        "target_text": "Question: A dynamic array starts with capacity 8 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(log m)\nb) Θ(1)\nc) Θ(√m)\nd) Θ(m)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P124370.",
        "target_text": "Question: Answer 124370 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Recompute sums per query in Θ(n)\nb) Build prefix-sum array; O(1) per query\nc) Use a stack to store partial sums\nd) Sort once and binary search per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL46878.",
        "target_text": "Question: Check if a singly linked list of length n=46878 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Copy to array and two-pointer check\nc) Sort and compare with original\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS5.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 5 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Greedy left-to-right without memory\nc) Use two stacks for counts and fragments\nd) Use BFS on substring graph\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B762351.",
        "target_text": "Question: Run BFS on an unweighted graph with 762351 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Minimum memory footprint\nc) Lexicographic vertex order\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA4_75692301.",
        "target_text": "Question: In a d-ary heap with d=4 and n=75692301 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(log_4 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.65.",
        "target_text": "Question: In separate chaining with load factor α=0.65, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS373855.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=373855-th smallest?\nChoices:\na) Θ(1)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR925878.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=925878 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Topological sorting\nc) Kruskal’s algorithm\nd) Tarjan’s low-link DFS\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000009.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Suffix tree guaranteeing O(1) per char\nb) Use of a min-heap\nc) Trie of all substrings\nd) Low collision probability of rolling hash\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS801409.",
        "target_text": "Question: Keys are integers in range [0..801409]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Heap sort\nc) Counting sort\nd) Quick sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX302372746.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈302372746. Why?\nChoices:\na) Sorts the array first\nb) Uses hashing to index unknown segments\nc) Requires the array to be cyclic\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A2.",
        "target_text": "Question: A dynamic array starts with capacity 2 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(√m)\nb) Θ(m)\nc) Θ(log m)\nd) Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R853845.",
        "target_text": "Question: Rotate an array right by r=853845 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Single-step rotate repeated r times\nc) Heapify then extract\nd) Selection sort then shift\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK60_6411.",
        "target_text": "Question: Merge k=60 sorted linked lists totaling n=6411 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n + k^2)\nc) Θ(n log k)\nd) Θ(k n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS3402.",
        "target_text": "Question: Compute stock span for 3402 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Hash table\nc) Priority queue\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ819740.",
        "target_text": "Question: Schedule 819740 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Unordered array\nc) Circular queue\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL412_769136.",
        "target_text": "Question: Find the k=412-th largest element among n=769136 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Build max-heap and extract k times\nc) Binary search on value domain\nd) Heapsort then index\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH8192.",
        "target_text": "Question: In open addressing with double hashing over table size m=8192, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) Use g(k)=0 for some keys\nc) g(k) coprime with m for all keys\nd) Choose m even and g(k) even\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Two-step rotations repair misaligned subtrees. Variant AVL8234.",
        "target_text": "Question: After inserting into an AVL tree, a Left-Right imbalance occurs at node X. Which fix is correct?\nChoices:\na) Single right rotate X\nb) Right rotate right child of X, then left rotate X\nc) Single left rotate X\nd) Left rotate left child of X, then right rotate X\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D857535.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 857535]. Why?\nChoices:\na) Graph must be undirected\nb) Distinct weights are required\nc) Self-loops must be absent\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK257_1000000009.",
        "target_text": "Question: Rabin–Karp with base=257, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Use of a min-heap\nb) Low collision probability of rolling hash\nc) Trie of all substrings\nd) Suffix tree guaranteeing O(1) per char\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS381.",
        "target_text": "Question: Array is nearly sorted with at most 381 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Shell sort with fixed gaps\nc) Heap sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU4776841.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=4776841. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Heap-based selection\nc) Linear scan with early exit\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_3_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^1, f3=n^1 (log n)^3, f4=n^8?\nChoices:\na) Θ(n^1)\nb) Θ((log n)^3)\nc) Θ(n^8)\nd) Θ(n^1 (log n)^3)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM50051.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=50051-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Hash all present values then scan\nc) Scan linearly counting gaps\nd) Use a heap of differences\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C2.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 2× and 1×. Complexity?\nChoices:\na) Θ(1) time, Θ(1) space\nb) Θ(n) time, Θ(1) space\nc) Θ(n) time, Θ(n) space\nd) Θ(log n) time, Θ(1) space\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS2076.",
        "target_text": "Question: Compute stock span for 2076 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Priority queue\nc) Hash table\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ694447.",
        "target_text": "Question: Schedule 694447 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Unordered array\nc) Binary heap\nd) Stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL92_825627.",
        "target_text": "Question: Find the k=92-th largest element among n=825627 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Deterministic selection (median-of-medians)\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF7083986_0.2.",
        "target_text": "Question: Chaining hash table with n=7083986 keys at load factor α=0.2. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H945291453.",
        "target_text": "Question: For a balanced BST with n=945291453 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(log log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP534389.",
        "target_text": "Question: Test bipartiteness (id=534389) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Compute an MST then inspect edges\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Check all degrees even\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP51862.",
        "target_text": "Question: KMP matches a pattern of length m=51862 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Suffix array\nc) LPS (failure) function\nd) Z-array exclusively\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST510217.",
        "target_text": "Question: Stability (id=510217): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Counting sort (unstable)\nc) Heap sort (stable), Merge sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS3087599.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=3087599 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(1) expected\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T2_1_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^2, f3=n^2 (log n)^1, f4=n^8?\nChoices:\na) Θ((log n)^1)\nb) Θ(n^2)\nc) Θ(n^2 (log n)^1)\nd) Θ(n^8)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R736013.",
        "target_text": "Question: Rotate an array right by r=736013 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Selection sort then shift\nc) Single-step rotate repeated r times\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL31861.",
        "target_text": "Question: Check if a singly linked list of length n=31861 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Find middle, reverse second half, compare\nc) Use a hash set of seen values\nd) Sort and compare with original\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS2353.",
        "target_text": "Question: Compute stock span for 2353 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Hash table\nc) Priority queue\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B784588.",
        "target_text": "Question: Run BFS on an unweighted graph with 784588 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) Nondecreasing distance from source\nc) All simple paths before all edges\nd) Lexicographic vertex order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL163_731456.",
        "target_text": "Question: Find the k=163-th largest element among n=731456 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Heapsort then index\nc) Build max-heap and extract k times\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH4096.",
        "target_text": "Question: In open addressing with double hashing over table size m=4096, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Use g(k)=0 for some keys\nc) Make both hash functions identical\nd) Choose m even and g(k) even\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR291030.",
        "target_text": "Question: In a BST with distinct keys (id=291030), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Level-order\nc) Inorder\nd) Postorder\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS80939_761815.",
        "target_text": "Question: A directed graph with V=80939, E≈761815. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) Only if the graph is connected\nc) When it is a DAG (no directed cycles)\nd) When all vertices have outdegree ≥ 1\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN464383.",
        "target_text": "Question: Check anagrams for strings of length n=464383 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) Count character frequencies in Θ(n)\nc) DFS on character graph\nd) Use a stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS331.",
        "target_text": "Question: Array is nearly sorted with at most 331 inversions. Which algorithm excels?\nChoices:\na) Insertion sort\nb) Heap sort\nc) Radix sort\nd) Shell sort with fixed gaps\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS4907296.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=4907296 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(n) average\nc) Θ(log n) average\nd) O(1) worst-case\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_1_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^3, f3=n^3 (log n)^1, f4=n^9?\nChoices:\na) Θ((log n)^1)\nb) Θ(n^3)\nc) Θ(n^3 (log n)^1)\nd) Θ(n^9)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S3172_495.",
        "target_text": "Question: Array length n=3172, find max-sum subarray of fixed length k=495. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(k log n)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(nk)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN376583.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 376583, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Reverse list then delete head\nc) Traverse from head to find predecessor\nd) Impossible under any model\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS2082.",
        "target_text": "Question: Compute stock span for 2082 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Monotonic stack\nc) Hash table\nd) Priority queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ675185.",
        "target_text": "Question: For 675185 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Queue\nc) Stack\nd) Binary heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM389_116687.",
        "target_text": "Question: Merge k=389 sorted streams totaling N=116687 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(N log N)\nc) Θ(k log N)\nd) Θ(N + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.14.",
        "target_text": "Question: In separate chaining with load factor α=1.14, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H458705455.",
        "target_text": "Question: For a balanced BST with n=458705455 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(log log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP457667.",
        "target_text": "Question: Test bipartiteness (id=457667) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Sort vertices and deduplicate\nd) Check all degrees even\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z301194.",
        "target_text": "Question: For string S (id=301194), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Number of mismatches at i\nc) Next index of S[i]\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST87216.",
        "target_text": "Question: Stability (id=87216): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Quick sort (stable), Selection sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS7536426.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=7536426 typically runs in?\nChoices:\na) Θ(log n) average\nb) Θ(n) average\nc) O(1) worst-case\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M7_2_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/2) + n^1 for n being a power of 2.\nChoices:\na) Θ(n^2.8074)\nb) Θ(n^1)\nc) Θ(n^2.8074 log n)\nd) Θ(n^1 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM202386.",
        "target_text": "Question: Find a majority element in an array of length n=202386 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Binary search on value domain\nc) Boyer–Moore voting with verification\nd) Divide-and-conquer merges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR9.",
        "target_text": "Question: Reverse a singly linked list in groups of k=9 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(k log n)\nb) Θ(nk)\nc) Θ(n)\nd) Θ(n log k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS7.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 7 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Sort segments then concatenate\nc) Use BFS on substring graph\nd) Greedy left-to-right without memory\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B769515.",
        "target_text": "Question: Run BFS on an unweighted graph with 769515 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Minimum memory footprint\nc) Nondecreasing distance from source\nd) Lexicographic vertex order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM982_289080.",
        "target_text": "Question: Merge k=982 sorted streams totaling N=289080 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(N log N)\nc) Θ(N + k^2)\nd) Θ(k log N)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.98.",
        "target_text": "Question: In separate chaining with load factor α=0.98, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H272133782.",
        "target_text": "Question: For a balanced BST with n=272133782 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D526445.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 526445]. Why?\nChoices:\na) Graph must be undirected\nb) Nonnegative weights ensure greedy optimality\nc) Self-loops must be absent\nd) Distinct weights are required\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN557673.",
        "target_text": "Question: Check anagrams for strings of length n=557673 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Sort both in Θ(n log n)\nc) Use a stack\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS981478.",
        "target_text": "Question: Keys are integers in range [0..981478]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Shell sort\nc) Counting sort\nd) Quick sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI79_3593.",
        "target_text": "Question: Binary search over half-open range [79, 3593)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Keep inclusive bounds on both ends\nd) Increase both lo and hi to skip duplicates\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_1_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^3, f3=n^3 (log n)^1, f4=n^10?\nChoices:\na) Θ(n^3 (log n)^1)\nb) Θ(n^10)\nc) Θ((log n)^1)\nd) Θ(n^3)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP15126_2053.",
        "target_text": "Question: Sorted array length n=15126. Decide if any pair sums to 2053. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Divide and conquer in Θ(n log n)\nc) Hash set in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK45_1903.",
        "target_text": "Question: Merge k=45 sorted linked lists totaling n=1903 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n log k)\nc) Θ(k n)\nd) Θ(n + k^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS70.",
        "target_text": "Question: Compute stock span for 70 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Monotonic stack\nc) Fenwick tree\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA5384.",
        "target_text": "Question: Circular-array queue with capacity 5384: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Track count or keep one slot empty\nc) Require power-of-two capacity\nd) Require prime capacity\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH1563374.",
        "target_text": "Question: Build a binary heap from n=1563374 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(n^2)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH32768.",
        "target_text": "Question: In open addressing with double hashing over table size m=32768, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) Choose m even and g(k) even\nc) Make both hash functions identical\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Black-height constraints cap the height by 2·log2(n+1). Variant RB5551.",
        "target_text": "Question: Which invariant is essential in Red–Black trees to bound height?\nChoices:\na) Root is always red\nb) Adjacent reds allowed\nc) Same number of black nodes on every root-to-leaf path\nd) Leaves can be any color without restriction\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS385013_2855128.",
        "target_text": "Question: A directed graph with V=385013, E≈2855128. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) Only if the graph is connected\nc) When it is a DAG (no directed cycles)\nd) When all vertices have outdegree ≥ 1\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z767451.",
        "target_text": "Question: For string S (id=767451), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Next index of S[i]\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of mismatches at i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS59.",
        "target_text": "Question: Array is nearly sorted with at most 59 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Insertion sort\nc) Radix sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI80_3961.",
        "target_text": "Question: Binary search over half-open range [80, 3961)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Increase both lo and hi to skip duplicates\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T4_5_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^4, f3=n^4 (log n)^5, f4=n^10?\nChoices:\na) Θ(n^10)\nb) Θ(n^4)\nc) Θ((log n)^5)\nd) Θ(n^4 (log n)^5)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP4683_1343.",
        "target_text": "Question: Sorted array length n=4683. Decide if any pair sums to 1343. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Hash set in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Divide and conquer in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL5051.",
        "target_text": "Question: Check if a singly linked list of length n=5051 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Use a hash set of seen values\nc) Sort and compare with original\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE68204.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=68204. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Queue\nc) Binary search tree\nd) Max-heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B491086.",
        "target_text": "Question: Run BFS on an unweighted graph with 491086 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) Lexicographic vertex order\nc) All simple paths before all edges\nd) Minimum memory footprint\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA3_83877109.",
        "target_text": "Question: In a d-ary heap with d=3 and n=83877109 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log_3 n)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH1024.",
        "target_text": "Question: In open addressing with double hashing over table size m=1024, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Use g(k)=0 for some keys\nc) Choose m even and g(k) even\nd) Make both hash functions identical\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR476176.",
        "target_text": "Question: In a BST with distinct keys (id=476176), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Preorder\nc) Inorder\nd) Level-order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP455945.",
        "target_text": "Question: Test bipartiteness (id=455945) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Sort vertices and deduplicate\nc) Check all degrees even\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB8346.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=8346. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) BST over all substrings\nc) Binary heap of substrings\nd) Queue of rolling hashes only\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB5763856.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=5763856 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n)\nc) Ω(n^2)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS3390323.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=3390323 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(log n)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A1.",
        "target_text": "Question: A dynamic array starts with capacity 1 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(log m)\nb) Θ(√m)\nc) Θ(m)\nd) Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R871766.",
        "target_text": "Question: Rotate an array right by r=871766 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Selection sort then shift\nc) Heapify then extract\nd) Single-step rotate repeated r times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C4.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 4× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(1) space\nb) Θ(log n) time, Θ(1) space\nc) Θ(n) time, Θ(n) space\nd) Θ(1) time, Θ(1) space\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE48948.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=48948. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Queue\nc) Decreasing stack\nd) Binary search tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ443935.",
        "target_text": "Question: For 443935 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Stack\nc) Binary heap\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL569_873305.",
        "target_text": "Question: Find the k=569-th largest element among n=873305 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Build max-heap and extract k times\nc) Deterministic selection (median-of-medians)\nd) Binary search on value domain\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF4052607_0.34.",
        "target_text": "Question: Chaining hash table with n=4052607 keys at load factor α=0.34. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS79443.",
        "target_text": "Question: BST with parent pointers (id=79443): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) Reverse postorder traversal entirely\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Use level-order and pick next node\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR963605.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=963605 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Topological sorting\nc) Tarjan’s low-link DFS\nd) Kruskal’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z537270.",
        "target_text": "Question: For string S (id=537270), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Length of the longest prefix starting at i matching S[0..]\nc) Next index of S[i]\nd) Number of distinct substrings up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST737399.",
        "target_text": "Question: Stability (id=737399): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU9054854.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=9054854. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Binary search with left/right bias\nc) Hashing with chaining\nd) Heap-based selection\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M2_4_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/4) + n^2 for n being a power of 4.\nChoices:\na) Θ(n^2 log n)\nb) Θ(n^0.5)\nc) Θ(n^2)\nd) Θ(n^0.5 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP3936_2887.",
        "target_text": "Question: Sorted array length n=3936. Decide if any pair sums to 2887. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Brute force in Θ(n^2)\nc) Hash set in Θ(n log n)\nd) Divide and conquer in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL46945.",
        "target_text": "Question: Check if a singly linked list of length n=46945 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Use a hash set of seen values\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP2_3.",
        "target_text": "Question: Evaluate an infix expression with 2–3 precedence levels and parentheses. Linear-time method?\nChoices:\na) Left-to-right without stacks\nb) Sort tokens by precedence then scan\nc) Convert to postfix and evaluate with a stack\nd) Build a tree without any stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW8559_195.",
        "target_text": "Question: Sliding window maximum for array length n=8559 and window w=195. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(n log n)\nc) Θ(w log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM245_122063.",
        "target_text": "Question: Merge k=245 sorted streams totaling N=122063 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log N)\nc) Θ(k log N)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH4096.",
        "target_text": "Question: In open addressing with double hashing over table size m=4096, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) Use g(k)=0 for some keys\nc) g(k) coprime with m for all keys\nd) Make both hash functions identical\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H658531822.",
        "target_text": "Question: For a balanced BST with n=658531822 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS444199_3921229.",
        "target_text": "Question: A directed graph with V=444199, E≈3921229. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When it is a DAG (no directed cycles)\nc) Only if edges are unweighted\nd) When all vertices have outdegree ≥ 1\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN702223.",
        "target_text": "Question: Check anagrams for strings of length n=702223 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) Use a stack\nc) DFS on character graph\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS328968.",
        "target_text": "Question: Heapsort stability check id=328968: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort always beats merge sort\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Geometric level distribution mirrors balanced trees. Variant SL0.75.",
        "target_text": "Question: Skip list with level promotion probability p=0.75: expected complexity of search/insert/delete?\nChoices:\na) Θ(1) for all three\nb) Θ(log n) for all three\nc) Θ(√n) for all three\nd) Θ(n) for all three\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_5_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^1, f3=n^1 (log n)^5, f4=n^5?\nChoices:\na) Θ((log n)^5)\nb) Θ(n^5)\nc) Θ(n^1)\nd) Θ(n^1 (log n)^5)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM502956.",
        "target_text": "Question: Find a majority element in an array of length n=502956 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Boyer–Moore voting with verification\nc) Counting sort\nd) Divide-and-conquer merges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK70_4909.",
        "target_text": "Question: Merge k=70 sorted linked lists totaling n=4909 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(k n)\nc) Θ(n + k^2)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE93779.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=93779. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Decreasing stack\nc) Binary search tree\nd) Max-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW3034_468.",
        "target_text": "Question: Sliding window maximum for array length n=3034 and window w=468. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(w log n)\nc) Θ(nw)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH7212220.",
        "target_text": "Question: Build a binary heap from n=7212220 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(n log n)\nd) Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.94.",
        "target_text": "Question: In separate chaining with load factor α=0.94, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(α)\nc) Θ(1/α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS219834.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=219834-th smallest?\nChoices:\na) Θ(1)\nb) Θ(k)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST362630.",
        "target_text": "Question: MST question id=362630: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) MST minimizes number of edges\nd) Prim requires the entire edge set to be sorted first\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP57723.",
        "target_text": "Question: KMP matches a pattern of length m=57723 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Z-array exclusively\nc) LPS (failure) function\nd) Suffix array\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS521.",
        "target_text": "Question: Array is nearly sorted with at most 521 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Insertion sort\nc) Heap sort\nd) Shell sort with fixed gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Geometric level distribution mirrors balanced trees. Variant SL0.5.",
        "target_text": "Question: Skip list with level promotion probability p=0.5: expected complexity of search/insert/delete?\nChoices:\na) Θ(1) for all three\nb) Θ(n) for all three\nc) Θ(log n) for all three\nd) Θ(√n) for all three\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_1_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^4, f3=n^4 (log n)^1, f4=n^10?\nChoices:\na) Θ(n^4)\nb) Θ(n^10)\nc) Θ((log n)^1)\nd) Θ(n^4 (log n)^1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM73803.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=73803-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Hash all present values then scan\nc) Use a heap of differences\nd) Scan linearly counting gaps\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN103738_561959.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=103738, B=561959. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Hash addresses of first list\nc) Reverse one list then compare\nd) Binary search on addresses\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS2911.",
        "target_text": "Question: Compute stock span for 2911 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Hash table\nc) Monotonic stack\nd) Priority queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW4726_771.",
        "target_text": "Question: Sliding window maximum for array length n=4726 and window w=771. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(nw)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC52205140.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=52205140?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(1)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH1024.",
        "target_text": "Question: In open addressing with double hashing over table size m=1024, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) Choose m even and g(k) even\nc) Use g(k)=0 for some keys\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS342132.",
        "target_text": "Question: BST with parent pointers (id=342132): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) Reverse postorder traversal entirely\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Use level-order and pick next node\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC59756.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=59756 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V log V)\nb) Θ(V+E)\nc) Θ(VE)\nd) Θ(E log V)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS91586.",
        "target_text": "Question: In KMP, what does LPS[91586] represent for a given pattern?\nChoices:\na) Length of longest proper prefix that is also a suffix for prefix ending at i\nb) Index of next occurrence\nc) Number of mismatches up to i\nd) Total distinct prefixes up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS519387.",
        "target_text": "Question: Heapsort stability check id=519387: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort is stable\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Geometric level distribution mirrors balanced trees. Variant SL0.75.",
        "target_text": "Question: Skip list with level promotion probability p=0.75: expected complexity of search/insert/delete?\nChoices:\na) Θ(n) for all three\nb) Θ(1) for all three\nc) Θ(log n) for all three\nd) Θ(√n) for all three\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T2_5_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^2, f3=n^2 (log n)^5, f4=n^6?\nChoices:\na) Θ(n^6)\nb) Θ(n^2)\nc) Θ((log n)^5)\nd) Θ(n^2 (log n)^5)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM39535.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=39535-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Use a heap of differences\nc) Binary search on index vs value gap\nd) Scan linearly counting gaps\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL60753.",
        "target_text": "Question: Check if a singly linked list of length n=60753 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Copy to array and two-pointer check\nc) Find middle, reverse second half, compare\nd) Sort and compare with original\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE27688.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=27688. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Binary search tree\nc) Max-heap\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS2840.",
        "target_text": "Question: A queue via two stacks handles a burst of 2840 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) Both Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH1605436.",
        "target_text": "Question: Build a binary heap from n=1605436 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF4310463_0.89.",
        "target_text": "Question: Chaining hash table with n=4310463 keys at load factor α=0.89. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(nα)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR641085.",
        "target_text": "Question: In a BST with distinct keys (id=641085), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Inorder\nc) Postorder\nd) Level-order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Repeated edge relaxation tolerates negatives. Variant BF58192.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=58192 can handle which case while detecting it?\nChoices:\na) Negative edge weights and negative cycles\nb) Faster runtime on sparse nonnegative graphs\nc) Equal runtime on all graphs\nd) Only acyclic graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Character-by-character descent. Variant TRIE256.",
        "target_text": "Question: Search a trie over alphabet size σ=256 for a key of length m. Time complexity?\nChoices:\na) Θ(m log σ)\nb) Θ(log n)\nc) Θ(m)\nd) Θ(1) average for all m\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS557.",
        "target_text": "Question: Array is nearly sorted with at most 557 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Radix sort\nc) Insertion sort\nd) Heap sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS216940.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=216940 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(log n) average\nc) O(1) worst-case\nd) Θ(n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M8_4_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/4) + n^1 for n being a power of 4.\nChoices:\na) Θ(n^1.5 log n)\nb) Θ(n^1.5)\nc) Θ(n^1)\nd) Θ(n^1 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM566013.",
        "target_text": "Question: Find a majority element in an array of length n=566013 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Boyer–Moore voting with verification\nc) Binary search on value domain\nd) Divide-and-conquer merges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK68_5402.",
        "target_text": "Question: Merge k=68 sorted linked lists totaling n=5402 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log k)\nc) Θ(k n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE82405.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=82405. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Decreasing stack\nc) Binary search tree\nd) Max-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW10569_847.",
        "target_text": "Question: Sliding window maximum for array length n=10569 and window w=847. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(nw)\nd) Θ(w log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA5_87089801.",
        "target_text": "Question: In a d-ary heap with d=5 and n=87089801 nodes, what is the height?\nChoices:\na) Θ(log_5 n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Adversarial patterns are neutralized by random choice. Variant UH10000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=10000 slots yields what benefit?\nChoices:\na) Cryptographic security by default\nb) Zero collisions guaranteed\nc) Expected constant-time operations against adversaries\nd) Eliminates need for resizing\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Two-step rotations repair misaligned subtrees. Variant AVL3285.",
        "target_text": "Question: After inserting into an AVL tree, a Left-Right imbalance occurs at node X. Which fix is correct?\nChoices:\na) Right rotate right child of X, then left rotate X\nb) Left rotate left child of X, then right rotate X\nc) Single right rotate X\nd) Single left rotate X\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS438343_1387816.",
        "target_text": "Question: A directed graph with V=438343, E≈1387816. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) When it is a DAG (no directed cycles)\nc) When all vertices have outdegree ≥ 1\nd) Only if the graph is connected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB61547.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=61547. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Binary heap of substrings\nc) Suffix automaton or suffix array + LCP\nd) BST over all substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST303759.",
        "target_text": "Question: Stability (id=303759): which pairing is correct?\nChoices:\na) Merge sort (stable), Heap sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Counting sort (unstable)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS828315.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=828315 typically runs in?\nChoices:\na) O(1) worst-case\nb) O(log log n) average\nc) Θ(log n) average\nd) Θ(n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M9_4_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/4) + n^0 for n being a power of 4.\nChoices:\na) Θ(n^1.585)\nb) Θ(n^0 log n)\nc) Θ(n^0)\nd) Θ(n^1.585 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P666072.",
        "target_text": "Question: Answer 666072 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Recompute sums per query in Θ(n)\nc) Build prefix-sum array; O(1) per query\nd) Use a stack to store partial sums\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Phase difference accumulates around the cycle. Variant C3.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 3× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(n) space\nb) Θ(log n) time, Θ(1) space\nc) Θ(n) time, Θ(1) space\nd) Θ(1) time, Θ(1) space\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1000.",
        "target_text": "Question: Verify whether a pop sequence of length n=1000 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Sort both sequences then compare\nc) Simulate using one stack in Θ(n)\nd) Use a queue to mirror the stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS5772.",
        "target_text": "Question: A queue via two stacks handles a burst of 5772 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) Both Θ(log n)\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA11_1879672.",
        "target_text": "Question: In a d-ary heap with d=11 and n=1879672 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(log_11 n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Adversarial patterns are neutralized by random choice. Variant UH1000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=1000 slots yields what benefit?\nChoices:\na) Expected constant-time operations against adversaries\nb) Cryptographic security by default\nc) Eliminates need for resizing\nd) Zero collisions guaranteed\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA440197.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=440197 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) Sort node labels then binary search\nc) Euler tour + RMQ yields O(1) per query\nd) DFS from root each time\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS918308_2778163.",
        "target_text": "Question: A directed graph with V=918308, E≈2778163. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) Only if the graph is connected\nc) When all vertices have outdegree ≥ 1\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE2.",
        "target_text": "Question: Search a trie over alphabet size σ=2 for a key of length m. Time complexity?\nChoices:\na) Θ(m)\nb) Θ(m log σ)\nc) Θ(log n)\nd) Θ(1) average for all m\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX7_32.",
        "target_text": "Question: Radix sort with d=7 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·(n + b))\nc) Θ(d·n·log b)\nd) Θ(b^d)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS8256543.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=8256543 typically runs in?\nChoices:\na) Θ(log n) average\nb) Θ(n) average\nc) O(log log n) average\nd) O(1) worst-case\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T5_3_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^5, f3=n^5 (log n)^3, f4=n^7?\nChoices:\na) Θ((log n)^3)\nb) Θ(n^5 (log n)^3)\nc) Θ(n^5)\nd) Θ(n^7)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP7174_92.",
        "target_text": "Question: Sorted array length n=7174. Decide if any pair sums to 92. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Brute force in Θ(n^2)\nc) Divide and conquer in Θ(n log n)\nd) Hash set in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR3.",
        "target_text": "Question: Reverse a singly linked list in groups of k=3 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(n)\nc) Θ(n log k)\nd) Θ(k log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP4_5.",
        "target_text": "Question: Evaluate an infix expression with 4–5 precedence levels and parentheses. Linear-time method?\nChoices:\na) Build a tree without any stack\nb) Convert to postfix and evaluate with a stack\nc) Sort tokens by precedence then scan\nd) Left-to-right without stacks\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW2098_408.",
        "target_text": "Question: Sliding window maximum for array length n=2098 and window w=408. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(nw)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC42641837.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=42641837?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(1)\nd) Θ(log log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF2164259_0.43.",
        "target_text": "Question: Chaining hash table with n=2164259 keys at load factor α=0.43. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(α log α)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA285553.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=285553 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) Sort node labels then binary search\nc) Naive parent climbing O(n) per query\nd) DFS from root each time\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR224156.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=224156 edges. What algorithmic idea achieves linear time?\nChoices:\na) Kruskal’s algorithm\nb) Tarjan’s low-link DFS\nc) Topological sorting\nd) Dijkstra’s algorithm\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN948857.",
        "target_text": "Question: Check anagrams for strings of length n=948857 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) DFS on character graph\nc) Use a stack\nd) Sort both in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB70707694.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=70707694 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n log n)\nc) Ω(n)\nd) Ω(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS4605905.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=4605905 typically runs in?\nChoices:\na) Θ(n) average\nb) O(1) worst-case\nc) Θ(log n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T5_6_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^5, f3=n^5 (log n)^6, f4=n^8?\nChoices:\na) Θ(n^5)\nb) Θ(n^8)\nc) Θ((log n)^6)\nd) Θ(n^5 (log n)^6)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P65354.",
        "target_text": "Question: Answer 65354 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Build prefix-sum array; O(1) per query\nc) Use a stack to store partial sums\nd) Recompute sums per query in Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Phase difference accumulates around the cycle. Variant C4.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 4× and 1×. Complexity?\nChoices:\na) Θ(1) time, Θ(1) space\nb) Θ(n) time, Θ(n) space\nc) Θ(n) time, Θ(1) space\nd) Θ(log n) time, Θ(1) space\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS6.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 6 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Greedy left-to-right without memory\nc) Use two stacks for counts and fragments\nd) Sort segments then concatenate\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW3848_697.",
        "target_text": "Question: Sliding window maximum for array length n=3848 and window w=697. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n)\nc) Θ(nw)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK3.",
        "target_text": "Question: In a d-ary heap (d=3), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It makes the operation constant time\nb) No effect whatsoever\nc) It increases height linearly\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.87.",
        "target_text": "Question: In separate chaining with load factor α=0.87, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Two-step rotations repair misaligned subtrees. Variant AVL586.",
        "target_text": "Question: After inserting into an AVL tree, a Left-Right imbalance occurs at node X. Which fix is correct?\nChoices:\na) Single right rotate X\nb) Left rotate left child of X, then right rotate X\nc) Right rotate right child of X, then left rotate X\nd) Single left rotate X\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC393733.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=393733 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(V log V)\nc) Θ(VE)\nd) Θ(E log V)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN772800.",
        "target_text": "Question: Check anagrams for strings of length n=772800 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) Count character frequencies in Θ(n)\nc) DFS on character graph\nd) Use a stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST998815.",
        "target_text": "Question: Stability (id=998815): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Quick sort (stable), Selection sort (unstable)\nc) Heap sort (stable), Merge sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Geometric level distribution mirrors balanced trees. Variant SL0.5.",
        "target_text": "Question: Skip list with level promotion probability p=0.5: expected complexity of search/insert/delete?\nChoices:\na) Θ(1) for all three\nb) Θ(log n) for all three\nc) Θ(√n) for all three\nd) Θ(n) for all three\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M7_2_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/2) + n^3 for n being a power of 2.\nChoices:\na) Θ(n^3 log n)\nb) Θ(n^2.8074 log n)\nc) Θ(n^2.8074)\nd) Θ(n^3)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R576514.",
        "target_text": "Question: Rotate an array right by r=576514 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Single-step rotate repeated r times\nc) Selection sort then shift\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL27537.",
        "target_text": "Question: Check if a singly linked list of length n=27537 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Sort and compare with original\nc) Use a hash set of seen values\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP220.",
        "target_text": "Question: Verify whether a pop sequence of length n=220 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ678290.",
        "target_text": "Question: Schedule 678290 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Stack\nc) Circular queue\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA4_37163868.",
        "target_text": "Question: In a d-ary heap with d=4 and n=37163868 nodes, what is the height?\nChoices:\na) Θ(log_4 n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH8192.",
        "target_text": "Question: In open addressing with double hashing over table size m=8192, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) Make both hash functions identical\nc) Use g(k)=0 for some keys\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Black-height constraints cap the height by 2·log2(n+1). Variant RB6160.",
        "target_text": "Question: Which invariant is essential in Red–Black trees to bound height?\nChoices:\na) Leaves can be any color without restriction\nb) Adjacent reds allowed\nc) Root is always red\nd) Same number of black nodes on every root-to-leaf path\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR240393.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=240393 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Kruskal’s algorithm\nc) Tarjan’s low-link DFS\nd) Dijkstra’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS73918.",
        "target_text": "Question: In KMP, what does LPS[73918] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Number of mismatches up to i\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Total distinct prefixes up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS489314.",
        "target_text": "Question: Heapsort stability check id=489314: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort is not stable by default\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort always beats merge sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS8036794.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=8036794 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(1) expected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M2_5_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/5) + n^4 for n being a power of 5.\nChoices:\na) Θ(n^0.4307)\nb) Θ(n^4 log n)\nc) Θ(n^4)\nd) Θ(n^0.4307 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP8570_3455.",
        "target_text": "Question: Sorted array length n=8570. Decide if any pair sums to 3455. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Hash set in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN116083.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 116083, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Reverse list then delete head\nc) Impossible under any model\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS3.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 3 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Greedy left-to-right without memory\nc) Use BFS on substring graph\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW1747_244.",
        "target_text": "Question: Sliding window maximum for array length n=1747 and window w=244. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(w log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK5.",
        "target_text": "Question: In a d-ary heap (d=5), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) It increases height linearly\nc) No effect whatsoever\nd) It makes the operation constant time\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH2048.",
        "target_text": "Question: In open addressing with double hashing over table size m=2048, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) g(k) coprime with m for all keys\nc) Choose m even and g(k) even\nd) Use g(k)=0 for some keys\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA156477.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=156477 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) Sort node labels then binary search\nc) DFS from root each time\nd) Naive parent climbing O(n) per query\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF62614.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=62614 can handle which case while detecting it?\nChoices:\na) Only acyclic graphs\nb) Faster runtime on sparse nonnegative graphs\nc) Equal runtime on all graphs\nd) Negative edge weights and negative cycles\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS28664.",
        "target_text": "Question: In KMP, what does LPS[28664] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Total distinct prefixes up to i\nd) Number of mismatches up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST128733.",
        "target_text": "Question: Stability (id=128733): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Counting sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX155099225.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈155099225. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Requires the array to be cyclic\nc) Uses hashing to index unknown segments\nd) Sorts the array first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T5_4_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^5, f3=n^5 (log n)^4, f4=n^11?\nChoices:\na) Θ(n^5 (log n)^4)\nb) Θ((log n)^4)\nc) Θ(n^5)\nd) Θ(n^11)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R497521.",
        "target_text": "Question: Rotate an array right by r=497521 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Heapify then extract\nc) Three-reversal method\nd) Single-step rotate repeated r times\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL99195.",
        "target_text": "Question: Check if a singly linked list of length n=99195 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Sort and compare with original\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP4_5.",
        "target_text": "Question: Evaluate an infix expression with 4–5 precedence levels and parentheses. Linear-time method?\nChoices:\na) Left-to-right without stacks\nb) Build a tree without any stack\nc) Sort tokens by precedence then scan\nd) Convert to postfix and evaluate with a stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B434779.",
        "target_text": "Question: Run BFS on an unweighted graph with 434779 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) Lexicographic vertex order\nc) All simple paths before all edges\nd) Minimum memory footprint\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC9692990.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=9692990?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(1)\nd) Θ(log log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF9099741_0.22.",
        "target_text": "Question: Chaining hash table with n=9099741 keys at load factor α=0.22. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR86247.",
        "target_text": "Question: In a BST with distinct keys (id=86247), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Preorder\nc) Level-order\nd) Postorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC474828.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=474828 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(V+E)\nc) Θ(VE)\nd) Θ(V log V)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z909706.",
        "target_text": "Question: For string S (id=909706), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Number of mismatches at i\nc) Number of distinct substrings up to i\nd) Next index of S[i]\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB34566646.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=34566646 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n log n)\nc) Ω(log n)\nd) Ω(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU8573490.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=8573490. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Hashing with chaining\nc) Binary search with left/right bias\nd) Linear scan with early exit\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M7_4_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/4) + n^1 for n being a power of 4.\nChoices:\na) Θ(n^1)\nb) Θ(n^1 log n)\nc) Θ(n^1.4037 log n)\nd) Θ(n^1.4037)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM87891.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=87891-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Binary search on index vs value gap\nc) Hash all present values then scan\nd) Scan linearly counting gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN110779_126607.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=110779, B=126607. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Hash addresses of first list\nc) Advance pointers; when one ends, jump to the other head\nd) Binary search on addresses\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1029.",
        "target_text": "Question: Verify whether a pop sequence of length n=1029 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Simulate using one stack in Θ(n)\nc) Use a queue to mirror the stack\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS6963.",
        "target_text": "Question: A queue via two stacks handles a burst of 6963 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) Both Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA16_93412795.",
        "target_text": "Question: In a d-ary heap with d=16 and n=93412795 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(log_16 n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Adversarial patterns are neutralized by random choice. Variant UH100000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=100000 slots yields what benefit?\nChoices:\na) Eliminates need for resizing\nb) Cryptographic security by default\nc) Expected constant-time operations against adversaries\nd) Zero collisions guaranteed\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS314833.",
        "target_text": "Question: BST with parent pointers (id=314833): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Reverse postorder traversal entirely\nd) Always climb to root then go right once\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR158791.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=158791 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Kruskal’s algorithm\nc) Tarjan’s low-link DFS\nd) Dijkstra’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP33664.",
        "target_text": "Question: KMP matches a pattern of length m=33664 in linear time using which table?\nChoices:\na) Rolling hash table\nb) LPS (failure) function\nc) Z-array exclusively\nd) Suffix array\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX3_8.",
        "target_text": "Question: Radix sort with d=3 digits and base b=8 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(d·n·log b)\nc) Θ(n log n)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX721469219.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈721469219. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Uses hashing to index unknown segments\nc) Sorts the array first\nd) Requires the array to be cyclic\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M2_3_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/3) + n^2 for n being a power of 3.\nChoices:\na) Θ(n^0.6309 log n)\nb) Θ(n^0.6309)\nc) Θ(n^2 log n)\nd) Θ(n^2)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S6209_364.",
        "target_text": "Question: Array length n=6209, find max-sum subarray of fixed length k=364. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Phase difference accumulates around the cycle. Variant C4.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 4× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(n) space\nb) Θ(n) time, Θ(1) space\nc) Θ(1) time, Θ(1) space\nd) Θ(log n) time, Θ(1) space\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE47854.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=47854. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Binary search tree\nc) Max-heap\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ69815.",
        "target_text": "Question: Schedule 69815 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Unordered array\nc) Binary heap\nd) Circular queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH7051634.",
        "target_text": "Question: Build a binary heap from n=7051634 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.54.",
        "target_text": "Question: In separate chaining with load factor α=0.54, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS560246.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=560246-th smallest?\nChoices:\na) Θ(k)\nb) Θ(1)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR156246.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=156246 edges. What algorithmic idea achieves linear time?\nChoices:\na) Kruskal’s algorithm\nb) Tarjan’s low-link DFS\nc) Topological sorting\nd) Dijkstra’s algorithm\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Character-by-character descent. Variant TRIE26.",
        "target_text": "Question: Search a trie over alphabet size σ=26 for a key of length m. Time complexity?\nChoices:\na) Θ(1) average for all m\nb) Θ(m log σ)\nc) Θ(log n)\nd) Θ(m)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS233253.",
        "target_text": "Question: Heapsort stability check id=233253: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is stable\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS4160308.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=4160308 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(1) expected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A1.",
        "target_text": "Question: A dynamic array starts with capacity 1 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(1)\nc) Θ(log m)\nd) Θ(√m)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P943123.",
        "target_text": "Question: Answer 943123 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Recompute sums per query in Θ(n)\nb) Build prefix-sum array; O(1) per query\nc) Use a stack to store partial sums\nd) Sort once and binary search per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN71366.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 71366, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Reverse list then delete head\nc) Traverse from head to find predecessor\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS2.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 2 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Greedy left-to-right without memory\nb) Sort segments then concatenate\nc) Use BFS on substring graph\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ458733.",
        "target_text": "Question: Schedule 458733 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Binary heap\nc) Unordered array\nd) Stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC8011561.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=8011561?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF9542954_0.68.",
        "target_text": "Question: Chaining hash table with n=9542954 keys at load factor α=0.68. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR259317.",
        "target_text": "Question: In a BST with distinct keys (id=259317), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Level-order\nc) Postorder\nd) Preorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST392453.",
        "target_text": "Question: MST question id=392453: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) MST minimizes number of edges\nc) Kruskal adds the smallest edge that doesn't create a cycle\nd) Prim requires the entire edge set to be sorted first\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP16762.",
        "target_text": "Question: KMP matches a pattern of length m=16762 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Z-array exclusively\nc) Rolling hash table\nd) Suffix array\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX7_4.",
        "target_text": "Question: Radix sort with d=7 digits and base b=4 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(b^d)\nc) Θ(n log n)\nd) Θ(d·n·log b)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU6847924.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=6847924. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Binary search with left/right bias\nc) Heap-based selection\nd) Hashing with chaining\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_5_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^1, f3=n^1 (log n)^5, f4=n^8?\nChoices:\na) Θ(n^1 (log n)^5)\nb) Θ((log n)^5)\nc) Θ(n^1)\nd) Θ(n^8)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM819779.",
        "target_text": "Question: Find a majority element in an array of length n=819779 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Binary search on value domain\nc) Divide-and-conquer merges\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Phase difference accumulates around the cycle. Variant C3.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 3× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(1) space\nb) Θ(1) time, Θ(1) space\nc) Θ(log n) time, Θ(1) space\nd) Θ(n) time, Θ(n) space\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Per-node metadata preserves constant-time MIN. Variant MS8714.",
        "target_text": "Question: Support PUSH, POP, and MIN in worst-case Θ(1). What augmentation works?\nChoices:\na) Store (value, currentMin) per node\nb) Scan on demand for MIN\nc) Periodically rebuild the stack\nd) Keep a global heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B804593.",
        "target_text": "Question: Run BFS on an unweighted graph with 804593 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Minimum memory footprint\nc) Lexicographic vertex order\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL286_712266.",
        "target_text": "Question: Find the k=286-th largest element among n=712266 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Build max-heap and extract k times\nc) Deterministic selection (median-of-medians)\nd) Heapsort then index\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.66.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.66?\nChoices:\na) To sort keys implicitly\nb) To reduce memory usage to exact size\nc) To keep expected O(1) operations\nd) To maintain key stability\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS874407.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=874407-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(k)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D466944.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 466944]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Self-loops must be absent\nc) Graph must be undirected\nd) Distinct weights are required\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP20762.",
        "target_text": "Question: KMP matches a pattern of length m=20762 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Rolling hash table\nc) Z-array exclusively\nd) Suffix array\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS369501.",
        "target_text": "Question: Keys are integers in range [0..369501]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Shell sort\nc) Counting sort\nd) Quick sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS7540669.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=7540669 typically runs in?\nChoices:\na) O(1) worst-case\nb) Θ(n) average\nc) Θ(log n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M3_3_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/3) + n^0 for n being a power of 3.\nChoices:\na) Θ(n^0 log n)\nb) Θ(n^0)\nc) Θ(n^1.0 log n)\nd) Θ(n^1.0)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S10845_456.",
        "target_text": "Question: Array length n=10845, find max-sum subarray of fixed length k=456. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(k log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN542714_801440.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=542714, B=801440. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Hash addresses of first list\nc) Binary search on addresses\nd) Reverse one list then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP531.",
        "target_text": "Question: Verify whether a pop sequence of length n=531 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Use a queue to mirror the stack\nc) Simulate using one stack in Θ(n)\nd) Sort both sequences then compare\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS4801.",
        "target_text": "Question: A queue via two stacks handles a burst of 4801 operations. Amortized costs?\nChoices:\na) ENQUEUE and DEQUEUE both amortized Θ(1)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) Both Θ(log n)\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH1858408.",
        "target_text": "Question: Build a binary heap from n=1858408 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC1.48.",
        "target_text": "Question: In separate chaining with load factor α=1.48, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(1/α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS575284.",
        "target_text": "Question: BST with parent pointers (id=575284): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Use level-order and pick next node\nc) Always climb to root then go right once\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D609432.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 609432]. Why?\nChoices:\na) Self-loops must be absent\nb) Nonnegative weights ensure greedy optimality\nc) Distinct weights are required\nd) Graph must be undirected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN103547.",
        "target_text": "Question: Check anagrams for strings of length n=103547 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Count character frequencies in Θ(n)\nc) Sort both in Θ(n log n)\nd) Use a stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS587204.",
        "target_text": "Question: Keys are integers in range [0..587204]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Counting sort\nc) Heap sort\nd) Shell sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS8673977.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=8673977 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(log n) average\nc) O(1) worst-case\nd) Θ(n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M5_6_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/6) + n^1 for n being a power of 6.\nChoices:\na) Θ(n^1)\nb) Θ(n^1 log n)\nc) Θ(n^0.8982 log n)\nd) Θ(n^0.8982)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P982240.",
        "target_text": "Question: Answer 982240 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Recompute sums per query in Θ(n)\nc) Use a stack to store partial sums\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR4.",
        "target_text": "Question: Reverse a singly linked list in groups of k=4 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP105.",
        "target_text": "Question: Verify whether a pop sequence of length n=105 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Backtrack with recursion in Θ(2^n)\nc) Sort both sequences then compare\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA1716.",
        "target_text": "Question: Circular-array queue with capacity 1716: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Track count or keep one slot empty\nc) Require power-of-two capacity\nd) Head==Tail means full\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC93061200.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=93061200?\nChoices:\na) Θ(log n)\nb) Θ(log log n)\nc) Θ(n)\nd) Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Adversarial patterns are neutralized by random choice. Variant UH1000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=1000 slots yields what benefit?\nChoices:\na) Eliminates need for resizing\nb) Zero collisions guaranteed\nc) Expected constant-time operations against adversaries\nd) Cryptographic security by default\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR207810.",
        "target_text": "Question: In a BST with distinct keys (id=207810), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Level-order\nc) Preorder\nd) Postorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST415770.",
        "target_text": "Question: MST question id=415770: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) MST minimizes number of edges\nc) MST is always unique in connected graphs\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z472827.",
        "target_text": "Question: For string S (id=472827), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Number of mismatches at i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Next index of S[i]\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS785995.",
        "target_text": "Question: Heapsort stability check id=785995: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort is not stable by default\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort always beats merge sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU3982323.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=3982323. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Heap-based selection\nc) Hashing with chaining\nd) Linear scan with early exit\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A16.",
        "target_text": "Question: A dynamic array starts with capacity 16 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(√m)\nb) Θ(m)\nc) Θ(log m)\nd) Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S5842_16.",
        "target_text": "Question: Array length n=5842, find max-sum subarray of fixed length k=16. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(k log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK3_399.",
        "target_text": "Question: Merge k=3 sorted linked lists totaling n=399 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(k n)\nc) Θ(n log n)\nd) Θ(n + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS2.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 2 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Greedy left-to-right without memory\nb) Use two stacks for counts and fragments\nc) Sort segments then concatenate\nd) Use BFS on substring graph\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW10698_758.",
        "target_text": "Question: Sliding window maximum for array length n=10698 and window w=758. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(nw)\nc) Θ(w log n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH7044800.",
        "target_text": "Question: Build a binary heap from n=7044800 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(n^2)\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF7966274_0.92.",
        "target_text": "Question: Chaining hash table with n=7966274 keys at load factor α=0.92. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(nα)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR131409.",
        "target_text": "Question: In a BST with distinct keys (id=131409), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Level-order\nc) Postorder\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC965392.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=965392 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(V+E)\nc) Θ(E log V)\nd) Θ(V log V)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000007.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000007 achieves expected linear time due to what?\nChoices:\na) Use of a min-heap\nb) Suffix tree guaranteeing O(1) per char\nc) Trie of all substrings\nd) Low collision probability of rolling hash\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS389.",
        "target_text": "Question: Array is nearly sorted with at most 389 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Heap sort\nc) Radix sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS7467445.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=7467445 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(log n)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M4_2_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/2) + n^1 for n being a power of 2.\nChoices:\na) Θ(n^2.0)\nb) Θ(n^1)\nc) Θ(n^1 log n)\nd) Θ(n^2.0 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P685385.",
        "target_text": "Question: Answer 685385 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Use a stack to store partial sums\nc) Recompute sums per query in Θ(n)\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Phase difference accumulates around the cycle. Variant C5.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 5× and 1×. Complexity?\nChoices:\na) Θ(1) time, Θ(1) space\nb) Θ(log n) time, Θ(1) space\nc) Θ(n) time, Θ(n) space\nd) Θ(n) time, Θ(1) space\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP2_3.",
        "target_text": "Question: Evaluate an infix expression with 2–3 precedence levels and parentheses. Linear-time method?\nChoices:\na) Left-to-right without stacks\nb) Sort tokens by precedence then scan\nc) Build a tree without any stack\nd) Convert to postfix and evaluate with a stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA2587.",
        "target_text": "Question: Circular-array queue with capacity 2587: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Head==Tail means full\nc) Track count or keep one slot empty\nd) Require power-of-two capacity\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK4.",
        "target_text": "Question: In a d-ary heap (d=4), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It increases height linearly\nb) It makes the operation constant time\nc) No effect whatsoever\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH16384.",
        "target_text": "Question: In open addressing with double hashing over table size m=16384, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) Choose m even and g(k) even\nc) g(k) coprime with m for all keys\nd) Use g(k)=0 for some keys\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR278755.",
        "target_text": "Question: In a BST with distinct keys (id=278755), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Preorder\nc) Inorder\nd) Postorder\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D392646.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 392646]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Distinct weights are required\nc) Graph must be undirected\nd) Self-loops must be absent\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z915149.",
        "target_text": "Question: For string S (id=915149), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Next index of S[i]\nc) Number of mismatches at i\nd) Number of distinct substrings up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS193259.",
        "target_text": "Question: Keys are integers in range [0..193259]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Quick sort\nc) Shell sort\nd) Heap sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS3673775.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=3673775 typically runs in?\nChoices:\na) Θ(log n) average\nb) Θ(n) average\nc) O(log log n) average\nd) O(1) worst-case\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Geometric resizing spreads copying cost over many operations. Variant A4.",
        "target_text": "Question: A dynamic array starts with capacity 4 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(1)\nc) Θ(√m)\nd) Θ(log m)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM438141.",
        "target_text": "Question: Find a majority element in an array of length n=438141 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Binary search on value domain\nc) Counting sort\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR7.",
        "target_text": "Question: Reverse a singly linked list in groups of k=7 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n)\nd) Θ(n log k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS8.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 8 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Use two stacks for counts and fragments\nc) Greedy left-to-right without memory\nd) Use BFS on substring graph\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ106749.",
        "target_text": "Question: Schedule 106749 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Stack\nc) Unordered array\nd) Circular queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH9136449.",
        "target_text": "Question: Build a binary heap from n=9136449 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(n^2)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF7818560_0.29.",
        "target_text": "Question: Chaining hash table with n=7818560 keys at load factor α=0.29. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(α log α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA354820.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=354820 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) DFS from root each time\nc) Sort node labels then binary search\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR4104.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=4104 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Dijkstra’s algorithm\nc) Kruskal’s algorithm\nd) Tarjan’s low-link DFS\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN195322.",
        "target_text": "Question: Check anagrams for strings of length n=195322 over fixed alphabet. Optimal approach?\nChoices:\na) Use a stack\nb) DFS on character graph\nc) Count character frequencies in Θ(n)\nd) Sort both in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB1669427.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=1669427 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n^2)\nc) Ω(n log n)\nd) Ω(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU7769326.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=7769326. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Heap-based selection\nc) Binary search with left/right bias\nd) Hashing with chaining\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T3_4_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^3, f3=n^3 (log n)^4, f4=n^6?\nChoices:\na) Θ(n^3)\nb) Θ(n^6)\nc) Θ((log n)^4)\nd) Θ(n^3 (log n)^4)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R739094.",
        "target_text": "Question: Rotate an array right by r=739094 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Heapify then extract\nc) Three-reversal method\nd) Single-step rotate repeated r times\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL82150.",
        "target_text": "Question: Check if a singly linked list of length n=82150 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Use a hash set of seen values\nc) Sort and compare with original\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE40210.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=40210. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Binary search tree\nc) Max-heap\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ276298.",
        "target_text": "Question: For 276298 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Queue\nc) Deque\nd) Binary heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL895_569785.",
        "target_text": "Question: Find the k=895-th largest element among n=569785 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Build max-heap and extract k times\nc) Deterministic selection (median-of-medians)\nd) Binary search on value domain\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.13.",
        "target_text": "Question: In separate chaining with load factor α=1.13, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H416307008.",
        "target_text": "Question: For a balanced BST with n=416307008 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS692479_1595590.",
        "target_text": "Question: A directed graph with V=692479, E≈1595590. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) Only if edges are unweighted\nc) When all vertices have outdegree ≥ 1\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP3884.",
        "target_text": "Question: KMP matches a pattern of length m=3884 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Z-array exclusively\nc) Suffix array\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX2_256.",
        "target_text": "Question: Radix sort with d=2 digits and base b=256 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·(n + b))\nc) Θ(b^d)\nd) Θ(d·n·log b)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI16_3369.",
        "target_text": "Question: Binary search over half-open range [16, 3369)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Keep inclusive bounds on both ends\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Increase both lo and hi to skip duplicates\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M8_6_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/6) + n^4 for n being a power of 6.\nChoices:\na) Θ(n^4 log n)\nb) Θ(n^1.1606 log n)\nc) Θ(n^4)\nd) Θ(n^1.1606)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP9440_3367.",
        "target_text": "Question: Sorted array length n=9440. Decide if any pair sums to 3367. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Brute force in Θ(n^2)\nc) Two-pointer scan in Θ(n)\nd) Divide and conquer in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK49_2723.",
        "target_text": "Question: Merge k=49 sorted linked lists totaling n=2723 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n + k^2)\nc) Θ(n log n)\nd) Θ(k n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS3.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 3 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Sort segments then concatenate\nc) Greedy left-to-right without memory\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA1032.",
        "target_text": "Question: Circular-array queue with capacity 1032: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Track count or keep one slot empty\nc) Require prime capacity\nd) Require power-of-two capacity\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH9518365.",
        "target_text": "Question: Build a binary heap from n=9518365 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF4171951_0.42.",
        "target_text": "Question: Chaining hash table with n=4171951 keys at load factor α=0.42. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA326735.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=326735 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Naive parent climbing O(n) per query\nc) DFS from root each time\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D863233.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 863233]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Self-loops must be absent\nc) Distinct weights are required\nd) Graph must be undirected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB11827.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=11827. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) BST over all substrings\nc) Suffix automaton or suffix array + LCP\nd) Queue of rolling hashes only\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX10_32.",
        "target_text": "Question: Radix sort with d=10 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(b^d)\nc) Θ(d·n·log b)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU6206211.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=6206211. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Heap-based selection\nc) Linear scan with early exit\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A8.",
        "target_text": "Question: A dynamic array starts with capacity 8 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(log m)\nb) Θ(m)\nc) Θ(1)\nd) Θ(√m)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP15577_87.",
        "target_text": "Question: Sorted array length n=15577. Decide if any pair sums to 87. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Brute force in Θ(n^2)\nc) Hash set in Θ(n log n)\nd) Divide and conquer in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK94_6749.",
        "target_text": "Question: Merge k=94 sorted linked lists totaling n=6749 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n + k^2)\nc) Θ(n log n)\nd) Θ(k n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP2_3.",
        "target_text": "Question: Evaluate an infix expression with 2–3 precedence levels and parentheses. Linear-time method?\nChoices:\na) Build a tree without any stack\nb) Sort tokens by precedence then scan\nc) Left-to-right without stacks\nd) Convert to postfix and evaluate with a stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW2147_835.",
        "target_text": "Question: Sliding window maximum for array length n=2147 and window w=835. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(w log n)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK3.",
        "target_text": "Question: In a d-ary heap (d=3), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) No effect whatsoever\nc) It increases height linearly\nd) It makes the operation constant time\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH16384.",
        "target_text": "Question: In open addressing with double hashing over table size m=16384, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) Make both hash functions identical\nc) g(k) coprime with m for all keys\nd) Use g(k)=0 for some keys\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H109671154.",
        "target_text": "Question: For a balanced BST with n=109671154 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(log log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC870207.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=870207 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V log V)\nb) Θ(VE)\nc) Θ(V+E)\nd) Θ(E log V)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Randomized hashing makes spurious matches rare. Variant RK257_1000000007.",
        "target_text": "Question: Rabin–Karp with base=257, mod=1000000007 achieves expected linear time due to what?\nChoices:\na) Use of a min-heap\nb) Trie of all substrings\nc) Low collision probability of rolling hash\nd) Suffix tree guaranteeing O(1) per char\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS849695.",
        "target_text": "Question: Keys are integers in range [0..849695]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Heap sort\nc) Shell sort\nd) Quick sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU2806901.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=2806901. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Hashing with chaining\nc) Heap-based selection\nd) Linear scan with early exit\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A16.",
        "target_text": "Question: A dynamic array starts with capacity 16 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(log m)\nb) Θ(m)\nc) Θ(1)\nd) Θ(√m)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S3951_41.",
        "target_text": "Question: Array length n=3951, find max-sum subarray of fixed length k=41. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN896881.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 896881, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Copy next node’s data here and bypass next\nc) Traverse from head to find predecessor\nd) Reverse list then delete head\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP2_3.",
        "target_text": "Question: Evaluate an infix expression with 2–3 precedence levels and parentheses. Linear-time method?\nChoices:\na) Convert to postfix and evaluate with a stack\nb) Left-to-right without stacks\nc) Sort tokens by precedence then scan\nd) Build a tree without any stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ755770.",
        "target_text": "Question: Schedule 755770 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Circular queue\nc) Binary heap\nd) Unordered array\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL402_230841.",
        "target_text": "Question: Find the k=402-th largest element among n=230841 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Binary search on value domain\nc) Deterministic selection (median-of-medians)\nd) Build max-heap and extract k times\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.75.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.75?\nChoices:\na) To maintain key stability\nb) To sort keys implicitly\nc) To keep expected O(1) operations\nd) To reduce memory usage to exact size\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS474728.",
        "target_text": "Question: BST with parent pointers (id=474728): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) Always climb to root then go right once\nc) Reverse postorder traversal entirely\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS409739_2456760.",
        "target_text": "Question: A directed graph with V=409739, E≈2456760. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) When all vertices have outdegree ≥ 1\nc) Only if the graph is connected\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB4074.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=4074. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) Queue of rolling hashes only\nc) Suffix automaton or suffix array + LCP\nd) BST over all substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX5_32.",
        "target_text": "Question: Radix sort with d=5 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(d·n·log b)\nc) Θ(b^d)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Geometric level distribution mirrors balanced trees. Variant SL0.5.",
        "target_text": "Question: Skip list with level promotion probability p=0.5: expected complexity of search/insert/delete?\nChoices:\na) Θ(1) for all three\nb) Θ(√n) for all three\nc) Θ(n) for all three\nd) Θ(log n) for all three\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T5_1_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^5, f3=n^5 (log n)^1, f4=n^9?\nChoices:\na) Θ(n^9)\nb) Θ(n^5 (log n)^1)\nc) Θ(n^5)\nd) Θ((log n)^1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM901268.",
        "target_text": "Question: Find a majority element in an array of length n=901268 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Counting sort\nc) Divide-and-conquer merges\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN108102.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 108102, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Traverse from head to find predecessor\nc) Reverse list then delete head\nd) Impossible under any model\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP764.",
        "target_text": "Question: Verify whether a pop sequence of length n=764 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Simulate using one stack in Θ(n)\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS6359.",
        "target_text": "Question: A queue via two stacks handles a burst of 6359 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA7_67885445.",
        "target_text": "Question: In a d-ary heap with d=7 and n=67885445 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log_7 n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Probe sequences align and form contiguous clusters. Variant LP3919.",
        "target_text": "Question: What clustering effect harms performance in linear probing, and what mitigates it?\nChoices:\na) Path compression mitigated by union-find\nb) Cache thrashing mitigated by padding\nc) Primary clustering mitigated by double hashing\nd) AVL imbalance mitigated by rotations\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS365069.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=365069-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(k)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS198019_1491919.",
        "target_text": "Question: A directed graph with V=198019, E≈1491919. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) Only if the graph is connected\nc) When all vertices have outdegree ≥ 1\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS5644.",
        "target_text": "Question: In KMP, what does LPS[5644] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Index of next occurrence\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Number of mismatches up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS92.",
        "target_text": "Question: Array is nearly sorted with at most 92 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Insertion sort\nc) Radix sort\nd) Shell sort with fixed gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS2892861.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=2892861 typically runs in?\nChoices:\na) Θ(n) average\nb) O(log log n) average\nc) Θ(log n) average\nd) O(1) worst-case\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T1_5_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^1, f3=n^1 (log n)^5, f4=n^7?\nChoices:\na) Θ(n^7)\nb) Θ(n^1 (log n)^5)\nc) Θ(n^1)\nd) Θ((log n)^5)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP13712_1089.",
        "target_text": "Question: Sorted array length n=13712. Decide if any pair sums to 1089. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Brute force in Θ(n^2)\nc) Two-pointer scan in Θ(n)\nd) Divide and conquer in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK88_6666.",
        "target_text": "Question: Merge k=88 sorted linked lists totaling n=6666 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(k n)\nc) Θ(n log n)\nd) Θ(n + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS6.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 6 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Sort segments then concatenate\nc) Use BFS on substring graph\nd) Greedy left-to-right without memory\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA1904.",
        "target_text": "Question: Circular-array queue with capacity 1904: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Require power-of-two capacity\nc) Require prime capacity\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC96817269.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=96817269?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF8315625_0.95.",
        "target_text": "Question: Chaining hash table with n=8315625 keys at load factor α=0.95. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(α log α)\nd) Θ(nα)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA489421.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=489421 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) Naive parent climbing O(n) per query\nc) Sort node labels then binary search\nd) DFS from root each time\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC340324.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=340324 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(VE)\nc) Θ(V log V)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE2.",
        "target_text": "Question: Search a trie over alphabet size σ=2 for a key of length m. Time complexity?\nChoices:\na) Θ(m log σ)\nb) Θ(log n)\nc) Θ(1) average for all m\nd) Θ(m)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST720080.",
        "target_text": "Question: Stability (id=720080): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Quick sort (stable), Selection sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS8837771.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=8837771 typically runs in?\nChoices:\na) Θ(n) average\nb) O(log log n) average\nc) Θ(log n) average\nd) O(1) worst-case\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_3_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^3, f3=n^3 (log n)^3, f4=n^10?\nChoices:\na) Θ(n^3)\nb) Θ(n^3 (log n)^3)\nc) Θ((log n)^3)\nd) Θ(n^10)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P560275.",
        "target_text": "Question: Answer 560275 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Build prefix-sum array; O(1) per query\nc) Recompute sums per query in Θ(n)\nd) Use a stack to store partial sums\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN432953_180094.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=432953, B=180094. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Advance pointers; when one ends, jump to the other head\nc) Hash addresses of first list\nd) Binary search on addresses\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS1161.",
        "target_text": "Question: Compute stock span for 1161 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Monotonic stack\nc) Fenwick tree\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS7158.",
        "target_text": "Question: A queue via two stacks handles a burst of 7158 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) Both Θ(log n)\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL177_496940.",
        "target_text": "Question: Find the k=177-th largest element among n=496940 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Binary search on value domain\nc) Deterministic selection (median-of-medians)\nd) Build max-heap and extract k times\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF8552613_0.72.",
        "target_text": "Question: Chaining hash table with n=8552613 keys at load factor α=0.72. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(log n)\nc) Θ(α log α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS308611.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=308611-th smallest?\nChoices:\na) Θ(k)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D994516.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 994516]. Why?\nChoices:\na) Graph must be undirected\nb) Distinct weights are required\nc) Nonnegative weights ensure greedy optimality\nd) Self-loops must be absent\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN287105.",
        "target_text": "Question: Check anagrams for strings of length n=287105 over fixed alphabet. Optimal approach?\nChoices:\na) Use a stack\nb) DFS on character graph\nc) Sort both in Θ(n log n)\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB51394899.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=51394899 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(log n)\nc) Ω(n log n)\nd) Ω(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX638929416.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈638929416. Why?\nChoices:\na) Sorts the array first\nb) Uses hashing to index unknown segments\nc) Requires the array to be cyclic\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T5_6_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^5, f3=n^5 (log n)^6, f4=n^9?\nChoices:\na) Θ(n^5 (log n)^6)\nb) Θ(n^9)\nc) Θ(n^5)\nd) Θ((log n)^6)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S2380_84.",
        "target_text": "Question: Array length n=2380, find max-sum subarray of fixed length k=84. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Phase difference accumulates around the cycle. Variant C5.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 5× and 1×. Complexity?\nChoices:\na) Θ(log n) time, Θ(1) space\nb) Θ(n) time, Θ(1) space\nc) Θ(1) time, Θ(1) space\nd) Θ(n) time, Θ(n) space\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP4_5.",
        "target_text": "Question: Evaluate an infix expression with 4–5 precedence levels and parentheses. Linear-time method?\nChoices:\na) Convert to postfix and evaluate with a stack\nb) Left-to-right without stacks\nc) Build a tree without any stack\nd) Sort tokens by precedence then scan\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ266138.",
        "target_text": "Question: For 266138 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Binary heap\nc) Queue\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH6979875.",
        "target_text": "Question: Build a binary heap from n=6979875 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(log n)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Probe sequences align and form contiguous clusters. Variant LP8123.",
        "target_text": "Question: What clustering effect harms performance in linear probing, and what mitigates it?\nChoices:\na) Path compression mitigated by union-find\nb) AVL imbalance mitigated by rotations\nc) Cache thrashing mitigated by padding\nd) Primary clustering mitigated by double hashing\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS174040.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=174040-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(√n)\nc) Θ(k)\nd) Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC937395.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=937395 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(V log V)\nc) Θ(VE)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB34704.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=34704. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Binary heap of substrings\nc) Suffix automaton or suffix array + LCP\nd) Queue of rolling hashes only\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB62739781.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=62739781 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n)\nc) Ω(log n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI65_4555.",
        "target_text": "Question: Binary search over half-open range [65, 4555)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Keep inclusive bounds on both ends\nd) Increase both lo and hi to skip duplicates\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Geometric resizing spreads copying cost over many operations. Variant A8.",
        "target_text": "Question: A dynamic array starts with capacity 8 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(log m)\nb) Θ(√m)\nc) Θ(1)\nd) Θ(m)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP12852_4570.",
        "target_text": "Question: Sorted array length n=12852. Decide if any pair sums to 4570. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Brute force in Θ(n^2)\nc) Two-pointer scan in Θ(n)\nd) Hash set in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR9.",
        "target_text": "Question: Reverse a singly linked list in groups of k=9 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(k log n)\nb) Θ(nk)\nc) Θ(n log k)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Per-node metadata preserves constant-time MIN. Variant MS1878.",
        "target_text": "Question: Support PUSH, POP, and MIN in worst-case Θ(1). What augmentation works?\nChoices:\na) Keep a global heap\nb) Scan on demand for MIN\nc) Store (value, currentMin) per node\nd) Periodically rebuild the stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B614131.",
        "target_text": "Question: Run BFS on an unweighted graph with 614131 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) Minimum memory footprint\nc) Lexicographic vertex order\nd) All simple paths before all edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC20996803.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=20996803?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.48.",
        "target_text": "Question: In separate chaining with load factor α=1.48, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(1/α)\nd) Θ(α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR937251.",
        "target_text": "Question: In a BST with distinct keys (id=937251), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Inorder\nc) Postorder\nd) Level-order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Repeated edge relaxation tolerates negatives. Variant BF86765.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=86765 can handle which case while detecting it?\nChoices:\na) Only acyclic graphs\nb) Negative edge weights and negative cycles\nc) Equal runtime on all graphs\nd) Faster runtime on sparse nonnegative graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP98849.",
        "target_text": "Question: KMP matches a pattern of length m=98849 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Suffix array\nc) LPS (failure) function\nd) Z-array exclusively\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX5_2.",
        "target_text": "Question: Radix sort with d=5 digits and base b=2 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(d·n·log b)\nc) Θ(n log n)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS5853620.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=5853620 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(1) expected\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M5_3_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/3) + n^0 for n being a power of 3.\nChoices:\na) Θ(n^0 log n)\nb) Θ(n^1.465)\nc) Θ(n^0)\nd) Θ(n^1.465 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM183684.",
        "target_text": "Question: Find a majority element in an array of length n=183684 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Binary search on value domain\nc) Divide-and-conquer merges\nd) Counting sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN683280.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 683280, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Traverse from head to find predecessor\nc) Copy next node’s data here and bypass next\nd) Impossible under any model\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS6.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 6 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Greedy left-to-right without memory\nc) Sort segments then concatenate\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA616.",
        "target_text": "Question: Circular-array queue with capacity 616: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Require power-of-two capacity\nc) Head==Tail means full\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL422_329415.",
        "target_text": "Question: Find the k=422-th largest element among n=329415 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Deterministic selection (median-of-medians)\nc) Heapsort then index\nd) Binary search on value domain\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF1513819_0.93.",
        "target_text": "Question: Chaining hash table with n=1513819 keys at load factor α=0.93. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(nα)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR933009.",
        "target_text": "Question: In a BST with distinct keys (id=933009), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Preorder\nc) Inorder\nd) Level-order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP470073.",
        "target_text": "Question: Test bipartiteness (id=470073) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Sort vertices and deduplicate\nc) Check all degrees even\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000009.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Low collision probability of rolling hash\nb) Suffix tree guaranteeing O(1) per char\nc) Trie of all substrings\nd) Use of a min-heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS718491.",
        "target_text": "Question: Keys are integers in range [0..718491]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Counting sort\nc) Shell sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS9055865.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=9055865 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(1) expected\nc) Θ(n log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M2_4_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/4) + n^3 for n being a power of 4.\nChoices:\na) Θ(n^3)\nb) Θ(n^0.5)\nc) Θ(n^0.5 log n)\nd) Θ(n^3 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P212016.",
        "target_text": "Question: Answer 212016 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Recompute sums per query in Θ(n)\nc) Use a stack to store partial sums\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Phase difference accumulates around the cycle. Variant C5.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 5× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(n) space\nb) Θ(n) time, Θ(1) space\nc) Θ(1) time, Θ(1) space\nd) Θ(log n) time, Θ(1) space\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1121.",
        "target_text": "Question: Verify whether a pop sequence of length n=1121 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Backtrack with recursion in Θ(2^n)\nc) Sort both sequences then compare\nd) Use a queue to mirror the stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ767014.",
        "target_text": "Question: For 767014 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Deque\nc) Binary heap\nd) Stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA4_88778867.",
        "target_text": "Question: In a d-ary heap with d=4 and n=88778867 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(log_4 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF8934953_0.77.",
        "target_text": "Question: Chaining hash table with n=8934953 keys at load factor α=0.77. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(α log α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Black-height constraints cap the height by 2·log2(n+1). Variant RB2366.",
        "target_text": "Question: Which invariant is essential in Red–Black trees to bound height?\nChoices:\na) Leaves can be any color without restriction\nb) Root is always red\nc) Adjacent reds allowed\nd) Same number of black nodes on every root-to-leaf path\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR636218.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=636218 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Dijkstra’s algorithm\nc) Tarjan’s low-link DFS\nd) Kruskal’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP92084.",
        "target_text": "Question: KMP matches a pattern of length m=92084 in linear time using which table?\nChoices:\na) Suffix array\nb) Rolling hash table\nc) LPS (failure) function\nd) Z-array exclusively\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS707785.",
        "target_text": "Question: Heapsort stability check id=707785: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort is stable\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI89_729.",
        "target_text": "Question: Binary search over half-open range [89, 729)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Increase both lo and hi to skip duplicates\nd) Keep inclusive bounds on both ends\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M5_3_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/3) + n^3 for n being a power of 3.\nChoices:\na) Θ(n^3)\nb) Θ(n^3 log n)\nc) Θ(n^1.465)\nd) Θ(n^1.465 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP907_2469.",
        "target_text": "Question: Sorted array length n=907. Decide if any pair sums to 2469. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Brute force in Θ(n^2)\nc) Divide and conquer in Θ(n log n)\nd) Two-pointer scan in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN619645_99601.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=619645, B=99601. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Reverse one list then compare\nc) Advance pointers; when one ends, jump to the other head\nd) Binary search on addresses\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Per-node metadata preserves constant-time MIN. Variant MS6814.",
        "target_text": "Question: Support PUSH, POP, and MIN in worst-case Θ(1). What augmentation works?\nChoices:\na) Periodically rebuild the stack\nb) Keep a global heap\nc) Scan on demand for MIN\nd) Store (value, currentMin) per node\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ492480.",
        "target_text": "Question: For 492480 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Binary heap\nc) Queue\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK4.",
        "target_text": "Question: In a d-ary heap (d=4), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It makes the operation constant time\nb) It increases height linearly\nc) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nd) No effect whatsoever\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF9276672_0.76.",
        "target_text": "Question: Chaining hash table with n=9276672 keys at load factor α=0.76. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(nα)\nc) Θ(1 + α)\nd) Θ(α log α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H548085825.",
        "target_text": "Question: For a balanced BST with n=548085825 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST263610.",
        "target_text": "Question: MST question id=263610: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) MST is always unique in connected graphs\nc) Kruskal adds the smallest edge that doesn't create a cycle\nd) MST minimizes number of edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP86146.",
        "target_text": "Question: KMP matches a pattern of length m=86146 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Z-array exclusively\nc) Rolling hash table\nd) Suffix array\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS560124.",
        "target_text": "Question: Heapsort stability check id=560124: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort is not stable by default\nc) Heapsort is stable\nd) Heapsort always beats merge sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS2450053.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=2450053 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(1) expected\nc) Θ(log n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M5_2_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/2) + n^3 for n being a power of 2.\nChoices:\na) Θ(n^2.3219 log n)\nb) Θ(n^3 log n)\nc) Θ(n^2.3219)\nd) Θ(n^3)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R243823.",
        "target_text": "Question: Rotate an array right by r=243823 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Heapify then extract\nc) Three-reversal method\nd) Selection sort then shift\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN452007.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 452007, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Copy next node’s data here and bypass next\nc) Reverse list then delete head\nd) Impossible under any model\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS2233.",
        "target_text": "Question: Compute stock span for 2233 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Monotonic stack\nc) Hash table\nd) Fenwick tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ741567.",
        "target_text": "Question: Schedule 741567 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Binary heap\nc) Stack\nd) Unordered array\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM345_38719.",
        "target_text": "Question: Merge k=345 sorted streams totaling N=38719 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log N)\nc) Θ(N log k)\nd) Θ(N + k^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.05.",
        "target_text": "Question: In separate chaining with load factor α=1.05, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1 + α)\nc) Θ(1/α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR988809.",
        "target_text": "Question: In a BST with distinct keys (id=988809), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Preorder\nc) Postorder\nd) Level-order\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR723396.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=723396 edges. What algorithmic idea achieves linear time?\nChoices:\na) Tarjan’s low-link DFS\nb) Dijkstra’s algorithm\nc) Topological sorting\nd) Kruskal’s algorithm\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z740238.",
        "target_text": "Question: For string S (id=740238), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Next index of S[i]\nc) Number of mismatches at i\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS274853.",
        "target_text": "Question: Heapsort stability check id=274853: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort always beats merge sort\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS1606904.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=1606904 typically runs in?\nChoices:\na) Θ(log n) average\nb) Θ(n) average\nc) O(log log n) average\nd) O(1) worst-case\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T5_6_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^5, f3=n^5 (log n)^6, f4=n^8?\nChoices:\na) Θ(n^8)\nb) Θ((log n)^6)\nc) Θ(n^5 (log n)^6)\nd) Θ(n^5)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM599168.",
        "target_text": "Question: Find a majority element in an array of length n=599168 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Divide-and-conquer merges\nc) Binary search on value domain\nd) Counting sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN549825_668575.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=549825, B=668575. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Hash addresses of first list\nc) Reverse one list then compare\nd) Advance pointers; when one ends, jump to the other head\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1085.",
        "target_text": "Question: Verify whether a pop sequence of length n=1085 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Simulate using one stack in Θ(n)\nc) Use a queue to mirror the stack\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ460204.",
        "target_text": "Question: For 460204 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Deque\nc) Binary heap\nd) Stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK5.",
        "target_text": "Question: In a d-ary heap (d=5), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It increases height linearly\nb) No effect whatsoever\nc) It makes the operation constant time\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF2361245_0.8.",
        "target_text": "Question: Chaining hash table with n=2361245 keys at load factor α=0.8. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H273917428.",
        "target_text": "Question: For a balanced BST with n=273917428 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(√n)\nd) Θ(log log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D530296.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 530296]. Why?\nChoices:\na) Self-loops must be absent\nb) Distinct weights are required\nc) Nonnegative weights ensure greedy optimality\nd) Graph must be undirected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS44575.",
        "target_text": "Question: In KMP, what does LPS[44575] represent for a given pattern?\nChoices:\na) Length of longest proper prefix that is also a suffix for prefix ending at i\nb) Index of next occurrence\nc) Total distinct prefixes up to i\nd) Number of mismatches up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB41633652.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=41633652 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(log n)\nc) Ω(n^2)\nd) Ω(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS254666.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=254666 typically runs in?\nChoices:\na) O(log log n) average\nb) O(1) worst-case\nc) Θ(log n) average\nd) Θ(n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M2_6_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/6) + n^0 for n being a power of 6.\nChoices:\na) Θ(n^0.3869 log n)\nb) Θ(n^0.3869)\nc) Θ(n^0)\nd) Θ(n^0 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S5966_301.",
        "target_text": "Question: Array length n=5966, find max-sum subarray of fixed length k=301. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN395798.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 395798, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Reverse list then delete head\nc) Copy next node’s data here and bypass next\nd) Impossible under any model\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1569.",
        "target_text": "Question: Verify whether a pop sequence of length n=1569 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ174975.",
        "target_text": "Question: For 174975 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Deque\nc) Binary heap\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH4741815.",
        "target_text": "Question: Build a binary heap from n=4741815 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(n^2)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF1809618_0.36.",
        "target_text": "Question: Chaining hash table with n=1809618 keys at load factor α=0.36. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(α log α)\nc) Θ(1 + α)\nd) Θ(nα)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS12728.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=12728-th smallest?\nChoices:\na) Θ(k)\nb) Θ(log n)\nc) Θ(1)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS576077_2257928.",
        "target_text": "Question: A directed graph with V=576077, E≈2257928. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When all vertices have outdegree ≥ 1\nc) Only if edges are unweighted\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP9860.",
        "target_text": "Question: KMP matches a pattern of length m=9860 in linear time using which table?\nChoices:\na) Suffix array\nb) Rolling hash table\nc) Z-array exclusively\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX5_1024.",
        "target_text": "Question: Radix sort with d=5 digits and base b=1024 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(d·n·log b)\nc) Θ(d·(n + b))\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX788707242.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈788707242. Why?\nChoices:\na) Sorts the array first\nb) Uses hashing to index unknown segments\nc) Doubles the bound to bracket, then binary search\nd) Requires the array to be cyclic\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A1.",
        "target_text": "Question: A dynamic array starts with capacity 1 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(√m)\nb) Θ(log m)\nc) Θ(1)\nd) Θ(m)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P380768.",
        "target_text": "Question: Answer 380768 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Sort once and binary search per query\nc) Recompute sums per query in Θ(n)\nd) Use a stack to store partial sums\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL14201.",
        "target_text": "Question: Check if a singly linked list of length n=14201 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Sort and compare with original\nc) Copy to array and two-pointer check\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS2286.",
        "target_text": "Question: Compute stock span for 2286 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Priority queue\nc) Monotonic stack\nd) Hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ893756.",
        "target_text": "Question: Schedule 893756 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Binary heap\nc) Stack\nd) Circular queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA6_56072796.",
        "target_text": "Question: In a d-ary heap with d=6 and n=56072796 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log_6 n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH131072.",
        "target_text": "Question: In open addressing with double hashing over table size m=131072, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) Make both hash functions identical\nc) g(k) coprime with m for all keys\nd) Use g(k)=0 for some keys\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H691966104.",
        "target_text": "Question: For a balanced BST with n=691966104 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(√n)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR261294.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=261294 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Tarjan’s low-link DFS\nc) Topological sorting\nd) Kruskal’s algorithm\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000007.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000007 achieves expected linear time due to what?\nChoices:\na) Trie of all substrings\nb) Low collision probability of rolling hash\nc) Use of a min-heap\nd) Suffix tree guaranteeing O(1) per char\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS967.",
        "target_text": "Question: Array is nearly sorted with at most 967 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Shell sort with fixed gaps\nc) Heap sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU4252361.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=4252361. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Hashing with chaining\nc) Binary search with left/right bias\nd) Heap-based selection\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A8.",
        "target_text": "Question: A dynamic array starts with capacity 8 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(√m)\nc) Θ(1)\nd) Θ(log m)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R653399.",
        "target_text": "Question: Rotate an array right by r=653399 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Three-reversal method\nc) Heapify then extract\nd) Selection sort then shift\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C5.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 5× and 1×. Complexity?\nChoices:\na) Θ(1) time, Θ(1) space\nb) Θ(log n) time, Θ(1) space\nc) Θ(n) time, Θ(1) space\nd) Θ(n) time, Θ(n) space\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1329.",
        "target_text": "Question: Verify whether a pop sequence of length n=1329 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ425139.",
        "target_text": "Question: Schedule 425139 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Unordered array\nc) Circular queue\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL797_511248.",
        "target_text": "Question: Find the k=797-th largest element among n=511248 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Deterministic selection (median-of-medians)\nc) Heapsort then index\nd) Build max-heap and extract k times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.66.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.66?\nChoices:\na) To maintain key stability\nb) To sort keys implicitly\nc) To reduce memory usage to exact size\nd) To keep expected O(1) operations\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H85239732.",
        "target_text": "Question: For a balanced BST with n=85239732 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP942351.",
        "target_text": "Question: Test bipartiteness (id=942351) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Check all degrees even\nc) Sort vertices and deduplicate\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP63234.",
        "target_text": "Question: KMP matches a pattern of length m=63234 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) Suffix array\nc) LPS (failure) function\nd) Rolling hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX10_4.",
        "target_text": "Question: Radix sort with d=10 digits and base b=4 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·n·log b)\nb) Θ(d·(n + b))\nc) Θ(b^d)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS1904010.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=1904010 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(1) expected\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M5_3_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/3) + n^3 for n being a power of 3.\nChoices:\na) Θ(n^1.465 log n)\nb) Θ(n^3)\nc) Θ(n^3 log n)\nd) Θ(n^1.465)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP10467_2576.",
        "target_text": "Question: Sorted array length n=10467. Decide if any pair sums to 2576. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Brute force in Θ(n^2)\nc) Two-pointer scan in Θ(n)\nd) Hash set in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN600641.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 600641, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Reverse list then delete head\nc) Traverse from head to find predecessor\nd) Impossible under any model\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE73797.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=73797. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Max-heap\nc) Binary search tree\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS2052.",
        "target_text": "Question: A queue via two stacks handles a burst of 2052 operations. Amortized costs?\nChoices:\na) ENQUEUE and DEQUEUE both amortized Θ(1)\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) Both Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC89778784.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=89778784?\nChoices:\na) Θ(log log n)\nb) Θ(1)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF3434519_0.57.",
        "target_text": "Question: Chaining hash table with n=3434519 keys at load factor α=0.57. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(α log α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS315971.",
        "target_text": "Question: BST with parent pointers (id=315971): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) Reverse postorder traversal entirely\nc) Use level-order and pick next node\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR356742.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=356742 edges. What algorithmic idea achieves linear time?\nChoices:\na) Kruskal’s algorithm\nb) Tarjan’s low-link DFS\nc) Topological sorting\nd) Dijkstra’s algorithm\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Character-by-character descent. Variant TRIE2.",
        "target_text": "Question: Search a trie over alphabet size σ=2 for a key of length m. Time complexity?\nChoices:\na) Θ(1) average for all m\nb) Θ(m log σ)\nc) Θ(log n)\nd) Θ(m)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST605874.",
        "target_text": "Question: Stability (id=605874): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Counting sort (unstable)\nc) Heap sort (stable), Merge sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS2728109.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=2728109 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(1) expected\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A16.",
        "target_text": "Question: A dynamic array starts with capacity 16 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(√m)\nb) Θ(m)\nc) Θ(1)\nd) Θ(log m)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP7996_2867.",
        "target_text": "Question: Sorted array length n=7996. Decide if any pair sums to 2867. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Brute force in Θ(n^2)\nc) Two-pointer scan in Θ(n)\nd) Divide and conquer in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Phase difference accumulates around the cycle. Variant C2.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 2× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(n) space\nb) Θ(log n) time, Θ(1) space\nc) Θ(1) time, Θ(1) space\nd) Θ(n) time, Θ(1) space\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS7.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 7 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Use BFS on substring graph\nc) Use two stacks for counts and fragments\nd) Greedy left-to-right without memory\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B3957.",
        "target_text": "Question: Run BFS on an unweighted graph with 3957 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) All simple paths before all edges\nc) Minimum memory footprint\nd) Lexicographic vertex order\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC66346388.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=66346388?\nChoices:\na) Θ(n)\nb) Θ(1)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH65536.",
        "target_text": "Question: In open addressing with double hashing over table size m=65536, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Choose m even and g(k) even\nc) Use g(k)=0 for some keys\nd) Make both hash functions identical\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS450927.",
        "target_text": "Question: BST with parent pointers (id=450927): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Always climb to root then go right once\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Use level-order and pick next node\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D289527.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 289527]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Self-loops must be absent\nc) Distinct weights are required\nd) Graph must be undirected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS68665.",
        "target_text": "Question: In KMP, what does LPS[68665] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Total distinct prefixes up to i\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Index of next occurrence\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST270954.",
        "target_text": "Question: Stability (id=270954): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Quick sort (stable), Selection sort (unstable)\nc) Heap sort (stable), Merge sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS2381022.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=2381022 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T2_3_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^2, f3=n^2 (log n)^3, f4=n^4?\nChoices:\na) Θ(n^4)\nb) Θ(n^2 (log n)^3)\nc) Θ(n^2)\nd) Θ((log n)^3)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM69926.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=69926-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Binary search on index vs value gap\nc) Use a heap of differences\nd) Scan linearly counting gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK13_1444.",
        "target_text": "Question: Merge k=13 sorted linked lists totaling n=1444 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n + k^2)\nc) Θ(n log k)\nd) Θ(k n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Per-node metadata preserves constant-time MIN. Variant MS6668.",
        "target_text": "Question: Support PUSH, POP, and MIN in worst-case Θ(1). What augmentation works?\nChoices:\na) Scan on demand for MIN\nb) Periodically rebuild the stack\nc) Store (value, currentMin) per node\nd) Keep a global heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ784015.",
        "target_text": "Question: For 784015 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Binary heap\nc) Queue\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL219_465138.",
        "target_text": "Question: Find the k=219-th largest element among n=465138 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Binary search on value domain\nc) Build max-heap and extract k times\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF2866716_0.51.",
        "target_text": "Question: Chaining hash table with n=2866716 keys at load factor α=0.51. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(log n)\nc) Θ(α log α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR350827.",
        "target_text": "Question: In a BST with distinct keys (id=350827), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Preorder\nc) Postorder\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR839562.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=839562 edges. What algorithmic idea achieves linear time?\nChoices:\na) Kruskal’s algorithm\nb) Dijkstra’s algorithm\nc) Tarjan’s low-link DFS\nd) Topological sorting\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Character-by-character descent. Variant TRIE256.",
        "target_text": "Question: Search a trie over alphabet size σ=256 for a key of length m. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(1) average for all m\nc) Θ(m)\nd) Θ(m log σ)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS371912.",
        "target_text": "Question: Keys are integers in range [0..371912]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Counting sort\nc) Quick sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS8837563.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=8837563 typically runs in?\nChoices:\na) Θ(n) average\nb) Θ(log n) average\nc) O(log log n) average\nd) O(1) worst-case\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A1.",
        "target_text": "Question: A dynamic array starts with capacity 1 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(log m)\nb) Θ(m)\nc) Θ(1)\nd) Θ(√m)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R820206.",
        "target_text": "Question: Rotate an array right by r=820206 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Selection sort then shift\nc) Heapify then extract\nd) Single-step rotate repeated r times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK80_15683.",
        "target_text": "Question: Merge k=80 sorted linked lists totaling n=15683 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n + k^2)\nc) Θ(n log n)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS2113.",
        "target_text": "Question: Compute stock span for 2113 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Hash table\nc) Priority queue\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ589701.",
        "target_text": "Question: Schedule 589701 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Binary heap\nc) Unordered array\nd) Stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK3.",
        "target_text": "Question: In a d-ary heap (d=3), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) It increases height linearly\nc) No effect whatsoever\nd) It makes the operation constant time\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH8192.",
        "target_text": "Question: In open addressing with double hashing over table size m=8192, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) g(k) coprime with m for all keys\nc) Choose m even and g(k) even\nd) Use g(k)=0 for some keys\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H500595704.",
        "target_text": "Question: For a balanced BST with n=500595704 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF55146.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=55146 can handle which case while detecting it?\nChoices:\na) Equal runtime on all graphs\nb) Faster runtime on sparse nonnegative graphs\nc) Negative edge weights and negative cycles\nd) Only acyclic graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB61856.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=61856. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Suffix automaton or suffix array + LCP\nc) Queue of rolling hashes only\nd) Binary heap of substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX9_32.",
        "target_text": "Question: Radix sort with d=9 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·n·log b)\nb) Θ(n log n)\nc) Θ(d·(n + b))\nd) Θ(b^d)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX211233368.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈211233368. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Doubles the bound to bracket, then binary search\nc) Sorts the array first\nd) Requires the array to be cyclic\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M7_3_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/3) + n^2 for n being a power of 3.\nChoices:\na) Θ(n^1.7712 log n)\nb) Θ(n^2 log n)\nc) Θ(n^2)\nd) Θ(n^1.7712)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P757703.",
        "target_text": "Question: Answer 757703 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Use a stack to store partial sums\nc) Recompute sums per query in Θ(n)\nd) Sort once and binary search per query\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK90_1178.",
        "target_text": "Question: Merge k=90 sorted linked lists totaling n=1178 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(k n)\nc) Θ(n log k)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP2_3.",
        "target_text": "Question: Evaluate an infix expression with 2–3 precedence levels and parentheses. Linear-time method?\nChoices:\na) Sort tokens by precedence then scan\nb) Convert to postfix and evaluate with a stack\nc) Build a tree without any stack\nd) Left-to-right without stacks\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW4472_16.",
        "target_text": "Question: Sliding window maximum for array length n=4472 and window w=16. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(w log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA4_72716287.",
        "target_text": "Question: In a d-ary heap with d=4 and n=72716287 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(log_4 n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Adversarial patterns are neutralized by random choice. Variant UH10000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=10000 slots yields what benefit?\nChoices:\na) Cryptographic security by default\nb) Expected constant-time operations against adversaries\nc) Eliminates need for resizing\nd) Zero collisions guaranteed\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA207697.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=207697 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Sort node labels then binary search\nc) Naive parent climbing O(n) per query\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS711237_2669818.",
        "target_text": "Question: A directed graph with V=711237, E≈2669818. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) When it is a DAG (no directed cycles)\nc) When all vertices have outdegree ≥ 1\nd) Only if the graph is connected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000007.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000007 achieves expected linear time due to what?\nChoices:\na) Trie of all substrings\nb) Low collision probability of rolling hash\nc) Suffix tree guaranteeing O(1) per char\nd) Use of a min-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB89281724.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=89281724 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n log n)\nc) Ω(log n)\nd) Ω(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI40_3242.",
        "target_text": "Question: Binary search over half-open range [40, 3242)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Keep inclusive bounds on both ends\nc) Increase both lo and hi to skip duplicates\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A2.",
        "target_text": "Question: A dynamic array starts with capacity 2 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(1)\nb) Θ(m)\nc) Θ(log m)\nd) Θ(√m)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM776963.",
        "target_text": "Question: Find a majority element in an array of length n=776963 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Divide-and-conquer merges\nc) Binary search on value domain\nd) Counting sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL72573.",
        "target_text": "Question: Check if a singly linked list of length n=72573 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Use a hash set of seen values\nc) Find middle, reverse second half, compare\nd) Sort and compare with original\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP429.",
        "target_text": "Question: Verify whether a pop sequence of length n=429 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Simulate using one stack in Θ(n)\nc) Backtrack with recursion in Θ(2^n)\nd) Use a queue to mirror the stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ455921.",
        "target_text": "Question: Schedule 455921 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Circular queue\nc) Unordered array\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA3_52496980.",
        "target_text": "Question: In a d-ary heap with d=3 and n=52496980 nodes, what is the height?\nChoices:\na) Θ(log_3 n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF3903321_0.25.",
        "target_text": "Question: Chaining hash table with n=3903321 keys at load factor α=0.25. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(nα)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H327599583.",
        "target_text": "Question: For a balanced BST with n=327599583 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF33671.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=33671 can handle which case while detecting it?\nChoices:\na) Only acyclic graphs\nb) Negative edge weights and negative cycles\nc) Faster runtime on sparse nonnegative graphs\nd) Equal runtime on all graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000007.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000007 achieves expected linear time due to what?\nChoices:\na) Trie of all substrings\nb) Use of a min-heap\nc) Suffix tree guaranteeing O(1) per char\nd) Low collision probability of rolling hash\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB62938539.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=62938539 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n)\nc) Ω(log n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU4248069.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=4248069. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Heap-based selection\nc) Hashing with chaining\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Geometric resizing spreads copying cost over many operations. Variant A16.",
        "target_text": "Question: A dynamic array starts with capacity 16 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(√m)\nb) Θ(1)\nc) Θ(log m)\nd) Θ(m)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P460356.",
        "target_text": "Question: Answer 460356 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Use a stack to store partial sums\nb) Sort once and binary search per query\nc) Build prefix-sum array; O(1) per query\nd) Recompute sums per query in Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN818100_845941.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=818100, B=845941. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Advance pointers; when one ends, jump to the other head\nc) Hash addresses of first list\nd) Reverse one list then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS5.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 5 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Use two stacks for counts and fragments\nc) Greedy left-to-right without memory\nd) Sort segments then concatenate\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B361221.",
        "target_text": "Question: Run BFS on an unweighted graph with 361221 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Minimum memory footprint\nc) Nondecreasing distance from source\nd) Lexicographic vertex order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA16_64619232.",
        "target_text": "Question: In a d-ary heap with d=16 and n=64619232 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(log_16 n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF2257572_0.77.",
        "target_text": "Question: Chaining hash table with n=2257572 keys at load factor α=0.77. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(α log α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS13520.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=13520-th smallest?\nChoices:\na) Θ(1)\nb) Θ(k)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS672477_4732072.",
        "target_text": "Question: A directed graph with V=672477, E≈4732072. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if the graph is connected\nc) When it is a DAG (no directed cycles)\nd) Only if edges are unweighted\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB2668.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=2668. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Suffix automaton or suffix array + LCP\nc) Binary heap of substrings\nd) BST over all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS497354.",
        "target_text": "Question: Keys are integers in range [0..497354]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Quick sort\nc) Heap sort\nd) Shell sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS9149987.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=9149987 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T2_1_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^2, f3=n^2 (log n)^1, f4=n^7?\nChoices:\na) Θ(n^7)\nb) Θ(n^2)\nc) Θ((log n)^1)\nd) Θ(n^2 (log n)^1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P794886.",
        "target_text": "Question: Answer 794886 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Use a stack to store partial sums\nc) Recompute sums per query in Θ(n)\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK38_3723.",
        "target_text": "Question: Merge k=38 sorted linked lists totaling n=3723 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n log k)\nc) Θ(n + k^2)\nd) Θ(k n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS1808.",
        "target_text": "Question: Compute stock span for 1808 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Priority queue\nc) Hash table\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA4054.",
        "target_text": "Question: Circular-array queue with capacity 4054: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Head==Tail means full\nc) Require power-of-two capacity\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL970_409233.",
        "target_text": "Question: Find the k=970-th largest element among n=409233 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Heapsort then index\nc) Build max-heap and extract k times\nd) Binary search on value domain\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Adversarial patterns are neutralized by random choice. Variant UH100000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=100000 slots yields what benefit?\nChoices:\na) Zero collisions guaranteed\nb) Expected constant-time operations against adversaries\nc) Eliminates need for resizing\nd) Cryptographic security by default\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Two-step rotations repair misaligned subtrees. Variant AVL9694.",
        "target_text": "Question: After inserting into an AVL tree, a Left-Right imbalance occurs at node X. Which fix is correct?\nChoices:\na) Left rotate left child of X, then right rotate X\nb) Right rotate right child of X, then left rotate X\nc) Single left rotate X\nd) Single right rotate X\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR392814.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=392814 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Tarjan’s low-link DFS\nc) Kruskal’s algorithm\nd) Dijkstra’s algorithm\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS16788.",
        "target_text": "Question: In KMP, what does LPS[16788] represent for a given pattern?\nChoices:\na) Length of longest proper prefix that is also a suffix for prefix ending at i\nb) Index of next occurrence\nc) Number of mismatches up to i\nd) Total distinct prefixes up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS986594.",
        "target_text": "Question: Heapsort stability check id=986594: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort always beats merge sort\nc) Heapsort is stable\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS4437093.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=4437093 typically runs in?\nChoices:\na) O(1) worst-case\nb) Θ(n) average\nc) Θ(log n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M3_5_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/5) + n^3 for n being a power of 5.\nChoices:\na) Θ(n^3)\nb) Θ(n^0.6826 log n)\nc) Θ(n^0.6826)\nd) Θ(n^3 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R777591.",
        "target_text": "Question: Rotate an array right by r=777591 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Three-reversal method\nc) Heapify then extract\nd) Single-step rotate repeated r times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK71_12715.",
        "target_text": "Question: Merge k=71 sorted linked lists totaling n=12715 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log k)\nc) Θ(n log n)\nd) Θ(k n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP669.",
        "target_text": "Question: Verify whether a pop sequence of length n=669 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW2865_698.",
        "target_text": "Question: Sliding window maximum for array length n=2865 and window w=698. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n)\nc) Θ(nw)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA7_16994611.",
        "target_text": "Question: In a d-ary heap with d=7 and n=16994611 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(√n)\nc) Θ(log_7 n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Probe sequences align and form contiguous clusters. Variant LP7092.",
        "target_text": "Question: What clustering effect harms performance in linear probing, and what mitigates it?\nChoices:\na) Path compression mitigated by union-find\nb) AVL imbalance mitigated by rotations\nc) Primary clustering mitigated by double hashing\nd) Cache thrashing mitigated by padding\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Black-height constraints cap the height by 2·log2(n+1). Variant RB4362.",
        "target_text": "Question: Which invariant is essential in Red–Black trees to bound height?\nChoices:\na) Adjacent reds allowed\nb) Leaves can be any color without restriction\nc) Root is always red\nd) Same number of black nodes on every root-to-leaf path\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS652636_5108997.",
        "target_text": "Question: A directed graph with V=652636, E≈5108997. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) When all vertices have outdegree ≥ 1\nc) Only if the graph is connected\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z575405.",
        "target_text": "Question: For string S (id=575405), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Length of the longest prefix starting at i matching S[0..]\nc) Next index of S[i]\nd) Number of mismatches at i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST941446.",
        "target_text": "Question: Stability (id=941446): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX823856473.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈823856473. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Requires the array to be cyclic\nc) Uses hashing to index unknown segments\nd) Sorts the array first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M7_6_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/6) + n^4 for n being a power of 6.\nChoices:\na) Θ(n^4)\nb) Θ(n^1.086)\nc) Θ(n^1.086 log n)\nd) Θ(n^4 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM28811.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=28811-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Scan linearly counting gaps\nc) Binary search on index vs value gap\nd) Use a heap of differences\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR9.",
        "target_text": "Question: Reverse a singly linked list in groups of k=9 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(k log n)\nb) Θ(n log k)\nc) Θ(n)\nd) Θ(nk)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP4_5.",
        "target_text": "Question: Evaluate an infix expression with 4–5 precedence levels and parentheses. Linear-time method?\nChoices:\na) Left-to-right without stacks\nb) Sort tokens by precedence then scan\nc) Convert to postfix and evaluate with a stack\nd) Build a tree without any stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA527.",
        "target_text": "Question: Circular-array queue with capacity 527: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Head==Tail means full\nc) Require prime capacity\nd) Require power-of-two capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL339_820910.",
        "target_text": "Question: Find the k=339-th largest element among n=820910 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Deterministic selection (median-of-medians)\nc) Build max-heap and extract k times\nd) Binary search on value domain\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF6866572_0.39.",
        "target_text": "Question: Chaining hash table with n=6866572 keys at load factor α=0.39. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(nα)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA14402.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=14402 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) DFS from root each time\nc) Sort node labels then binary search\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR33059.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=33059 edges. What algorithmic idea achieves linear time?\nChoices:\na) Kruskal’s algorithm\nb) Tarjan’s low-link DFS\nc) Topological sorting\nd) Dijkstra’s algorithm\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS65471.",
        "target_text": "Question: In KMP, what does LPS[65471] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Total distinct prefixes up to i\nd) Number of mismatches up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS43144.",
        "target_text": "Question: Keys are integers in range [0..43144]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Shell sort\nc) Heap sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS1804925.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=1804925 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(1) expected\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T2_4_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^2, f3=n^2 (log n)^4, f4=n^5?\nChoices:\na) Θ(n^5)\nb) Θ((log n)^4)\nc) Θ(n^2 (log n)^4)\nd) Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S8680_224.",
        "target_text": "Question: Array length n=8680, find max-sum subarray of fixed length k=224. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(k log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR5.",
        "target_text": "Question: Reverse a singly linked list in groups of k=5 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(n log k)\nc) Θ(k log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE94275.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=94275. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Binary search tree\nc) Queue\nd) Max-heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS8282.",
        "target_text": "Question: A queue via two stacks handles a burst of 8282 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) Both Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC68362982.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=68362982?\nChoices:\na) Θ(1)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Adversarial patterns are neutralized by random choice. Variant UH100000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=100000 slots yields what benefit?\nChoices:\na) Eliminates need for resizing\nb) Zero collisions guaranteed\nc) Cryptographic security by default\nd) Expected constant-time operations against adversaries\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS560654.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=560654-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(k)\nc) Θ(log n)\nd) Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC613611.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=613611 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(VE)\nc) Θ(V+E)\nd) Θ(V log V)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN352284.",
        "target_text": "Question: Check anagrams for strings of length n=352284 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) Use a stack\nc) DFS on character graph\nd) Sort both in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS789.",
        "target_text": "Question: Array is nearly sorted with at most 789 inversions. Which algorithm excels?\nChoices:\na) Insertion sort\nb) Radix sort\nc) Heap sort\nd) Shell sort with fixed gaps\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS5434198.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=5434198 typically runs in?\nChoices:\na) O(1) worst-case\nb) O(log log n) average\nc) Θ(n) average\nd) Θ(log n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_5_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^1, f3=n^1 (log n)^5, f4=n^7?\nChoices:\na) Θ(n^7)\nb) Θ((log n)^5)\nc) Θ(n^1)\nd) Θ(n^1 (log n)^5)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM871685.",
        "target_text": "Question: Find a majority element in an array of length n=871685 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Binary search on value domain\nc) Counting sort\nd) Divide-and-conquer merges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK2_335.",
        "target_text": "Question: Merge k=2 sorted linked lists totaling n=335 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n + k^2)\nc) Θ(n log k)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP2_3.",
        "target_text": "Question: Evaluate an infix expression with 2–3 precedence levels and parentheses. Linear-time method?\nChoices:\na) Build a tree without any stack\nb) Left-to-right without stacks\nc) Sort tokens by precedence then scan\nd) Convert to postfix and evaluate with a stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA4063.",
        "target_text": "Question: Circular-array queue with capacity 4063: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Head==Tail means full\nc) Require power-of-two capacity\nd) Require prime capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK7.",
        "target_text": "Question: In a d-ary heap (d=7), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It increases height linearly\nb) It makes the operation constant time\nc) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nd) No effect whatsoever\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.75.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.75?\nChoices:\na) To sort keys implicitly\nb) To maintain key stability\nc) To reduce memory usage to exact size\nd) To keep expected O(1) operations\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS656063.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=656063-th smallest?\nChoices:\na) Θ(1)\nb) Θ(k)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR285018.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=285018 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Kruskal’s algorithm\nc) Tarjan’s low-link DFS\nd) Topological sorting\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE256.",
        "target_text": "Question: Search a trie over alphabet size σ=256 for a key of length m. Time complexity?\nChoices:\na) Θ(m)\nb) Θ(log n)\nc) Θ(1) average for all m\nd) Θ(m log σ)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS804.",
        "target_text": "Question: Array is nearly sorted with at most 804 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Heap sort\nc) Insertion sort\nd) Shell sort with fixed gaps\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS1585399.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=1585399 typically runs in?\nChoices:\na) Θ(log n) average\nb) O(log log n) average\nc) Θ(n) average\nd) O(1) worst-case\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M5_2_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/2) + n^1 for n being a power of 2.\nChoices:\na) Θ(n^2.3219 log n)\nb) Θ(n^1)\nc) Θ(n^2.3219)\nd) Θ(n^1 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM154749.",
        "target_text": "Question: Find a majority element in an array of length n=154749 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Binary search on value domain\nc) Divide-and-conquer merges\nd) Counting sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C3.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 3× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(1) space\nb) Θ(n) time, Θ(n) space\nc) Θ(1) time, Θ(1) space\nd) Θ(log n) time, Θ(1) space\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS2892.",
        "target_text": "Question: Compute stock span for 2892 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Monotonic stack\nc) Fenwick tree\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ473538.",
        "target_text": "Question: Schedule 473538 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Stack\nc) Unordered array\nd) Circular queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL98_972133.",
        "target_text": "Question: Find the k=98-th largest element among n=972133 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Binary search on value domain\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF3919679_0.24.",
        "target_text": "Question: Chaining hash table with n=3919679 keys at load factor α=0.24. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA486001.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=486001 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) DFS from root each time\nc) Sort node labels then binary search\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D754484.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 754484]. Why?\nChoices:\na) Graph must be undirected\nb) Distinct weights are required\nc) Self-loops must be absent\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z985441.",
        "target_text": "Question: For string S (id=985441), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Length of the longest prefix starting at i matching S[0..]\nc) Next index of S[i]\nd) Number of mismatches at i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX6_1024.",
        "target_text": "Question: Radix sort with d=6 digits and base b=1024 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(n log n)\nc) Θ(d·(n + b))\nd) Θ(d·n·log b)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Geometric level distribution mirrors balanced trees. Variant SL0.25.",
        "target_text": "Question: Skip list with level promotion probability p=0.25: expected complexity of search/insert/delete?\nChoices:\na) Θ(√n) for all three\nb) Θ(log n) for all three\nc) Θ(n) for all three\nd) Θ(1) for all three\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A4.",
        "target_text": "Question: A dynamic array starts with capacity 4 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(log m)\nb) Θ(1)\nc) Θ(√m)\nd) Θ(m)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S15509_45.",
        "target_text": "Question: Array length n=15509, find max-sum subarray of fixed length k=45. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(k log n)\nd) Θ(nk)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK34_3542.",
        "target_text": "Question: Merge k=34 sorted linked lists totaling n=3542 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n + k^2)\nc) Θ(n log k)\nd) Θ(k n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS3.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 3 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Greedy left-to-right without memory\nb) Use BFS on substring graph\nc) Sort segments then concatenate\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW9320_770.",
        "target_text": "Question: Sliding window maximum for array length n=9320 and window w=770. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n log n)\nc) Θ(nw)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK8.",
        "target_text": "Question: In a d-ary heap (d=8), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) No effect whatsoever\nc) It increases height linearly\nd) It makes the operation constant time\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF1242619_0.58.",
        "target_text": "Question: Chaining hash table with n=1242619 keys at load factor α=0.58. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(α log α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR364107.",
        "target_text": "Question: In a BST with distinct keys (id=364107), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Postorder\nc) Level-order\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D813147.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 813147]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Distinct weights are required\nc) Graph must be undirected\nd) Self-loops must be absent\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z713064.",
        "target_text": "Question: For string S (id=713064), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Next index of S[i]\nc) Number of mismatches at i\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS475772.",
        "target_text": "Question: Heapsort stability check id=475772: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort is not stable by default\nd) Heapsort always beats merge sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS6108347.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=6108347 typically runs in?\nChoices:\na) Θ(n) average\nb) O(1) worst-case\nc) Θ(log n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Geometric resizing spreads copying cost over many operations. Variant A2.",
        "target_text": "Question: A dynamic array starts with capacity 2 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(log m)\nb) Θ(1)\nc) Θ(m)\nd) Θ(√m)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM529030.",
        "target_text": "Question: Find a majority element in an array of length n=529030 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Divide-and-conquer merges\nc) Counting sort\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK92_3764.",
        "target_text": "Question: Merge k=92 sorted linked lists totaling n=3764 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(k n)\nc) Θ(n log n)\nd) Θ(n + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS1793.",
        "target_text": "Question: Compute stock span for 1793 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Fenwick tree\nc) Priority queue\nd) Hash table\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ922807.",
        "target_text": "Question: For 922807 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Binary heap\nc) Queue\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC21310677.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=21310677?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.27.",
        "target_text": "Question: In separate chaining with load factor α=1.27, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(α)\nd) Θ(1/α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA902512.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=902512 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Euler tour + RMQ yields O(1) per query\nc) DFS from root each time\nd) Naive parent climbing O(n) per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS545406_2789007.",
        "target_text": "Question: A directed graph with V=545406, E≈2789007. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if the graph is connected\nc) Only if edges are unweighted\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS2285.",
        "target_text": "Question: In KMP, what does LPS[2285] represent for a given pattern?\nChoices:\na) Length of longest proper prefix that is also a suffix for prefix ending at i\nb) Number of mismatches up to i\nc) Total distinct prefixes up to i\nd) Index of next occurrence\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS561.",
        "target_text": "Question: Array is nearly sorted with at most 561 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Shell sort with fixed gaps\nc) Heap sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX90324379.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈90324379. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Requires the array to be cyclic\nc) Uses hashing to index unknown segments\nd) Sorts the array first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T3_6_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^3, f3=n^3 (log n)^6, f4=n^6?\nChoices:\na) Θ(n^6)\nb) Θ(n^3)\nc) Θ((log n)^6)\nd) Θ(n^3 (log n)^6)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P536264.",
        "target_text": "Question: Answer 536264 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Recompute sums per query in Θ(n)\nb) Build prefix-sum array; O(1) per query\nc) Use a stack to store partial sums\nd) Sort once and binary search per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK88_14283.",
        "target_text": "Question: Merge k=88 sorted linked lists totaling n=14283 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(k n)\nc) Θ(n + k^2)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1852.",
        "target_text": "Question: Verify whether a pop sequence of length n=1852 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Use a queue to mirror the stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B621214.",
        "target_text": "Question: Run BFS on an unweighted graph with 621214 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) Lexicographic vertex order\nc) All simple paths before all edges\nd) Minimum memory footprint\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL361_979067.",
        "target_text": "Question: Find the k=361-th largest element among n=979067 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Binary search on value domain\nc) Build max-heap and extract k times\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.66.",
        "target_text": "Question: In separate chaining with load factor α=0.66, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA546167.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=546167 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) DFS from root each time\nc) Naive parent climbing O(n) per query\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR510501.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=510501 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Kruskal’s algorithm\nc) Tarjan’s low-link DFS\nd) Dijkstra’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB433.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=433. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Suffix automaton or suffix array + LCP\nc) BST over all substrings\nd) Binary heap of substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS568842.",
        "target_text": "Question: Heapsort stability check id=568842: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is not stable by default\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is stable\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX553718037.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈553718037. Why?\nChoices:\na) Requires the array to be cyclic\nb) Uses hashing to index unknown segments\nc) Doubles the bound to bracket, then binary search\nd) Sorts the array first\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M7_3_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/3) + n^4 for n being a power of 3.\nChoices:\na) Θ(n^4)\nb) Θ(n^1.7712)\nc) Θ(n^1.7712 log n)\nd) Θ(n^4 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R143471.",
        "target_text": "Question: Rotate an array right by r=143471 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Selection sort then shift\nc) Three-reversal method\nd) Heapify then extract\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK76_6768.",
        "target_text": "Question: Merge k=76 sorted linked lists totaling n=6768 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n log k)\nc) Θ(k n)\nd) Θ(n + k^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS2774.",
        "target_text": "Question: Compute stock span for 2774 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Monotonic stack\nc) Hash table\nd) Priority queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW8557_832.",
        "target_text": "Question: Sliding window maximum for array length n=8557 and window w=832. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(w log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM545_145371.",
        "target_text": "Question: Merge k=545 sorted streams totaling N=145371 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(N log k)\nc) Θ(k log N)\nd) Θ(N + k^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.39.",
        "target_text": "Question: In separate chaining with load factor α=1.39, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA44177.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=44177 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) Euler tour + RMQ yields O(1) per query\nc) Sort node labels then binary search\nd) DFS from root each time\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC240596.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=240596 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(E log V)\nc) Θ(V log V)\nd) Θ(VE)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN250422.",
        "target_text": "Question: Check anagrams for strings of length n=250422 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) Sort both in Θ(n log n)\nc) Use a stack\nd) DFS on character graph\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS225312.",
        "target_text": "Question: Keys are integers in range [0..225312]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Shell sort\nc) Quick sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS7260632.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=7260632 typically runs in?\nChoices:\na) Θ(n) average\nb) O(1) worst-case\nc) Θ(log n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_6_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^3, f3=n^3 (log n)^6, f4=n^9?\nChoices:\na) Θ(n^9)\nb) Θ((log n)^6)\nc) Θ(n^3)\nd) Θ(n^3 (log n)^6)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S13276_115.",
        "target_text": "Question: Array length n=13276, find max-sum subarray of fixed length k=115. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(n log n)\nd) Θ(k log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Phase difference accumulates around the cycle. Variant C5.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 5× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(1) space\nb) Θ(1) time, Θ(1) space\nc) Θ(log n) time, Θ(1) space\nd) Θ(n) time, Θ(n) space\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS259.",
        "target_text": "Question: Compute stock span for 259 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Monotonic stack\nc) Fenwick tree\nd) Priority queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B919015.",
        "target_text": "Question: Run BFS on an unweighted graph with 919015 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Nondecreasing distance from source\nc) Lexicographic vertex order\nd) Minimum memory footprint\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK4.",
        "target_text": "Question: In a d-ary heap (d=4), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It makes the operation constant time\nb) It increases height linearly\nc) No effect whatsoever\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF6083499_0.74.",
        "target_text": "Question: Chaining hash table with n=6083499 keys at load factor α=0.74. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(1 + α)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H158150800.",
        "target_text": "Question: For a balanced BST with n=158150800 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST309030.",
        "target_text": "Question: MST question id=309030: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) MST is always unique in connected graphs\nd) MST minimizes number of edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z177951.",
        "target_text": "Question: For string S (id=177951), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Number of distinct substrings up to i\nc) Next index of S[i]\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS452.",
        "target_text": "Question: Array is nearly sorted with at most 452 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Heap sort\nc) Radix sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU2684071.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=2684071. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Binary search with left/right bias\nc) Linear scan with early exit\nd) Hashing with chaining\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T4_1_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^4, f3=n^4 (log n)^1, f4=n^8?\nChoices:\na) Θ(n^4 (log n)^1)\nb) Θ(n^8)\nc) Θ(n^4)\nd) Θ((log n)^1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP14121_721.",
        "target_text": "Question: Sorted array length n=14121. Decide if any pair sums to 721. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Hash set in Θ(n log n)\nc) Brute force in Θ(n^2)\nd) Divide and conquer in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL93719.",
        "target_text": "Question: Check if a singly linked list of length n=93719 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Copy to array and two-pointer check\nc) Use a hash set of seen values\nd) Sort and compare with original\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS5.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 5 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Sort segments then concatenate\nc) Use two stacks for counts and fragments\nd) Greedy left-to-right without memory\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA4238.",
        "target_text": "Question: Circular-array queue with capacity 4238: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Require power-of-two capacity\nc) Track count or keep one slot empty\nd) Require prime capacity\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL803_34221.",
        "target_text": "Question: Find the k=803-th largest element among n=34221 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Binary search on value domain\nc) Heapsort then index\nd) Build max-heap and extract k times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.42.",
        "target_text": "Question: In separate chaining with load factor α=0.42, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR291451.",
        "target_text": "Question: In a BST with distinct keys (id=291451), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Level-order\nc) Postorder\nd) Preorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR701194.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=701194 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Topological sorting\nc) Tarjan’s low-link DFS\nd) Kruskal’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS32453.",
        "target_text": "Question: In KMP, what does LPS[32453] represent for a given pattern?\nChoices:\na) Length of longest proper prefix that is also a suffix for prefix ending at i\nb) Index of next occurrence\nc) Number of mismatches up to i\nd) Total distinct prefixes up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST672990.",
        "target_text": "Question: Stability (id=672990): which pairing is correct?\nChoices:\na) Merge sort (stable), Heap sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Counting sort (unstable)\nd) Quick sort (stable), Selection sort (unstable)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS4880183.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=4880183 typically runs in?\nChoices:\na) O(1) worst-case\nb) Θ(n) average\nc) O(log log n) average\nd) Θ(log n) average\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M2_6_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/6) + n^1 for n being a power of 6.\nChoices:\na) Θ(n^1)\nb) Θ(n^0.3869 log n)\nc) Θ(n^0.3869)\nd) Θ(n^1 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM969122.",
        "target_text": "Question: Find a majority element in an array of length n=969122 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Binary search on value domain\nc) Boyer–Moore voting with verification\nd) Divide-and-conquer merges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL3812.",
        "target_text": "Question: Check if a singly linked list of length n=3812 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Use a hash set of seen values\nc) Sort and compare with original\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE89523.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=89523. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Max-heap\nc) Queue\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA3332.",
        "target_text": "Question: Circular-array queue with capacity 3332: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require prime capacity\nc) Head==Tail means full\nd) Require power-of-two capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM622_228328.",
        "target_text": "Question: Merge k=622 sorted streams totaling N=228328 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log k)\nc) Θ(N + k^2)\nd) Θ(N log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Adversarial patterns are neutralized by random choice. Variant UH1000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=1000 slots yields what benefit?\nChoices:\na) Eliminates need for resizing\nb) Cryptographic security by default\nc) Expected constant-time operations against adversaries\nd) Zero collisions guaranteed\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS805235.",
        "target_text": "Question: BST with parent pointers (id=805235): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) Always climb to root then go right once\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Reverse postorder traversal entirely\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR716107.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=716107 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Topological sorting\nc) Tarjan’s low-link DFS\nd) Kruskal’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE52.",
        "target_text": "Question: Search a trie over alphabet size σ=52 for a key of length m. Time complexity?\nChoices:\na) Θ(1) average for all m\nb) Θ(log n)\nc) Θ(m)\nd) Θ(m log σ)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB21093950.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=21093950 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n^2)\nc) Ω(log n)\nd) Ω(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Geometric level distribution mirrors balanced trees. Variant SL0.75.",
        "target_text": "Question: Skip list with level promotion probability p=0.75: expected complexity of search/insert/delete?\nChoices:\na) Θ(n) for all three\nb) Θ(log n) for all three\nc) Θ(√n) for all three\nd) Θ(1) for all three\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A8.",
        "target_text": "Question: A dynamic array starts with capacity 8 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(1)\nb) Θ(m)\nc) Θ(√m)\nd) Θ(log m)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP4915_2812.",
        "target_text": "Question: Sorted array length n=4915. Decide if any pair sums to 2812. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Brute force in Θ(n^2)\nc) Hash set in Θ(n log n)\nd) Divide and conquer in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN759370_691401.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=759370, B=691401. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Binary search on addresses\nc) Reverse one list then compare\nd) Hash addresses of first list\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS3863.",
        "target_text": "Question: Compute stock span for 3863 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Fenwick tree\nc) Priority queue\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ479710.",
        "target_text": "Question: Schedule 479710 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Stack\nc) Circular queue\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA5_91888627.",
        "target_text": "Question: In a d-ary heap with d=5 and n=91888627 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log_5 n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF2846317_0.26.",
        "target_text": "Question: Chaining hash table with n=2846317 keys at load factor α=0.26. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(α log α)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS964333.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=964333-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(k)\nc) Θ(√n)\nd) Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D738361.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 738361]. Why?\nChoices:\na) Self-loops must be absent\nb) Distinct weights are required\nc) Graph must be undirected\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS34124.",
        "target_text": "Question: In KMP, what does LPS[34124] represent for a given pattern?\nChoices:\na) Length of longest proper prefix that is also a suffix for prefix ending at i\nb) Total distinct prefixes up to i\nc) Index of next occurrence\nd) Number of mismatches up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS168340.",
        "target_text": "Question: Heapsort stability check id=168340: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is not stable by default\nc) Heapsort is stable\nd) Heapsort needs extra Θ(n) memory\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS1847758.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=1847758 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M8_4_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/4) + n^0 for n being a power of 4.\nChoices:\na) Θ(n^1.5)\nb) Θ(n^0)\nc) Θ(n^1.5 log n)\nd) Θ(n^0 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM97472.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=97472-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Use a heap of differences\nc) Binary search on index vs value gap\nd) Hash all present values then scan\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN198476.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 198476, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Impossible under any model\nc) Reverse list then delete head\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Operator handling via stacks preserves associativity rules. Variant IP3_4.",
        "target_text": "Question: Evaluate an infix expression with 3–4 precedence levels and parentheses. Linear-time method?\nChoices:\na) Sort tokens by precedence then scan\nb) Convert to postfix and evaluate with a stack\nc) Build a tree without any stack\nd) Left-to-right without stacks\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW825_310.",
        "target_text": "Question: Sliding window maximum for array length n=825 and window w=310. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(nw)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH1649884.",
        "target_text": "Question: Build a binary heap from n=1649884 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.5.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.5?\nChoices:\na) To maintain key stability\nb) To sort keys implicitly\nc) To keep expected O(1) operations\nd) To reduce memory usage to exact size\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR543316.",
        "target_text": "Question: In a BST with distinct keys (id=543316), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Preorder\nc) Level-order\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP915636.",
        "target_text": "Question: Test bipartiteness (id=915636) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Sort vertices and deduplicate\nc) Check all degrees even\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB95534.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=95534. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) Suffix automaton or suffix array + LCP\nc) BST over all substrings\nd) Queue of rolling hashes only\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST892140.",
        "target_text": "Question: Stability (id=892140): which pairing is correct?\nChoices:\na) Heap sort (stable), Merge sort (unstable)\nb) Counting sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Quick sort (stable), Selection sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS9120417.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=9120417 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(1) expected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A4.",
        "target_text": "Question: A dynamic array starts with capacity 4 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(1)\nb) Θ(log m)\nc) Θ(√m)\nd) Θ(m)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P527572.",
        "target_text": "Question: Answer 527572 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Use a stack to store partial sums\nb) Recompute sums per query in Θ(n)\nc) Sort once and binary search per query\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR10.",
        "target_text": "Question: Reverse a singly linked list in groups of k=10 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(n log k)\nd) Θ(k log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP957.",
        "target_text": "Question: Verify whether a pop sequence of length n=957 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Backtrack with recursion in Θ(2^n)\nc) Simulate using one stack in Θ(n)\nd) Use a queue to mirror the stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS8988.",
        "target_text": "Question: A queue via two stacks handles a burst of 8988 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) Both Θ(log n)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH793231.",
        "target_text": "Question: Build a binary heap from n=793231 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF6816614_0.81.",
        "target_text": "Question: Chaining hash table with n=6816614 keys at load factor α=0.81. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(log n)\nc) Θ(α log α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS344201.",
        "target_text": "Question: BST with parent pointers (id=344201): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) Reverse postorder traversal entirely\nc) Always climb to root then go right once\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST659842.",
        "target_text": "Question: MST question id=659842: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) MST minimizes number of edges\nc) Prim requires the entire edge set to be sorted first\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN201376.",
        "target_text": "Question: Check anagrams for strings of length n=201376 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) Use a stack\nc) DFS on character graph\nd) Sort both in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST350505.",
        "target_text": "Question: Stability (id=350505): which pairing is correct?\nChoices:\na) Merge sort (stable), Heap sort (unstable)\nb) Counting sort (unstable)\nc) Heap sort (stable), Merge sort (unstable)\nd) Quick sort (stable), Selection sort (unstable)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS5035387.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=5035387 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(1) expected\nc) Θ(n log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_1_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^3, f3=n^3 (log n)^1, f4=n^5?\nChoices:\na) Θ(n^3 (log n)^1)\nb) Θ((log n)^1)\nc) Θ(n^5)\nd) Θ(n^3)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S18637_346.",
        "target_text": "Question: Array length n=18637, find max-sum subarray of fixed length k=346. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(n log n)\nd) Θ(k log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL60213.",
        "target_text": "Question: Check if a singly linked list of length n=60213 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Find middle, reverse second half, compare\nc) Use a hash set of seen values\nd) Sort and compare with original\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS446.",
        "target_text": "Question: Compute stock span for 446 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Fenwick tree\nc) Monotonic stack\nd) Priority queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW3805_789.",
        "target_text": "Question: Sliding window maximum for array length n=3805 and window w=789. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(nw)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM523_52411.",
        "target_text": "Question: Merge k=523 sorted streams totaling N=52411 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(N + k^2)\nc) Θ(k log N)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH4096.",
        "target_text": "Question: In open addressing with double hashing over table size m=4096, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) g(k) coprime with m for all keys\nc) Make both hash functions identical\nd) Use g(k)=0 for some keys\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA59491.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=59491 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Naive parent climbing O(n) per query\nc) Sort node labels then binary search\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR44530.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=44530 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Tarjan’s low-link DFS\nc) Topological sorting\nd) Kruskal’s algorithm\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN708334.",
        "target_text": "Question: Check anagrams for strings of length n=708334 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Use a stack\nc) Count character frequencies in Θ(n)\nd) Sort both in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST963007.",
        "target_text": "Question: Stability (id=963007): which pairing is correct?\nChoices:\na) Merge sort (stable), Heap sort (unstable)\nb) Counting sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX159125572.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈159125572. Why?\nChoices:\na) Requires the array to be cyclic\nb) Sorts the array first\nc) Uses hashing to index unknown segments\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M8_3_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/3) + n^1 for n being a power of 3.\nChoices:\na) Θ(n^1.8928)\nb) Θ(n^1 log n)\nc) Θ(n^1.8928 log n)\nd) Θ(n^1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P122250.",
        "target_text": "Question: Answer 122250 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Use a stack to store partial sums\nb) Sort once and binary search per query\nc) Build prefix-sum array; O(1) per query\nd) Recompute sums per query in Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK87_5153.",
        "target_text": "Question: Merge k=87 sorted linked lists totaling n=5153 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log n)\nc) Θ(n log k)\nd) Θ(k n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1214.",
        "target_text": "Question: Verify whether a pop sequence of length n=1214 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Simulate using one stack in Θ(n)\nc) Sort both sequences then compare\nd) Use a queue to mirror the stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW1245_52.",
        "target_text": "Question: Sliding window maximum for array length n=1245 and window w=52. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(nw)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM922_384217.",
        "target_text": "Question: Merge k=922 sorted streams totaling N=384217 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log k)\nc) Θ(k log N)\nd) Θ(N log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF418663_0.68.",
        "target_text": "Question: Chaining hash table with n=418663 keys at load factor α=0.68. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(nα)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS118293.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=118293-th smallest?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(k)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST810327.",
        "target_text": "Question: MST question id=810327: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) MST is always unique in connected graphs\nc) Kruskal adds the smallest edge that doesn't create a cycle\nd) Prim requires the entire edge set to be sorted first\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN860269.",
        "target_text": "Question: Check anagrams for strings of length n=860269 over fixed alphabet. Optimal approach?\nChoices:\na) Use a stack\nb) Count character frequencies in Θ(n)\nc) Sort both in Θ(n log n)\nd) DFS on character graph\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB39196881.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=39196881 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n log n)\nc) Ω(log n)\nd) Ω(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI35_2993.",
        "target_text": "Question: Binary search over half-open range [35, 2993)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Increase both lo and hi to skip duplicates\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Keep inclusive bounds on both ends\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T4_3_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^4, f3=n^4 (log n)^3, f4=n^9?\nChoices:\na) Θ(n^4)\nb) Θ(n^4 (log n)^3)\nc) Θ((log n)^3)\nd) Θ(n^9)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM29565.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=29565-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Hash all present values then scan\nc) Scan linearly counting gaps\nd) Use a heap of differences\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR8.",
        "target_text": "Question: Reverse a singly linked list in groups of k=8 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n log k)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS649.",
        "target_text": "Question: Compute stock span for 649 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Monotonic stack\nc) Priority queue\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ106519.",
        "target_text": "Question: For 106519 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Stack\nc) Queue\nd) Binary heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL946_510332.",
        "target_text": "Question: Find the k=946-th largest element among n=510332 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Binary search on value domain\nc) Build max-heap and extract k times\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.66.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.66?\nChoices:\na) To reduce memory usage to exact size\nb) To keep expected O(1) operations\nc) To maintain key stability\nd) To sort keys implicitly\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS387711.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=387711-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(√n)\nc) Θ(k)\nd) Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST374637.",
        "target_text": "Question: MST question id=374637: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) MST minimizes number of edges\nc) Prim requires the entire edge set to be sorted first\nd) MST is always unique in connected graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN328460.",
        "target_text": "Question: Check anagrams for strings of length n=328460 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) Sort both in Θ(n log n)\nc) Use a stack\nd) DFS on character graph\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS857069.",
        "target_text": "Question: Keys are integers in range [0..857069]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Shell sort\nc) Counting sort\nd) Quick sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI1_4927.",
        "target_text": "Question: Binary search over half-open range [1, 4927)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Increase both lo and hi to skip duplicates\nd) Keep inclusive bounds on both ends\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M9_6_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/6) + n^0 for n being a power of 6.\nChoices:\na) Θ(n^1.2263 log n)\nb) Θ(n^1.2263)\nc) Θ(n^0 log n)\nd) Θ(n^0)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S2541_43.",
        "target_text": "Question: Array length n=2541, find max-sum subarray of fixed length k=43. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(k log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN589618.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 589618, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Reverse list then delete head\nc) Traverse from head to find predecessor\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE41126.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=41126. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Binary search tree\nc) Decreasing stack\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW10091_259.",
        "target_text": "Question: Sliding window maximum for array length n=10091 and window w=259. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(nw)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK6.",
        "target_text": "Question: In a d-ary heap (d=6), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) No effect whatsoever\nc) It makes the operation constant time\nd) It increases height linearly\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Adversarial patterns are neutralized by random choice. Variant UH10000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=10000 slots yields what benefit?\nChoices:\na) Eliminates need for resizing\nb) Zero collisions guaranteed\nc) Cryptographic security by default\nd) Expected constant-time operations against adversaries\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS670465.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=670465-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(k)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Repeated edge relaxation tolerates negatives. Variant BF13914.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=13914 can handle which case while detecting it?\nChoices:\na) Equal runtime on all graphs\nb) Negative edge weights and negative cycles\nc) Only acyclic graphs\nd) Faster runtime on sparse nonnegative graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP73355.",
        "target_text": "Question: KMP matches a pattern of length m=73355 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Z-array exclusively\nc) Suffix array\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS890.",
        "target_text": "Question: Array is nearly sorted with at most 890 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Insertion sort\nc) Radix sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS8891710.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=8891710 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(log n) average\nc) O(1) worst-case\nd) Θ(n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_5_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^3, f3=n^3 (log n)^5, f4=n^8?\nChoices:\na) Θ(n^3 (log n)^5)\nb) Θ(n^3)\nc) Θ(n^8)\nd) Θ((log n)^5)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM55279.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=55279-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Scan linearly counting gaps\nc) Use a heap of differences\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN68918.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 68918, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Traverse from head to find predecessor\nc) Impossible under any model\nd) Reverse list then delete head\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS4742.",
        "target_text": "Question: Compute stock span for 4742 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Priority queue\nc) Fenwick tree\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B258907.",
        "target_text": "Question: Run BFS on an unweighted graph with 258907 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) All simple paths before all edges\nc) Nondecreasing distance from source\nd) Lexicographic vertex order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM380_49996.",
        "target_text": "Question: Merge k=380 sorted streams totaling N=49996 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(N log k)\nc) Θ(N + k^2)\nd) Θ(k log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH65536.",
        "target_text": "Question: In open addressing with double hashing over table size m=65536, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) Make both hash functions identical\nc) g(k) coprime with m for all keys\nd) Choose m even and g(k) even\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR944239.",
        "target_text": "Question: In a BST with distinct keys (id=944239), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Postorder\nc) Level-order\nd) Preorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP277001.",
        "target_text": "Question: Test bipartiteness (id=277001) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Compute an MST then inspect edges\nc) Check all degrees even\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP85065.",
        "target_text": "Question: KMP matches a pattern of length m=85065 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Suffix array\nc) LPS (failure) function\nd) Z-array exclusively\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS173022.",
        "target_text": "Question: Heapsort stability check id=173022: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort is not stable by default\nc) Heapsort always beats merge sort\nd) Heapsort is stable\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU112687.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=112687. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Linear scan with early exit\nc) Hashing with chaining\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M5_4_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/4) + n^4 for n being a power of 4.\nChoices:\na) Θ(n^4 log n)\nb) Θ(n^1.161 log n)\nc) Θ(n^1.161)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM59942.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=59942-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Hash all present values then scan\nc) Use a heap of differences\nd) Scan linearly counting gaps\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN989306.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 989306, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Impossible under any model\nc) Reverse list then delete head\nd) Traverse from head to find predecessor\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE28935.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=28935. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Decreasing stack\nc) Binary search tree\nd) Max-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ294523.",
        "target_text": "Question: For 294523 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Stack\nc) Binary heap\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH4456043.",
        "target_text": "Question: Build a binary heap from n=4456043 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n log n)\nc) Θ(n^2)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH8192.",
        "target_text": "Question: In open addressing with double hashing over table size m=8192, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Choose m even and g(k) even\nc) Make both hash functions identical\nd) Use g(k)=0 for some keys\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS795196.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=795196-th smallest?\nChoices:\na) Θ(1)\nb) Θ(k)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC476552.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=476552 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V log V)\nb) Θ(E log V)\nc) Θ(V+E)\nd) Θ(VE)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP88329.",
        "target_text": "Question: KMP matches a pattern of length m=88329 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) Rolling hash table\nc) Suffix array\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS134.",
        "target_text": "Question: Array is nearly sorted with at most 134 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Insertion sort\nc) Shell sort with fixed gaps\nd) Radix sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS5413341.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=5413341 typically runs in?\nChoices:\na) Θ(n) average\nb) O(1) worst-case\nc) O(log log n) average\nd) Θ(log n) average\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Geometric resizing spreads copying cost over many operations. Variant A8.",
        "target_text": "Question: A dynamic array starts with capacity 8 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(1)\nc) Θ(√m)\nd) Θ(log m)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S9989_241.",
        "target_text": "Question: Array length n=9989, find max-sum subarray of fixed length k=241. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(k log n)\nd) Θ(nk)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL22724.",
        "target_text": "Question: Check if a singly linked list of length n=22724 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Find middle, reverse second half, compare\nc) Sort and compare with original\nd) Use a hash set of seen values\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1962.",
        "target_text": "Question: Verify whether a pop sequence of length n=1962 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Use a queue to mirror the stack\nc) Simulate using one stack in Θ(n)\nd) Backtrack with recursion in Θ(2^n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS3482.",
        "target_text": "Question: A queue via two stacks handles a burst of 3482 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) Both Θ(log n)\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM286_36815.",
        "target_text": "Question: Merge k=286 sorted streams totaling N=36815 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(N log k)\nc) Θ(N + k^2)\nd) Θ(k log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF509837_0.81.",
        "target_text": "Question: Chaining hash table with n=509837 keys at load factor α=0.81. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(α log α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA172318.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=172318 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Euler tour + RMQ yields O(1) per query\nc) Naive parent climbing O(n) per query\nd) DFS from root each time\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Repeated edge relaxation tolerates negatives. Variant BF53128.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=53128 can handle which case while detecting it?\nChoices:\na) Only acyclic graphs\nb) Equal runtime on all graphs\nc) Negative edge weights and negative cycles\nd) Faster runtime on sparse nonnegative graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB75081.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=75081. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) BST over all substrings\nc) Suffix automaton or suffix array + LCP\nd) Binary heap of substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX7_2.",
        "target_text": "Question: Radix sort with d=7 digits and base b=2 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·(n + b))\nc) Θ(b^d)\nd) Θ(d·n·log b)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS6382362.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=6382362 typically runs in?\nChoices:\na) Θ(n) average\nb) O(log log n) average\nc) O(1) worst-case\nd) Θ(log n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_4_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^4, f3=n^4 (log n)^4, f4=n^10?\nChoices:\na) Θ(n^4)\nb) Θ(n^10)\nc) Θ((log n)^4)\nd) Θ(n^4 (log n)^4)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM528467.",
        "target_text": "Question: Find a majority element in an array of length n=528467 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Binary search on value domain\nc) Divide-and-conquer merges\nd) Counting sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR10.",
        "target_text": "Question: Reverse a singly linked list in groups of k=10 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(n log k)\nc) Θ(k log n)\nd) Θ(nk)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS4.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 4 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Sort segments then concatenate\nc) Use BFS on substring graph\nd) Greedy left-to-right without memory\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ402079.",
        "target_text": "Question: For 402079 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Deque\nc) Binary heap\nd) Stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA4_51758391.",
        "target_text": "Question: In a d-ary heap with d=4 and n=51758391 nodes, what is the height?\nChoices:\na) Θ(log_4 n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.75.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.75?\nChoices:\na) To reduce memory usage to exact size\nb) To maintain key stability\nc) To keep expected O(1) operations\nd) To sort keys implicitly\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H880514127.",
        "target_text": "Question: For a balanced BST with n=880514127 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(log log n)\nc) Θ(n)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D458891.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 458891]. Why?\nChoices:\na) Distinct weights are required\nb) Nonnegative weights ensure greedy optimality\nc) Self-loops must be absent\nd) Graph must be undirected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP65405.",
        "target_text": "Question: KMP matches a pattern of length m=65405 in linear time using which table?\nChoices:\na) Suffix array\nb) Z-array exclusively\nc) LPS (failure) function\nd) Rolling hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB80317906.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=80317906 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n)\nc) Ω(n^2)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS2916511.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=2916511 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(1) expected\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M4_6_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/6) + n^4 for n being a power of 6.\nChoices:\na) Θ(n^0.7737)\nb) Θ(n^4 log n)\nc) Θ(n^4)\nd) Θ(n^0.7737 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P536980.",
        "target_text": "Question: Answer 536980 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Sort once and binary search per query\nc) Recompute sums per query in Θ(n)\nd) Use a stack to store partial sums\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR4.",
        "target_text": "Question: Reverse a singly linked list in groups of k=4 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(k log n)\nb) Θ(n log k)\nc) Θ(nk)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS4.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 4 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Use two stacks for counts and fragments\nc) Use BFS on substring graph\nd) Greedy left-to-right without memory\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ508685.",
        "target_text": "Question: Schedule 508685 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Circular queue\nc) Binary heap\nd) Unordered array\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA4_55850353.",
        "target_text": "Question: In a d-ary heap with d=4 and n=55850353 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(√n)\nc) Θ(n)\nd) Θ(log_4 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH32768.",
        "target_text": "Question: In open addressing with double hashing over table size m=32768, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Make both hash functions identical\nc) Choose m even and g(k) even\nd) Use g(k)=0 for some keys\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR375505.",
        "target_text": "Question: In a BST with distinct keys (id=375505), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Inorder\nc) Postorder\nd) Level-order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR2751.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=2751 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Tarjan’s low-link DFS\nc) Kruskal’s algorithm\nd) Topological sorting\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z619548.",
        "target_text": "Question: For string S (id=619548), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Number of mismatches at i\nc) Next index of S[i]\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS230543.",
        "target_text": "Question: Keys are integers in range [0..230543]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Counting sort\nc) Heap sort\nd) Shell sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU244946.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=244946. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Binary search with left/right bias\nc) Hashing with chaining\nd) Linear scan with early exit\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_2_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^1, f3=n^1 (log n)^2, f4=n^6?\nChoices:\na) Θ(n^1)\nb) Θ((log n)^2)\nc) Θ(n^6)\nd) Θ(n^1 (log n)^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P545513.",
        "target_text": "Question: Answer 545513 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Build prefix-sum array; O(1) per query\nc) Recompute sums per query in Θ(n)\nd) Use a stack to store partial sums\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN328997_357266.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=328997, B=357266. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Reverse one list then compare\nc) Hash addresses of first list\nd) Binary search on addresses\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS2239.",
        "target_text": "Question: Compute stock span for 2239 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Priority queue\nc) Monotonic stack\nd) Fenwick tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS9772.",
        "target_text": "Question: A queue via two stacks handles a burst of 9772 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) Both Θ(log n)\nd) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC32956060.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=32956060?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH32768.",
        "target_text": "Question: In open addressing with double hashing over table size m=32768, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) Choose m even and g(k) even\nc) g(k) coprime with m for all keys\nd) Make both hash functions identical\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS555808.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=555808-th smallest?\nChoices:\na) Θ(k)\nb) Θ(log n)\nc) Θ(1)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP510770.",
        "target_text": "Question: Test bipartiteness (id=510770) of an undirected graph efficiently. Which method works?\nChoices:\na) Attempt 2-coloring via BFS; failure indicates odd cycle\nb) Compute an MST then inspect edges\nc) Check all degrees even\nd) Sort vertices and deduplicate\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Character-by-character descent. Variant TRIE26.",
        "target_text": "Question: Search a trie over alphabet size σ=26 for a key of length m. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(m log σ)\nc) Θ(1) average for all m\nd) Θ(m)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB63486721.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=63486721 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n^2)\nc) Ω(log n)\nd) Ω(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS5435295.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=5435295 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(n log n)\nc) Θ(1) expected\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T3_2_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^3, f3=n^3 (log n)^2, f4=n^6?\nChoices:\na) Θ(n^6)\nb) Θ(n^3 (log n)^2)\nc) Θ(n^3)\nd) Θ((log n)^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM12378.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=12378-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Binary search on index vs value gap\nc) Scan linearly counting gaps\nd) Hash all present values then scan\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN659605.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 659605, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Copy next node’s data here and bypass next\nc) Reverse list then delete head\nd) Impossible under any model\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS4329.",
        "target_text": "Question: Compute stock span for 4329 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Hash table\nc) Monotonic stack\nd) Priority queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B39926.",
        "target_text": "Question: Run BFS on an unweighted graph with 39926 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) Minimum memory footprint\nc) Nondecreasing distance from source\nd) All simple paths before all edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM991_253766.",
        "target_text": "Question: Merge k=991 sorted streams totaling N=253766 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(k log N)\nc) Θ(N + k^2)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC1.19.",
        "target_text": "Question: In separate chaining with load factor α=1.19, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS750667.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=750667-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(k)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC900279.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=900279 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V log V)\nb) Θ(E log V)\nc) Θ(VE)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP45547.",
        "target_text": "Question: KMP matches a pattern of length m=45547 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Suffix array\nc) LPS (failure) function\nd) Z-array exclusively\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS868.",
        "target_text": "Question: Array is nearly sorted with at most 868 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Heap sort\nc) Insertion sort\nd) Shell sort with fixed gaps\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX869049061.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈869049061. Why?\nChoices:\na) Sorts the array first\nb) Doubles the bound to bracket, then binary search\nc) Requires the array to be cyclic\nd) Uses hashing to index unknown segments\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A4.",
        "target_text": "Question: A dynamic array starts with capacity 4 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(√m)\nc) Θ(1)\nd) Θ(log m)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP7511_4899.",
        "target_text": "Question: Sorted array length n=7511. Decide if any pair sums to 4899. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Two-pointer scan in Θ(n)\nc) Hash set in Θ(n log n)\nd) Divide and conquer in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN318313_317228.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=318313, B=317228. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Binary search on addresses\nc) Reverse one list then compare\nd) Hash addresses of first list\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE45598.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=45598. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Binary search tree\nc) Queue\nd) Max-heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ37310.",
        "target_text": "Question: For 37310 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Queue\nc) Deque\nd) Stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK4.",
        "target_text": "Question: In a d-ary heap (d=4), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) No effect whatsoever\nb) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nc) It makes the operation constant time\nd) It increases height linearly\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Adversarial patterns are neutralized by random choice. Variant UH1000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=1000 slots yields what benefit?\nChoices:\na) Cryptographic security by default\nb) Expected constant-time operations against adversaries\nc) Eliminates need for resizing\nd) Zero collisions guaranteed\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Two-step rotations repair misaligned subtrees. Variant AVL5151.",
        "target_text": "Question: After inserting into an AVL tree, a Left-Right imbalance occurs at node X. Which fix is correct?\nChoices:\na) Left rotate left child of X, then right rotate X\nb) Right rotate right child of X, then left rotate X\nc) Single right rotate X\nd) Single left rotate X\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST445882.",
        "target_text": "Question: MST question id=445882: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) MST minimizes number of edges\nd) MST is always unique in connected graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB83212.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=83212. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Queue of rolling hashes only\nc) Suffix automaton or suffix array + LCP\nd) Binary heap of substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS789235.",
        "target_text": "Question: Heapsort stability check id=789235: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort always beats merge sort\nc) Heapsort is stable\nd) Heapsort needs extra Θ(n) memory\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI50_2015.",
        "target_text": "Question: Binary search over half-open range [50, 2015)—which invariant prevents infinite loops?\nChoices:\na) Increase both lo and hi to skip duplicates\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Keep inclusive bounds on both ends\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A2.",
        "target_text": "Question: A dynamic array starts with capacity 2 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(1)\nb) Θ(log m)\nc) Θ(√m)\nd) Θ(m)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S18799_454.",
        "target_text": "Question: Array length n=18799, find max-sum subarray of fixed length k=454. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(k log n)\nc) Θ(n)\nd) Θ(nk)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN916264_367069.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=916264, B=367069. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Reverse one list then compare\nc) Hash addresses of first list\nd) Binary search on addresses\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP3_4.",
        "target_text": "Question: Evaluate an infix expression with 3–4 precedence levels and parentheses. Linear-time method?\nChoices:\na) Sort tokens by precedence then scan\nb) Build a tree without any stack\nc) Left-to-right without stacks\nd) Convert to postfix and evaluate with a stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ138137.",
        "target_text": "Question: Schedule 138137 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Circular queue\nc) Binary heap\nd) Unordered array\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM229_87289.",
        "target_text": "Question: Merge k=229 sorted streams totaling N=87289 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log N)\nc) Θ(k log N)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.67.",
        "target_text": "Question: In separate chaining with load factor α=0.67, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(α)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR143319.",
        "target_text": "Question: In a BST with distinct keys (id=143319), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Level-order\nc) Inorder\nd) Preorder\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP253397.",
        "target_text": "Question: Test bipartiteness (id=253397) of an undirected graph efficiently. Which method works?\nChoices:\na) Attempt 2-coloring via BFS; failure indicates odd cycle\nb) Check all degrees even\nc) Compute an MST then inspect edges\nd) Sort vertices and deduplicate\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z245871.",
        "target_text": "Question: For string S (id=245871), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Next index of S[i]\nc) Number of mismatches at i\nd) Number of distinct substrings up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX7_16.",
        "target_text": "Question: Radix sort with d=7 digits and base b=16 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(d·n·log b)\nc) Θ(d·(n + b))\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI41_651.",
        "target_text": "Question: Binary search over half-open range [41, 651)—which invariant prevents infinite loops?\nChoices:\na) Increase both lo and hi to skip duplicates\nb) Keep inclusive bounds on both ends\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M7_5_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/5) + n^3 for n being a power of 5.\nChoices:\na) Θ(n^1.2091)\nb) Θ(n^3)\nc) Θ(n^1.2091 log n)\nd) Θ(n^3 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S7898_7.",
        "target_text": "Question: Array length n=7898, find max-sum subarray of fixed length k=7. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C2.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 2× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(1) space\nb) Θ(1) time, Θ(1) space\nc) Θ(n) time, Θ(n) space\nd) Θ(log n) time, Θ(1) space\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1021.",
        "target_text": "Question: Verify whether a pop sequence of length n=1021 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Simulate using one stack in Θ(n)\nc) Backtrack with recursion in Θ(2^n)\nd) Sort both sequences then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ64104.",
        "target_text": "Question: For 64104 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Stack\nc) Queue\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM614_104708.",
        "target_text": "Question: Merge k=614 sorted streams totaling N=104708 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(k log N)\nc) Θ(N + k^2)\nd) Θ(N log N)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.97.",
        "target_text": "Question: In separate chaining with load factor α=0.97, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS104750.",
        "target_text": "Question: BST with parent pointers (id=104750): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Always climb to root then go right once\nc) Use level-order and pick next node\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST713330.",
        "target_text": "Question: MST question id=713330: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) Prim requires the entire edge set to be sorted first\nd) MST minimizes number of edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN84805.",
        "target_text": "Question: Check anagrams for strings of length n=84805 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) Count character frequencies in Θ(n)\nc) DFS on character graph\nd) Use a stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS202691.",
        "target_text": "Question: Keys are integers in range [0..202691]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Counting sort\nc) Quick sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS9533448.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=9533448 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M9_6_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/6) + n^3 for n being a power of 6.\nChoices:\na) Θ(n^3 log n)\nb) Θ(n^1.2263)\nc) Θ(n^1.2263 log n)\nd) Θ(n^3)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R51483.",
        "target_text": "Question: Rotate an array right by r=51483 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Selection sort then shift\nc) Heapify then extract\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL94830.",
        "target_text": "Question: Check if a singly linked list of length n=94830 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Find middle, reverse second half, compare\nc) Sort and compare with original\nd) Copy to array and two-pointer check\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP254.",
        "target_text": "Question: Verify whether a pop sequence of length n=254 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Backtrack with recursion in Θ(2^n)\nc) Sort both sequences then compare\nd) Use a queue to mirror the stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW8928_984.",
        "target_text": "Question: Sliding window maximum for array length n=8928 and window w=984. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(w log n)\nc) Θ(nw)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC72511335.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=72511335?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.5.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.5?\nChoices:\na) To sort keys implicitly\nb) To maintain key stability\nc) To reduce memory usage to exact size\nd) To keep expected O(1) operations\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA433238.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=433238 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) Sort node labels then binary search\nc) Naive parent climbing O(n) per query\nd) DFS from root each time\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC540850.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=540850 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V log V)\nb) Θ(VE)\nc) Θ(V+E)\nd) Θ(E log V)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK257_998244353.",
        "target_text": "Question: Rabin–Karp with base=257, mod=998244353 achieves expected linear time due to what?\nChoices:\na) Suffix tree guaranteeing O(1) per char\nb) Low collision probability of rolling hash\nc) Trie of all substrings\nd) Use of a min-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS74386.",
        "target_text": "Question: Keys are integers in range [0..74386]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Quick sort\nc) Heap sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX511833154.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈511833154. Why?\nChoices:\na) Requires the array to be cyclic\nb) Sorts the array first\nc) Uses hashing to index unknown segments\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A2.",
        "target_text": "Question: A dynamic array starts with capacity 2 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(log m)\nb) Θ(m)\nc) Θ(1)\nd) Θ(√m)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM26993.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=26993-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Hash all present values then scan\nc) Scan linearly counting gaps\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR3.",
        "target_text": "Question: Reverse a singly linked list in groups of k=3 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(k log n)\nb) Θ(n)\nc) Θ(n log k)\nd) Θ(nk)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS3217.",
        "target_text": "Question: Compute stock span for 3217 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Priority queue\nc) Hash table\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ206609.",
        "target_text": "Question: For 206609 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Stack\nc) Deque\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK7.",
        "target_text": "Question: In a d-ary heap (d=7), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) It increases height linearly\nc) It makes the operation constant time\nd) No effect whatsoever\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.53.",
        "target_text": "Question: In separate chaining with load factor α=0.53, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(α)\nc) Θ(1/α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS703154.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=703154-th smallest?\nChoices:\na) Θ(k)\nb) Θ(√n)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D318360.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 318360]. Why?\nChoices:\na) Self-loops must be absent\nb) Graph must be undirected\nc) Distinct weights are required\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK911382323_998244353.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=998244353 achieves expected linear time due to what?\nChoices:\na) Low collision probability of rolling hash\nb) Suffix tree guaranteeing O(1) per char\nc) Use of a min-heap\nd) Trie of all substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS291014.",
        "target_text": "Question: Keys are integers in range [0..291014]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Heap sort\nc) Counting sort\nd) Quick sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS3638519.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=3638519 typically runs in?\nChoices:\na) Θ(log n) average\nb) O(1) worst-case\nc) Θ(n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M6_3_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/3) + n^1 for n being a power of 3.\nChoices:\na) Θ(n^1.6309 log n)\nb) Θ(n^1.6309)\nc) Θ(n^1)\nd) Θ(n^1 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM25794.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=25794-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Hash all present values then scan\nc) Binary search on index vs value gap\nd) Scan linearly counting gaps\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL9394.",
        "target_text": "Question: Check if a singly linked list of length n=9394 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Use a hash set of seen values\nc) Copy to array and two-pointer check\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS2563.",
        "target_text": "Question: Compute stock span for 2563 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Priority queue\nc) Monotonic stack\nd) Hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ525821.",
        "target_text": "Question: Schedule 525821 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Binary heap\nc) Circular queue\nd) Unordered array\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA7_1390806.",
        "target_text": "Question: In a d-ary heap with d=7 and n=1390806 nodes, what is the height?\nChoices:\na) Θ(log_7 n)\nb) Θ(√n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.83.",
        "target_text": "Question: In separate chaining with load factor α=0.83, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS311310.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=311310-th smallest?\nChoices:\na) Θ(k)\nb) Θ(1)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST841830.",
        "target_text": "Question: MST question id=841830: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) Prim requires the entire edge set to be sorted first\nd) MST minimizes number of edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP40885.",
        "target_text": "Question: KMP matches a pattern of length m=40885 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) Suffix array\nc) LPS (failure) function\nd) Rolling hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS936.",
        "target_text": "Question: Array is nearly sorted with at most 936 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Radix sort\nc) Heap sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX154381793.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈154381793. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Requires the array to be cyclic\nc) Sorts the array first\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T5_1_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^5, f3=n^5 (log n)^1, f4=n^12?\nChoices:\na) Θ(n^5)\nb) Θ(n^12)\nc) Θ(n^5 (log n)^1)\nd) Θ((log n)^1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R936083.",
        "target_text": "Question: Rotate an array right by r=936083 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Three-reversal method\nc) Selection sort then shift\nd) Single-step rotate repeated r times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN271876.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 271876, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Traverse from head to find predecessor\nc) Impossible under any model\nd) Reverse list then delete head\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1536.",
        "target_text": "Question: Verify whether a pop sequence of length n=1536 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Simulate using one stack in Θ(n)\nc) Sort both sequences then compare\nd) Use a queue to mirror the stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ89916.",
        "target_text": "Question: Schedule 89916 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Unordered array\nc) Binary heap\nd) Circular queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM824_298649.",
        "target_text": "Question: Merge k=824 sorted streams totaling N=298649 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(N log N)\nc) Θ(k log N)\nd) Θ(N + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Threshold-based expansion preserves performance. Variant RS0.75.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.75?\nChoices:\na) To keep expected O(1) operations\nb) To sort keys implicitly\nc) To reduce memory usage to exact size\nd) To maintain key stability\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS458464.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=458464-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(1)\nc) Θ(k)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST844162.",
        "target_text": "Question: MST question id=844162: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) Prim requires the entire edge set to be sorted first\nc) MST minimizes number of edges\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN417732.",
        "target_text": "Question: Check anagrams for strings of length n=417732 over fixed alphabet. Optimal approach?\nChoices:\na) Use a stack\nb) Sort both in Θ(n log n)\nc) DFS on character graph\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS455782.",
        "target_text": "Question: Keys are integers in range [0..455782]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Heap sort\nc) Quick sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Geometric level distribution mirrors balanced trees. Variant SL0.5.",
        "target_text": "Question: Skip list with level promotion probability p=0.5: expected complexity of search/insert/delete?\nChoices:\na) Θ(1) for all three\nb) Θ(log n) for all three\nc) Θ(n) for all three\nd) Θ(√n) for all three\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T2_2_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^2, f3=n^2 (log n)^2, f4=n^8?\nChoices:\na) Θ((log n)^2)\nb) Θ(n^2 (log n)^2)\nc) Θ(n^8)\nd) Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R116342.",
        "target_text": "Question: Rotate an array right by r=116342 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Single-step rotate repeated r times\nc) Three-reversal method\nd) Selection sort then shift\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN856947_557658.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=856947, B=557658. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Binary search on addresses\nc) Advance pointers; when one ends, jump to the other head\nd) Reverse one list then compare\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS2184.",
        "target_text": "Question: Compute stock span for 2184 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Monotonic stack\nc) Priority queue\nd) Fenwick tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ473606.",
        "target_text": "Question: Schedule 473606 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Binary heap\nc) Unordered array\nd) Stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA11_48383981.",
        "target_text": "Question: In a d-ary heap with d=11 and n=48383981 nodes, what is the height?\nChoices:\na) Θ(log_11 n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Adversarial patterns are neutralized by random choice. Variant UH10000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=10000 slots yields what benefit?\nChoices:\na) Expected constant-time operations against adversaries\nb) Zero collisions guaranteed\nc) Eliminates need for resizing\nd) Cryptographic security by default\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS804547.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=804547-th smallest?\nChoices:\na) Θ(k)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D931670.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 931670]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Self-loops must be absent\nc) Graph must be undirected\nd) Distinct weights are required\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB79578.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=79578. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Binary heap of substrings\nc) BST over all substrings\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS100729.",
        "target_text": "Question: Keys are integers in range [0..100729]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Shell sort\nc) Quick sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU3840305.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=3840305. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Linear scan with early exit\nc) Heap-based selection\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T1_3_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^1, f3=n^1 (log n)^3, f4=n^6?\nChoices:\na) Θ(n^1)\nb) Θ(n^6)\nc) Θ((log n)^3)\nd) Θ(n^1 (log n)^3)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM283661.",
        "target_text": "Question: Find a majority element in an array of length n=283661 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Counting sort\nc) Binary search on value domain\nd) Divide-and-conquer merges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C2.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 2× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(1) space\nb) Θ(n) time, Θ(n) space\nc) Θ(1) time, Θ(1) space\nd) Θ(log n) time, Θ(1) space\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE70810.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=70810. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Decreasing stack\nc) Queue\nd) Max-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS4764.",
        "target_text": "Question: A queue via two stacks handles a burst of 4764 operations. Amortized costs?\nChoices:\na) ENQUEUE and DEQUEUE both amortized Θ(1)\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) Both Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH7151528.",
        "target_text": "Question: Build a binary heap from n=7151528 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Probe sequences align and form contiguous clusters. Variant LP5038.",
        "target_text": "Question: What clustering effect harms performance in linear probing, and what mitigates it?\nChoices:\na) Primary clustering mitigated by double hashing\nb) Path compression mitigated by union-find\nc) Cache thrashing mitigated by padding\nd) AVL imbalance mitigated by rotations\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS738845.",
        "target_text": "Question: BST with parent pointers (id=738845): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) Reverse postorder traversal entirely\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Always climb to root then go right once\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Repeated edge relaxation tolerates negatives. Variant BF64596.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=64596 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Equal runtime on all graphs\nc) Negative edge weights and negative cycles\nd) Only acyclic graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000009.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Use of a min-heap\nb) Trie of all substrings\nc) Suffix tree guaranteeing O(1) per char\nd) Low collision probability of rolling hash\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS825.",
        "target_text": "Question: Array is nearly sorted with at most 825 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Insertion sort\nc) Shell sort with fixed gaps\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI66_1405.",
        "target_text": "Question: Binary search over half-open range [66, 1405)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Keep inclusive bounds on both ends\nc) Increase both lo and hi to skip duplicates\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A16.",
        "target_text": "Question: A dynamic array starts with capacity 16 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(1)\nb) Θ(log m)\nc) Θ(√m)\nd) Θ(m)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R89468.",
        "target_text": "Question: Rotate an array right by r=89468 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Heapify then extract\nc) Selection sort then shift\nd) Single-step rotate repeated r times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL64232.",
        "target_text": "Question: Check if a singly linked list of length n=64232 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Copy to array and two-pointer check\nc) Use a hash set of seen values\nd) Sort and compare with original\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Operator handling via stacks preserves associativity rules. Variant IP3_4.",
        "target_text": "Question: Evaluate an infix expression with 3–4 precedence levels and parentheses. Linear-time method?\nChoices:\na) Build a tree without any stack\nb) Convert to postfix and evaluate with a stack\nc) Sort tokens by precedence then scan\nd) Left-to-right without stacks\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW8142_806.",
        "target_text": "Question: Sliding window maximum for array length n=8142 and window w=806. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(nw)\nd) Θ(w log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA16_67653071.",
        "target_text": "Question: In a d-ary heap with d=16 and n=67653071 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(log_16 n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.29.",
        "target_text": "Question: In separate chaining with load factor α=0.29, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(1/α)\nd) Θ(α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR678152.",
        "target_text": "Question: In a BST with distinct keys (id=678152), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Level-order\nc) Preorder\nd) Postorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR381510.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=381510 edges. What algorithmic idea achieves linear time?\nChoices:\na) Kruskal’s algorithm\nb) Dijkstra’s algorithm\nc) Tarjan’s low-link DFS\nd) Topological sorting\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP89813.",
        "target_text": "Question: KMP matches a pattern of length m=89813 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Suffix array\nc) Z-array exclusively\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS924639.",
        "target_text": "Question: Keys are integers in range [0..924639]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Shell sort\nc) Heap sort\nd) Quick sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS1682014.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=1682014 typically runs in?\nChoices:\na) O(log log n) average\nb) O(1) worst-case\nc) Θ(n) average\nd) Θ(log n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T5_3_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^5, f3=n^5 (log n)^3, f4=n^8?\nChoices:\na) Θ(n^8)\nb) Θ(n^5 (log n)^3)\nc) Θ((log n)^3)\nd) Θ(n^5)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM552800.",
        "target_text": "Question: Find a majority element in an array of length n=552800 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Divide-and-conquer merges\nc) Counting sort\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN215503_422888.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=215503, B=422888. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Advance pointers; when one ends, jump to the other head\nc) Binary search on addresses\nd) Hash addresses of first list\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS4042.",
        "target_text": "Question: Compute stock span for 4042 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Hash table\nc) Priority queue\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ238141.",
        "target_text": "Question: Schedule 238141 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Unordered array\nc) Binary heap\nd) Circular queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL247_655876.",
        "target_text": "Question: Find the k=247-th largest element among n=655876 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Heapsort then index\nc) Build max-heap and extract k times\nd) Binary search on value domain\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.66.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.66?\nChoices:\na) To reduce memory usage to exact size\nb) To sort keys implicitly\nc) To maintain key stability\nd) To keep expected O(1) operations\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA635239.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=635239 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Naive parent climbing O(n) per query\nc) Sort node labels then binary search\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS295008_2495728.",
        "target_text": "Question: A directed graph with V=295008, E≈2495728. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) When it is a DAG (no directed cycles)\nc) Only if edges are unweighted\nd) Only if the graph is connected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN840268.",
        "target_text": "Question: Check anagrams for strings of length n=840268 over fixed alphabet. Optimal approach?\nChoices:\na) Use a stack\nb) Count character frequencies in Θ(n)\nc) Sort both in Θ(n log n)\nd) DFS on character graph\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS876.",
        "target_text": "Question: Array is nearly sorted with at most 876 inversions. Which algorithm excels?\nChoices:\na) Insertion sort\nb) Heap sort\nc) Radix sort\nd) Shell sort with fixed gaps\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU4487589.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=4487589. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Binary search with left/right bias\nc) Heap-based selection\nd) Hashing with chaining\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M4_5_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/5) + n^0 for n being a power of 5.\nChoices:\na) Θ(n^0)\nb) Θ(n^0.8614 log n)\nc) Θ(n^0.8614)\nd) Θ(n^0 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P846506.",
        "target_text": "Question: Answer 846506 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Recompute sums per query in Θ(n)\nb) Sort once and binary search per query\nc) Build prefix-sum array; O(1) per query\nd) Use a stack to store partial sums\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN433152_293643.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=433152, B=293643. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Advance pointers; when one ends, jump to the other head\nc) Binary search on addresses\nd) Reverse one list then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1220.",
        "target_text": "Question: Verify whether a pop sequence of length n=1220 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA1047.",
        "target_text": "Question: Circular-array queue with capacity 1047: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Require prime capacity\nc) Track count or keep one slot empty\nd) Head==Tail means full\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM384_141801.",
        "target_text": "Question: Merge k=384 sorted streams totaling N=141801 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log k)\nc) Θ(N log N)\nd) Θ(N + k^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH2048.",
        "target_text": "Question: In open addressing with double hashing over table size m=2048, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) Use g(k)=0 for some keys\nc) g(k) coprime with m for all keys\nd) Choose m even and g(k) even\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS934610.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=934610-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP452716.",
        "target_text": "Question: Test bipartiteness (id=452716) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Compute an MST then inspect edges\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Check all degrees even\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z446540.",
        "target_text": "Question: For string S (id=446540), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Number of distinct substrings up to i\nc) Number of mismatches at i\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST61762.",
        "target_text": "Question: Stability (id=61762): which pairing is correct?\nChoices:\na) Heap sort (stable), Merge sort (unstable)\nb) Merge sort (stable), Heap sort (unstable)\nc) Counting sort (unstable)\nd) Quick sort (stable), Selection sort (unstable)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU6217077.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=6217077. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Linear scan with early exit\nc) Binary search with left/right bias\nd) Heap-based selection\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Geometric resizing spreads copying cost over many operations. Variant A4.",
        "target_text": "Question: A dynamic array starts with capacity 4 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(1)\nb) Θ(log m)\nc) Θ(m)\nd) Θ(√m)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP17321_4196.",
        "target_text": "Question: Sorted array length n=17321. Decide if any pair sums to 4196. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Hash set in Θ(n log n)\nc) Divide and conquer in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN49018.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 49018, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Reverse list then delete head\nc) Impossible under any model\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE566.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=566. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Binary search tree\nc) Queue\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA3611.",
        "target_text": "Question: Circular-array queue with capacity 3611: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Require power-of-two capacity\nc) Require prime capacity\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA6_83962545.",
        "target_text": "Question: In a d-ary heap with d=6 and n=83962545 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(log_6 n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.5.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.5?\nChoices:\na) To sort keys implicitly\nb) To keep expected O(1) operations\nc) To maintain key stability\nd) To reduce memory usage to exact size\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA400026.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=400026 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Euler tour + RMQ yields O(1) per query\nc) Sort node labels then binary search\nd) Naive parent climbing O(n) per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF659.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=659 can handle which case while detecting it?\nChoices:\na) Only acyclic graphs\nb) Faster runtime on sparse nonnegative graphs\nc) Negative edge weights and negative cycles\nd) Equal runtime on all graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z735520.",
        "target_text": "Question: For string S (id=735520), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Length of the longest prefix starting at i matching S[0..]\nc) Number of mismatches at i\nd) Number of distinct substrings up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS61893.",
        "target_text": "Question: Keys are integers in range [0..61893]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Quick sort\nc) Shell sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX798172074.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈798172074. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Sorts the array first\nc) Uses hashing to index unknown segments\nd) Requires the array to be cyclic\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M5_6_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/6) + n^0 for n being a power of 6.\nChoices:\na) Θ(n^0.8982)\nb) Θ(n^0 log n)\nc) Θ(n^0)\nd) Θ(n^0.8982 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM432321.",
        "target_text": "Question: Find a majority element in an array of length n=432321 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Divide-and-conquer merges\nc) Boyer–Moore voting with verification\nd) Counting sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR2.",
        "target_text": "Question: Reverse a singly linked list in groups of k=2 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(nk)\nc) Θ(n)\nd) Θ(k log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP722.",
        "target_text": "Question: Verify whether a pop sequence of length n=722 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Use a queue to mirror the stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B993476.",
        "target_text": "Question: Run BFS on an unweighted graph with 993476 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) Lexicographic vertex order\nc) All simple paths before all edges\nd) Minimum memory footprint\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK7.",
        "target_text": "Question: In a d-ary heap (d=7), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) No effect whatsoever\nb) It makes the operation constant time\nc) It increases height linearly\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.32.",
        "target_text": "Question: In separate chaining with load factor α=0.32, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(α)\nd) Θ(1/α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS354500.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=354500-th smallest?\nChoices:\na) Θ(k)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS520045_2623687.",
        "target_text": "Question: A directed graph with V=520045, E≈2623687. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) Only if the graph is connected\nc) When all vertices have outdegree ≥ 1\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB54296.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=54296. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Queue of rolling hashes only\nc) Binary heap of substrings\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS262845.",
        "target_text": "Question: Heapsort stability check id=262845: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort is not stable by default\nd) Heapsort is stable\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Geometric level distribution mirrors balanced trees. Variant SL0.25.",
        "target_text": "Question: Skip list with level promotion probability p=0.25: expected complexity of search/insert/delete?\nChoices:\na) Θ(log n) for all three\nb) Θ(1) for all three\nc) Θ(n) for all three\nd) Θ(√n) for all three\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M5_4_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/4) + n^1 for n being a power of 4.\nChoices:\na) Θ(n^1 log n)\nb) Θ(n^1.161)\nc) Θ(n^1.161 log n)\nd) Θ(n^1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R953846.",
        "target_text": "Question: Rotate an array right by r=953846 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Heapify then extract\nc) Three-reversal method\nd) Selection sort then shift\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN213222.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 213222, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Impossible under any model\nc) Reverse list then delete head\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE74780.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=74780. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Binary search tree\nc) Queue\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS254.",
        "target_text": "Question: A queue via two stacks handles a burst of 254 operations. Amortized costs?\nChoices:\na) ENQUEUE and DEQUEUE both amortized Θ(1)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) Both Θ(log n)\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM997_122590.",
        "target_text": "Question: Merge k=997 sorted streams totaling N=122590 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log k)\nc) Θ(N log N)\nd) Θ(k log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF4000161_0.89.",
        "target_text": "Question: Chaining hash table with n=4000161 keys at load factor α=0.89. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(nα)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H919312520.",
        "target_text": "Question: For a balanced BST with n=919312520 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF46953.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=46953 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Equal runtime on all graphs\nc) Negative edge weights and negative cycles\nd) Only acyclic graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z930020.",
        "target_text": "Question: For string S (id=930020), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Next index of S[i]\nc) Number of mismatches at i\nd) Number of distinct substrings up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS977.",
        "target_text": "Question: Array is nearly sorted with at most 977 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Radix sort\nc) Insertion sort\nd) Heap sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS8112886.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=8112886 typically runs in?\nChoices:\na) Θ(log n) average\nb) O(1) worst-case\nc) Θ(n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T4_4_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^4, f3=n^4 (log n)^4, f4=n^9?\nChoices:\na) Θ(n^4 (log n)^4)\nb) Θ(n^4)\nc) Θ((log n)^4)\nd) Θ(n^9)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP12622_2612.",
        "target_text": "Question: Sorted array length n=12622. Decide if any pair sums to 2612. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Divide and conquer in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Brute force in Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN848973_76352.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=848973, B=76352. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Binary search on addresses\nc) Reverse one list then compare\nd) Hash addresses of first list\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS2211.",
        "target_text": "Question: Compute stock span for 2211 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Fenwick tree\nc) Hash table\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS5370.",
        "target_text": "Question: A queue via two stacks handles a burst of 5370 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK7.",
        "target_text": "Question: In a d-ary heap (d=7), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) No effect whatsoever\nb) It increases height linearly\nc) It makes the operation constant time\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF398369_0.62.",
        "target_text": "Question: Chaining hash table with n=398369 keys at load factor α=0.62. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(α log α)\nc) Θ(log n)\nd) Θ(nα)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA514688.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=514688 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Naive parent climbing O(n) per query\nc) Euler tour + RMQ yields O(1) per query\nd) Sort node labels then binary search\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS595270_1884519.",
        "target_text": "Question: A directed graph with V=595270, E≈1884519. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) When all vertices have outdegree ≥ 1\nc) When it is a DAG (no directed cycles)\nd) Only if the graph is connected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z527103.",
        "target_text": "Question: For string S (id=527103), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Number of mismatches at i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of distinct substrings up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST179562.",
        "target_text": "Question: Stability (id=179562): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Quick sort (stable), Selection sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS9109117.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=9109117 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T1_3_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^1, f3=n^1 (log n)^3, f4=n^8?\nChoices:\na) Θ(n^1 (log n)^3)\nb) Θ((log n)^3)\nc) Θ(n^1)\nd) Θ(n^8)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM19126.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=19126-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Hash all present values then scan\nc) Scan linearly counting gaps\nd) Use a heap of differences\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN673594_116710.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=673594, B=116710. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Advance pointers; when one ends, jump to the other head\nc) Binary search on addresses\nd) Hash addresses of first list\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS2055.",
        "target_text": "Question: Compute stock span for 2055 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Priority queue\nc) Fenwick tree\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW9776_79.",
        "target_text": "Question: Sliding window maximum for array length n=9776 and window w=79. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(nw)\nc) Θ(n log n)\nd) Θ(w log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC87596232.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=87596232?\nChoices:\na) Θ(log log n)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF8819951_0.27.",
        "target_text": "Question: Chaining hash table with n=8819951 keys at load factor α=0.27. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(α log α)\nc) Θ(log n)\nd) Θ(nα)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS42204.",
        "target_text": "Question: BST with parent pointers (id=42204): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Use level-order and pick next node\nd) Always climb to root then go right once\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC779725.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=779725 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(VE)\nc) Θ(V+E)\nd) Θ(V log V)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z655633.",
        "target_text": "Question: For string S (id=655633), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Number of distinct substrings up to i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Next index of S[i]\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST329134.",
        "target_text": "Question: Stability (id=329134): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Quick sort (stable), Selection sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX533313515.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈533313515. Why?\nChoices:\na) Sorts the array first\nb) Uses hashing to index unknown segments\nc) Requires the array to be cyclic\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T3_1_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^3, f3=n^3 (log n)^1, f4=n^7?\nChoices:\na) Θ(n^3 (log n)^1)\nb) Θ(n^3)\nc) Θ(n^7)\nd) Θ((log n)^1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM403502.",
        "target_text": "Question: Find a majority element in an array of length n=403502 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Counting sort\nc) Divide-and-conquer merges\nd) Binary search on value domain\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL73933.",
        "target_text": "Question: Check if a singly linked list of length n=73933 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Copy to array and two-pointer check\nc) Sort and compare with original\nd) Use a hash set of seen values\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE9358.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=9358. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Max-heap\nc) Decreasing stack\nd) Binary search tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ812568.",
        "target_text": "Question: Schedule 812568 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Binary heap\nc) Stack\nd) Unordered array\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC35718104.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=35718104?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Adversarial patterns are neutralized by random choice. Variant UH100000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=100000 slots yields what benefit?\nChoices:\na) Expected constant-time operations against adversaries\nb) Cryptographic security by default\nc) Zero collisions guaranteed\nd) Eliminates need for resizing\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA400023.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=400023 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) Sort node labels then binary search\nc) DFS from root each time\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF55385.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=55385 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Negative edge weights and negative cycles\nc) Equal runtime on all graphs\nd) Only acyclic graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000009.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Suffix tree guaranteeing O(1) per char\nb) Trie of all substrings\nc) Use of a min-heap\nd) Low collision probability of rolling hash\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS363755.",
        "target_text": "Question: Keys are integers in range [0..363755]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Heap sort\nc) Quick sort\nd) Shell sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX763333373.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈763333373. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Sorts the array first\nc) Requires the array to be cyclic\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Geometric resizing spreads copying cost over many operations. Variant A16.",
        "target_text": "Question: A dynamic array starts with capacity 16 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(1)\nb) Θ(log m)\nc) Θ(m)\nd) Θ(√m)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R475558.",
        "target_text": "Question: Rotate an array right by r=475558 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Single-step rotate repeated r times\nc) Heapify then extract\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR3.",
        "target_text": "Question: Reverse a singly linked list in groups of k=3 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(n log k)\nc) Θ(k log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE34031.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=34031. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Decreasing stack\nc) Binary search tree\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ694751.",
        "target_text": "Question: For 694751 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Stack\nc) Deque\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA6_86444719.",
        "target_text": "Question: In a d-ary heap with d=6 and n=86444719 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(log_6 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.66.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.66?\nChoices:\na) To keep expected O(1) operations\nb) To sort keys implicitly\nc) To maintain key stability\nd) To reduce memory usage to exact size\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR421514.",
        "target_text": "Question: In a BST with distinct keys (id=421514), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Level-order\nc) Inorder\nd) Preorder\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D207799.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 207799]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Self-loops must be absent\nc) Distinct weights are required\nd) Graph must be undirected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z711380.",
        "target_text": "Question: For string S (id=711380), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Next index of S[i]\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of distinct substrings up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS290.",
        "target_text": "Question: Array is nearly sorted with at most 290 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Insertion sort\nc) Radix sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU5254216.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=5254216. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Heap-based selection\nc) Linear scan with early exit\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M7_6_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/6) + n^4 for n being a power of 6.\nChoices:\na) Θ(n^1.086 log n)\nb) Θ(n^4)\nc) Θ(n^1.086)\nd) Θ(n^4 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R241860.",
        "target_text": "Question: Rotate an array right by r=241860 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Selection sort then shift\nc) Three-reversal method\nd) Single-step rotate repeated r times\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK37_4819.",
        "target_text": "Question: Merge k=37 sorted linked lists totaling n=4819 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n log n)\nc) Θ(n + k^2)\nd) Θ(k n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS932.",
        "target_text": "Question: Compute stock span for 932 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Fenwick tree\nc) Monotonic stack\nd) Priority queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA4909.",
        "target_text": "Question: Circular-array queue with capacity 4909: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Head==Tail means full\nc) Track count or keep one slot empty\nd) Require prime capacity\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC64152407.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=64152407?\nChoices:\na) Θ(1)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Adversarial patterns are neutralized by random choice. Variant UH10000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=10000 slots yields what benefit?\nChoices:\na) Expected constant-time operations against adversaries\nb) Eliminates need for resizing\nc) Cryptographic security by default\nd) Zero collisions guaranteed\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS946835.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=946835-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(k)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC678841.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=678841 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V log V)\nb) Θ(E log V)\nc) Θ(V+E)\nd) Θ(VE)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z370260.",
        "target_text": "Question: For string S (id=370260), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Number of distinct substrings up to i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of mismatches at i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS33095.",
        "target_text": "Question: Keys are integers in range [0..33095]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Heap sort\nc) Quick sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS6720940.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=6720940 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(n) average\nc) O(1) worst-case\nd) Θ(log n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M6_3_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/3) + n^4 for n being a power of 3.\nChoices:\na) Θ(n^1.6309)\nb) Θ(n^4)\nc) Θ(n^4 log n)\nd) Θ(n^1.6309 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP8725_3042.",
        "target_text": "Question: Sorted array length n=8725. Decide if any pair sums to 3042. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Two-pointer scan in Θ(n)\nc) Hash set in Θ(n log n)\nd) Divide and conquer in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL21904.",
        "target_text": "Question: Check if a singly linked list of length n=21904 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Use a hash set of seen values\nc) Copy to array and two-pointer check\nd) Sort and compare with original\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP2_3.",
        "target_text": "Question: Evaluate an infix expression with 2–3 precedence levels and parentheses. Linear-time method?\nChoices:\na) Left-to-right without stacks\nb) Convert to postfix and evaluate with a stack\nc) Build a tree without any stack\nd) Sort tokens by precedence then scan\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B971891.",
        "target_text": "Question: Run BFS on an unweighted graph with 971891 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) Nondecreasing distance from source\nc) All simple paths before all edges\nd) Minimum memory footprint\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL427_659036.",
        "target_text": "Question: Find the k=427-th largest element among n=659036 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Binary search on value domain\nc) Deterministic selection (median-of-medians)\nd) Build max-heap and extract k times\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC1.14.",
        "target_text": "Question: In separate chaining with load factor α=1.14, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Two-step rotations repair misaligned subtrees. Variant AVL4997.",
        "target_text": "Question: After inserting into an AVL tree, a Left-Right imbalance occurs at node X. Which fix is correct?\nChoices:\na) Single left rotate X\nb) Single right rotate X\nc) Right rotate right child of X, then left rotate X\nd) Left rotate left child of X, then right rotate X\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF62326.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=62326 can handle which case while detecting it?\nChoices:\na) Negative edge weights and negative cycles\nb) Faster runtime on sparse nonnegative graphs\nc) Equal runtime on all graphs\nd) Only acyclic graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN857445.",
        "target_text": "Question: Check anagrams for strings of length n=857445 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) Sort both in Θ(n log n)\nc) DFS on character graph\nd) Use a stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS914159.",
        "target_text": "Question: Keys are integers in range [0..914159]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Counting sort\nc) Quick sort\nd) Shell sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX487706538.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈487706538. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Uses hashing to index unknown segments\nc) Sorts the array first\nd) Requires the array to be cyclic\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T2_5_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^2, f3=n^2 (log n)^5, f4=n^9?\nChoices:\na) Θ(n^2)\nb) Θ((log n)^5)\nc) Θ(n^2 (log n)^5)\nd) Θ(n^9)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R788951.",
        "target_text": "Question: Rotate an array right by r=788951 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Selection sort then shift\nc) Heapify then extract\nd) Single-step rotate repeated r times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C3.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 3× and 1×. Complexity?\nChoices:\na) Θ(1) time, Θ(1) space\nb) Θ(n) time, Θ(n) space\nc) Θ(log n) time, Θ(1) space\nd) Θ(n) time, Θ(1) space\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Operator handling via stacks preserves associativity rules. Variant IP2_3.",
        "target_text": "Question: Evaluate an infix expression with 2–3 precedence levels and parentheses. Linear-time method?\nChoices:\na) Left-to-right without stacks\nb) Build a tree without any stack\nc) Sort tokens by precedence then scan\nd) Convert to postfix and evaluate with a stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW6157_996.",
        "target_text": "Question: Sliding window maximum for array length n=6157 and window w=996. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(nw)\nc) Θ(w log n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL566_154021.",
        "target_text": "Question: Find the k=566-th largest element among n=154021 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Binary search on value domain\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Adversarial patterns are neutralized by random choice. Variant UH100000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=100000 slots yields what benefit?\nChoices:\na) Cryptographic security by default\nb) Expected constant-time operations against adversaries\nc) Zero collisions guaranteed\nd) Eliminates need for resizing\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS121893.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=121893-th smallest?\nChoices:\na) Θ(k)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS805124_6685726.",
        "target_text": "Question: A directed graph with V=805124, E≈6685726. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) When it is a DAG (no directed cycles)\nc) When all vertices have outdegree ≥ 1\nd) Only if the graph is connected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS93799.",
        "target_text": "Question: In KMP, what does LPS[93799] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Index of next occurrence\nd) Number of mismatches up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX8_8.",
        "target_text": "Question: Radix sort with d=8 digits and base b=8 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(b^d)\nc) Θ(d·n·log b)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX608343063.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈608343063. Why?\nChoices:\na) Sorts the array first\nb) Requires the array to be cyclic\nc) Doubles the bound to bracket, then binary search\nd) Uses hashing to index unknown segments\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_2_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^3, f3=n^3 (log n)^2, f4=n^7?\nChoices:\na) Θ(n^7)\nb) Θ(n^3)\nc) Θ(n^3 (log n)^2)\nd) Θ((log n)^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R795264.",
        "target_text": "Question: Rotate an array right by r=795264 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Three-reversal method\nc) Selection sort then shift\nd) Single-step rotate repeated r times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR4.",
        "target_text": "Question: Reverse a singly linked list in groups of k=4 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(n)\nc) Θ(k log n)\nd) Θ(nk)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS3175.",
        "target_text": "Question: Compute stock span for 3175 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Fenwick tree\nc) Priority queue\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ878052.",
        "target_text": "Question: Schedule 878052 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Binary heap\nc) Stack\nd) Unordered array\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK4.",
        "target_text": "Question: In a d-ary heap (d=4), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It makes the operation constant time\nb) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nc) It increases height linearly\nd) No effect whatsoever\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.37.",
        "target_text": "Question: In separate chaining with load factor α=0.37, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS485789.",
        "target_text": "Question: BST with parent pointers (id=485789): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Always climb to root then go right once\nc) Use level-order and pick next node\nd) Reverse postorder traversal entirely\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC278150.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=278150 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(VE)\nc) Θ(V log V)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z886059.",
        "target_text": "Question: For string S (id=886059), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Number of distinct substrings up to i\nc) Next index of S[i]\nd) Number of mismatches at i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS231591.",
        "target_text": "Question: Keys are integers in range [0..231591]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Counting sort\nc) Quick sort\nd) Shell sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX396776818.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈396776818. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Doubles the bound to bracket, then binary search\nc) Sorts the array first\nd) Requires the array to be cyclic\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_3_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^1, f3=n^1 (log n)^3, f4=n^4?\nChoices:\na) Θ(n^1)\nb) Θ(n^4)\nc) Θ((log n)^3)\nd) Θ(n^1 (log n)^3)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P993008.",
        "target_text": "Question: Answer 993008 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Use a stack to store partial sums\nc) Recompute sums per query in Θ(n)\nd) Sort once and binary search per query\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C5.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 5× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(1) space\nb) Θ(n) time, Θ(n) space\nc) Θ(log n) time, Θ(1) space\nd) Θ(1) time, Θ(1) space\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS386.",
        "target_text": "Question: Compute stock span for 386 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Monotonic stack\nc) Priority queue\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ181764.",
        "target_text": "Question: For 181764 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Stack\nc) Binary heap\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH2466934.",
        "target_text": "Question: Build a binary heap from n=2466934 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH65536.",
        "target_text": "Question: In open addressing with double hashing over table size m=65536, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) g(k) coprime with m for all keys\nc) Choose m even and g(k) even\nd) Use g(k)=0 for some keys\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR153816.",
        "target_text": "Question: In a BST with distinct keys (id=153816), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Level-order\nc) Postorder\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D81312.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 81312]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Graph must be undirected\nc) Distinct weights are required\nd) Self-loops must be absent\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z230829.",
        "target_text": "Question: For string S (id=230829), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Next index of S[i]\nc) Number of mismatches at i\nd) Number of distinct substrings up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS319.",
        "target_text": "Question: Array is nearly sorted with at most 319 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Shell sort with fixed gaps\nc) Insertion sort\nd) Heap sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI30_672.",
        "target_text": "Question: Binary search over half-open range [30, 672)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Increase both lo and hi to skip duplicates\nc) Keep inclusive bounds on both ends\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A1.",
        "target_text": "Question: A dynamic array starts with capacity 1 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(√m)\nb) Θ(log m)\nc) Θ(m)\nd) Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P10924.",
        "target_text": "Question: Answer 10924 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Build prefix-sum array; O(1) per query\nc) Use a stack to store partial sums\nd) Recompute sums per query in Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL46511.",
        "target_text": "Question: Check if a singly linked list of length n=46511 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Sort and compare with original\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE61032.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=61032. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Max-heap\nc) Decreasing stack\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA2894.",
        "target_text": "Question: Circular-array queue with capacity 2894: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Require prime capacity\nc) Require power-of-two capacity\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL819_316859.",
        "target_text": "Question: Find the k=819-th largest element among n=316859 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Binary search on value domain\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH32768.",
        "target_text": "Question: In open addressing with double hashing over table size m=32768, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Make both hash functions identical\nc) Use g(k)=0 for some keys\nd) Choose m even and g(k) even\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS943493.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=943493-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP402550.",
        "target_text": "Question: Test bipartiteness (id=402550) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Check all degrees even\nc) Compute an MST then inspect edges\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS93271.",
        "target_text": "Question: In KMP, what does LPS[93271] represent for a given pattern?\nChoices:\na) Length of longest proper prefix that is also a suffix for prefix ending at i\nb) Index of next occurrence\nc) Number of mismatches up to i\nd) Total distinct prefixes up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS622228.",
        "target_text": "Question: Keys are integers in range [0..622228]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Heap sort\nc) Quick sort\nd) Shell sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS2794798.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=2794798 typically runs in?\nChoices:\na) Θ(n) average\nb) Θ(log n) average\nc) O(log log n) average\nd) O(1) worst-case\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M7_6_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/6) + n^3 for n being a power of 6.\nChoices:\na) Θ(n^3)\nb) Θ(n^3 log n)\nc) Θ(n^1.086 log n)\nd) Θ(n^1.086)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P972606.",
        "target_text": "Question: Answer 972606 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Recompute sums per query in Θ(n)\nb) Use a stack to store partial sums\nc) Sort once and binary search per query\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK97_6193.",
        "target_text": "Question: Merge k=97 sorted linked lists totaling n=6193 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n + k^2)\nc) Θ(k n)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP724.",
        "target_text": "Question: Verify whether a pop sequence of length n=724 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Sort both sequences then compare\nc) Simulate using one stack in Θ(n)\nd) Use a queue to mirror the stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ723301.",
        "target_text": "Question: Schedule 723301 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Binary heap\nc) Stack\nd) Circular queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC81376523.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=81376523?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.66.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.66?\nChoices:\na) To keep expected O(1) operations\nb) To maintain key stability\nc) To reduce memory usage to exact size\nd) To sort keys implicitly\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS615617.",
        "target_text": "Question: BST with parent pointers (id=615617): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Use level-order and pick next node\nc) Always climb to root then go right once\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST443131.",
        "target_text": "Question: MST question id=443131: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) Prim requires the entire edge set to be sorted first\nd) MST minimizes number of edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP63158.",
        "target_text": "Question: KMP matches a pattern of length m=63158 in linear time using which table?\nChoices:\na) Suffix array\nb) Rolling hash table\nc) Z-array exclusively\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST844414.",
        "target_text": "Question: Stability (id=844414): which pairing is correct?\nChoices:\na) Merge sort (stable), Heap sort (unstable)\nb) Quick sort (stable), Selection sort (unstable)\nc) Heap sort (stable), Merge sort (unstable)\nd) Counting sort (unstable)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU3201427.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=3201427. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Heap-based selection\nc) Linear scan with early exit\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_4_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^3, f3=n^3 (log n)^4, f4=n^8?\nChoices:\na) Θ(n^8)\nb) Θ(n^3)\nc) Θ(n^3 (log n)^4)\nd) Θ((log n)^4)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM68368.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=68368-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Binary search on index vs value gap\nc) Use a heap of differences\nd) Scan linearly counting gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL74398.",
        "target_text": "Question: Check if a singly linked list of length n=74398 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Find middle, reverse second half, compare\nc) Copy to array and two-pointer check\nd) Sort and compare with original\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE39709.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=39709. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Binary search tree\nc) Decreasing stack\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS1789.",
        "target_text": "Question: A queue via two stacks handles a burst of 1789 operations. Amortized costs?\nChoices:\na) ENQUEUE and DEQUEUE both amortized Θ(1)\nb) Both Θ(log n)\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH1617843.",
        "target_text": "Question: Build a binary heap from n=1617843 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.5.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.5?\nChoices:\na) To sort keys implicitly\nb) To keep expected O(1) operations\nc) To reduce memory usage to exact size\nd) To maintain key stability\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H250728153.",
        "target_text": "Question: For a balanced BST with n=250728153 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC299150.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=299150 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(VE)\nc) Θ(E log V)\nd) Θ(V log V)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000009.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Use of a min-heap\nb) Suffix tree guaranteeing O(1) per char\nc) Low collision probability of rolling hash\nd) Trie of all substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS157466.",
        "target_text": "Question: Heapsort stability check id=157466: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort is stable\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU9798527.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=9798527. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Hashing with chaining\nc) Linear scan with early exit\nd) Heap-based selection\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M2_6_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/6) + n^0 for n being a power of 6.\nChoices:\na) Θ(n^0.3869 log n)\nb) Θ(n^0.3869)\nc) Θ(n^0 log n)\nd) Θ(n^0)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S13602_429.",
        "target_text": "Question: Array length n=13602, find max-sum subarray of fixed length k=429. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK44_2325.",
        "target_text": "Question: Merge k=44 sorted linked lists totaling n=2325 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n + k^2)\nc) Θ(n log k)\nd) Θ(k n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP528.",
        "target_text": "Question: Verify whether a pop sequence of length n=528 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Backtrack with recursion in Θ(2^n)\nc) Use a queue to mirror the stack\nd) Sort both sequences then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA5833.",
        "target_text": "Question: Circular-array queue with capacity 5833: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require prime capacity\nc) Head==Tail means full\nd) Require power-of-two capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL14_276935.",
        "target_text": "Question: Find the k=14-th largest element among n=276935 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Deterministic selection (median-of-medians)\nc) Binary search on value domain\nd) Build max-heap and extract k times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.68.",
        "target_text": "Question: In separate chaining with load factor α=0.68, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(1/α)\nd) Θ(α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H722821469.",
        "target_text": "Question: For a balanced BST with n=722821469 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(√n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC994861.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=994861 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(VE)\nc) Θ(V log V)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Character-by-character descent. Variant TRIE52.",
        "target_text": "Question: Search a trie over alphabet size σ=52 for a key of length m. Time complexity?\nChoices:\na) Θ(m)\nb) Θ(log n)\nc) Θ(1) average for all m\nd) Θ(m log σ)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX5_8.",
        "target_text": "Question: Radix sort with d=5 digits and base b=8 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(d·n·log b)\nc) Θ(n log n)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX668476995.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈668476995. Why?\nChoices:\na) Sorts the array first\nb) Doubles the bound to bracket, then binary search\nc) Uses hashing to index unknown segments\nd) Requires the array to be cyclic\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T5_2_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^5, f3=n^5 (log n)^2, f4=n^10?\nChoices:\na) Θ(n^5 (log n)^2)\nb) Θ(n^5)\nc) Θ(n^10)\nd) Θ((log n)^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP8055_3917.",
        "target_text": "Question: Sorted array length n=8055. Decide if any pair sums to 3917. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Hash set in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Divide and conquer in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK76_4924.",
        "target_text": "Question: Merge k=76 sorted linked lists totaling n=4924 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n + k^2)\nc) Θ(n log k)\nd) Θ(k n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP353.",
        "target_text": "Question: Verify whether a pop sequence of length n=353 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Backtrack with recursion in Θ(2^n)\nd) Sort both sequences then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ804962.",
        "target_text": "Question: For 804962 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Deque\nc) Stack\nd) Binary heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL146_175560.",
        "target_text": "Question: Find the k=146-th largest element among n=175560 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Build max-heap and extract k times\nc) Deterministic selection (median-of-medians)\nd) Heapsort then index\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF1992803_0.41.",
        "target_text": "Question: Chaining hash table with n=1992803 keys at load factor α=0.41. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(α log α)\nd) Θ(nα)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS313596.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=313596-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(k)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP686520.",
        "target_text": "Question: Test bipartiteness (id=686520) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Sort vertices and deduplicate\nd) Compute an MST then inspect edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z30031.",
        "target_text": "Question: For string S (id=30031), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Number of mismatches at i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Next index of S[i]\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX6_8.",
        "target_text": "Question: Radix sort with d=6 digits and base b=8 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(d·n·log b)\nc) Θ(n log n)\nd) Θ(b^d)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS496338.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=496338 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(1) expected\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A2.",
        "target_text": "Question: A dynamic array starts with capacity 2 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(1)\nb) Θ(√m)\nc) Θ(log m)\nd) Θ(m)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S6843_256.",
        "target_text": "Question: Array length n=6843, find max-sum subarray of fixed length k=256. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(k log n)\nb) Θ(n)\nc) Θ(nk)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR3.",
        "target_text": "Question: Reverse a singly linked list in groups of k=3 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(k log n)\nc) Θ(n log k)\nd) Θ(nk)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Operator handling via stacks preserves associativity rules. Variant IP2_3.",
        "target_text": "Question: Evaluate an infix expression with 2–3 precedence levels and parentheses. Linear-time method?\nChoices:\na) Build a tree without any stack\nb) Convert to postfix and evaluate with a stack\nc) Left-to-right without stacks\nd) Sort tokens by precedence then scan\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS456.",
        "target_text": "Question: A queue via two stacks handles a burst of 456 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL217_465383.",
        "target_text": "Question: Find the k=217-th largest element among n=465383 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Deterministic selection (median-of-medians)\nc) Heapsort then index\nd) Build max-heap and extract k times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Adversarial patterns are neutralized by random choice. Variant UH10000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=10000 slots yields what benefit?\nChoices:\na) Expected constant-time operations against adversaries\nb) Eliminates need for resizing\nc) Zero collisions guaranteed\nd) Cryptographic security by default\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR678636.",
        "target_text": "Question: In a BST with distinct keys (id=678636), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Postorder\nc) Preorder\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D611363.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 611363]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Graph must be undirected\nc) Distinct weights are required\nd) Self-loops must be absent\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN659750.",
        "target_text": "Question: Check anagrams for strings of length n=659750 over fixed alphabet. Optimal approach?\nChoices:\na) Use a stack\nb) Count character frequencies in Θ(n)\nc) Sort both in Θ(n log n)\nd) DFS on character graph\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX10_16.",
        "target_text": "Question: Radix sort with d=10 digits and base b=16 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·n·log b)\nb) Θ(d·(n + b))\nc) Θ(b^d)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX442927595.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈442927595. Why?\nChoices:\na) Requires the array to be cyclic\nb) Doubles the bound to bracket, then binary search\nc) Uses hashing to index unknown segments\nd) Sorts the array first\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_6_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^3, f3=n^3 (log n)^6, f4=n^10?\nChoices:\na) Θ(n^10)\nb) Θ((log n)^6)\nc) Θ(n^3)\nd) Θ(n^3 (log n)^6)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S988_121.",
        "target_text": "Question: Array length n=988, find max-sum subarray of fixed length k=121. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN187209_709821.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=187209, B=709821. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Binary search on addresses\nc) Hash addresses of first list\nd) Reverse one list then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS7.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 7 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Use BFS on substring graph\nc) Greedy left-to-right without memory\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA4395.",
        "target_text": "Question: Circular-array queue with capacity 4395: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Head==Tail means full\nc) Require prime capacity\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL875_770282.",
        "target_text": "Question: Find the k=875-th largest element among n=770282 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Heapsort then index\nc) Deterministic selection (median-of-medians)\nd) Binary search on value domain\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.3.",
        "target_text": "Question: In separate chaining with load factor α=1.3, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H735859138.",
        "target_text": "Question: For a balanced BST with n=735859138 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST223791.",
        "target_text": "Question: MST question id=223791: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) MST is always unique in connected graphs\nd) MST minimizes number of edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z932568.",
        "target_text": "Question: For string S (id=932568), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Number of distinct substrings up to i\nc) Next index of S[i]\nd) Number of mismatches at i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS629402.",
        "target_text": "Question: Keys are integers in range [0..629402]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Counting sort\nc) Shell sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS4405971.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=4405971 typically runs in?\nChoices:\na) Θ(n) average\nb) O(1) worst-case\nc) O(log log n) average\nd) Θ(log n) average\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M4_5_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/5) + n^2 for n being a power of 5.\nChoices:\na) Θ(n^0.8614 log n)\nb) Θ(n^0.8614)\nc) Θ(n^2)\nd) Θ(n^2 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM72328.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=72328-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Hash all present values then scan\nc) Use a heap of differences\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN749914_69790.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=749914, B=69790. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Binary search on addresses\nc) Hash addresses of first list\nd) Reverse one list then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS4548.",
        "target_text": "Question: Compute stock span for 4548 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Fenwick tree\nc) Priority queue\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ420232.",
        "target_text": "Question: For 420232 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Stack\nc) Deque\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC55858596.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=55858596?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(log log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.5.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.5?\nChoices:\na) To keep expected O(1) operations\nb) To sort keys implicitly\nc) To reduce memory usage to exact size\nd) To maintain key stability\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA58118.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=58118 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) Naive parent climbing O(n) per query\nc) Sort node labels then binary search\nd) DFS from root each time\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS317495_2456919.",
        "target_text": "Question: A directed graph with V=317495, E≈2456919. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) When all vertices have outdegree ≥ 1\nc) Only if the graph is connected\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS7551.",
        "target_text": "Question: In KMP, what does LPS[7551] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Number of mismatches up to i\nc) Index of next occurrence\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS939411.",
        "target_text": "Question: Heapsort stability check id=939411: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort always beats merge sort\nd) Heapsort is stable\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX689329718.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈689329718. Why?\nChoices:\na) Sorts the array first\nb) Uses hashing to index unknown segments\nc) Requires the array to be cyclic\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_1_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^4, f3=n^4 (log n)^1, f4=n^10?\nChoices:\na) Θ(n^4)\nb) Θ(n^4 (log n)^1)\nc) Θ(n^10)\nd) Θ((log n)^1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P478624.",
        "target_text": "Question: Answer 478624 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Use a stack to store partial sums\nb) Build prefix-sum array; O(1) per query\nc) Recompute sums per query in Θ(n)\nd) Sort once and binary search per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN394627_663353.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=394627, B=663353. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Reverse one list then compare\nc) Binary search on addresses\nd) Hash addresses of first list\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP637.",
        "target_text": "Question: Verify whether a pop sequence of length n=637 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Use a queue to mirror the stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS7591.",
        "target_text": "Question: A queue via two stacks handles a burst of 7591 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM751_234311.",
        "target_text": "Question: Merge k=751 sorted streams totaling N=234311 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(k log N)\nc) Θ(N log N)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Threshold-based expansion preserves performance. Variant RS0.66.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.66?\nChoices:\na) To keep expected O(1) operations\nb) To sort keys implicitly\nc) To reduce memory usage to exact size\nd) To maintain key stability\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS529939.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=529939-th smallest?\nChoices:\na) Θ(k)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR613692.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=613692 edges. What algorithmic idea achieves linear time?\nChoices:\na) Kruskal’s algorithm\nb) Tarjan’s low-link DFS\nc) Dijkstra’s algorithm\nd) Topological sorting\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000007.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000007 achieves expected linear time due to what?\nChoices:\na) Suffix tree guaranteeing O(1) per char\nb) Use of a min-heap\nc) Low collision probability of rolling hash\nd) Trie of all substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST157979.",
        "target_text": "Question: Stability (id=157979): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Counting sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS3143469.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=3143469 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(1) expected\nc) Θ(n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M9_3_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/3) + n^0 for n being a power of 3.\nChoices:\na) Θ(n^2.0 log n)\nb) Θ(n^0)\nc) Θ(n^2.0)\nd) Θ(n^0 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S1698_205.",
        "target_text": "Question: Array length n=1698, find max-sum subarray of fixed length k=205. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(k log n)\nd) Θ(nk)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN825132_898388.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=825132, B=898388. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Reverse one list then compare\nc) Advance pointers; when one ends, jump to the other head\nd) Binary search on addresses\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS8.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 8 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Use BFS on substring graph\nc) Use two stacks for counts and fragments\nd) Greedy left-to-right without memory\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B67499.",
        "target_text": "Question: Run BFS on an unweighted graph with 67499 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) Nondecreasing distance from source\nc) All simple paths before all edges\nd) Lexicographic vertex order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL711_481506.",
        "target_text": "Question: Find the k=711-th largest element among n=481506 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Binary search on value domain\nc) Heapsort then index\nd) Build max-heap and extract k times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH2048.",
        "target_text": "Question: In open addressing with double hashing over table size m=2048, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) Choose m even and g(k) even\nc) Use g(k)=0 for some keys\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA830038.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=830038 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Euler tour + RMQ yields O(1) per query\nc) Sort node labels then binary search\nd) Naive parent climbing O(n) per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR543698.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=543698 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Topological sorting\nc) Tarjan’s low-link DFS\nd) Kruskal’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN17777.",
        "target_text": "Question: Check anagrams for strings of length n=17777 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) DFS on character graph\nc) Count character frequencies in Θ(n)\nd) Use a stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB36713979.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=36713979 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n log n)\nc) Ω(n)\nd) Ω(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI53_275.",
        "target_text": "Question: Binary search over half-open range [53, 275)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Keep inclusive bounds on both ends\nc) Increase both lo and hi to skip duplicates\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T5_1_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^5, f3=n^5 (log n)^1, f4=n^7?\nChoices:\na) Θ(n^5)\nb) Θ(n^7)\nc) Θ(n^5 (log n)^1)\nd) Θ((log n)^1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S11554_474.",
        "target_text": "Question: Array length n=11554, find max-sum subarray of fixed length k=474. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n)\nc) Θ(k log n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN200708.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 200708, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Copy next node’s data here and bypass next\nc) Reverse list then delete head\nd) Traverse from head to find predecessor\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS8.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 8 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Greedy left-to-right without memory\nc) Use two stacks for counts and fragments\nd) Use BFS on substring graph\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ191445.",
        "target_text": "Question: For 191445 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Stack\nc) Deque\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH1962471.",
        "target_text": "Question: Build a binary heap from n=1962471 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.5.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.5?\nChoices:\na) To sort keys implicitly\nb) To maintain key stability\nc) To keep expected O(1) operations\nd) To reduce memory usage to exact size\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS385258.",
        "target_text": "Question: BST with parent pointers (id=385258): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Use level-order and pick next node\nd) Always climb to root then go right once\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST570615.",
        "target_text": "Question: MST question id=570615: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) MST is always unique in connected graphs\nc) Kruskal adds the smallest edge that doesn't create a cycle\nd) Prim requires the entire edge set to be sorted first\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN114813.",
        "target_text": "Question: Check anagrams for strings of length n=114813 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) Count character frequencies in Θ(n)\nc) Use a stack\nd) DFS on character graph\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX9_2.",
        "target_text": "Question: Radix sort with d=9 digits and base b=2 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(d·n·log b)\nc) Θ(n log n)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS9521228.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=9521228 typically runs in?\nChoices:\na) Θ(log n) average\nb) O(1) worst-case\nc) O(log log n) average\nd) Θ(n) average\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A16.",
        "target_text": "Question: A dynamic array starts with capacity 16 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(√m)\nb) Θ(1)\nc) Θ(m)\nd) Θ(log m)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S13618_23.",
        "target_text": "Question: Array length n=13618, find max-sum subarray of fixed length k=23. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL91582.",
        "target_text": "Question: Check if a singly linked list of length n=91582 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Use a hash set of seen values\nc) Sort and compare with original\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS2311.",
        "target_text": "Question: Compute stock span for 2311 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Monotonic stack\nc) Hash table\nd) Fenwick tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ832795.",
        "target_text": "Question: Schedule 832795 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Unordered array\nc) Binary heap\nd) Stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA3_37392409.",
        "target_text": "Question: In a d-ary heap with d=3 and n=37392409 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log_3 n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF4524448_0.49.",
        "target_text": "Question: Chaining hash table with n=4524448 keys at load factor α=0.49. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS5332.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=5332-th smallest?\nChoices:\na) Θ(1)\nb) Θ(k)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC941389.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=941389 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(V+E)\nc) Θ(V log V)\nd) Θ(VE)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z631408.",
        "target_text": "Question: For string S (id=631408), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Number of mismatches at i\nc) Number of distinct substrings up to i\nd) Next index of S[i]\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS820733.",
        "target_text": "Question: Keys are integers in range [0..820733]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Shell sort\nc) Quick sort\nd) Heap sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS8251643.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=8251643 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M2_5_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/5) + n^2 for n being a power of 5.\nChoices:\na) Θ(n^0.4307 log n)\nb) Θ(n^0.4307)\nc) Θ(n^2)\nd) Θ(n^2 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S10686_124.",
        "target_text": "Question: Array length n=10686, find max-sum subarray of fixed length k=124. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(k log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN534890.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 534890, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Traverse from head to find predecessor\nc) Impossible under any model\nd) Reverse list then delete head\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE77270.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=77270. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Binary search tree\nc) Queue\nd) Max-heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ774241.",
        "target_text": "Question: Schedule 774241 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Unordered array\nc) Binary heap\nd) Stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM606_160742.",
        "target_text": "Question: Merge k=606 sorted streams totaling N=160742 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(k log N)\nc) Θ(N log N)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF5485842_0.32.",
        "target_text": "Question: Chaining hash table with n=5485842 keys at load factor α=0.32. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H382284858.",
        "target_text": "Question: For a balanced BST with n=382284858 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR396577.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=396577 edges. What algorithmic idea achieves linear time?\nChoices:\na) Kruskal’s algorithm\nb) Topological sorting\nc) Dijkstra’s algorithm\nd) Tarjan’s low-link DFS\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z264751.",
        "target_text": "Question: For string S (id=264751), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Next index of S[i]\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of distinct substrings up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS810246.",
        "target_text": "Question: Heapsort stability check id=810246: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort is not stable by default\nd) Heapsort is stable\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS2475995.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=2475995 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(1) expected\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A16.",
        "target_text": "Question: A dynamic array starts with capacity 16 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(log m)\nc) Θ(1)\nd) Θ(√m)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S5611_30.",
        "target_text": "Question: Array length n=5611, find max-sum subarray of fixed length k=30. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(k log n)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(nk)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK17_2683.",
        "target_text": "Question: Merge k=17 sorted linked lists totaling n=2683 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n log n)\nc) Θ(n log k)\nd) Θ(n + k^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1644.",
        "target_text": "Question: Verify whether a pop sequence of length n=1644 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Backtrack with recursion in Θ(2^n)\nc) Sort both sequences then compare\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA2134.",
        "target_text": "Question: Circular-array queue with capacity 2134: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Head==Tail means full\nc) Track count or keep one slot empty\nd) Require power-of-two capacity\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM1021_496046.",
        "target_text": "Question: Merge k=1021 sorted streams totaling N=496046 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(k log N)\nc) Θ(N log N)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Probe sequences align and form contiguous clusters. Variant LP5846.",
        "target_text": "Question: What clustering effect harms performance in linear probing, and what mitigates it?\nChoices:\na) Cache thrashing mitigated by padding\nb) Primary clustering mitigated by double hashing\nc) Path compression mitigated by union-find\nd) AVL imbalance mitigated by rotations\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS539040.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=539040-th smallest?\nChoices:\na) Θ(1)\nb) Θ(k)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP743465.",
        "target_text": "Question: Test bipartiteness (id=743465) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Check all degrees even\nd) Compute an MST then inspect edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK257_1000000009.",
        "target_text": "Question: Rabin–Karp with base=257, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Trie of all substrings\nb) Low collision probability of rolling hash\nc) Suffix tree guaranteeing O(1) per char\nd) Use of a min-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS391642.",
        "target_text": "Question: Heapsort stability check id=391642: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort is not stable by default\nc) Heapsort always beats merge sort\nd) Heapsort needs extra Θ(n) memory\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Geometric level distribution mirrors balanced trees. Variant SL0.75.",
        "target_text": "Question: Skip list with level promotion probability p=0.75: expected complexity of search/insert/delete?\nChoices:\na) Θ(n) for all three\nb) Θ(√n) for all three\nc) Θ(log n) for all three\nd) Θ(1) for all three\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_4_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^1, f3=n^1 (log n)^4, f4=n^5?\nChoices:\na) Θ(n^1 (log n)^4)\nb) Θ(n^5)\nc) Θ((log n)^4)\nd) Θ(n^1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM440286.",
        "target_text": "Question: Find a majority element in an array of length n=440286 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Divide-and-conquer merges\nc) Boyer–Moore voting with verification\nd) Binary search on value domain\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR4.",
        "target_text": "Question: Reverse a singly linked list in groups of k=4 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(k log n)\nc) Θ(n)\nd) Θ(nk)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Operator handling via stacks preserves associativity rules. Variant IP3_4.",
        "target_text": "Question: Evaluate an infix expression with 3–4 precedence levels and parentheses. Linear-time method?\nChoices:\na) Build a tree without any stack\nb) Sort tokens by precedence then scan\nc) Convert to postfix and evaluate with a stack\nd) Left-to-right without stacks\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ868375.",
        "target_text": "Question: Schedule 868375 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Circular queue\nc) Unordered array\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA11_90646314.",
        "target_text": "Question: In a d-ary heap with d=11 and n=90646314 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(log_11 n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF7792095_0.55.",
        "target_text": "Question: Chaining hash table with n=7792095 keys at load factor α=0.55. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(α log α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS260028.",
        "target_text": "Question: BST with parent pointers (id=260028): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Always climb to root then go right once\nc) Use level-order and pick next node\nd) Reverse postorder traversal entirely\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS333135_1560155.",
        "target_text": "Question: A directed graph with V=333135, E≈1560155. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) Only if the graph is connected\nc) When all vertices have outdegree ≥ 1\nd) Only if edges are unweighted\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB13735.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=13735. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) Queue of rolling hashes only\nc) BST over all substrings\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS394326.",
        "target_text": "Question: Keys are integers in range [0..394326]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Counting sort\nc) Quick sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI2_3533.",
        "target_text": "Question: Binary search over half-open range [2, 3533)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Keep inclusive bounds on both ends\nc) Increase both lo and hi to skip duplicates\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M3_5_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/5) + n^3 for n being a power of 5.\nChoices:\na) Θ(n^3 log n)\nb) Θ(n^3)\nc) Θ(n^0.6826)\nd) Θ(n^0.6826 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM55780.",
        "target_text": "Question: Find a majority element in an array of length n=55780 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Binary search on value domain\nc) Counting sort\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN775430.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 775430, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Traverse from head to find predecessor\nc) Reverse list then delete head\nd) Impossible under any model\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP763.",
        "target_text": "Question: Verify whether a pop sequence of length n=763 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS3244.",
        "target_text": "Question: A queue via two stacks handles a burst of 3244 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) Both Θ(log n)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA16_99314895.",
        "target_text": "Question: In a d-ary heap with d=16 and n=99314895 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log_16 n)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH1024.",
        "target_text": "Question: In open addressing with double hashing over table size m=1024, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) g(k) coprime with m for all keys\nc) Make both hash functions identical\nd) Choose m even and g(k) even\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA756841.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=756841 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) Euler tour + RMQ yields O(1) per query\nc) Sort node labels then binary search\nd) DFS from root each time\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS754836_7528101.",
        "target_text": "Question: A directed graph with V=754836, E≈7528101. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if edges are unweighted\nc) When it is a DAG (no directed cycles)\nd) Only if the graph is connected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP90085.",
        "target_text": "Question: KMP matches a pattern of length m=90085 in linear time using which table?\nChoices:\na) Rolling hash table\nb) LPS (failure) function\nc) Z-array exclusively\nd) Suffix array\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS797948.",
        "target_text": "Question: Heapsort stability check id=797948: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort is not stable by default\nd) Heapsort is stable\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI57_204.",
        "target_text": "Question: Binary search over half-open range [57, 204)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Increase both lo and hi to skip duplicates\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_3_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^4, f3=n^4 (log n)^3, f4=n^8?\nChoices:\na) Θ(n^4 (log n)^3)\nb) Θ((log n)^3)\nc) Θ(n^4)\nd) Θ(n^8)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP15649_4432.",
        "target_text": "Question: Sorted array length n=15649. Decide if any pair sums to 4432. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Hash set in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Divide and conquer in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR2.",
        "target_text": "Question: Reverse a singly linked list in groups of k=2 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS3456.",
        "target_text": "Question: Compute stock span for 3456 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Monotonic stack\nc) Fenwick tree\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS1592.",
        "target_text": "Question: A queue via two stacks handles a burst of 1592 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) Both Θ(log n)\nd) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL750_25722.",
        "target_text": "Question: Find the k=750-th largest element among n=25722 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Build max-heap and extract k times\nc) Deterministic selection (median-of-medians)\nd) Heapsort then index\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF7181907_0.35.",
        "target_text": "Question: Chaining hash table with n=7181907 keys at load factor α=0.35. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR186395.",
        "target_text": "Question: In a BST with distinct keys (id=186395), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Preorder\nc) Postorder\nd) Level-order\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR154710.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=154710 edges. What algorithmic idea achieves linear time?\nChoices:\na) Kruskal’s algorithm\nb) Dijkstra’s algorithm\nc) Tarjan’s low-link DFS\nd) Topological sorting\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE52.",
        "target_text": "Question: Search a trie over alphabet size σ=52 for a key of length m. Time complexity?\nChoices:\na) Θ(m)\nb) Θ(m log σ)\nc) Θ(log n)\nd) Θ(1) average for all m\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS620856.",
        "target_text": "Question: Keys are integers in range [0..620856]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Quick sort\nc) Shell sort\nd) Heap sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS738771.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=738771 typically runs in?\nChoices:\na) O(log log n) average\nb) O(1) worst-case\nc) Θ(log n) average\nd) Θ(n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T4_1_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^4, f3=n^4 (log n)^1, f4=n^9?\nChoices:\na) Θ(n^4)\nb) Θ(n^9)\nc) Θ((log n)^1)\nd) Θ(n^4 (log n)^1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP15899_1122.",
        "target_text": "Question: Sorted array length n=15899. Decide if any pair sums to 1122. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Two-pointer scan in Θ(n)\nc) Hash set in Θ(n log n)\nd) Divide and conquer in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN805056.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 805056, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Copy next node’s data here and bypass next\nc) Reverse list then delete head\nd) Traverse from head to find predecessor\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE50662.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=50662. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Queue\nc) Decreasing stack\nd) Max-heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ243155.",
        "target_text": "Question: For 243155 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Binary heap\nc) Queue\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC29429191.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=29429191?\nChoices:\na) Θ(log log n)\nb) Θ(n)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.37.",
        "target_text": "Question: In separate chaining with load factor α=1.37, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(α)\nc) Θ(1/α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H134876699.",
        "target_text": "Question: For a balanced BST with n=134876699 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Repeated edge relaxation tolerates negatives. Variant BF69008.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=69008 can handle which case while detecting it?\nChoices:\na) Negative edge weights and negative cycles\nb) Equal runtime on all graphs\nc) Only acyclic graphs\nd) Faster runtime on sparse nonnegative graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB5043.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=5043. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) BST over all substrings\nc) Queue of rolling hashes only\nd) Binary heap of substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX4_256.",
        "target_text": "Question: Radix sort with d=4 digits and base b=256 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·n·log b)\nb) Θ(d·(n + b))\nc) Θ(b^d)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Geometric level distribution mirrors balanced trees. Variant SL0.5.",
        "target_text": "Question: Skip list with level promotion probability p=0.5: expected complexity of search/insert/delete?\nChoices:\na) Θ(n) for all three\nb) Θ(√n) for all three\nc) Θ(log n) for all three\nd) Θ(1) for all three\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A16.",
        "target_text": "Question: A dynamic array starts with capacity 16 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(1)\nb) Θ(√m)\nc) Θ(m)\nd) Θ(log m)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R819435.",
        "target_text": "Question: Rotate an array right by r=819435 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Three-reversal method\nc) Heapify then extract\nd) Selection sort then shift\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN193694.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 193694, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Impossible under any model\nc) Reverse list then delete head\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS2488.",
        "target_text": "Question: Compute stock span for 2488 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Monotonic stack\nc) Fenwick tree\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ218178.",
        "target_text": "Question: For 218178 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Deque\nc) Stack\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK5.",
        "target_text": "Question: In a d-ary heap (d=5), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It increases height linearly\nb) It makes the operation constant time\nc) No effect whatsoever\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF7748154_0.62.",
        "target_text": "Question: Chaining hash table with n=7748154 keys at load factor α=0.62. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H893066355.",
        "target_text": "Question: For a balanced BST with n=893066355 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(√n)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS367658_1272517.",
        "target_text": "Question: A directed graph with V=367658, E≈1272517. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When all vertices have outdegree ≥ 1\nc) When it is a DAG (no directed cycles)\nd) Only if edges are unweighted\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB15005.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=15005. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Queue of rolling hashes only\nc) Binary heap of substrings\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS960.",
        "target_text": "Question: Array is nearly sorted with at most 960 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Heap sort\nc) Shell sort with fixed gaps\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS4970617.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=4970617 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(1) expected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_1_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^4, f3=n^4 (log n)^1, f4=n^11?\nChoices:\na) Θ(n^11)\nb) Θ((log n)^1)\nc) Θ(n^4 (log n)^1)\nd) Θ(n^4)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM15194.",
        "target_text": "Question: Find a majority element in an array of length n=15194 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Divide-and-conquer merges\nc) Counting sort\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN512055.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 512055, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Impossible under any model\nc) Copy next node’s data here and bypass next\nd) Traverse from head to find predecessor\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP805.",
        "target_text": "Question: Verify whether a pop sequence of length n=805 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Simulate using one stack in Θ(n)\nc) Use a queue to mirror the stack\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS5648.",
        "target_text": "Question: A queue via two stacks handles a burst of 5648 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) Both Θ(log n)\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC36688689.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=36688689?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(1)\nd) Θ(log log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.58.",
        "target_text": "Question: In separate chaining with load factor α=0.58, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(1/α)\nd) Θ(α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H418542979.",
        "target_text": "Question: For a balanced BST with n=418542979 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF75733.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=75733 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Negative edge weights and negative cycles\nc) Only acyclic graphs\nd) Equal runtime on all graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB13177.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=13177. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) BST over all substrings\nc) Suffix automaton or suffix array + LCP\nd) Binary heap of substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS266.",
        "target_text": "Question: Array is nearly sorted with at most 266 inversions. Which algorithm excels?\nChoices:\na) Insertion sort\nb) Heap sort\nc) Radix sort\nd) Shell sort with fixed gaps\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX321732533.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈321732533. Why?\nChoices:\na) Sorts the array first\nb) Doubles the bound to bracket, then binary search\nc) Uses hashing to index unknown segments\nd) Requires the array to be cyclic\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T4_3_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^4, f3=n^4 (log n)^3, f4=n^8?\nChoices:\na) Θ((log n)^3)\nb) Θ(n^4)\nc) Θ(n^8)\nd) Θ(n^4 (log n)^3)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM883889.",
        "target_text": "Question: Find a majority element in an array of length n=883889 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Divide-and-conquer merges\nc) Counting sort\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL27254.",
        "target_text": "Question: Check if a singly linked list of length n=27254 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Sort and compare with original\nc) Use a hash set of seen values\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP414.",
        "target_text": "Question: Verify whether a pop sequence of length n=414 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Backtrack with recursion in Θ(2^n)\nc) Sort both sequences then compare\nd) Use a queue to mirror the stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B775610.",
        "target_text": "Question: Run BFS on an unweighted graph with 775610 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Nondecreasing distance from source\nc) Lexicographic vertex order\nd) Minimum memory footprint\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC24115306.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=24115306?\nChoices:\na) Θ(1)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Adversarial patterns are neutralized by random choice. Variant UH10000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=10000 slots yields what benefit?\nChoices:\na) Eliminates need for resizing\nb) Expected constant-time operations against adversaries\nc) Zero collisions guaranteed\nd) Cryptographic security by default\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR917924.",
        "target_text": "Question: In a BST with distinct keys (id=917924), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Level-order\nc) Preorder\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF91150.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=91150 can handle which case while detecting it?\nChoices:\na) Equal runtime on all graphs\nb) Faster runtime on sparse nonnegative graphs\nc) Only acyclic graphs\nd) Negative edge weights and negative cycles\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN94267.",
        "target_text": "Question: Check anagrams for strings of length n=94267 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) DFS on character graph\nc) Use a stack\nd) Sort both in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX7_16.",
        "target_text": "Question: Radix sort with d=7 digits and base b=16 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(n log n)\nc) Θ(d·n·log b)\nd) Θ(b^d)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU2695038.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=2695038. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Hashing with chaining\nc) Binary search with left/right bias\nd) Heap-based selection\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M4_5_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/5) + n^1 for n being a power of 5.\nChoices:\na) Θ(n^1)\nb) Θ(n^1 log n)\nc) Θ(n^0.8614 log n)\nd) Θ(n^0.8614)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P443846.",
        "target_text": "Question: Answer 443846 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Use a stack to store partial sums\nb) Build prefix-sum array; O(1) per query\nc) Sort once and binary search per query\nd) Recompute sums per query in Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK82_7686.",
        "target_text": "Question: Merge k=82 sorted linked lists totaling n=7686 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(k n)\nc) Θ(n log k)\nd) Θ(n + k^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1196.",
        "target_text": "Question: Verify whether a pop sequence of length n=1196 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS5122.",
        "target_text": "Question: A queue via two stacks handles a burst of 5122 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM429_122175.",
        "target_text": "Question: Merge k=429 sorted streams totaling N=122175 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log k)\nc) Θ(k log N)\nd) Θ(N log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.5.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.5?\nChoices:\na) To keep expected O(1) operations\nb) To maintain key stability\nc) To reduce memory usage to exact size\nd) To sort keys implicitly\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H731041683.",
        "target_text": "Question: For a balanced BST with n=731041683 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(log log n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR411927.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=411927 edges. What algorithmic idea achieves linear time?\nChoices:\na) Tarjan’s low-link DFS\nb) Dijkstra’s algorithm\nc) Kruskal’s algorithm\nd) Topological sorting\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000007.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000007 achieves expected linear time due to what?\nChoices:\na) Suffix tree guaranteeing O(1) per char\nb) Trie of all substrings\nc) Use of a min-heap\nd) Low collision probability of rolling hash\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS276333.",
        "target_text": "Question: Heapsort stability check id=276333: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort is not stable by default\nd) Heapsort always beats merge sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Geometric level distribution mirrors balanced trees. Variant SL0.25.",
        "target_text": "Question: Skip list with level promotion probability p=0.25: expected complexity of search/insert/delete?\nChoices:\na) Θ(√n) for all three\nb) Θ(log n) for all three\nc) Θ(1) for all three\nd) Θ(n) for all three\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M7_6_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/6) + n^4 for n being a power of 6.\nChoices:\na) Θ(n^1.086)\nb) Θ(n^1.086 log n)\nc) Θ(n^4 log n)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S3476_131.",
        "target_text": "Question: Array length n=3476, find max-sum subarray of fixed length k=131. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C5.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 5× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(1) space\nb) Θ(n) time, Θ(n) space\nc) Θ(1) time, Θ(1) space\nd) Θ(log n) time, Θ(1) space\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE45942.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=45942. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Max-heap\nc) Queue\nd) Binary search tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS5165.",
        "target_text": "Question: A queue via two stacks handles a burst of 5165 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK6.",
        "target_text": "Question: In a d-ary heap (d=6), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) No effect whatsoever\nb) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nc) It increases height linearly\nd) It makes the operation constant time\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF2843417_0.89.",
        "target_text": "Question: Chaining hash table with n=2843417 keys at load factor α=0.89. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(α log α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA792613.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=792613 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Euler tour + RMQ yields O(1) per query\nc) Naive parent climbing O(n) per query\nd) DFS from root each time\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP164433.",
        "target_text": "Question: Test bipartiteness (id=164433) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Sort vertices and deduplicate\nd) Compute an MST then inspect edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB90862.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=90862. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) BST over all substrings\nc) Binary heap of substrings\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS168459.",
        "target_text": "Question: Heapsort stability check id=168459: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is not stable by default\nc) Heapsort is stable\nd) Heapsort needs extra Θ(n) memory\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX918446707.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈918446707. Why?\nChoices:\na) Requires the array to be cyclic\nb) Sorts the array first\nc) Doubles the bound to bracket, then binary search\nd) Uses hashing to index unknown segments\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M5_6_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/6) + n^3 for n being a power of 6.\nChoices:\na) Θ(n^3 log n)\nb) Θ(n^0.8982)\nc) Θ(n^3)\nd) Θ(n^0.8982 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP12121_2843.",
        "target_text": "Question: Sorted array length n=12121. Decide if any pair sums to 2843. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Brute force in Θ(n^2)\nc) Divide and conquer in Θ(n log n)\nd) Hash set in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN565604.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 565604, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Impossible under any model\nc) Copy next node’s data here and bypass next\nd) Reverse list then delete head\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE2160.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=2160. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Binary search tree\nc) Decreasing stack\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS7542.",
        "target_text": "Question: A queue via two stacks handles a burst of 7542 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA4_53497789.",
        "target_text": "Question: In a d-ary heap with d=4 and n=53497789 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(log_4 n)\nc) Θ(n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.66.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.66?\nChoices:\na) To sort keys implicitly\nb) To keep expected O(1) operations\nc) To maintain key stability\nd) To reduce memory usage to exact size\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS484889.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=484889-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(1)\nd) Θ(k)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP321281.",
        "target_text": "Question: Test bipartiteness (id=321281) of an undirected graph efficiently. Which method works?\nChoices:\na) Attempt 2-coloring via BFS; failure indicates odd cycle\nb) Sort vertices and deduplicate\nc) Check all degrees even\nd) Compute an MST then inspect edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP11535.",
        "target_text": "Question: KMP matches a pattern of length m=11535 in linear time using which table?\nChoices:\na) Suffix array\nb) LPS (failure) function\nc) Z-array exclusively\nd) Rolling hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB64295584.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=64295584 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n)\nc) Ω(log n)\nd) Ω(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS8528346.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=8528346 typically runs in?\nChoices:\na) O(1) worst-case\nb) Θ(n) average\nc) O(log log n) average\nd) Θ(log n) average\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M4_3_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/3) + n^3 for n being a power of 3.\nChoices:\na) Θ(n^3 log n)\nb) Θ(n^1.2619)\nc) Θ(n^3)\nd) Θ(n^1.2619 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R362981.",
        "target_text": "Question: Rotate an array right by r=362981 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Heapify then extract\nc) Three-reversal method\nd) Selection sort then shift\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN90789_407305.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=90789, B=407305. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Reverse one list then compare\nc) Hash addresses of first list\nd) Binary search on addresses\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS2.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 2 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Greedy left-to-right without memory\nc) Sort segments then concatenate\nd) Use BFS on substring graph\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ920651.",
        "target_text": "Question: For 920651 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Binary heap\nc) Deque\nd) Stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA16_85870126.",
        "target_text": "Question: In a d-ary heap with d=16 and n=85870126 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log_16 n)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.5.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.5?\nChoices:\na) To keep expected O(1) operations\nb) To reduce memory usage to exact size\nc) To maintain key stability\nd) To sort keys implicitly\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS406284.",
        "target_text": "Question: BST with parent pointers (id=406284): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Always climb to root then go right once\nd) Reverse postorder traversal entirely\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D362752.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 362752]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Distinct weights are required\nc) Graph must be undirected\nd) Self-loops must be absent\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB45081.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=45081. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) Suffix automaton or suffix array + LCP\nc) Queue of rolling hashes only\nd) BST over all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS25928.",
        "target_text": "Question: Heapsort stability check id=25928: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort always beats merge sort\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS8237082.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=8237082 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(1) expected\nc) Θ(n log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T2_3_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^2, f3=n^2 (log n)^3, f4=n^8?\nChoices:\na) Θ(n^2 (log n)^3)\nb) Θ(n^2)\nc) Θ((log n)^3)\nd) Θ(n^8)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R956092.",
        "target_text": "Question: Rotate an array right by r=956092 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Single-step rotate repeated r times\nc) Selection sort then shift\nd) Heapify then extract\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN107888_882140.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=107888, B=882140. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Hash addresses of first list\nc) Reverse one list then compare\nd) Binary search on addresses\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS8.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 8 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Sort segments then concatenate\nc) Greedy left-to-right without memory\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ433418.",
        "target_text": "Question: Schedule 433418 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Unordered array\nc) Circular queue\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC6465688.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=6465688?\nChoices:\na) Θ(1)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Adversarial patterns are neutralized by random choice. Variant UH100000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=100000 slots yields what benefit?\nChoices:\na) Zero collisions guaranteed\nb) Cryptographic security by default\nc) Eliminates need for resizing\nd) Expected constant-time operations against adversaries\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS49357.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=49357-th smallest?\nChoices:\na) Θ(k)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR637984.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=637984 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Kruskal’s algorithm\nc) Dijkstra’s algorithm\nd) Tarjan’s low-link DFS\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN32834.",
        "target_text": "Question: Check anagrams for strings of length n=32834 over fixed alphabet. Optimal approach?\nChoices:\na) Use a stack\nb) Sort both in Θ(n log n)\nc) DFS on character graph\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS519649.",
        "target_text": "Question: Heapsort stability check id=519649: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort always beats merge sort\nc) Heapsort is stable\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU8660577.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=8660577. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Hashing with chaining\nc) Heap-based selection\nd) Linear scan with early exit\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T5_4_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^5, f3=n^5 (log n)^4, f4=n^8?\nChoices:\na) Θ(n^5 (log n)^4)\nb) Θ(n^5)\nc) Θ((log n)^4)\nd) Θ(n^8)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM94346.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=94346-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Binary search on index vs value gap\nc) Use a heap of differences\nd) Scan linearly counting gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK2_62.",
        "target_text": "Question: Merge k=2 sorted linked lists totaling n=62 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log k)\nc) Θ(n log n)\nd) Θ(k n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS2475.",
        "target_text": "Question: Compute stock span for 2475 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Monotonic stack\nc) Priority queue\nd) Fenwick tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ762391.",
        "target_text": "Question: Schedule 762391 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Binary heap\nc) Unordered array\nd) Stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL459_762864.",
        "target_text": "Question: Find the k=459-th largest element among n=762864 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Heapsort then index\nc) Build max-heap and extract k times\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.66.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.66?\nChoices:\na) To keep expected O(1) operations\nb) To reduce memory usage to exact size\nc) To sort keys implicitly\nd) To maintain key stability\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA718306.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=718306 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) Sort node labels then binary search\nc) DFS from root each time\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC660249.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=660249 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(VE)\nc) Θ(V log V)\nd) Θ(E log V)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS38792.",
        "target_text": "Question: In KMP, what does LPS[38792] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Number of mismatches up to i\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Total distinct prefixes up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST409057.",
        "target_text": "Question: Stability (id=409057): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Quick sort (stable), Selection sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX466973966.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈466973966. Why?\nChoices:\na) Sorts the array first\nb) Uses hashing to index unknown segments\nc) Doubles the bound to bracket, then binary search\nd) Requires the array to be cyclic\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M5_5_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/5) + n^0 for n being a power of 5.\nChoices:\na) Θ(n^1.0)\nb) Θ(n^0)\nc) Θ(n^1.0 log n)\nd) Θ(n^0 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM8878.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=8878-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Hash all present values then scan\nc) Binary search on index vs value gap\nd) Use a heap of differences\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN455132_595688.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=455132, B=595688. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Hash addresses of first list\nc) Advance pointers; when one ends, jump to the other head\nd) Binary search on addresses\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE96827.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=96827. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Decreasing stack\nc) Max-heap\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW10393_408.",
        "target_text": "Question: Sliding window maximum for array length n=10393 and window w=408. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(n)\nc) Θ(w log n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM134_41156.",
        "target_text": "Question: Merge k=134 sorted streams totaling N=41156 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(k log N)\nc) Θ(N log k)\nd) Θ(N + k^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.66.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.66?\nChoices:\na) To sort keys implicitly\nb) To keep expected O(1) operations\nc) To reduce memory usage to exact size\nd) To maintain key stability\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS161796.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=161796-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(√n)\nc) Θ(k)\nd) Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR696472.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=696472 edges. What algorithmic idea achieves linear time?\nChoices:\na) Tarjan’s low-link DFS\nb) Topological sorting\nc) Kruskal’s algorithm\nd) Dijkstra’s algorithm\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Character-by-character descent. Variant TRIE2.",
        "target_text": "Question: Search a trie over alphabet size σ=2 for a key of length m. Time complexity?\nChoices:\na) Θ(m log σ)\nb) Θ(m)\nc) Θ(log n)\nd) Θ(1) average for all m\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST788128.",
        "target_text": "Question: Stability (id=788128): which pairing is correct?\nChoices:\na) Merge sort (stable), Heap sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Counting sort (unstable)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX944439662.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈944439662. Why?\nChoices:\na) Sorts the array first\nb) Doubles the bound to bracket, then binary search\nc) Requires the array to be cyclic\nd) Uses hashing to index unknown segments\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A2.",
        "target_text": "Question: A dynamic array starts with capacity 2 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(√m)\nb) Θ(m)\nc) Θ(1)\nd) Θ(log m)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P625058.",
        "target_text": "Question: Answer 625058 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Recompute sums per query in Θ(n)\nb) Sort once and binary search per query\nc) Build prefix-sum array; O(1) per query\nd) Use a stack to store partial sums\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK43_6567.",
        "target_text": "Question: Merge k=43 sorted linked lists totaling n=6567 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n log k)\nc) Θ(k n)\nd) Θ(n + k^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS3.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 3 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Greedy left-to-right without memory\nc) Use two stacks for counts and fragments\nd) Use BFS on substring graph\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ692987.",
        "target_text": "Question: Schedule 692987 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Unordered array\nc) Stack\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM20_6910.",
        "target_text": "Question: Merge k=20 sorted streams totaling N=6910 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log k)\nc) Θ(N + k^2)\nd) Θ(N log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF2997251_0.85.",
        "target_text": "Question: Chaining hash table with n=2997251 keys at load factor α=0.85. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(α log α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR249092.",
        "target_text": "Question: In a BST with distinct keys (id=249092), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Preorder\nc) Inorder\nd) Postorder\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS881844_8450413.",
        "target_text": "Question: A directed graph with V=881844, E≈8450413. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) Only if edges are unweighted\nc) When it is a DAG (no directed cycles)\nd) When all vertices have outdegree ≥ 1\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS39380.",
        "target_text": "Question: In KMP, what does LPS[39380] represent for a given pattern?\nChoices:\na) Length of longest proper prefix that is also a suffix for prefix ending at i\nb) Index of next occurrence\nc) Number of mismatches up to i\nd) Total distinct prefixes up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB814784.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=814784 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(log n)\nc) Ω(n log n)\nd) Ω(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI19_1073.",
        "target_text": "Question: Binary search over half-open range [19, 1073)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Increase both lo and hi to skip duplicates\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Geometric resizing spreads copying cost over many operations. Variant A1.",
        "target_text": "Question: A dynamic array starts with capacity 1 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(1)\nc) Θ(√m)\nd) Θ(log m)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP8569_82.",
        "target_text": "Question: Sorted array length n=8569. Decide if any pair sums to 82. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Divide and conquer in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Hash set in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL88713.",
        "target_text": "Question: Check if a singly linked list of length n=88713 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Copy to array and two-pointer check\nc) Find middle, reverse second half, compare\nd) Use a hash set of seen values\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS4.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 4 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Sort segments then concatenate\nc) Greedy left-to-right without memory\nd) Use BFS on substring graph\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS659.",
        "target_text": "Question: A queue via two stacks handles a burst of 659 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) Both Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL675_659176.",
        "target_text": "Question: Find the k=675-th largest element among n=659176 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Build max-heap and extract k times\nc) Binary search on value domain\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Threshold-based expansion preserves performance. Variant RS0.75.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.75?\nChoices:\na) To keep expected O(1) operations\nb) To maintain key stability\nc) To sort keys implicitly\nd) To reduce memory usage to exact size\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS374273.",
        "target_text": "Question: BST with parent pointers (id=374273): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Always climb to root then go right once\nd) Use level-order and pick next node\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST656107.",
        "target_text": "Question: MST question id=656107: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) MST minimizes number of edges\nc) Prim requires the entire edge set to be sorted first\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS57386.",
        "target_text": "Question: In KMP, what does LPS[57386] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Total distinct prefixes up to i\nc) Index of next occurrence\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX8_2.",
        "target_text": "Question: Radix sort with d=8 digits and base b=2 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·n·log b)\nb) Θ(d·(n + b))\nc) Θ(n log n)\nd) Θ(b^d)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS3280710.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=3280710 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(1) expected\nc) Θ(n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A2.",
        "target_text": "Question: A dynamic array starts with capacity 2 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(log m)\nc) Θ(1)\nd) Θ(√m)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM106709.",
        "target_text": "Question: Find a majority element in an array of length n=106709 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Counting sort\nc) Divide-and-conquer merges\nd) Binary search on value domain\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL36517.",
        "target_text": "Question: Check if a singly linked list of length n=36517 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Use a hash set of seen values\nc) Find middle, reverse second half, compare\nd) Sort and compare with original\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS2.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 2 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Greedy left-to-right without memory\nc) Sort segments then concatenate\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS8115.",
        "target_text": "Question: A queue via two stacks handles a burst of 8115 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) Both Θ(log n)\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH966936.",
        "target_text": "Question: Build a binary heap from n=966936 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(n^2)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Adversarial patterns are neutralized by random choice. Variant UH10000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=10000 slots yields what benefit?\nChoices:\na) Expected constant-time operations against adversaries\nb) Cryptographic security by default\nc) Zero collisions guaranteed\nd) Eliminates need for resizing\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR844939.",
        "target_text": "Question: In a BST with distinct keys (id=844939), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Inorder\nc) Postorder\nd) Level-order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST894760.",
        "target_text": "Question: MST question id=894760: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) MST is always unique in connected graphs\nc) Prim requires the entire edge set to be sorted first\nd) MST minimizes number of edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000007.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000007 achieves expected linear time due to what?\nChoices:\na) Use of a min-heap\nb) Suffix tree guaranteeing O(1) per char\nc) Low collision probability of rolling hash\nd) Trie of all substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB10106187.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=10106187 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n)\nc) Ω(log n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Geometric level distribution mirrors balanced trees. Variant SL0.25.",
        "target_text": "Question: Skip list with level promotion probability p=0.25: expected complexity of search/insert/delete?\nChoices:\na) Θ(√n) for all three\nb) Θ(n) for all three\nc) Θ(log n) for all three\nd) Θ(1) for all three\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M9_4_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/4) + n^2 for n being a power of 4.\nChoices:\na) Θ(n^1.585)\nb) Θ(n^1.585 log n)\nc) Θ(n^2 log n)\nd) Θ(n^2)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM354303.",
        "target_text": "Question: Find a majority element in an array of length n=354303 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Divide-and-conquer merges\nc) Boyer–Moore voting with verification\nd) Binary search on value domain\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN411346_547107.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=411346, B=547107. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Reverse one list then compare\nc) Advance pointers; when one ends, jump to the other head\nd) Binary search on addresses\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS2.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 2 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Use BFS on substring graph\nc) Use two stacks for counts and fragments\nd) Greedy left-to-right without memory\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ529155.",
        "target_text": "Question: For 529155 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Stack\nc) Binary heap\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA5_26022498.",
        "target_text": "Question: In a d-ary heap with d=5 and n=26022498 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(log_5 n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.26.",
        "target_text": "Question: In separate chaining with load factor α=0.26, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(log n)\nc) Θ(α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS325899.",
        "target_text": "Question: BST with parent pointers (id=325899): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Always climb to root then go right once\nc) Reverse postorder traversal entirely\nd) Use level-order and pick next node\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR580767.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=580767 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Tarjan’s low-link DFS\nc) Topological sorting\nd) Kruskal’s algorithm\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Character-by-character descent. Variant TRIE128.",
        "target_text": "Question: Search a trie over alphabet size σ=128 for a key of length m. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(m log σ)\nc) Θ(1) average for all m\nd) Θ(m)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS871717.",
        "target_text": "Question: Keys are integers in range [0..871717]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Counting sort\nc) Heap sort\nd) Shell sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Geometric level distribution mirrors balanced trees. Variant SL0.25.",
        "target_text": "Question: Skip list with level promotion probability p=0.25: expected complexity of search/insert/delete?\nChoices:\na) Θ(1) for all three\nb) Θ(√n) for all three\nc) Θ(n) for all three\nd) Θ(log n) for all three\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M8_4_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/4) + n^0 for n being a power of 4.\nChoices:\na) Θ(n^0)\nb) Θ(n^0 log n)\nc) Θ(n^1.5 log n)\nd) Θ(n^1.5)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP18376_3491.",
        "target_text": "Question: Sorted array length n=18376. Decide if any pair sums to 3491. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Divide and conquer in Θ(n log n)\nc) Hash set in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR6.",
        "target_text": "Question: Reverse a singly linked list in groups of k=6 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(n)\nc) Θ(k log n)\nd) Θ(n log k)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS333.",
        "target_text": "Question: Compute stock span for 333 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Fenwick tree\nc) Priority queue\nd) Hash table\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B926929.",
        "target_text": "Question: Run BFS on an unweighted graph with 926929 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) Lexicographic vertex order\nc) Nondecreasing distance from source\nd) All simple paths before all edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL37_777404.",
        "target_text": "Question: Find the k=37-th largest element among n=777404 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Build max-heap and extract k times\nc) Binary search on value domain\nd) Heapsort then index\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF1485421_0.36.",
        "target_text": "Question: Chaining hash table with n=1485421 keys at load factor α=0.36. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS603766.",
        "target_text": "Question: BST with parent pointers (id=603766): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) Use level-order and pick next node\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Reverse postorder traversal entirely\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC878973.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=878973 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(V log V)\nc) Θ(V+E)\nd) Θ(E log V)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB6728.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=6728. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Binary heap of substrings\nc) Suffix automaton or suffix array + LCP\nd) Queue of rolling hashes only\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB58103387.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=58103387 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(log n)\nc) Ω(n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU5865793.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=5865793. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Heap-based selection\nc) Linear scan with early exit\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_1_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^3, f3=n^3 (log n)^1, f4=n^5?\nChoices:\na) Θ((log n)^1)\nb) Θ(n^3 (log n)^1)\nc) Θ(n^3)\nd) Θ(n^5)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP181_538.",
        "target_text": "Question: Sorted array length n=181. Decide if any pair sums to 538. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Divide and conquer in Θ(n log n)\nc) Brute force in Θ(n^2)\nd) Two-pointer scan in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN728050_86380.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=728050, B=86380. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Reverse one list then compare\nc) Hash addresses of first list\nd) Advance pointers; when one ends, jump to the other head\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Operator handling via stacks preserves associativity rules. Variant IP3_4.",
        "target_text": "Question: Evaluate an infix expression with 3–4 precedence levels and parentheses. Linear-time method?\nChoices:\na) Left-to-right without stacks\nb) Sort tokens by precedence then scan\nc) Build a tree without any stack\nd) Convert to postfix and evaluate with a stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B943251.",
        "target_text": "Question: Run BFS on an unweighted graph with 943251 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) Nondecreasing distance from source\nc) All simple paths before all edges\nd) Minimum memory footprint\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA13_79226416.",
        "target_text": "Question: In a d-ary heap with d=13 and n=79226416 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(log_13 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF7074359_0.22.",
        "target_text": "Question: Chaining hash table with n=7074359 keys at load factor α=0.22. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS953658.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=953658-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(√n)\nd) Θ(k)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Repeated edge relaxation tolerates negatives. Variant BF6648.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=6648 can handle which case while detecting it?\nChoices:\na) Only acyclic graphs\nb) Faster runtime on sparse nonnegative graphs\nc) Negative edge weights and negative cycles\nd) Equal runtime on all graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS58483.",
        "target_text": "Question: In KMP, what does LPS[58483] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Number of mismatches up to i\nd) Total distinct prefixes up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS885.",
        "target_text": "Question: Array is nearly sorted with at most 885 inversions. Which algorithm excels?\nChoices:\na) Insertion sort\nb) Shell sort with fixed gaps\nc) Heap sort\nd) Radix sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS9217559.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=9217559 typically runs in?\nChoices:\na) O(log log n) average\nb) O(1) worst-case\nc) Θ(log n) average\nd) Θ(n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M7_2_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/2) + n^0 for n being a power of 2.\nChoices:\na) Θ(n^0)\nb) Θ(n^2.8074 log n)\nc) Θ(n^2.8074)\nd) Θ(n^0 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R871687.",
        "target_text": "Question: Rotate an array right by r=871687 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Heapify then extract\nc) Three-reversal method\nd) Selection sort then shift\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Phase difference accumulates around the cycle. Variant C5.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 5× and 1×. Complexity?\nChoices:\na) Θ(1) time, Θ(1) space\nb) Θ(n) time, Θ(n) space\nc) Θ(n) time, Θ(1) space\nd) Θ(log n) time, Θ(1) space\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1220.",
        "target_text": "Question: Verify whether a pop sequence of length n=1220 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Sort both sequences then compare\nc) Simulate using one stack in Θ(n)\nd) Use a queue to mirror the stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS3976.",
        "target_text": "Question: A queue via two stacks handles a burst of 3976 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL365_71891.",
        "target_text": "Question: Find the k=365-th largest element among n=71891 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Binary search on value domain\nc) Heapsort then index\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF6015266_0.81.",
        "target_text": "Question: Chaining hash table with n=6015266 keys at load factor α=0.81. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(nα)\nc) Θ(α log α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H767181831.",
        "target_text": "Question: For a balanced BST with n=767181831 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC128832.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=128832 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V log V)\nb) Θ(VE)\nc) Θ(V+E)\nd) Θ(E log V)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP79829.",
        "target_text": "Question: KMP matches a pattern of length m=79829 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Suffix array\nc) Z-array exclusively\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB95300831.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=95300831 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n^2)\nc) Ω(n)\nd) Ω(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS3770462.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=3770462 typically runs in?\nChoices:\na) Θ(n) average\nb) O(log log n) average\nc) Θ(log n) average\nd) O(1) worst-case\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A1.",
        "target_text": "Question: A dynamic array starts with capacity 1 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(√m)\nb) Θ(m)\nc) Θ(1)\nd) Θ(log m)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM23096.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=23096-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Hash all present values then scan\nc) Scan linearly counting gaps\nd) Use a heap of differences\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR10.",
        "target_text": "Question: Reverse a singly linked list in groups of k=10 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(n log k)\nc) Θ(n)\nd) Θ(k log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Per-node metadata preserves constant-time MIN. Variant MS1340.",
        "target_text": "Question: Support PUSH, POP, and MIN in worst-case Θ(1). What augmentation works?\nChoices:\na) Periodically rebuild the stack\nb) Scan on demand for MIN\nc) Store (value, currentMin) per node\nd) Keep a global heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ989870.",
        "target_text": "Question: Schedule 989870 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Circular queue\nc) Binary heap\nd) Stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH1749749.",
        "target_text": "Question: Build a binary heap from n=1749749 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n^2)\nc) Θ(log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Adversarial patterns are neutralized by random choice. Variant UH1000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=1000 slots yields what benefit?\nChoices:\na) Expected constant-time operations against adversaries\nb) Eliminates need for resizing\nc) Cryptographic security by default\nd) Zero collisions guaranteed\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR772147.",
        "target_text": "Question: In a BST with distinct keys (id=772147), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Postorder\nc) Inorder\nd) Preorder\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR401788.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=401788 edges. What algorithmic idea achieves linear time?\nChoices:\na) Tarjan’s low-link DFS\nb) Kruskal’s algorithm\nc) Dijkstra’s algorithm\nd) Topological sorting\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS63532.",
        "target_text": "Question: In KMP, what does LPS[63532] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Total distinct prefixes up to i\nd) Index of next occurrence\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX5_4.",
        "target_text": "Question: Radix sort with d=5 digits and base b=4 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·n·log b)\nc) Θ(d·(n + b))\nd) Θ(b^d)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS2992189.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=2992189 typically runs in?\nChoices:\na) Θ(log n) average\nb) Θ(n) average\nc) O(1) worst-case\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T2_1_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^2, f3=n^2 (log n)^1, f4=n^5?\nChoices:\na) Θ((log n)^1)\nb) Θ(n^2)\nc) Θ(n^5)\nd) Θ(n^2 (log n)^1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R375900.",
        "target_text": "Question: Rotate an array right by r=375900 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Single-step rotate repeated r times\nc) Selection sort then shift\nd) Heapify then extract\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN904438.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 904438, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Traverse from head to find predecessor\nc) Impossible under any model\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS3309.",
        "target_text": "Question: Compute stock span for 3309 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Monotonic stack\nc) Priority queue\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ717107.",
        "target_text": "Question: For 717107 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Binary heap\nc) Deque\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH3867538.",
        "target_text": "Question: Build a binary heap from n=3867538 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(n^2)\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.29.",
        "target_text": "Question: In separate chaining with load factor α=1.29, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H519936778.",
        "target_text": "Question: For a balanced BST with n=519936778 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(√n)\nd) Θ(log log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC49279.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=49279 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(V+E)\nc) Θ(V log V)\nd) Θ(VE)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB39100.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=39100. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) Suffix automaton or suffix array + LCP\nc) BST over all substrings\nd) Queue of rolling hashes only\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST29497.",
        "target_text": "Question: Stability (id=29497): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Counting sort (unstable)\nc) Heap sort (stable), Merge sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS7053199.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=7053199 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A1.",
        "target_text": "Question: A dynamic array starts with capacity 1 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(1)\nb) Θ(log m)\nc) Θ(√m)\nd) Θ(m)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM898574.",
        "target_text": "Question: Find a majority element in an array of length n=898574 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Binary search on value domain\nc) Counting sort\nd) Divide-and-conquer merges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Phase difference accumulates around the cycle. Variant C5.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 5× and 1×. Complexity?\nChoices:\na) Θ(log n) time, Θ(1) space\nb) Θ(1) time, Θ(1) space\nc) Θ(n) time, Θ(n) space\nd) Θ(n) time, Θ(1) space\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1254.",
        "target_text": "Question: Verify whether a pop sequence of length n=1254 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Simulate using one stack in Θ(n)\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B298565.",
        "target_text": "Question: Run BFS on an unweighted graph with 298565 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) All simple paths before all edges\nc) Lexicographic vertex order\nd) Minimum memory footprint\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL115_630969.",
        "target_text": "Question: Find the k=115-th largest element among n=630969 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Deterministic selection (median-of-medians)\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF1879383_0.85.",
        "target_text": "Question: Chaining hash table with n=1879383 keys at load factor α=0.85. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(α log α)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H400953755.",
        "target_text": "Question: For a balanced BST with n=400953755 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP591301.",
        "target_text": "Question: Test bipartiteness (id=591301) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Compute an MST then inspect edges\nc) Sort vertices and deduplicate\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z706388.",
        "target_text": "Question: For string S (id=706388), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Number of mismatches at i\nc) Number of distinct substrings up to i\nd) Next index of S[i]\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS900559.",
        "target_text": "Question: Keys are integers in range [0..900559]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Counting sort\nc) Shell sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX387562594.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈387562594. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Sorts the array first\nc) Requires the array to be cyclic\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_6_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^3, f3=n^3 (log n)^6, f4=n^8?\nChoices:\na) Θ(n^3 (log n)^6)\nb) Θ((log n)^6)\nc) Θ(n^3)\nd) Θ(n^8)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R446338.",
        "target_text": "Question: Rotate an array right by r=446338 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Selection sort then shift\nc) Heapify then extract\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN443978.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 443978, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Reverse list then delete head\nc) Impossible under any model\nd) Traverse from head to find predecessor\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE8021.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=8021. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Decreasing stack\nc) Binary search tree\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS6295.",
        "target_text": "Question: A queue via two stacks handles a burst of 6295 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) Both Θ(log n)\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK3.",
        "target_text": "Question: In a d-ary heap (d=3), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It increases height linearly\nb) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nc) It makes the operation constant time\nd) No effect whatsoever\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Adversarial patterns are neutralized by random choice. Variant UH100000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=100000 slots yields what benefit?\nChoices:\na) Zero collisions guaranteed\nb) Cryptographic security by default\nc) Expected constant-time operations against adversaries\nd) Eliminates need for resizing\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS498335.",
        "target_text": "Question: BST with parent pointers (id=498335): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) Use level-order and pick next node\nc) Reverse postorder traversal entirely\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST430236.",
        "target_text": "Question: MST question id=430236: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) Prim requires the entire edge set to be sorted first\nc) MST minimizes number of edges\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB8295.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=8295. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) Suffix automaton or suffix array + LCP\nc) Queue of rolling hashes only\nd) BST over all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST674946.",
        "target_text": "Question: Stability (id=674946): which pairing is correct?\nChoices:\na) Heap sort (stable), Merge sort (unstable)\nb) Counting sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS4894153.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=4894153 typically runs in?\nChoices:\na) O(1) worst-case\nb) Θ(n) average\nc) Θ(log n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_1_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^4, f3=n^4 (log n)^1, f4=n^9?\nChoices:\na) Θ(n^9)\nb) Θ(n^4 (log n)^1)\nc) Θ((log n)^1)\nd) Θ(n^4)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R606095.",
        "target_text": "Question: Rotate an array right by r=606095 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Selection sort then shift\nc) Heapify then extract\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR8.",
        "target_text": "Question: Reverse a singly linked list in groups of k=8 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(n log k)\nc) Θ(k log n)\nd) Θ(nk)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS2325.",
        "target_text": "Question: Compute stock span for 2325 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Monotonic stack\nc) Priority queue\nd) Fenwick tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW3435_502.",
        "target_text": "Question: Sliding window maximum for array length n=3435 and window w=502. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(nw)\nc) Θ(n log n)\nd) Θ(w log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA13_9357644.",
        "target_text": "Question: In a d-ary heap with d=13 and n=9357644 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(log_13 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH32768.",
        "target_text": "Question: In open addressing with double hashing over table size m=32768, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Choose m even and g(k) even\nc) Make both hash functions identical\nd) Use g(k)=0 for some keys\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR373736.",
        "target_text": "Question: In a BST with distinct keys (id=373736), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Level-order\nc) Inorder\nd) Preorder\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS611786_3687990.",
        "target_text": "Question: A directed graph with V=611786, E≈3687990. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) When all vertices have outdegree ≥ 1\nc) Only if the graph is connected\nd) Only if edges are unweighted\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS28997.",
        "target_text": "Question: In KMP, what does LPS[28997] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Total distinct prefixes up to i\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Index of next occurrence\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS225.",
        "target_text": "Question: Array is nearly sorted with at most 225 inversions. Which algorithm excels?\nChoices:\na) Insertion sort\nb) Shell sort with fixed gaps\nc) Radix sort\nd) Heap sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS6859996.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=6859996 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(1) expected\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_4_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^3, f3=n^3 (log n)^4, f4=n^10?\nChoices:\na) Θ(n^3 (log n)^4)\nb) Θ(n^10)\nc) Θ((log n)^4)\nd) Θ(n^3)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S13386_179.",
        "target_text": "Question: Array length n=13386, find max-sum subarray of fixed length k=179. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN548663.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 548663, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Traverse from head to find predecessor\nc) Reverse list then delete head\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1076.",
        "target_text": "Question: Verify whether a pop sequence of length n=1076 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Simulate using one stack in Θ(n)\nc) Use a queue to mirror the stack\nd) Sort both sequences then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B266101.",
        "target_text": "Question: Run BFS on an unweighted graph with 266101 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) All simple paths before all edges\nc) Minimum memory footprint\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM903_389638.",
        "target_text": "Question: Merge k=903 sorted streams totaling N=389638 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log N)\nc) Θ(k log N)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH131072.",
        "target_text": "Question: In open addressing with double hashing over table size m=131072, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) g(k) coprime with m for all keys\nc) Make both hash functions identical\nd) Use g(k)=0 for some keys\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Black-height constraints cap the height by 2·log2(n+1). Variant RB5202.",
        "target_text": "Question: Which invariant is essential in Red–Black trees to bound height?\nChoices:\na) Same number of black nodes on every root-to-leaf path\nb) Adjacent reds allowed\nc) Root is always red\nd) Leaves can be any color without restriction\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR901043.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=901043 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Topological sorting\nc) Kruskal’s algorithm\nd) Tarjan’s low-link DFS\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP74171.",
        "target_text": "Question: KMP matches a pattern of length m=74171 in linear time using which table?\nChoices:\na) Suffix array\nb) Z-array exclusively\nc) LPS (failure) function\nd) Rolling hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST492142.",
        "target_text": "Question: Stability (id=492142): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Merge sort (stable), Heap sort (unstable)\nc) Counting sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU7147749.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=7147749. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Binary search with left/right bias\nc) Heap-based selection\nd) Linear scan with early exit\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M4_6_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/6) + n^0 for n being a power of 6.\nChoices:\na) Θ(n^0.7737)\nb) Θ(n^0 log n)\nc) Θ(n^0.7737 log n)\nd) Θ(n^0)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP5608_3675.",
        "target_text": "Question: Sorted array length n=5608. Decide if any pair sums to 3675. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Hash set in Θ(n log n)\nc) Brute force in Θ(n^2)\nd) Two-pointer scan in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK70_12018.",
        "target_text": "Question: Merge k=70 sorted linked lists totaling n=12018 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(k n)\nc) Θ(n + k^2)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP909.",
        "target_text": "Question: Verify whether a pop sequence of length n=909 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Sort both sequences then compare\nc) Use a queue to mirror the stack\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B618147.",
        "target_text": "Question: Run BFS on an unweighted graph with 618147 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) Nondecreasing distance from source\nc) Minimum memory footprint\nd) All simple paths before all edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL481_57053.",
        "target_text": "Question: Find the k=481-th largest element among n=57053 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Build max-heap and extract k times\nc) Deterministic selection (median-of-medians)\nd) Heapsort then index\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH8192.",
        "target_text": "Question: In open addressing with double hashing over table size m=8192, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) Make both hash functions identical\nc) g(k) coprime with m for all keys\nd) Use g(k)=0 for some keys\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS300364.",
        "target_text": "Question: BST with parent pointers (id=300364): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Always climb to root then go right once\nc) Use level-order and pick next node\nd) Reverse postorder traversal entirely\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC131252.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=131252 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(E log V)\nc) Θ(V log V)\nd) Θ(VE)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP68317.",
        "target_text": "Question: KMP matches a pattern of length m=68317 in linear time using which table?\nChoices:\na) Suffix array\nb) LPS (failure) function\nc) Z-array exclusively\nd) Rolling hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS795086.",
        "target_text": "Question: Keys are integers in range [0..795086]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Shell sort\nc) Heap sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU584345.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=584345. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Binary search with left/right bias\nc) Hashing with chaining\nd) Linear scan with early exit\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Geometric resizing spreads copying cost over many operations. Variant A2.",
        "target_text": "Question: A dynamic array starts with capacity 2 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(√m)\nc) Θ(1)\nd) Θ(log m)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R906931.",
        "target_text": "Question: Rotate an array right by r=906931 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Single-step rotate repeated r times\nc) Selection sort then shift\nd) Heapify then extract\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN497674.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 497674, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Reverse list then delete head\nc) Copy next node’s data here and bypass next\nd) Traverse from head to find predecessor\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP259.",
        "target_text": "Question: Verify whether a pop sequence of length n=259 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Sort both sequences then compare\nc) Use a queue to mirror the stack\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW10486_671.",
        "target_text": "Question: Sliding window maximum for array length n=10486 and window w=671. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(w log n)\nc) Θ(nw)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM556_63257.",
        "target_text": "Question: Merge k=556 sorted streams totaling N=63257 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(N log N)\nc) Θ(N + k^2)\nd) Θ(k log N)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.66.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.66?\nChoices:\na) To keep expected O(1) operations\nb) To maintain key stability\nc) To sort keys implicitly\nd) To reduce memory usage to exact size\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR124759.",
        "target_text": "Question: In a BST with distinct keys (id=124759), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Postorder\nc) Inorder\nd) Level-order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP491824.",
        "target_text": "Question: Test bipartiteness (id=491824) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Check all degrees even\nd) Sort vertices and deduplicate\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB42066.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=42066. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Suffix automaton or suffix array + LCP\nc) Queue of rolling hashes only\nd) Binary heap of substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB39112498.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=39112498 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n)\nc) Ω(n^2)\nd) Ω(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS8467890.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=8467890 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(1) expected\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A8.",
        "target_text": "Question: A dynamic array starts with capacity 8 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(log m)\nc) Θ(√m)\nd) Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM941646.",
        "target_text": "Question: Find a majority element in an array of length n=941646 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Counting sort\nc) Boyer–Moore voting with verification\nd) Binary search on value domain\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN563255_395672.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=563255, B=395672. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Advance pointers; when one ends, jump to the other head\nc) Binary search on addresses\nd) Reverse one list then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE27168.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=27168. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Queue\nc) Binary search tree\nd) Max-heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B837111.",
        "target_text": "Question: Run BFS on an unweighted graph with 837111 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) Lexicographic vertex order\nc) Nondecreasing distance from source\nd) All simple paths before all edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH8382172.",
        "target_text": "Question: Build a binary heap from n=8382172 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n^2)\nc) Θ(n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC1.22.",
        "target_text": "Question: In separate chaining with load factor α=1.22, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA850477.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=850477 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) Sort node labels then binary search\nc) DFS from root each time\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR776677.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=776677 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Kruskal’s algorithm\nc) Tarjan’s low-link DFS\nd) Dijkstra’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z861096.",
        "target_text": "Question: For string S (id=861096), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Number of mismatches at i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of distinct substrings up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST8526.",
        "target_text": "Question: Stability (id=8526): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Counting sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS5126371.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=5126371 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(log n) average\nc) Θ(n) average\nd) O(1) worst-case\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M3_2_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/2) + n^3 for n being a power of 2.\nChoices:\na) Θ(n^1.585)\nb) Θ(n^1.585 log n)\nc) Θ(n^3 log n)\nd) Θ(n^3)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R9566.",
        "target_text": "Question: Rotate an array right by r=9566 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Heapify then extract\nc) Three-reversal method\nd) Selection sort then shift\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL94540.",
        "target_text": "Question: Check if a singly linked list of length n=94540 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Sort and compare with original\nc) Use a hash set of seen values\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS2131.",
        "target_text": "Question: Compute stock span for 2131 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Priority queue\nc) Monotonic stack\nd) Hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ510589.",
        "target_text": "Question: For 510589 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Stack\nc) Deque\nd) Binary heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH8820442.",
        "target_text": "Question: Build a binary heap from n=8820442 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Probe sequences align and form contiguous clusters. Variant LP7769.",
        "target_text": "Question: What clustering effect harms performance in linear probing, and what mitigates it?\nChoices:\na) AVL imbalance mitigated by rotations\nb) Cache thrashing mitigated by padding\nc) Primary clustering mitigated by double hashing\nd) Path compression mitigated by union-find\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA298150.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=298150 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) DFS from root each time\nc) Sort node labels then binary search\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP722850.",
        "target_text": "Question: Test bipartiteness (id=722850) of an undirected graph efficiently. Which method works?\nChoices:\na) Attempt 2-coloring via BFS; failure indicates odd cycle\nb) Compute an MST then inspect edges\nc) Sort vertices and deduplicate\nd) Check all degrees even\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Character-by-character descent. Variant TRIE128.",
        "target_text": "Question: Search a trie over alphabet size σ=128 for a key of length m. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(1) average for all m\nc) Θ(m)\nd) Θ(m log σ)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS318860.",
        "target_text": "Question: Heapsort stability check id=318860: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort always beats merge sort\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS3385394.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=3385394 typically runs in?\nChoices:\na) O(1) worst-case\nb) Θ(log n) average\nc) O(log log n) average\nd) Θ(n) average\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_2_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^4, f3=n^4 (log n)^2, f4=n^7?\nChoices:\na) Θ(n^7)\nb) Θ(n^4 (log n)^2)\nc) Θ((log n)^2)\nd) Θ(n^4)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P450098.",
        "target_text": "Question: Answer 450098 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Recompute sums per query in Θ(n)\nc) Use a stack to store partial sums\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL65872.",
        "target_text": "Question: Check if a singly linked list of length n=65872 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Copy to array and two-pointer check\nc) Use a hash set of seen values\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS4095.",
        "target_text": "Question: Compute stock span for 4095 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Monotonic stack\nc) Fenwick tree\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW1201_924.",
        "target_text": "Question: Sliding window maximum for array length n=1201 and window w=924. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(w log n)\nc) Θ(n log n)\nd) Θ(nw)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL294_508771.",
        "target_text": "Question: Find the k=294-th largest element among n=508771 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Build max-heap and extract k times\nc) Heapsort then index\nd) Binary search on value domain\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH131072.",
        "target_text": "Question: In open addressing with double hashing over table size m=131072, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Make both hash functions identical\nc) Choose m even and g(k) even\nd) Use g(k)=0 for some keys\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS553139.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=553139-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(1)\nc) Θ(k)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS508664_3483121.",
        "target_text": "Question: A directed graph with V=508664, E≈3483121. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) Only if the graph is connected\nc) When it is a DAG (no directed cycles)\nd) When all vertices have outdegree ≥ 1\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB58253.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=58253. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) Queue of rolling hashes only\nc) BST over all substrings\nd) Binary heap of substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB60695390.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=60695390 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n)\nc) Ω(n^2)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI6_2185.",
        "target_text": "Question: Binary search over half-open range [6, 2185)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Keep inclusive bounds on both ends\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Increase both lo and hi to skip duplicates\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M4_3_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/3) + n^2 for n being a power of 3.\nChoices:\na) Θ(n^2)\nb) Θ(n^1.2619)\nc) Θ(n^1.2619 log n)\nd) Θ(n^2 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP16334_4306.",
        "target_text": "Question: Sorted array length n=16334. Decide if any pair sums to 4306. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Brute force in Θ(n^2)\nd) Divide and conquer in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK67_11260.",
        "target_text": "Question: Merge k=67 sorted linked lists totaling n=11260 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log n)\nc) Θ(k n)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS2360.",
        "target_text": "Question: Compute stock span for 2360 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Monotonic stack\nc) Priority queue\nd) Fenwick tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA4845.",
        "target_text": "Question: Circular-array queue with capacity 4845: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require prime capacity\nc) Head==Tail means full\nd) Require power-of-two capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM1015_303031.",
        "target_text": "Question: Merge k=1015 sorted streams totaling N=303031 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log N)\nc) Θ(N + k^2)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF1234279_0.79.",
        "target_text": "Question: Chaining hash table with n=1234279 keys at load factor α=0.79. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(α log α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H514303170.",
        "target_text": "Question: For a balanced BST with n=514303170 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP281522.",
        "target_text": "Question: Test bipartiteness (id=281522) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Compute an MST then inspect edges\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Sort vertices and deduplicate\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP57709.",
        "target_text": "Question: KMP matches a pattern of length m=57709 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) Suffix array\nc) Rolling hash table\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS248674.",
        "target_text": "Question: Keys are integers in range [0..248674]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Counting sort\nc) Shell sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI78_4777.",
        "target_text": "Question: Binary search over half-open range [78, 4777)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Increase both lo and hi to skip duplicates\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_2_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^1, f3=n^1 (log n)^2, f4=n^8?\nChoices:\na) Θ((log n)^2)\nb) Θ(n^8)\nc) Θ(n^1 (log n)^2)\nd) Θ(n^1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM686569.",
        "target_text": "Question: Find a majority element in an array of length n=686569 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Boyer–Moore voting with verification\nc) Counting sort\nd) Divide-and-conquer merges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN873431.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 873431, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Impossible under any model\nc) Reverse list then delete head\nd) Traverse from head to find predecessor\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP347.",
        "target_text": "Question: Verify whether a pop sequence of length n=347 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Simulate using one stack in Θ(n)\nc) Use a queue to mirror the stack\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B970932.",
        "target_text": "Question: Run BFS on an unweighted graph with 970932 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) All simple paths before all edges\nc) Minimum memory footprint\nd) Lexicographic vertex order\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL139_319929.",
        "target_text": "Question: Find the k=139-th largest element among n=319929 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Heapsort then index\nc) Build max-heap and extract k times\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Adversarial patterns are neutralized by random choice. Variant UH10000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=10000 slots yields what benefit?\nChoices:\na) Zero collisions guaranteed\nb) Expected constant-time operations against adversaries\nc) Eliminates need for resizing\nd) Cryptographic security by default\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS539832.",
        "target_text": "Question: BST with parent pointers (id=539832): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) Reverse postorder traversal entirely\nc) Always climb to root then go right once\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D467566.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 467566]. Why?\nChoices:\na) Graph must be undirected\nb) Self-loops must be absent\nc) Nonnegative weights ensure greedy optimality\nd) Distinct weights are required\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE52.",
        "target_text": "Question: Search a trie over alphabet size σ=52 for a key of length m. Time complexity?\nChoices:\na) Θ(m log σ)\nb) Θ(1) average for all m\nc) Θ(log n)\nd) Θ(m)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST22681.",
        "target_text": "Question: Stability (id=22681): which pairing is correct?\nChoices:\na) Heap sort (stable), Merge sort (unstable)\nb) Quick sort (stable), Selection sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Counting sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU9783694.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=9783694. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Heap-based selection\nc) Binary search with left/right bias\nd) Hashing with chaining\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M4_2_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/2) + n^2 for n being a power of 2.\nChoices:\na) Θ(n^2.0)\nb) Θ(n^2)\nc) Θ(n^2.0 log^2 n)\nd) Θ(n^2 log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S19341_61.",
        "target_text": "Question: Array length n=19341, find max-sum subarray of fixed length k=61. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n log n)\nc) Θ(k log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN494830.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 494830, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Reverse list then delete head\nc) Impossible under any model\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE26510.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=26510. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Queue\nc) Binary search tree\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA2785.",
        "target_text": "Question: Circular-array queue with capacity 2785: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Require prime capacity\nc) Track count or keep one slot empty\nd) Head==Tail means full\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK4.",
        "target_text": "Question: In a d-ary heap (d=4), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) No effect whatsoever\nb) It makes the operation constant time\nc) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nd) It increases height linearly\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF3402861_0.26.",
        "target_text": "Question: Chaining hash table with n=3402861 keys at load factor α=0.26. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H713805934.",
        "target_text": "Question: For a balanced BST with n=713805934 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF20486.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=20486 can handle which case while detecting it?\nChoices:\na) Negative edge weights and negative cycles\nb) Faster runtime on sparse nonnegative graphs\nc) Equal runtime on all graphs\nd) Only acyclic graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS7603.",
        "target_text": "Question: In KMP, what does LPS[7603] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Index of next occurrence\nc) Number of mismatches up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS453146.",
        "target_text": "Question: Heapsort stability check id=453146: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort is not stable by default\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort always beats merge sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU2671358.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=2671358. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Binary search with left/right bias\nc) Hashing with chaining\nd) Linear scan with early exit\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M5_6_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/6) + n^3 for n being a power of 6.\nChoices:\na) Θ(n^3)\nb) Θ(n^3 log n)\nc) Θ(n^0.8982 log n)\nd) Θ(n^0.8982)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM7083.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=7083-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Scan linearly counting gaps\nc) Hash all present values then scan\nd) Use a heap of differences\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN68913.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 68913, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Traverse from head to find predecessor\nc) Copy next node’s data here and bypass next\nd) Reverse list then delete head\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP783.",
        "target_text": "Question: Verify whether a pop sequence of length n=783 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Backtrack with recursion in Θ(2^n)\nc) Simulate using one stack in Θ(n)\nd) Use a queue to mirror the stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B78861.",
        "target_text": "Question: Run BFS on an unweighted graph with 78861 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) All simple paths before all edges\nc) Lexicographic vertex order\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH2525263.",
        "target_text": "Question: Build a binary heap from n=2525263 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA144704.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=144704 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) Sort node labels then binary search\nc) DFS from root each time\nd) Naive parent climbing O(n) per query\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC540792.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=540792 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(V log V)\nc) Θ(V+E)\nd) Θ(E log V)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK257_1000000009.",
        "target_text": "Question: Rabin–Karp with base=257, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Suffix tree guaranteeing O(1) per char\nb) Low collision probability of rolling hash\nc) Trie of all substrings\nd) Use of a min-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS865.",
        "target_text": "Question: Array is nearly sorted with at most 865 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Shell sort with fixed gaps\nc) Insertion sort\nd) Radix sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX163963040.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈163963040. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Uses hashing to index unknown segments\nc) Sorts the array first\nd) Requires the array to be cyclic\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A8.",
        "target_text": "Question: A dynamic array starts with capacity 8 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(1)\nb) Θ(log m)\nc) Θ(m)\nd) Θ(√m)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM471534.",
        "target_text": "Question: Find a majority element in an array of length n=471534 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Boyer–Moore voting with verification\nc) Counting sort\nd) Binary search on value domain\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL46378.",
        "target_text": "Question: Check if a singly linked list of length n=46378 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Sort and compare with original\nc) Use a hash set of seen values\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP389.",
        "target_text": "Question: Verify whether a pop sequence of length n=389 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Use a queue to mirror the stack\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW4704_939.",
        "target_text": "Question: Sliding window maximum for array length n=4704 and window w=939. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(n)\nc) Θ(w log n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM844_215106.",
        "target_text": "Question: Merge k=844 sorted streams totaling N=215106 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(k log N)\nc) Θ(N log k)\nd) Θ(N log N)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF2493230_0.22.",
        "target_text": "Question: Chaining hash table with n=2493230 keys at load factor α=0.22. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA613281.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=613281 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Naive parent climbing O(n) per query\nc) Euler tour + RMQ yields O(1) per query\nd) Sort node labels then binary search\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Repeated edge relaxation tolerates negatives. Variant BF20543.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=20543 can handle which case while detecting it?\nChoices:\na) Equal runtime on all graphs\nb) Only acyclic graphs\nc) Faster runtime on sparse nonnegative graphs\nd) Negative edge weights and negative cycles\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN413598.",
        "target_text": "Question: Check anagrams for strings of length n=413598 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Use a stack\nc) Sort both in Θ(n log n)\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS180.",
        "target_text": "Question: Array is nearly sorted with at most 180 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Shell sort with fixed gaps\nc) Insertion sort\nd) Radix sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS5456178.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=5456178 typically runs in?\nChoices:\na) O(1) worst-case\nb) Θ(n) average\nc) O(log log n) average\nd) Θ(log n) average\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M2_3_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/3) + n^3 for n being a power of 3.\nChoices:\na) Θ(n^0.6309)\nb) Θ(n^3)\nc) Θ(n^0.6309 log n)\nd) Θ(n^3 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM326348.",
        "target_text": "Question: Find a majority element in an array of length n=326348 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Boyer–Moore voting with verification\nc) Counting sort\nd) Divide-and-conquer merges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN559618_215449.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=559618, B=215449. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Hash addresses of first list\nc) Binary search on addresses\nd) Advance pointers; when one ends, jump to the other head\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE59280.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=59280. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Decreasing stack\nc) Max-heap\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B396353.",
        "target_text": "Question: Run BFS on an unweighted graph with 396353 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) Nondecreasing distance from source\nc) Minimum memory footprint\nd) All simple paths before all edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM645_112301.",
        "target_text": "Question: Merge k=645 sorted streams totaling N=112301 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(k log N)\nc) Θ(N log N)\nd) Θ(N + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.57.",
        "target_text": "Question: In separate chaining with load factor α=0.57, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR283851.",
        "target_text": "Question: In a BST with distinct keys (id=283851), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Inorder\nc) Level-order\nd) Preorder\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF23618.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=23618 can handle which case while detecting it?\nChoices:\na) Negative edge weights and negative cycles\nb) Only acyclic graphs\nc) Faster runtime on sparse nonnegative graphs\nd) Equal runtime on all graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z106212.",
        "target_text": "Question: For string S (id=106212), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Next index of S[i]\nc) Number of distinct substrings up to i\nd) Number of mismatches at i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS750221.",
        "target_text": "Question: Keys are integers in range [0..750221]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Shell sort\nc) Counting sort\nd) Heap sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU2410501.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=2410501. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Hashing with chaining\nc) Heap-based selection\nd) Linear scan with early exit\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M9_6_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/6) + n^0 for n being a power of 6.\nChoices:\na) Θ(n^1.2263)\nb) Θ(n^0)\nc) Θ(n^1.2263 log n)\nd) Θ(n^0 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP4822_4015.",
        "target_text": "Question: Sorted array length n=4822. Decide if any pair sums to 4015. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Two-pointer scan in Θ(n)\nc) Divide and conquer in Θ(n log n)\nd) Hash set in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK58_939.",
        "target_text": "Question: Merge k=58 sorted linked lists totaling n=939 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log n)\nc) Θ(k n)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS3.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 3 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Use BFS on substring graph\nc) Sort segments then concatenate\nd) Greedy left-to-right without memory\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B744417.",
        "target_text": "Question: Run BFS on an unweighted graph with 744417 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) Minimum memory footprint\nc) Lexicographic vertex order\nd) All simple paths before all edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC36031017.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=36031017?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF292896_0.65.",
        "target_text": "Question: Chaining hash table with n=292896 keys at load factor α=0.65. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(α log α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Black-height constraints cap the height by 2·log2(n+1). Variant RB660.",
        "target_text": "Question: Which invariant is essential in Red–Black trees to bound height?\nChoices:\na) Adjacent reds allowed\nb) Leaves can be any color without restriction\nc) Same number of black nodes on every root-to-leaf path\nd) Root is always red\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D144517.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 144517]. Why?\nChoices:\na) Distinct weights are required\nb) Self-loops must be absent\nc) Graph must be undirected\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000007.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000007 achieves expected linear time due to what?\nChoices:\na) Suffix tree guaranteeing O(1) per char\nb) Low collision probability of rolling hash\nc) Use of a min-heap\nd) Trie of all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS282616.",
        "target_text": "Question: Keys are integers in range [0..282616]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Heap sort\nc) Quick sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI10_4470.",
        "target_text": "Question: Binary search over half-open range [10, 4470)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Keep inclusive bounds on both ends\nc) Increase both lo and hi to skip duplicates\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M8_4_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/4) + n^2 for n being a power of 4.\nChoices:\na) Θ(n^2)\nb) Θ(n^1.5)\nc) Θ(n^2 log n)\nd) Θ(n^1.5 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP9434_3844.",
        "target_text": "Question: Sorted array length n=9434. Decide if any pair sums to 3844. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Brute force in Θ(n^2)\nc) Two-pointer scan in Θ(n)\nd) Divide and conquer in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL20119.",
        "target_text": "Question: Check if a singly linked list of length n=20119 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Use a hash set of seen values\nc) Sort and compare with original\nd) Copy to array and two-pointer check\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1236.",
        "target_text": "Question: Verify whether a pop sequence of length n=1236 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Use a queue to mirror the stack\nc) Simulate using one stack in Θ(n)\nd) Sort both sequences then compare\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B289844.",
        "target_text": "Question: Run BFS on an unweighted graph with 289844 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) Minimum memory footprint\nc) Nondecreasing distance from source\nd) All simple paths before all edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH2908057.",
        "target_text": "Question: Build a binary heap from n=2908057 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF4256575_0.41.",
        "target_text": "Question: Chaining hash table with n=4256575 keys at load factor α=0.41. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(α log α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS964204.",
        "target_text": "Question: BST with parent pointers (id=964204): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Use level-order and pick next node\nc) Reverse postorder traversal entirely\nd) Always climb to root then go right once\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST93547.",
        "target_text": "Question: MST question id=93547: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) MST is always unique in connected graphs\nd) MST minimizes number of edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z593155.",
        "target_text": "Question: For string S (id=593155), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Next index of S[i]\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of distinct substrings up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB10013839.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=10013839 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n^2)\nc) Ω(log n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Geometric level distribution mirrors balanced trees. Variant SL0.25.",
        "target_text": "Question: Skip list with level promotion probability p=0.25: expected complexity of search/insert/delete?\nChoices:\na) Θ(√n) for all three\nb) Θ(1) for all three\nc) Θ(n) for all three\nd) Θ(log n) for all three\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M5_5_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/5) + n^1 for n being a power of 5.\nChoices:\na) Θ(n^1)\nb) Θ(n^1.0 log^2 n)\nc) Θ(n^1 log n)\nd) Θ(n^1.0)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P856001.",
        "target_text": "Question: Answer 856001 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Recompute sums per query in Θ(n)\nc) Sort once and binary search per query\nd) Use a stack to store partial sums\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL72152.",
        "target_text": "Question: Check if a singly linked list of length n=72152 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Sort and compare with original\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE49820.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=49820. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Binary search tree\nc) Max-heap\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ743784.",
        "target_text": "Question: Schedule 743784 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Stack\nc) Unordered array\nd) Circular queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA16_11806218.",
        "target_text": "Question: In a d-ary heap with d=16 and n=11806218 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log_16 n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF1243011_0.74.",
        "target_text": "Question: Chaining hash table with n=1243011 keys at load factor α=0.74. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(α log α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS898772.",
        "target_text": "Question: BST with parent pointers (id=898772): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) Always climb to root then go right once\nc) Reverse postorder traversal entirely\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST459684.",
        "target_text": "Question: MST question id=459684: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) MST is always unique in connected graphs\nc) Prim requires the entire edge set to be sorted first\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB29097.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=29097. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) BST over all substrings\nc) Queue of rolling hashes only\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS189873.",
        "target_text": "Question: Keys are integers in range [0..189873]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Quick sort\nc) Shell sort\nd) Heap sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI14_3791.",
        "target_text": "Question: Binary search over half-open range [14, 3791)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Increase both lo and hi to skip duplicates\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M6_3_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/3) + n^2 for n being a power of 3.\nChoices:\na) Θ(n^1.6309 log n)\nb) Θ(n^2)\nc) Θ(n^2 log n)\nd) Θ(n^1.6309)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM294205.",
        "target_text": "Question: Find a majority element in an array of length n=294205 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Binary search on value domain\nc) Counting sort\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C4.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 4× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(1) space\nb) Θ(n) time, Θ(n) space\nc) Θ(1) time, Θ(1) space\nd) Θ(log n) time, Θ(1) space\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1603.",
        "target_text": "Question: Verify whether a pop sequence of length n=1603 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Backtrack with recursion in Θ(2^n)\nc) Use a queue to mirror the stack\nd) Sort both sequences then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B919883.",
        "target_text": "Question: Run BFS on an unweighted graph with 919883 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Minimum memory footprint\nc) Lexicographic vertex order\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM91_29090.",
        "target_text": "Question: Merge k=91 sorted streams totaling N=29090 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(k log N)\nc) Θ(N + k^2)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.49.",
        "target_text": "Question: In separate chaining with load factor α=0.49, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS250497.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=250497-th smallest?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(k)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D497088.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 497088]. Why?\nChoices:\na) Self-loops must be absent\nb) Distinct weights are required\nc) Graph must be undirected\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE2.",
        "target_text": "Question: Search a trie over alphabet size σ=2 for a key of length m. Time complexity?\nChoices:\na) Θ(m)\nb) Θ(m log σ)\nc) Θ(1) average for all m\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS622697.",
        "target_text": "Question: Keys are integers in range [0..622697]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Shell sort\nc) Counting sort\nd) Heap sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS1983069.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=1983069 typically runs in?\nChoices:\na) Θ(n) average\nb) Θ(log n) average\nc) O(log log n) average\nd) O(1) worst-case\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A8.",
        "target_text": "Question: A dynamic array starts with capacity 8 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(1)\nb) Θ(√m)\nc) Θ(m)\nd) Θ(log m)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R562841.",
        "target_text": "Question: Rotate an array right by r=562841 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Single-step rotate repeated r times\nc) Three-reversal method\nd) Selection sort then shift\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL3263.",
        "target_text": "Question: Check if a singly linked list of length n=3263 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Find middle, reverse second half, compare\nc) Sort and compare with original\nd) Use a hash set of seen values\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS5.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 5 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Greedy left-to-right without memory\nc) Use two stacks for counts and fragments\nd) Sort segments then concatenate\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS6324.",
        "target_text": "Question: A queue via two stacks handles a burst of 6324 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) Both Θ(log n)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK3.",
        "target_text": "Question: In a d-ary heap (d=3), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) It makes the operation constant time\nc) It increases height linearly\nd) No effect whatsoever\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.45.",
        "target_text": "Question: In separate chaining with load factor α=0.45, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA865983.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=865983 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) DFS from root each time\nc) Euler tour + RMQ yields O(1) per query\nd) Sort node labels then binary search\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC313998.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=313998 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(V log V)\nc) Θ(VE)\nd) Θ(E log V)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN484995.",
        "target_text": "Question: Check anagrams for strings of length n=484995 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) DFS on character graph\nc) Use a stack\nd) Sort both in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB87187099.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=87187099 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n^2)\nc) Ω(n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI60_2736.",
        "target_text": "Question: Binary search over half-open range [60, 2736)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Keep inclusive bounds on both ends\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Increase both lo and hi to skip duplicates\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M3_6_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/6) + n^2 for n being a power of 6.\nChoices:\na) Θ(n^0.6131 log n)\nb) Θ(n^2)\nc) Θ(n^2 log n)\nd) Θ(n^0.6131)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM56736.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=56736-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Hash all present values then scan\nc) Binary search on index vs value gap\nd) Scan linearly counting gaps\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C5.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 5× and 1×. Complexity?\nChoices:\na) Θ(1) time, Θ(1) space\nb) Θ(n) time, Θ(1) space\nc) Θ(log n) time, Θ(1) space\nd) Θ(n) time, Θ(n) space\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE3425.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=3425. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Binary search tree\nc) Queue\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS7269.",
        "target_text": "Question: A queue via two stacks handles a burst of 7269 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM793_252882.",
        "target_text": "Question: Merge k=793 sorted streams totaling N=252882 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(N + k^2)\nc) Θ(k log N)\nd) Θ(N log N)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.82.",
        "target_text": "Question: In separate chaining with load factor α=0.82, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1 + α)\nc) Θ(1/α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H449898198.",
        "target_text": "Question: For a balanced BST with n=449898198 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D295565.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 295565]. Why?\nChoices:\na) Graph must be undirected\nb) Nonnegative weights ensure greedy optimality\nc) Distinct weights are required\nd) Self-loops must be absent\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z456131.",
        "target_text": "Question: For string S (id=456131), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Length of the longest prefix starting at i matching S[0..]\nc) Number of mismatches at i\nd) Number of distinct substrings up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB61764490.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=61764490 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(log n)\nc) Ω(n^2)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS7755555.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=7755555 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(1) expected\nc) Θ(n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M3_4_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/4) + n^4 for n being a power of 4.\nChoices:\na) Θ(n^0.7925)\nb) Θ(n^4)\nc) Θ(n^0.7925 log n)\nd) Θ(n^4 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM795452.",
        "target_text": "Question: Find a majority element in an array of length n=795452 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Counting sort\nc) Divide-and-conquer merges\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Phase difference accumulates around the cycle. Variant C4.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 4× and 1×. Complexity?\nChoices:\na) Θ(1) time, Θ(1) space\nb) Θ(log n) time, Θ(1) space\nc) Θ(n) time, Θ(n) space\nd) Θ(n) time, Θ(1) space\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Operator handling via stacks preserves associativity rules. Variant IP3_4.",
        "target_text": "Question: Evaluate an infix expression with 3–4 precedence levels and parentheses. Linear-time method?\nChoices:\na) Left-to-right without stacks\nb) Convert to postfix and evaluate with a stack\nc) Sort tokens by precedence then scan\nd) Build a tree without any stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ762659.",
        "target_text": "Question: For 762659 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Queue\nc) Stack\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC83071370.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=83071370?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Adversarial patterns are neutralized by random choice. Variant UH100000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=100000 slots yields what benefit?\nChoices:\na) Cryptographic security by default\nb) Zero collisions guaranteed\nc) Eliminates need for resizing\nd) Expected constant-time operations against adversaries\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H536577724.",
        "target_text": "Question: For a balanced BST with n=536577724 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC785538.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=785538 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(E log V)\nc) Θ(VE)\nd) Θ(V log V)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS10920.",
        "target_text": "Question: In KMP, what does LPS[10920] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Total distinct prefixes up to i\nd) Index of next occurrence\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS330146.",
        "target_text": "Question: Heapsort stability check id=330146: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is stable\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX549253396.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈549253396. Why?\nChoices:\na) Sorts the array first\nb) Requires the array to be cyclic\nc) Doubles the bound to bracket, then binary search\nd) Uses hashing to index unknown segments\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A16.",
        "target_text": "Question: A dynamic array starts with capacity 16 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(√m)\nb) Θ(log m)\nc) Θ(m)\nd) Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S3775_176.",
        "target_text": "Question: Array length n=3775, find max-sum subarray of fixed length k=176. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN763269.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 763269, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Traverse from head to find predecessor\nc) Reverse list then delete head\nd) Impossible under any model\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP928.",
        "target_text": "Question: Verify whether a pop sequence of length n=928 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Simulate using one stack in Θ(n)\nc) Sort both sequences then compare\nd) Use a queue to mirror the stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ71058.",
        "target_text": "Question: For 71058 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Deque\nc) Binary heap\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL756_969773.",
        "target_text": "Question: Find the k=756-th largest element among n=969773 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Heapsort then index\nc) Binary search on value domain\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.47.",
        "target_text": "Question: In separate chaining with load factor α=0.47, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(1/α)\nd) Θ(α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS474501.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=474501-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(1)\nd) Θ(k)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST487036.",
        "target_text": "Question: MST question id=487036: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) Prim requires the entire edge set to be sorted first\nc) MST minimizes number of edges\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB4490.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=4490. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) Binary heap of substrings\nc) Queue of rolling hashes only\nd) BST over all substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS174921.",
        "target_text": "Question: Heapsort stability check id=174921: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is stable\nc) Heapsort is not stable by default\nd) Heapsort needs extra Θ(n) memory\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI48_1032.",
        "target_text": "Question: Binary search over half-open range [48, 1032)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Keep inclusive bounds on both ends\nd) Increase both lo and hi to skip duplicates\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A16.",
        "target_text": "Question: A dynamic array starts with capacity 16 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(log m)\nb) Θ(m)\nc) Θ(√m)\nd) Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R17181.",
        "target_text": "Question: Rotate an array right by r=17181 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Heapify then extract\nc) Single-step rotate repeated r times\nd) Selection sort then shift\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK8_676.",
        "target_text": "Question: Merge k=8 sorted linked lists totaling n=676 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(k n)\nc) Θ(n + k^2)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE2726.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=2726. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Max-heap\nc) Decreasing stack\nd) Binary search tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ648546.",
        "target_text": "Question: For 648546 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Queue\nc) Deque\nd) Binary heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH25997.",
        "target_text": "Question: Build a binary heap from n=25997 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n^2)\nc) Θ(n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.75.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.75?\nChoices:\na) To sort keys implicitly\nb) To reduce memory usage to exact size\nc) To keep expected O(1) operations\nd) To maintain key stability\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS376752.",
        "target_text": "Question: BST with parent pointers (id=376752): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Use level-order and pick next node\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Always climb to root then go right once\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST300286.",
        "target_text": "Question: MST question id=300286: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) MST is always unique in connected graphs\nc) Kruskal adds the smallest edge that doesn't create a cycle\nd) Prim requires the entire edge set to be sorted first\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z975054.",
        "target_text": "Question: For string S (id=975054), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Length of the longest prefix starting at i matching S[0..]\nc) Next index of S[i]\nd) Number of distinct substrings up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS43568.",
        "target_text": "Question: Keys are integers in range [0..43568]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Heap sort\nc) Quick sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS6198574.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=6198574 typically runs in?\nChoices:\na) Θ(log n) average\nb) O(1) worst-case\nc) Θ(n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A2.",
        "target_text": "Question: A dynamic array starts with capacity 2 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(√m)\nb) Θ(log m)\nc) Θ(1)\nd) Θ(m)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R305437.",
        "target_text": "Question: Rotate an array right by r=305437 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Three-reversal method\nc) Heapify then extract\nd) Selection sort then shift\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN569723.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 569723, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Reverse list then delete head\nc) Traverse from head to find predecessor\nd) Impossible under any model\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1484.",
        "target_text": "Question: Verify whether a pop sequence of length n=1484 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Backtrack with recursion in Θ(2^n)\nc) Use a queue to mirror the stack\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B746934.",
        "target_text": "Question: Run BFS on an unweighted graph with 746934 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) Nondecreasing distance from source\nc) Minimum memory footprint\nd) All simple paths before all edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK4.",
        "target_text": "Question: In a d-ary heap (d=4), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It makes the operation constant time\nb) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nc) No effect whatsoever\nd) It increases height linearly\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.26.",
        "target_text": "Question: In separate chaining with load factor α=0.26, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS912407.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=912407-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(√n)\nc) Θ(1)\nd) Θ(k)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Repeated edge relaxation tolerates negatives. Variant BF49128.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=49128 can handle which case while detecting it?\nChoices:\na) Equal runtime on all graphs\nb) Negative edge weights and negative cycles\nc) Faster runtime on sparse nonnegative graphs\nd) Only acyclic graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP36444.",
        "target_text": "Question: KMP matches a pattern of length m=36444 in linear time using which table?\nChoices:\na) Rolling hash table\nb) LPS (failure) function\nc) Z-array exclusively\nd) Suffix array\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX2_1024.",
        "target_text": "Question: Radix sort with d=2 digits and base b=1024 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·n·log b)\nc) Θ(b^d)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS9640272.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=9640272 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(n) average\nc) O(1) worst-case\nd) Θ(log n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M8_3_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/3) + n^1 for n being a power of 3.\nChoices:\na) Θ(n^1.8928)\nb) Θ(n^1)\nc) Θ(n^1 log n)\nd) Θ(n^1.8928 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R512773.",
        "target_text": "Question: Rotate an array right by r=512773 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Heapify then extract\nc) Single-step rotate repeated r times\nd) Selection sort then shift\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK61_2416.",
        "target_text": "Question: Merge k=61 sorted linked lists totaling n=2416 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n log n)\nc) Θ(k n)\nd) Θ(n + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Operator handling via stacks preserves associativity rules. Variant IP2_3.",
        "target_text": "Question: Evaluate an infix expression with 2–3 precedence levels and parentheses. Linear-time method?\nChoices:\na) Left-to-right without stacks\nb) Convert to postfix and evaluate with a stack\nc) Sort tokens by precedence then scan\nd) Build a tree without any stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS291.",
        "target_text": "Question: A queue via two stacks handles a burst of 291 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) Both Θ(log n)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM476_197210.",
        "target_text": "Question: Merge k=476 sorted streams totaling N=197210 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N + k^2)\nc) Θ(N log N)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Adversarial patterns are neutralized by random choice. Variant UH1000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=1000 slots yields what benefit?\nChoices:\na) Cryptographic security by default\nb) Eliminates need for resizing\nc) Expected constant-time operations against adversaries\nd) Zero collisions guaranteed\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS310803.",
        "target_text": "Question: BST with parent pointers (id=310803): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Use level-order and pick next node\nc) Always climb to root then go right once\nd) Reverse postorder traversal entirely\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF83201.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=83201 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Equal runtime on all graphs\nc) Negative edge weights and negative cycles\nd) Only acyclic graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000007.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000007 achieves expected linear time due to what?\nChoices:\na) Suffix tree guaranteeing O(1) per char\nb) Use of a min-heap\nc) Trie of all substrings\nd) Low collision probability of rolling hash\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS562.",
        "target_text": "Question: Array is nearly sorted with at most 562 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Shell sort with fixed gaps\nc) Heap sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS6310369.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=6310369 typically runs in?\nChoices:\na) O(log log n) average\nb) O(1) worst-case\nc) Θ(n) average\nd) Θ(log n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M7_3_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/3) + n^3 for n being a power of 3.\nChoices:\na) Θ(n^3 log n)\nb) Θ(n^1.7712)\nc) Θ(n^3)\nd) Θ(n^1.7712 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP6872_4493.",
        "target_text": "Question: Sorted array length n=6872. Decide if any pair sums to 4493. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Divide and conquer in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN684060_172290.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=684060, B=172290. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Advance pointers; when one ends, jump to the other head\nc) Hash addresses of first list\nd) Reverse one list then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS4803.",
        "target_text": "Question: Compute stock span for 4803 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Priority queue\nc) Fenwick tree\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ706075.",
        "target_text": "Question: For 706075 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Binary heap\nc) Queue\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL116_478417.",
        "target_text": "Question: Find the k=116-th largest element among n=478417 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Heapsort then index\nc) Deterministic selection (median-of-medians)\nd) Binary search on value domain\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF1516943_0.3.",
        "target_text": "Question: Chaining hash table with n=1516943 keys at load factor α=0.3. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(1 + α)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS760794.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=760794-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(k)\nc) Θ(1)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS247067_1011660.",
        "target_text": "Question: A directed graph with V=247067, E≈1011660. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) When all vertices have outdegree ≥ 1\nc) Only if edges are unweighted\nd) Only if the graph is connected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP66797.",
        "target_text": "Question: KMP matches a pattern of length m=66797 in linear time using which table?\nChoices:\na) Suffix array\nb) Z-array exclusively\nc) Rolling hash table\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS60853.",
        "target_text": "Question: Heapsort stability check id=60853: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort is stable\nc) Heapsort is not stable by default\nd) Heapsort always beats merge sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX217967246.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈217967246. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Sorts the array first\nc) Uses hashing to index unknown segments\nd) Requires the array to be cyclic\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T4_6_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^4, f3=n^4 (log n)^6, f4=n^7?\nChoices:\na) Θ(n^4 (log n)^6)\nb) Θ(n^4)\nc) Θ(n^7)\nd) Θ((log n)^6)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM42941.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=42941-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Hash all present values then scan\nc) Use a heap of differences\nd) Scan linearly counting gaps\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL61867.",
        "target_text": "Question: Check if a singly linked list of length n=61867 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Sort and compare with original\nc) Find middle, reverse second half, compare\nd) Use a hash set of seen values\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS2382.",
        "target_text": "Question: Compute stock span for 2382 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Hash table\nc) Monotonic stack\nd) Fenwick tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ809308.",
        "target_text": "Question: Schedule 809308 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Binary heap\nc) Circular queue\nd) Unordered array\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM491_183069.",
        "target_text": "Question: Merge k=491 sorted streams totaling N=183069 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(k log N)\nc) Θ(N + k^2)\nd) Θ(N log N)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF5264538_0.72.",
        "target_text": "Question: Chaining hash table with n=5264538 keys at load factor α=0.72. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(α log α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA947998.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=947998 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Euler tour + RMQ yields O(1) per query\nc) Naive parent climbing O(n) per query\nd) Sort node labels then binary search\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS250960_758068.",
        "target_text": "Question: A directed graph with V=250960, E≈758068. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if the graph is connected\nc) When it is a DAG (no directed cycles)\nd) Only if edges are unweighted\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Randomized hashing makes spurious matches rare. Variant RK257_998244353.",
        "target_text": "Question: Rabin–Karp with base=257, mod=998244353 achieves expected linear time due to what?\nChoices:\na) Trie of all substrings\nb) Low collision probability of rolling hash\nc) Use of a min-heap\nd) Suffix tree guaranteeing O(1) per char\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS426.",
        "target_text": "Question: Array is nearly sorted with at most 426 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Insertion sort\nc) Radix sort\nd) Shell sort with fixed gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI21_513.",
        "target_text": "Question: Binary search over half-open range [21, 513)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Increase both lo and hi to skip duplicates\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A2.",
        "target_text": "Question: A dynamic array starts with capacity 2 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(1)\nc) Θ(√m)\nd) Θ(log m)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM37648.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=37648-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Binary search on index vs value gap\nc) Hash all present values then scan\nd) Scan linearly counting gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN929840.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 929840, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Traverse from head to find predecessor\nc) Copy next node’s data here and bypass next\nd) Impossible under any model\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP9.",
        "target_text": "Question: Verify whether a pop sequence of length n=9 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Simulate using one stack in Θ(n)\nc) Use a queue to mirror the stack\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ967285.",
        "target_text": "Question: Schedule 967285 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Binary heap\nc) Stack\nd) Circular queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA12_15670122.",
        "target_text": "Question: In a d-ary heap with d=12 and n=15670122 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log_12 n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF4743853_0.71.",
        "target_text": "Question: Chaining hash table with n=4743853 keys at load factor α=0.71. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(nα)\nc) Θ(1 + α)\nd) Θ(α log α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS675995.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=675995-th smallest?\nChoices:\na) Θ(k)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST196869.",
        "target_text": "Question: MST question id=196869: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) Prim requires the entire edge set to be sorted first\nd) MST is always unique in connected graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP57556.",
        "target_text": "Question: KMP matches a pattern of length m=57556 in linear time using which table?\nChoices:\na) Rolling hash table\nb) LPS (failure) function\nc) Suffix array\nd) Z-array exclusively\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS589711.",
        "target_text": "Question: Keys are integers in range [0..589711]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Quick sort\nc) Heap sort\nd) Shell sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX11001532.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈11001532. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Uses hashing to index unknown segments\nc) Requires the array to be cyclic\nd) Sorts the array first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T2_2_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^2, f3=n^2 (log n)^2, f4=n^9?\nChoices:\na) Θ(n^9)\nb) Θ(n^2)\nc) Θ((log n)^2)\nd) Θ(n^2 (log n)^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S14477_263.",
        "target_text": "Question: Array length n=14477, find max-sum subarray of fixed length k=263. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(k log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Phase difference accumulates around the cycle. Variant C3.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 3× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(n) space\nb) Θ(n) time, Θ(1) space\nc) Θ(log n) time, Θ(1) space\nd) Θ(1) time, Θ(1) space\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE21712.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=21712. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Binary search tree\nc) Max-heap\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW6114_155.",
        "target_text": "Question: Sliding window maximum for array length n=6114 and window w=155. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(w log n)\nc) Θ(nw)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC72202658.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=72202658?\nChoices:\na) Θ(log log n)\nb) Θ(1)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF8541131_0.62.",
        "target_text": "Question: Chaining hash table with n=8541131 keys at load factor α=0.62. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(α log α)\nc) Θ(1 + α)\nd) Θ(nα)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR992189.",
        "target_text": "Question: In a BST with distinct keys (id=992189), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Level-order\nc) Preorder\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS142509_225700.",
        "target_text": "Question: A directed graph with V=142509, E≈225700. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) When it is a DAG (no directed cycles)\nc) Only if edges are unweighted\nd) Only if the graph is connected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN783118.",
        "target_text": "Question: Check anagrams for strings of length n=783118 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Sort both in Θ(n log n)\nc) Count character frequencies in Θ(n)\nd) Use a stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS126.",
        "target_text": "Question: Array is nearly sorted with at most 126 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Heap sort\nc) Insertion sort\nd) Radix sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS2619689.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=2619689 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(log n) average\nc) Θ(n) average\nd) O(1) worst-case\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T4_1_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^4, f3=n^4 (log n)^1, f4=n^8?\nChoices:\na) Θ(n^4)\nb) Θ(n^8)\nc) Θ(n^4 (log n)^1)\nd) Θ((log n)^1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R952781.",
        "target_text": "Question: Rotate an array right by r=952781 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Single-step rotate repeated r times\nc) Heapify then extract\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN375510.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 375510, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Impossible under any model\nc) Reverse list then delete head\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP181.",
        "target_text": "Question: Verify whether a pop sequence of length n=181 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Simulate using one stack in Θ(n)\nc) Backtrack with recursion in Θ(2^n)\nd) Sort both sequences then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA3149.",
        "target_text": "Question: Circular-array queue with capacity 3149: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Require power-of-two capacity\nc) Head==Tail means full\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL792_712216.",
        "target_text": "Question: Find the k=792-th largest element among n=712216 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Deterministic selection (median-of-medians)\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Adversarial patterns are neutralized by random choice. Variant UH10000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=10000 slots yields what benefit?\nChoices:\na) Zero collisions guaranteed\nb) Expected constant-time operations against adversaries\nc) Cryptographic security by default\nd) Eliminates need for resizing\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA509203.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=509203 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Sort node labels then binary search\nc) Euler tour + RMQ yields O(1) per query\nd) Naive parent climbing O(n) per query\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D174731.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 174731]. Why?\nChoices:\na) Self-loops must be absent\nb) Graph must be undirected\nc) Distinct weights are required\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z589447.",
        "target_text": "Question: For string S (id=589447), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Number of mismatches at i\nc) Number of distinct substrings up to i\nd) Next index of S[i]\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX9_2.",
        "target_text": "Question: Radix sort with d=9 digits and base b=2 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·n·log b)\nc) Θ(d·(n + b))\nd) Θ(b^d)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI0_2912.",
        "target_text": "Question: Binary search over half-open range [0, 2912)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Keep inclusive bounds on both ends\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Increase both lo and hi to skip duplicates\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_5_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^3, f3=n^3 (log n)^5, f4=n^6?\nChoices:\na) Θ(n^3 (log n)^5)\nb) Θ(n^6)\nc) Θ((log n)^5)\nd) Θ(n^3)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R389652.",
        "target_text": "Question: Rotate an array right by r=389652 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Single-step rotate repeated r times\nc) Three-reversal method\nd) Selection sort then shift\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK22_2762.",
        "target_text": "Question: Merge k=22 sorted linked lists totaling n=2762 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n log k)\nc) Θ(n + k^2)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Operator handling via stacks preserves associativity rules. Variant IP2_3.",
        "target_text": "Question: Evaluate an infix expression with 2–3 precedence levels and parentheses. Linear-time method?\nChoices:\na) Sort tokens by precedence then scan\nb) Left-to-right without stacks\nc) Convert to postfix and evaluate with a stack\nd) Build a tree without any stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW7980_499.",
        "target_text": "Question: Sliding window maximum for array length n=7980 and window w=499. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(w log n)\nc) Θ(nw)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM80_24611.",
        "target_text": "Question: Merge k=80 sorted streams totaling N=24611 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(N log k)\nc) Θ(k log N)\nd) Θ(N + k^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF4096541_0.53.",
        "target_text": "Question: Chaining hash table with n=4096541 keys at load factor α=0.53. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(nα)\nc) Θ(1 + α)\nd) Θ(α log α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS541691.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=541691-th smallest?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(k)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC410653.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=410653 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(V log V)\nc) Θ(VE)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z985706.",
        "target_text": "Question: For string S (id=985706), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Length of the longest prefix starting at i matching S[0..]\nc) Next index of S[i]\nd) Number of mismatches at i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX6_4.",
        "target_text": "Question: Radix sort with d=6 digits and base b=4 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(b^d)\nc) Θ(d·(n + b))\nd) Θ(d·n·log b)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU3374643.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=3374643. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Binary search with left/right bias\nc) Heap-based selection\nd) Hashing with chaining\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T3_6_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^3, f3=n^3 (log n)^6, f4=n^10?\nChoices:\na) Θ((log n)^6)\nb) Θ(n^10)\nc) Θ(n^3 (log n)^6)\nd) Θ(n^3)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P328096.",
        "target_text": "Question: Answer 328096 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Use a stack to store partial sums\nb) Sort once and binary search per query\nc) Recompute sums per query in Θ(n)\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN160290.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 160290, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Reverse list then delete head\nc) Impossible under any model\nd) Traverse from head to find predecessor\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS2844.",
        "target_text": "Question: Compute stock span for 2844 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Hash table\nc) Monotonic stack\nd) Fenwick tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW7280_905.",
        "target_text": "Question: Sliding window maximum for array length n=7280 and window w=905. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n log n)\nc) Θ(nw)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC35533661.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=35533661?\nChoices:\na) Θ(log n)\nb) Θ(log log n)\nc) Θ(n)\nd) Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF5272522_0.62.",
        "target_text": "Question: Chaining hash table with n=5272522 keys at load factor α=0.62. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(α log α)\nc) Θ(1 + α)\nd) Θ(nα)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS769318.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=769318-th smallest?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(k)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS432744_2147228.",
        "target_text": "Question: A directed graph with V=432744, E≈2147228. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if the graph is connected\nc) Only if edges are unweighted\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB3093.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=3093. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) BST over all substrings\nc) Queue of rolling hashes only\nd) Binary heap of substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB83501810.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=83501810 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(log n)\nc) Ω(n log n)\nd) Ω(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI64_4594.",
        "target_text": "Question: Binary search over half-open range [64, 4594)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Keep inclusive bounds on both ends\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Increase both lo and hi to skip duplicates\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M9_5_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/5) + n^4 for n being a power of 5.\nChoices:\na) Θ(n^1.3652 log n)\nb) Θ(n^4)\nc) Θ(n^4 log n)\nd) Θ(n^1.3652)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S15879_184.",
        "target_text": "Question: Array length n=15879, find max-sum subarray of fixed length k=184. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(nk)\nd) Θ(k log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN670179.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 670179, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Impossible under any model\nc) Reverse list then delete head\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS3970.",
        "target_text": "Question: Compute stock span for 3970 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Priority queue\nc) Hash table\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ683856.",
        "target_text": "Question: Schedule 683856 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Binary heap\nc) Unordered array\nd) Stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH929861.",
        "target_text": "Question: Build a binary heap from n=929861 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.66.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.66?\nChoices:\na) To maintain key stability\nb) To reduce memory usage to exact size\nc) To keep expected O(1) operations\nd) To sort keys implicitly\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS939994.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=939994-th smallest?\nChoices:\na) Θ(1)\nb) Θ(k)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC514031.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=514031 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(V log V)\nc) Θ(VE)\nd) Θ(E log V)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK257_1000000007.",
        "target_text": "Question: Rabin–Karp with base=257, mod=1000000007 achieves expected linear time due to what?\nChoices:\na) Low collision probability of rolling hash\nb) Use of a min-heap\nc) Suffix tree guaranteeing O(1) per char\nd) Trie of all substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS308926.",
        "target_text": "Question: Keys are integers in range [0..308926]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Counting sort\nc) Shell sort\nd) Quick sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI28_2190.",
        "target_text": "Question: Binary search over half-open range [28, 2190)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Keep inclusive bounds on both ends\nc) Increase both lo and hi to skip duplicates\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A1.",
        "target_text": "Question: A dynamic array starts with capacity 1 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(log m)\nc) Θ(√m)\nd) Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP11430_3791.",
        "target_text": "Question: Sorted array length n=11430. Decide if any pair sums to 3791. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Divide and conquer in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Brute force in Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR10.",
        "target_text": "Question: Reverse a singly linked list in groups of k=10 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(k log n)\nb) Θ(n)\nc) Θ(nk)\nd) Θ(n log k)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP745.",
        "target_text": "Question: Verify whether a pop sequence of length n=745 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Use a queue to mirror the stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS2488.",
        "target_text": "Question: A queue via two stacks handles a burst of 2488 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL441_523371.",
        "target_text": "Question: Find the k=441-th largest element among n=523371 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Binary search on value domain\nc) Heapsort then index\nd) Build max-heap and extract k times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH1024.",
        "target_text": "Question: In open addressing with double hashing over table size m=1024, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) Use g(k)=0 for some keys\nc) Choose m even and g(k) even\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR250622.",
        "target_text": "Question: In a BST with distinct keys (id=250622), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Postorder\nc) Level-order\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP123852.",
        "target_text": "Question: Test bipartiteness (id=123852) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Sort vertices and deduplicate\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Check all degrees even\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB67246.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=67246. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Suffix automaton or suffix array + LCP\nc) Binary heap of substrings\nd) Queue of rolling hashes only\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB35994623.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=35994623 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n log n)\nc) Ω(n^2)\nd) Ω(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU9949554.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=9949554. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Linear scan with early exit\nc) Binary search with left/right bias\nd) Hashing with chaining\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M3_2_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/2) + n^1 for n being a power of 2.\nChoices:\na) Θ(n^1.585)\nb) Θ(n^1.585 log n)\nc) Θ(n^1)\nd) Θ(n^1 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM46486.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=46486-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Binary search on index vs value gap\nc) Scan linearly counting gaps\nd) Hash all present values then scan\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL1948.",
        "target_text": "Question: Check if a singly linked list of length n=1948 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Copy to array and two-pointer check\nc) Use a hash set of seen values\nd) Sort and compare with original\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS3521.",
        "target_text": "Question: Compute stock span for 3521 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Priority queue\nc) Monotonic stack\nd) Fenwick tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ284237.",
        "target_text": "Question: For 284237 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Stack\nc) Binary heap\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH7803175.",
        "target_text": "Question: Build a binary heap from n=7803175 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n^2)\nc) Θ(log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF4443049_0.32.",
        "target_text": "Question: Chaining hash table with n=4443049 keys at load factor α=0.32. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(α log α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS14236.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=14236-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(k)\nc) Θ(log n)\nd) Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS99695_671810.",
        "target_text": "Question: A directed graph with V=99695, E≈671810. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) Only if the graph is connected\nc) When it is a DAG (no directed cycles)\nd) When all vertices have outdegree ≥ 1\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN816768.",
        "target_text": "Question: Check anagrams for strings of length n=816768 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Count character frequencies in Θ(n)\nc) Sort both in Θ(n log n)\nd) Use a stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB86396379.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=86396379 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n^2)\nc) Ω(n log n)\nd) Ω(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX71541189.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈71541189. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Uses hashing to index unknown segments\nc) Requires the array to be cyclic\nd) Sorts the array first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T1_2_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^1, f3=n^1 (log n)^2, f4=n^8?\nChoices:\na) Θ((log n)^2)\nb) Θ(n^1 (log n)^2)\nc) Θ(n^1)\nd) Θ(n^8)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP10739_3713.",
        "target_text": "Question: Sorted array length n=10739. Decide if any pair sums to 3713. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Brute force in Θ(n^2)\nc) Divide and conquer in Θ(n log n)\nd) Two-pointer scan in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL64955.",
        "target_text": "Question: Check if a singly linked list of length n=64955 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Sort and compare with original\nc) Copy to array and two-pointer check\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1747.",
        "target_text": "Question: Verify whether a pop sequence of length n=1747 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW2552_636.",
        "target_text": "Question: Sliding window maximum for array length n=2552 and window w=636. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(w log n)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH1970744.",
        "target_text": "Question: Build a binary heap from n=1970744 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.41.",
        "target_text": "Question: In separate chaining with load factor α=0.41, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA701086.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=701086 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Naive parent climbing O(n) per query\nc) Sort node labels then binary search\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP884815.",
        "target_text": "Question: Test bipartiteness (id=884815) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Sort vertices and deduplicate\nc) Compute an MST then inspect edges\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB10847.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=10847. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Suffix automaton or suffix array + LCP\nc) BST over all substrings\nd) Binary heap of substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS778355.",
        "target_text": "Question: Heapsort stability check id=778355: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort is not stable by default\nd) Heapsort always beats merge sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS2078364.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=2078364 typically runs in?\nChoices:\na) Θ(n) average\nb) O(1) worst-case\nc) Θ(log n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_5_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^4, f3=n^4 (log n)^5, f4=n^7?\nChoices:\na) Θ((log n)^5)\nb) Θ(n^7)\nc) Θ(n^4 (log n)^5)\nd) Θ(n^4)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM50309.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=50309-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Scan linearly counting gaps\nc) Binary search on index vs value gap\nd) Hash all present values then scan\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK99_18120.",
        "target_text": "Question: Merge k=99 sorted linked lists totaling n=18120 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log n)\nc) Θ(n log k)\nd) Θ(k n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1334.",
        "target_text": "Question: Verify whether a pop sequence of length n=1334 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Simulate using one stack in Θ(n)\nc) Use a queue to mirror the stack\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW3948_687.",
        "target_text": "Question: Sliding window maximum for array length n=3948 and window w=687. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(n log n)\nc) Θ(w log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA3_75255638.",
        "target_text": "Question: In a d-ary heap with d=3 and n=75255638 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(log_3 n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH4096.",
        "target_text": "Question: In open addressing with double hashing over table size m=4096, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) g(k) coprime with m for all keys\nc) Use g(k)=0 for some keys\nd) Make both hash functions identical\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H606108998.",
        "target_text": "Question: For a balanced BST with n=606108998 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP45153.",
        "target_text": "Question: Test bipartiteness (id=45153) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Check all degrees even\nc) Compute an MST then inspect edges\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS23606.",
        "target_text": "Question: In KMP, what does LPS[23606] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Index of next occurrence\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Number of mismatches up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS783119.",
        "target_text": "Question: Heapsort stability check id=783119: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort is stable\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort always beats merge sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS5442992.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=5442992 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(1) expected\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T3_4_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^3, f3=n^3 (log n)^4, f4=n^10?\nChoices:\na) Θ(n^10)\nb) Θ(n^3 (log n)^4)\nc) Θ((log n)^4)\nd) Θ(n^3)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R89037.",
        "target_text": "Question: Rotate an array right by r=89037 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Three-reversal method\nc) Single-step rotate repeated r times\nd) Selection sort then shift\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN313546.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 313546, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Reverse list then delete head\nc) Impossible under any model\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE33486.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=33486. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Max-heap\nc) Decreasing stack\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ601341.",
        "target_text": "Question: Schedule 601341 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Circular queue\nc) Stack\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC48852648.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=48852648?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(n)\nd) Θ(log log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF7912587_0.83.",
        "target_text": "Question: Chaining hash table with n=7912587 keys at load factor α=0.83. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(1 + α)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS898916.",
        "target_text": "Question: BST with parent pointers (id=898916): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Reverse postorder traversal entirely\nd) Always climb to root then go right once\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS547843_2155880.",
        "target_text": "Question: A directed graph with V=547843, E≈2155880. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) When it is a DAG (no directed cycles)\nc) When all vertices have outdegree ≥ 1\nd) Only if the graph is connected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE52.",
        "target_text": "Question: Search a trie over alphabet size σ=52 for a key of length m. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(1) average for all m\nc) Θ(m log σ)\nd) Θ(m)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS432294.",
        "target_text": "Question: Heapsort stability check id=432294: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is stable\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI31_3372.",
        "target_text": "Question: Binary search over half-open range [31, 3372)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Increase both lo and hi to skip duplicates\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M4_5_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/5) + n^2 for n being a power of 5.\nChoices:\na) Θ(n^2 log n)\nb) Θ(n^0.8614 log n)\nc) Θ(n^2)\nd) Θ(n^0.8614)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P216294.",
        "target_text": "Question: Answer 216294 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Recompute sums per query in Θ(n)\nb) Build prefix-sum array; O(1) per query\nc) Use a stack to store partial sums\nd) Sort once and binary search per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL11546.",
        "target_text": "Question: Check if a singly linked list of length n=11546 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Find middle, reverse second half, compare\nc) Sort and compare with original\nd) Copy to array and two-pointer check\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS954.",
        "target_text": "Question: Compute stock span for 954 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Fenwick tree\nc) Monotonic stack\nd) Priority queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B686299.",
        "target_text": "Question: Run BFS on an unweighted graph with 686299 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) Nondecreasing distance from source\nc) Minimum memory footprint\nd) All simple paths before all edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC16053912.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=16053912?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(1)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC1.13.",
        "target_text": "Question: In separate chaining with load factor α=1.13, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR775952.",
        "target_text": "Question: In a BST with distinct keys (id=775952), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Inorder\nc) Postorder\nd) Preorder\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP137882.",
        "target_text": "Question: Test bipartiteness (id=137882) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Sort vertices and deduplicate\nd) Check all degrees even\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE256.",
        "target_text": "Question: Search a trie over alphabet size σ=256 for a key of length m. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(m log σ)\nc) Θ(m)\nd) Θ(1) average for all m\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX9_4.",
        "target_text": "Question: Radix sort with d=9 digits and base b=4 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(b^d)\nc) Θ(d·n·log b)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS7487946.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=7487946 typically runs in?\nChoices:\na) O(log log n) average\nb) O(1) worst-case\nc) Θ(n) average\nd) Θ(log n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M8_2_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/2) + n^1 for n being a power of 2.\nChoices:\na) Θ(n^3.0)\nb) Θ(n^3.0 log n)\nc) Θ(n^1 log n)\nd) Θ(n^1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S10823_134.",
        "target_text": "Question: Array length n=10823, find max-sum subarray of fixed length k=134. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(k log n)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(nk)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL42430.",
        "target_text": "Question: Check if a singly linked list of length n=42430 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Use a hash set of seen values\nc) Find middle, reverse second half, compare\nd) Sort and compare with original\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS7.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 7 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Greedy left-to-right without memory\nb) Sort segments then concatenate\nc) Use two stacks for counts and fragments\nd) Use BFS on substring graph\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ243833.",
        "target_text": "Question: For 243833 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Deque\nc) Binary heap\nd) Stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK4.",
        "target_text": "Question: In a d-ary heap (d=4), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) No effect whatsoever\nc) It makes the operation constant time\nd) It increases height linearly\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.49.",
        "target_text": "Question: In separate chaining with load factor α=1.49, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS608012.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=608012-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(k)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP858269.",
        "target_text": "Question: Test bipartiteness (id=858269) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Sort vertices and deduplicate\nd) Check all degrees even\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z414432.",
        "target_text": "Question: For string S (id=414432), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Next index of S[i]\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of mismatches at i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX3_32.",
        "target_text": "Question: Radix sort with d=3 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·(n + b))\nc) Θ(b^d)\nd) Θ(d·n·log b)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI64_2655.",
        "target_text": "Question: Binary search over half-open range [64, 2655)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Keep inclusive bounds on both ends\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Increase both lo and hi to skip duplicates\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A8.",
        "target_text": "Question: A dynamic array starts with capacity 8 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(log m)\nb) Θ(√m)\nc) Θ(m)\nd) Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM83379.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=83379-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Scan linearly counting gaps\nc) Hash all present values then scan\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C4.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 4× and 1×. Complexity?\nChoices:\na) Θ(log n) time, Θ(1) space\nb) Θ(n) time, Θ(1) space\nc) Θ(n) time, Θ(n) space\nd) Θ(1) time, Θ(1) space\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP3_4.",
        "target_text": "Question: Evaluate an infix expression with 3–4 precedence levels and parentheses. Linear-time method?\nChoices:\na) Build a tree without any stack\nb) Convert to postfix and evaluate with a stack\nc) Left-to-right without stacks\nd) Sort tokens by precedence then scan\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B970714.",
        "target_text": "Question: Run BFS on an unweighted graph with 970714 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) All simple paths before all edges\nc) Nondecreasing distance from source\nd) Lexicographic vertex order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL499_912824.",
        "target_text": "Question: Find the k=499-th largest element among n=912824 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Binary search on value domain\nc) Deterministic selection (median-of-medians)\nd) Build max-heap and extract k times\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH8192.",
        "target_text": "Question: In open addressing with double hashing over table size m=8192, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) g(k) coprime with m for all keys\nc) Use g(k)=0 for some keys\nd) Make both hash functions identical\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS113097.",
        "target_text": "Question: BST with parent pointers (id=113097): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) Always climb to root then go right once\nc) Reverse postorder traversal entirely\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP938114.",
        "target_text": "Question: Test bipartiteness (id=938114) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Compute an MST then inspect edges\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Check all degrees even\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB1848.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=1848. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) Queue of rolling hashes only\nc) BST over all substrings\nd) Binary heap of substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB55811181.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=55811181 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n^2)\nc) Ω(n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS6083841.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=6083841 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Geometric resizing spreads copying cost over many operations. Variant A2.",
        "target_text": "Question: A dynamic array starts with capacity 2 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(log m)\nb) Θ(√m)\nc) Θ(m)\nd) Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S7465_46.",
        "target_text": "Question: Array length n=7465, find max-sum subarray of fixed length k=46. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(nk)\nc) Θ(n)\nd) Θ(k log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN491292.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 491292, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Reverse list then delete head\nc) Impossible under any model\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP310.",
        "target_text": "Question: Verify whether a pop sequence of length n=310 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Use a queue to mirror the stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ358738.",
        "target_text": "Question: Schedule 358738 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Circular queue\nc) Stack\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM906_448425.",
        "target_text": "Question: Merge k=906 sorted streams totaling N=448425 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(N + k^2)\nc) Θ(k log N)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF959718_0.22.",
        "target_text": "Question: Chaining hash table with n=959718 keys at load factor α=0.22. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA150600.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=150600 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) Euler tour + RMQ yields O(1) per query\nc) Sort node labels then binary search\nd) DFS from root each time\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR281269.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=281269 edges. What algorithmic idea achieves linear time?\nChoices:\na) Kruskal’s algorithm\nb) Tarjan’s low-link DFS\nc) Dijkstra’s algorithm\nd) Topological sorting\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z215528.",
        "target_text": "Question: For string S (id=215528), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Next index of S[i]\nc) Number of mismatches at i\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX5_256.",
        "target_text": "Question: Radix sort with d=5 digits and base b=256 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·(n + b))\nc) Θ(b^d)\nd) Θ(d·n·log b)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS1445866.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=1445866 typically runs in?\nChoices:\na) Θ(n) average\nb) O(log log n) average\nc) Θ(log n) average\nd) O(1) worst-case\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M4_4_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/4) + n^4 for n being a power of 4.\nChoices:\na) Θ(n^1.0 log n)\nb) Θ(n^4 log n)\nc) Θ(n^4)\nd) Θ(n^1.0)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R579504.",
        "target_text": "Question: Rotate an array right by r=579504 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Three-reversal method\nc) Single-step rotate repeated r times\nd) Heapify then extract\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR10.",
        "target_text": "Question: Reverse a singly linked list in groups of k=10 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(n log k)\nc) Θ(k log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Operator handling via stacks preserves associativity rules. Variant IP2_3.",
        "target_text": "Question: Evaluate an infix expression with 2–3 precedence levels and parentheses. Linear-time method?\nChoices:\na) Convert to postfix and evaluate with a stack\nb) Sort tokens by precedence then scan\nc) Build a tree without any stack\nd) Left-to-right without stacks\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS2121.",
        "target_text": "Question: A queue via two stacks handles a burst of 2121 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) Both Θ(log n)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM235_96031.",
        "target_text": "Question: Merge k=235 sorted streams totaling N=96031 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(N + k^2)\nc) Θ(N log N)\nd) Θ(k log N)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.8.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.8?\nChoices:\na) To reduce memory usage to exact size\nb) To maintain key stability\nc) To sort keys implicitly\nd) To keep expected O(1) operations\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H350503729.",
        "target_text": "Question: For a balanced BST with n=350503729 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(log log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP765881.",
        "target_text": "Question: Test bipartiteness (id=765881) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Check all degrees even\nd) Compute an MST then inspect edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000007.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000007 achieves expected linear time due to what?\nChoices:\na) Low collision probability of rolling hash\nb) Suffix tree guaranteeing O(1) per char\nc) Trie of all substrings\nd) Use of a min-heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB12911411.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=12911411 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n^2)\nc) Ω(n log n)\nd) Ω(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI54_1830.",
        "target_text": "Question: Binary search over half-open range [54, 1830)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Increase both lo and hi to skip duplicates\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T2_6_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^2, f3=n^2 (log n)^6, f4=n^6?\nChoices:\na) Θ(n^2)\nb) Θ(n^6)\nc) Θ(n^2 (log n)^6)\nd) Θ((log n)^6)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM148355.",
        "target_text": "Question: Find a majority element in an array of length n=148355 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Binary search on value domain\nc) Boyer–Moore voting with verification\nd) Divide-and-conquer merges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK29_2696.",
        "target_text": "Question: Merge k=29 sorted linked lists totaling n=2696 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(k n)\nc) Θ(n + k^2)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP920.",
        "target_text": "Question: Verify whether a pop sequence of length n=920 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Backtrack with recursion in Θ(2^n)\nc) Sort both sequences then compare\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B279396.",
        "target_text": "Question: Run BFS on an unweighted graph with 279396 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) Minimum memory footprint\nc) All simple paths before all edges\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA13_1738084.",
        "target_text": "Question: In a d-ary heap with d=13 and n=1738084 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(√n)\nc) Θ(log_13 n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH131072.",
        "target_text": "Question: In open addressing with double hashing over table size m=131072, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) g(k) coprime with m for all keys\nc) Use g(k)=0 for some keys\nd) Make both hash functions identical\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H593011444.",
        "target_text": "Question: For a balanced BST with n=593011444 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR165904.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=165904 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Topological sorting\nc) Tarjan’s low-link DFS\nd) Kruskal’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN267256.",
        "target_text": "Question: Check anagrams for strings of length n=267256 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) Use a stack\nc) Sort both in Θ(n log n)\nd) DFS on character graph\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS56.",
        "target_text": "Question: Array is nearly sorted with at most 56 inversions. Which algorithm excels?\nChoices:\na) Insertion sort\nb) Shell sort with fixed gaps\nc) Radix sort\nd) Heap sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU8812401.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=8812401. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Hashing with chaining\nc) Linear scan with early exit\nd) Heap-based selection\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T2_5_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^2, f3=n^2 (log n)^5, f4=n^4?\nChoices:\na) Θ(n^2)\nb) Θ(n^2 (log n)^5)\nc) Θ((log n)^5)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM979607.",
        "target_text": "Question: Find a majority element in an array of length n=979607 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Divide-and-conquer merges\nc) Boyer–Moore voting with verification\nd) Counting sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN946955_529510.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=946955, B=529510. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Advance pointers; when one ends, jump to the other head\nc) Hash addresses of first list\nd) Reverse one list then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE11253.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=11253. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Binary search tree\nc) Decreasing stack\nd) Max-heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA6720.",
        "target_text": "Question: Circular-array queue with capacity 6720: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require prime capacity\nc) Head==Tail means full\nd) Require power-of-two capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK3.",
        "target_text": "Question: In a d-ary heap (d=3), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It makes the operation constant time\nb) No effect whatsoever\nc) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nd) It increases height linearly\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH16384.",
        "target_text": "Question: In open addressing with double hashing over table size m=16384, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) g(k) coprime with m for all keys\nc) Make both hash functions identical\nd) Choose m even and g(k) even\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS972005.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=972005-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(√n)\nc) Θ(k)\nd) Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP437704.",
        "target_text": "Question: Test bipartiteness (id=437704) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Compute an MST then inspect edges\nc) Sort vertices and deduplicate\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB25598.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=25598. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Suffix automaton or suffix array + LCP\nc) Binary heap of substrings\nd) Queue of rolling hashes only\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB12341813.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=12341813 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(log n)\nc) Ω(n^2)\nd) Ω(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU6336928.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=6336928. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Binary search with left/right bias\nc) Linear scan with early exit\nd) Heap-based selection\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_2_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^1, f3=n^1 (log n)^2, f4=n^6?\nChoices:\na) Θ(n^1)\nb) Θ(n^6)\nc) Θ(n^1 (log n)^2)\nd) Θ((log n)^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S15308_401.",
        "target_text": "Question: Array length n=15308, find max-sum subarray of fixed length k=401. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN88726_918941.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=88726, B=918941. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Advance pointers; when one ends, jump to the other head\nc) Hash addresses of first list\nd) Reverse one list then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP998.",
        "target_text": "Question: Verify whether a pop sequence of length n=998 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Backtrack with recursion in Θ(2^n)\nc) Sort both sequences then compare\nd) Use a queue to mirror the stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ274908.",
        "target_text": "Question: For 274908 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Deque\nc) Queue\nd) Binary heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA12_57734207.",
        "target_text": "Question: In a d-ary heap with d=12 and n=57734207 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(log_12 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.31.",
        "target_text": "Question: In separate chaining with load factor α=1.31, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA852403.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=852403 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) DFS from root each time\nc) Naive parent climbing O(n) per query\nd) Sort node labels then binary search\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D220161.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 220161]. Why?\nChoices:\na) Distinct weights are required\nb) Graph must be undirected\nc) Self-loops must be absent\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP2673.",
        "target_text": "Question: KMP matches a pattern of length m=2673 in linear time using which table?\nChoices:\na) Suffix array\nb) LPS (failure) function\nc) Z-array exclusively\nd) Rolling hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB60229250.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=60229250 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n)\nc) Ω(n log n)\nd) Ω(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Geometric level distribution mirrors balanced trees. Variant SL0.5.",
        "target_text": "Question: Skip list with level promotion probability p=0.5: expected complexity of search/insert/delete?\nChoices:\na) Θ(√n) for all three\nb) Θ(1) for all three\nc) Θ(log n) for all three\nd) Θ(n) for all three\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M9_4_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/4) + n^0 for n being a power of 4.\nChoices:\na) Θ(n^1.585 log n)\nb) Θ(n^0 log n)\nc) Θ(n^0)\nd) Θ(n^1.585)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP127_618.",
        "target_text": "Question: Sorted array length n=127. Decide if any pair sums to 618. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Brute force in Θ(n^2)\nc) Two-pointer scan in Θ(n)\nd) Divide and conquer in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK20_2411.",
        "target_text": "Question: Merge k=20 sorted linked lists totaling n=2411 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n log k)\nc) Θ(k n)\nd) Θ(n + k^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS2.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 2 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Greedy left-to-right without memory\nc) Use BFS on substring graph\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ640483.",
        "target_text": "Question: For 640483 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Queue\nc) Binary heap\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA8_7115833.",
        "target_text": "Question: In a d-ary heap with d=8 and n=7115833 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(log_8 n)\nc) Θ(n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.38.",
        "target_text": "Question: In separate chaining with load factor α=0.38, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(α)\nc) Θ(1/α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H639061224.",
        "target_text": "Question: For a balanced BST with n=639061224 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC149700.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=149700 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(E log V)\nc) Θ(V log V)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB19834.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=19834. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) Queue of rolling hashes only\nc) Suffix automaton or suffix array + LCP\nd) BST over all substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS696979.",
        "target_text": "Question: Keys are integers in range [0..696979]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Quick sort\nc) Counting sort\nd) Shell sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI37_3756.",
        "target_text": "Question: Binary search over half-open range [37, 3756)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Increase both lo and hi to skip duplicates\nd) Keep inclusive bounds on both ends\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M9_5_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/5) + n^2 for n being a power of 5.\nChoices:\na) Θ(n^2 log n)\nb) Θ(n^1.3652 log n)\nc) Θ(n^1.3652)\nd) Θ(n^2)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP13620_3208.",
        "target_text": "Question: Sorted array length n=13620. Decide if any pair sums to 3208. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Brute force in Θ(n^2)\nd) Hash set in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK84_4605.",
        "target_text": "Question: Merge k=84 sorted linked lists totaling n=4605 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(k n)\nc) Θ(n log k)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE72482.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=72482. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Queue\nc) Binary search tree\nd) Max-heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS6979.",
        "target_text": "Question: A queue via two stacks handles a burst of 6979 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) Both Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH1201535.",
        "target_text": "Question: Build a binary heap from n=1201535 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(n^2)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.39.",
        "target_text": "Question: In separate chaining with load factor α=0.39, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1/α)\nc) Θ(α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H187036906.",
        "target_text": "Question: For a balanced BST with n=187036906 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D770656.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 770656]. Why?\nChoices:\na) Distinct weights are required\nb) Self-loops must be absent\nc) Graph must be undirected\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS84478.",
        "target_text": "Question: In KMP, what does LPS[84478] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Number of mismatches up to i\nc) Index of next occurrence\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX8_2.",
        "target_text": "Question: Radix sort with d=8 digits and base b=2 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·(n + b))\nc) Θ(d·n·log b)\nd) Θ(b^d)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI23_913.",
        "target_text": "Question: Binary search over half-open range [23, 913)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Increase both lo and hi to skip duplicates\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T5_2_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^5, f3=n^5 (log n)^2, f4=n^11?\nChoices:\na) Θ(n^5)\nb) Θ(n^5 (log n)^2)\nc) Θ(n^11)\nd) Θ((log n)^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S6950_60.",
        "target_text": "Question: Array length n=6950, find max-sum subarray of fixed length k=60. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN913599_249987.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=913599, B=249987. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Advance pointers; when one ends, jump to the other head\nc) Reverse one list then compare\nd) Binary search on addresses\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP111.",
        "target_text": "Question: Verify whether a pop sequence of length n=111 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Backtrack with recursion in Θ(2^n)\nd) Sort both sequences then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ546945.",
        "target_text": "Question: For 546945 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Binary heap\nc) Stack\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC70522151.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=70522151?\nChoices:\na) Θ(1)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.24.",
        "target_text": "Question: In separate chaining with load factor α=0.24, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA533906.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=533906 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) DFS from root each time\nc) Euler tour + RMQ yields O(1) per query\nd) Naive parent climbing O(n) per query\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D918134.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 918134]. Why?\nChoices:\na) Self-loops must be absent\nb) Graph must be undirected\nc) Nonnegative weights ensure greedy optimality\nd) Distinct weights are required\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS72083.",
        "target_text": "Question: In KMP, what does LPS[72083] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Index of next occurrence\nc) Total distinct prefixes up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS356.",
        "target_text": "Question: Array is nearly sorted with at most 356 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Radix sort\nc) Insertion sort\nd) Shell sort with fixed gaps\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU9994838.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=9994838. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Linear scan with early exit\nc) Binary search with left/right bias\nd) Hashing with chaining\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M5_5_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/5) + n^2 for n being a power of 5.\nChoices:\na) Θ(n^2 log n)\nb) Θ(n^2)\nc) Θ(n^1.0)\nd) Θ(n^1.0 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM14375.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=14375-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Hash all present values then scan\nc) Scan linearly counting gaps\nd) Use a heap of differences\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK60_2821.",
        "target_text": "Question: Merge k=60 sorted linked lists totaling n=2821 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log n)\nc) Θ(k n)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP624.",
        "target_text": "Question: Verify whether a pop sequence of length n=624 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Use a queue to mirror the stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ938559.",
        "target_text": "Question: For 938559 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Queue\nc) Stack\nd) Binary heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC56094814.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=56094814?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF288250_0.53.",
        "target_text": "Question: Chaining hash table with n=288250 keys at load factor α=0.53. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS626215.",
        "target_text": "Question: BST with parent pointers (id=626215): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Always climb to root then go right once\nc) Use level-order and pick next node\nd) Reverse postorder traversal entirely\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D252900.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 252900]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Distinct weights are required\nc) Graph must be undirected\nd) Self-loops must be absent\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS24589.",
        "target_text": "Question: In KMP, what does LPS[24589] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Number of mismatches up to i\nd) Index of next occurrence\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST827919.",
        "target_text": "Question: Stability (id=827919): which pairing is correct?\nChoices:\na) Heap sort (stable), Merge sort (unstable)\nb) Counting sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Quick sort (stable), Selection sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI14_1560.",
        "target_text": "Question: Binary search over half-open range [14, 1560)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Increase both lo and hi to skip duplicates\nc) Keep inclusive bounds on both ends\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_2_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^1, f3=n^1 (log n)^2, f4=n^5?\nChoices:\na) Θ((log n)^2)\nb) Θ(n^1 (log n)^2)\nc) Θ(n^5)\nd) Θ(n^1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP19095_2895.",
        "target_text": "Question: Sorted array length n=19095. Decide if any pair sums to 2895. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Divide and conquer in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL85480.",
        "target_text": "Question: Check if a singly linked list of length n=85480 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Sort and compare with original\nc) Copy to array and two-pointer check\nd) Use a hash set of seen values\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS4922.",
        "target_text": "Question: Compute stock span for 4922 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Priority queue\nc) Hash table\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA4764.",
        "target_text": "Question: Circular-array queue with capacity 4764: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Head==Tail means full\nc) Require power-of-two capacity\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC21233105.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=21233105?\nChoices:\na) Θ(1)\nb) Θ(log log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH65536.",
        "target_text": "Question: In open addressing with double hashing over table size m=65536, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) Choose m even and g(k) even\nc) g(k) coprime with m for all keys\nd) Use g(k)=0 for some keys\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS840465.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=840465-th smallest?\nChoices:\na) Θ(k)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D731700.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 731700]. Why?\nChoices:\na) Self-loops must be absent\nb) Distinct weights are required\nc) Nonnegative weights ensure greedy optimality\nd) Graph must be undirected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000009.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Low collision probability of rolling hash\nb) Use of a min-heap\nc) Trie of all substrings\nd) Suffix tree guaranteeing O(1) per char\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS917259.",
        "target_text": "Question: Heapsort stability check id=917259: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is not stable by default\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is stable\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS828485.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=828485 typically runs in?\nChoices:\na) O(1) worst-case\nb) Θ(n) average\nc) O(log log n) average\nd) Θ(log n) average\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M4_2_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/2) + n^0 for n being a power of 2.\nChoices:\na) Θ(n^2.0)\nb) Θ(n^2.0 log n)\nc) Θ(n^0)\nd) Θ(n^0 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP13480_4091.",
        "target_text": "Question: Sorted array length n=13480. Decide if any pair sums to 4091. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Divide and conquer in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Hash set in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK5_626.",
        "target_text": "Question: Merge k=5 sorted linked lists totaling n=626 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n + k^2)\nc) Θ(n log n)\nd) Θ(k n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Operator handling via stacks preserves associativity rules. Variant IP2_3.",
        "target_text": "Question: Evaluate an infix expression with 2–3 precedence levels and parentheses. Linear-time method?\nChoices:\na) Convert to postfix and evaluate with a stack\nb) Left-to-right without stacks\nc) Build a tree without any stack\nd) Sort tokens by precedence then scan\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW6106_281.",
        "target_text": "Question: Sliding window maximum for array length n=6106 and window w=281. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(n)\nc) Θ(w log n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK8.",
        "target_text": "Question: In a d-ary heap (d=8), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It makes the operation constant time\nb) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nc) It increases height linearly\nd) No effect whatsoever\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF291027_0.62.",
        "target_text": "Question: Chaining hash table with n=291027 keys at load factor α=0.62. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(1 + α)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA216970.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=216970 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Naive parent climbing O(n) per query\nc) Sort node labels then binary search\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP193921.",
        "target_text": "Question: Test bipartiteness (id=193921) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Compute an MST then inspect edges\nc) Check all degrees even\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN442299.",
        "target_text": "Question: Check anagrams for strings of length n=442299 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Sort both in Θ(n log n)\nc) Use a stack\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS403.",
        "target_text": "Question: Array is nearly sorted with at most 403 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Heap sort\nc) Shell sort with fixed gaps\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS8224408.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=8224408 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(1) expected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_5_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^1, f3=n^1 (log n)^5, f4=n^8?\nChoices:\na) Θ(n^1)\nb) Θ(n^8)\nc) Θ(n^1 (log n)^5)\nd) Θ((log n)^5)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP6062_2769.",
        "target_text": "Question: Sorted array length n=6062. Decide if any pair sums to 2769. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Divide and conquer in Θ(n log n)\nc) Brute force in Θ(n^2)\nd) Two-pointer scan in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN643988_816296.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=643988, B=816296. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Hash addresses of first list\nc) Advance pointers; when one ends, jump to the other head\nd) Reverse one list then compare\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS2.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 2 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Sort segments then concatenate\nc) Use two stacks for counts and fragments\nd) Greedy left-to-right without memory\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ47320.",
        "target_text": "Question: For 47320 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Deque\nc) Binary heap\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA14_88512779.",
        "target_text": "Question: In a d-ary heap with d=14 and n=88512779 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log_14 n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF7174836_0.39.",
        "target_text": "Question: Chaining hash table with n=7174836 keys at load factor α=0.39. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(1 + α)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS849026.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=849026-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(k)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST611381.",
        "target_text": "Question: MST question id=611381: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) MST is always unique in connected graphs\nc) Kruskal adds the smallest edge that doesn't create a cycle\nd) MST minimizes number of edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB76473.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=76473. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) Queue of rolling hashes only\nc) Binary heap of substrings\nd) BST over all substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB38939071.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=38939071 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n^2)\nc) Ω(n log n)\nd) Ω(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Geometric level distribution mirrors balanced trees. Variant SL0.75.",
        "target_text": "Question: Skip list with level promotion probability p=0.75: expected complexity of search/insert/delete?\nChoices:\na) Θ(√n) for all three\nb) Θ(1) for all three\nc) Θ(n) for all three\nd) Θ(log n) for all three\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M4_5_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/5) + n^0 for n being a power of 5.\nChoices:\na) Θ(n^0.8614 log n)\nb) Θ(n^0 log n)\nc) Θ(n^0)\nd) Θ(n^0.8614)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R822815.",
        "target_text": "Question: Rotate an array right by r=822815 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Single-step rotate repeated r times\nc) Three-reversal method\nd) Heapify then extract\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK9_1402.",
        "target_text": "Question: Merge k=9 sorted linked lists totaling n=1402 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n log n)\nc) Θ(n log k)\nd) Θ(n + k^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE5924.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=5924. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Queue\nc) Binary search tree\nd) Max-heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA1125.",
        "target_text": "Question: Circular-array queue with capacity 1125: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Require power-of-two capacity\nc) Head==Tail means full\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM345_111364.",
        "target_text": "Question: Merge k=345 sorted streams totaling N=111364 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log k)\nc) Θ(N log N)\nd) Θ(N + k^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF9263214_0.55.",
        "target_text": "Question: Chaining hash table with n=9263214 keys at load factor α=0.55. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(α log α)\nc) Θ(1 + α)\nd) Θ(nα)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA772001.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=772001 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Euler tour + RMQ yields O(1) per query\nc) Naive parent climbing O(n) per query\nd) Sort node labels then binary search\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D390032.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 390032]. Why?\nChoices:\na) Graph must be undirected\nb) Self-loops must be absent\nc) Distinct weights are required\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB69240.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=69240. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) BST over all substrings\nc) Binary heap of substrings\nd) Queue of rolling hashes only\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS305680.",
        "target_text": "Question: Heapsort stability check id=305680: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort always beats merge sort\nc) Heapsort is stable\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS3620279.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=3620279 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(1) expected\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_5_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^3, f3=n^3 (log n)^5, f4=n^10?\nChoices:\na) Θ(n^3 (log n)^5)\nb) Θ(n^3)\nc) Θ((log n)^5)\nd) Θ(n^10)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S17842_240.",
        "target_text": "Question: Array length n=17842, find max-sum subarray of fixed length k=240. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL23708.",
        "target_text": "Question: Check if a singly linked list of length n=23708 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Sort and compare with original\nc) Copy to array and two-pointer check\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS1170.",
        "target_text": "Question: Compute stock span for 1170 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Hash table\nc) Monotonic stack\nd) Fenwick tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B555002.",
        "target_text": "Question: Run BFS on an unweighted graph with 555002 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) All simple paths before all edges\nc) Minimum memory footprint\nd) Lexicographic vertex order\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC4881644.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=4881644?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Adversarial patterns are neutralized by random choice. Variant UH1000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=1000 slots yields what benefit?\nChoices:\na) Zero collisions guaranteed\nb) Expected constant-time operations against adversaries\nc) Eliminates need for resizing\nd) Cryptographic security by default\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR559070.",
        "target_text": "Question: In a BST with distinct keys (id=559070), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Preorder\nc) Level-order\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST492895.",
        "target_text": "Question: MST question id=492895: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) MST minimizes number of edges\nc) Prim requires the entire edge set to be sorted first\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z214596.",
        "target_text": "Question: For string S (id=214596), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Number of distinct substrings up to i\nc) Number of mismatches at i\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB73106820.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=73106820 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n)\nc) Ω(n^2)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS7661933.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=7661933 typically runs in?\nChoices:\na) O(1) worst-case\nb) O(log log n) average\nc) Θ(log n) average\nd) Θ(n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_4_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^1, f3=n^1 (log n)^4, f4=n^7?\nChoices:\na) Θ(n^1)\nb) Θ(n^7)\nc) Θ((log n)^4)\nd) Θ(n^1 (log n)^4)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM60129.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=60129-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Binary search on index vs value gap\nc) Scan linearly counting gaps\nd) Hash all present values then scan\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK68_8729.",
        "target_text": "Question: Merge k=68 sorted linked lists totaling n=8729 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log n)\nc) Θ(n log k)\nd) Θ(k n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS8.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 8 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Greedy left-to-right without memory\nc) Sort segments then concatenate\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ7689.",
        "target_text": "Question: Schedule 7689 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Stack\nc) Binary heap\nd) Unordered array\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC97644299.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=97644299?\nChoices:\na) Θ(1)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.83.",
        "target_text": "Question: In separate chaining with load factor α=0.83, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H766795769.",
        "target_text": "Question: For a balanced BST with n=766795769 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS866941_3701831.",
        "target_text": "Question: A directed graph with V=866941, E≈3701831. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if edges are unweighted\nc) When it is a DAG (no directed cycles)\nd) Only if the graph is connected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE2.",
        "target_text": "Question: Search a trie over alphabet size σ=2 for a key of length m. Time complexity?\nChoices:\na) Θ(m log σ)\nb) Θ(log n)\nc) Θ(m)\nd) Θ(1) average for all m\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX5_32.",
        "target_text": "Question: Radix sort with d=5 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(b^d)\nc) Θ(n log n)\nd) Θ(d·n·log b)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS7920979.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=7920979 typically runs in?\nChoices:\na) Θ(log n) average\nb) O(log log n) average\nc) Θ(n) average\nd) O(1) worst-case\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T4_4_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^4, f3=n^4 (log n)^4, f4=n^10?\nChoices:\na) Θ(n^4 (log n)^4)\nb) Θ(n^10)\nc) Θ((log n)^4)\nd) Θ(n^4)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM82619.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=82619-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Use a heap of differences\nc) Scan linearly counting gaps\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL10250.",
        "target_text": "Question: Check if a singly linked list of length n=10250 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Copy to array and two-pointer check\nc) Use a hash set of seen values\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS6.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 6 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Greedy left-to-right without memory\nb) Sort segments then concatenate\nc) Use BFS on substring graph\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ696109.",
        "target_text": "Question: Schedule 696109 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Stack\nc) Circular queue\nd) Unordered array\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC18357499.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=18357499?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF5526433_0.62.",
        "target_text": "Question: Chaining hash table with n=5526433 keys at load factor α=0.62. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(α log α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS928643.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=928643-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(k)\nc) Θ(1)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS9140_47890.",
        "target_text": "Question: A directed graph with V=9140, E≈47890. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if the graph is connected\nc) Only if edges are unweighted\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP1154.",
        "target_text": "Question: KMP matches a pattern of length m=1154 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) Suffix array\nc) Rolling hash table\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS303854.",
        "target_text": "Question: Heapsort stability check id=303854: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is not stable by default\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is stable\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS6568601.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=6568601 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(1) expected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T3_1_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^3, f3=n^3 (log n)^1, f4=n^5?\nChoices:\na) Θ(n^3)\nb) Θ(n^5)\nc) Θ((log n)^1)\nd) Θ(n^3 (log n)^1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM81225.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=81225-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Hash all present values then scan\nc) Binary search on index vs value gap\nd) Scan linearly counting gaps\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN708371.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 708371, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Traverse from head to find predecessor\nc) Impossible under any model\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1344.",
        "target_text": "Question: Verify whether a pop sequence of length n=1344 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Simulate using one stack in Θ(n)\nc) Use a queue to mirror the stack\nd) Sort both sequences then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW9701_525.",
        "target_text": "Question: Sliding window maximum for array length n=9701 and window w=525. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(w log n)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA16_50422189.",
        "target_text": "Question: In a d-ary heap with d=16 and n=50422189 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log_16 n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF1564897_0.35.",
        "target_text": "Question: Chaining hash table with n=1564897 keys at load factor α=0.35. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(α log α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H391889312.",
        "target_text": "Question: For a balanced BST with n=391889312 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST618994.",
        "target_text": "Question: MST question id=618994: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) Prim requires the entire edge set to be sorted first\nc) MST is always unique in connected graphs\nd) MST minimizes number of edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN83897.",
        "target_text": "Question: Check anagrams for strings of length n=83897 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) Use a stack\nc) DFS on character graph\nd) Sort both in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX4_32.",
        "target_text": "Question: Radix sort with d=4 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(d·n·log b)\nc) Θ(n log n)\nd) Θ(b^d)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS2150660.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=2150660 typically runs in?\nChoices:\na) O(log log n) average\nb) O(1) worst-case\nc) Θ(n) average\nd) Θ(log n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_5_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^1, f3=n^1 (log n)^5, f4=n^5?\nChoices:\na) Θ(n^1 (log n)^5)\nb) Θ((log n)^5)\nc) Θ(n^1)\nd) Θ(n^5)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP9380_1617.",
        "target_text": "Question: Sorted array length n=9380. Decide if any pair sums to 1617. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Brute force in Θ(n^2)\nd) Divide and conquer in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Phase difference accumulates around the cycle. Variant C2.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 2× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(1) space\nb) Θ(log n) time, Θ(1) space\nc) Θ(n) time, Θ(n) space\nd) Θ(1) time, Θ(1) space\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS3954.",
        "target_text": "Question: Compute stock span for 3954 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Fenwick tree\nc) Monotonic stack\nd) Hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA4932.",
        "target_text": "Question: Circular-array queue with capacity 4932: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Require power-of-two capacity\nc) Head==Tail means full\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH1071.",
        "target_text": "Question: Build a binary heap from n=1071 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(log n)\nc) Θ(n^2)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Adversarial patterns are neutralized by random choice. Variant UH10000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=10000 slots yields what benefit?\nChoices:\na) Cryptographic security by default\nb) Zero collisions guaranteed\nc) Eliminates need for resizing\nd) Expected constant-time operations against adversaries\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR660566.",
        "target_text": "Question: In a BST with distinct keys (id=660566), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Preorder\nc) Level-order\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Repeated edge relaxation tolerates negatives. Variant BF53167.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=53167 can handle which case while detecting it?\nChoices:\na) Only acyclic graphs\nb) Faster runtime on sparse nonnegative graphs\nc) Negative edge weights and negative cycles\nd) Equal runtime on all graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP6849.",
        "target_text": "Question: KMP matches a pattern of length m=6849 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) Rolling hash table\nc) Suffix array\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB52013894.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=52013894 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n^2)\nc) Ω(log n)\nd) Ω(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI71_4903.",
        "target_text": "Question: Binary search over half-open range [71, 4903)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Keep inclusive bounds on both ends\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Increase both lo and hi to skip duplicates\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T4_2_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^4, f3=n^4 (log n)^2, f4=n^7?\nChoices:\na) Θ(n^4)\nb) Θ(n^4 (log n)^2)\nc) Θ(n^7)\nd) Θ((log n)^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM63171.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=63171-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Hash all present values then scan\nc) Use a heap of differences\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN451559.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 451559, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Traverse from head to find predecessor\nc) Impossible under any model\nd) Reverse list then delete head\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS2991.",
        "target_text": "Question: Compute stock span for 2991 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Fenwick tree\nc) Priority queue\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW5542_492.",
        "target_text": "Question: Sliding window maximum for array length n=5542 and window w=492. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(w log n)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH7254094.",
        "target_text": "Question: Build a binary heap from n=7254094 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(n^2)\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.77.",
        "target_text": "Question: In separate chaining with load factor α=0.77, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS308756.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=308756-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(k)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D191667.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 191667]. Why?\nChoices:\na) Self-loops must be absent\nb) Graph must be undirected\nc) Nonnegative weights ensure greedy optimality\nd) Distinct weights are required\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z867214.",
        "target_text": "Question: For string S (id=867214), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Number of distinct substrings up to i\nc) Next index of S[i]\nd) Number of mismatches at i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS741.",
        "target_text": "Question: Array is nearly sorted with at most 741 inversions. Which algorithm excels?\nChoices:\na) Insertion sort\nb) Heap sort\nc) Radix sort\nd) Shell sort with fixed gaps\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU5255159.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=5255159. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Binary search with left/right bias\nc) Heap-based selection\nd) Linear scan with early exit\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M9_3_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/3) + n^1 for n being a power of 3.\nChoices:\na) Θ(n^2.0)\nb) Θ(n^1)\nc) Θ(n^2.0 log n)\nd) Θ(n^1 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R365941.",
        "target_text": "Question: Rotate an array right by r=365941 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Single-step rotate repeated r times\nc) Heapify then extract\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL78971.",
        "target_text": "Question: Check if a singly linked list of length n=78971 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Find middle, reverse second half, compare\nc) Copy to array and two-pointer check\nd) Use a hash set of seen values\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP4_5.",
        "target_text": "Question: Evaluate an infix expression with 4–5 precedence levels and parentheses. Linear-time method?\nChoices:\na) Sort tokens by precedence then scan\nb) Build a tree without any stack\nc) Convert to postfix and evaluate with a stack\nd) Left-to-right without stacks\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA3935.",
        "target_text": "Question: Circular-array queue with capacity 3935: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require power-of-two capacity\nc) Require prime capacity\nd) Head==Tail means full\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL21_499531.",
        "target_text": "Question: Find the k=21-th largest element among n=499531 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Deterministic selection (median-of-medians)\nc) Heapsort then index\nd) Build max-heap and extract k times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF9113600_0.42.",
        "target_text": "Question: Chaining hash table with n=9113600 keys at load factor α=0.42. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(α log α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR129703.",
        "target_text": "Question: In a BST with distinct keys (id=129703), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Postorder\nc) Inorder\nd) Level-order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D316784.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 316784]. Why?\nChoices:\na) Graph must be undirected\nb) Self-loops must be absent\nc) Nonnegative weights ensure greedy optimality\nd) Distinct weights are required\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z86949.",
        "target_text": "Question: For string S (id=86949), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Number of mismatches at i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Next index of S[i]\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS829145.",
        "target_text": "Question: Heapsort stability check id=829145: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort always beats merge sort\nd) Heapsort is stable\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX572228263.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈572228263. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Uses hashing to index unknown segments\nc) Requires the array to be cyclic\nd) Sorts the array first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M5_4_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/4) + n^4 for n being a power of 4.\nChoices:\na) Θ(n^1.161 log n)\nb) Θ(n^4)\nc) Θ(n^4 log n)\nd) Θ(n^1.161)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM298236.",
        "target_text": "Question: Find a majority element in an array of length n=298236 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Counting sort\nc) Binary search on value domain\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK90_5254.",
        "target_text": "Question: Merge k=90 sorted linked lists totaling n=5254 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n log n)\nc) Θ(n log k)\nd) Θ(n + k^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP4_5.",
        "target_text": "Question: Evaluate an infix expression with 4–5 precedence levels and parentheses. Linear-time method?\nChoices:\na) Build a tree without any stack\nb) Sort tokens by precedence then scan\nc) Convert to postfix and evaluate with a stack\nd) Left-to-right without stacks\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B424871.",
        "target_text": "Question: Run BFS on an unweighted graph with 424871 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Minimum memory footprint\nc) Lexicographic vertex order\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH4230868.",
        "target_text": "Question: Build a binary heap from n=4230868 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(n^2)\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF2412347_0.87.",
        "target_text": "Question: Chaining hash table with n=2412347 keys at load factor α=0.87. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(nα)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H160695189.",
        "target_text": "Question: For a balanced BST with n=160695189 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR481851.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=481851 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Tarjan’s low-link DFS\nc) Topological sorting\nd) Kruskal’s algorithm\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z779822.",
        "target_text": "Question: For string S (id=779822), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Number of distinct substrings up to i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of mismatches at i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS18.",
        "target_text": "Question: Array is nearly sorted with at most 18 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Radix sort\nc) Heap sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS3257871.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=3257871 typically runs in?\nChoices:\na) Θ(log n) average\nb) O(1) worst-case\nc) Θ(n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A8.",
        "target_text": "Question: A dynamic array starts with capacity 8 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(√m)\nc) Θ(log m)\nd) Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R931690.",
        "target_text": "Question: Rotate an array right by r=931690 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Single-step rotate repeated r times\nc) Selection sort then shift\nd) Heapify then extract\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN790320.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 790320, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Reverse list then delete head\nc) Impossible under any model\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP3_4.",
        "target_text": "Question: Evaluate an infix expression with 3–4 precedence levels and parentheses. Linear-time method?\nChoices:\na) Left-to-right without stacks\nb) Build a tree without any stack\nc) Sort tokens by precedence then scan\nd) Convert to postfix and evaluate with a stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ650407.",
        "target_text": "Question: Schedule 650407 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Circular queue\nc) Unordered array\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA4_84132136.",
        "target_text": "Question: In a d-ary heap with d=4 and n=84132136 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log_4 n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF3010452_0.23.",
        "target_text": "Question: Chaining hash table with n=3010452 keys at load factor α=0.23. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(α log α)\nd) Θ(nα)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS981389.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=981389-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(k)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Repeated edge relaxation tolerates negatives. Variant BF6591.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=6591 can handle which case while detecting it?\nChoices:\na) Equal runtime on all graphs\nb) Negative edge weights and negative cycles\nc) Only acyclic graphs\nd) Faster runtime on sparse nonnegative graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP74586.",
        "target_text": "Question: KMP matches a pattern of length m=74586 in linear time using which table?\nChoices:\na) Suffix array\nb) LPS (failure) function\nc) Rolling hash table\nd) Z-array exclusively\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS725625.",
        "target_text": "Question: Heapsort stability check id=725625: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort is not stable by default\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort always beats merge sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Geometric level distribution mirrors balanced trees. Variant SL0.5.",
        "target_text": "Question: Skip list with level promotion probability p=0.5: expected complexity of search/insert/delete?\nChoices:\na) Θ(n) for all three\nb) Θ(log n) for all three\nc) Θ(√n) for all three\nd) Θ(1) for all three\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_6_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^1, f3=n^1 (log n)^6, f4=n^7?\nChoices:\na) Θ(n^1 (log n)^6)\nb) Θ(n^7)\nc) Θ(n^1)\nd) Θ((log n)^6)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM6826.",
        "target_text": "Question: Find a majority element in an array of length n=6826 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Counting sort\nc) Boyer–Moore voting with verification\nd) Divide-and-conquer merges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN108174.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 108174, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Copy next node’s data here and bypass next\nc) Traverse from head to find predecessor\nd) Reverse list then delete head\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1802.",
        "target_text": "Question: Verify whether a pop sequence of length n=1802 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW8552_292.",
        "target_text": "Question: Sliding window maximum for array length n=8552 and window w=292. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(w log n)\nc) Θ(n)\nd) Θ(nw)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK4.",
        "target_text": "Question: In a d-ary heap (d=4), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) No effect whatsoever\nb) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nc) It increases height linearly\nd) It makes the operation constant time\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Adversarial patterns are neutralized by random choice. Variant UH10000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=10000 slots yields what benefit?\nChoices:\na) Cryptographic security by default\nb) Expected constant-time operations against adversaries\nc) Zero collisions guaranteed\nd) Eliminates need for resizing\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA906597.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=906597 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) Euler tour + RMQ yields O(1) per query\nc) Sort node labels then binary search\nd) DFS from root each time\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP122749.",
        "target_text": "Question: Test bipartiteness (id=122749) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Sort vertices and deduplicate\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Check all degrees even\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS19823.",
        "target_text": "Question: In KMP, what does LPS[19823] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Number of mismatches up to i\nc) Index of next occurrence\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST825890.",
        "target_text": "Question: Stability (id=825890): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Merge sort (stable), Heap sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU8293642.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=8293642. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Hashing with chaining\nc) Binary search with left/right bias\nd) Heap-based selection\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_6_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^4, f3=n^4 (log n)^6, f4=n^9?\nChoices:\na) Θ(n^4 (log n)^6)\nb) Θ(n^9)\nc) Θ(n^4)\nd) Θ((log n)^6)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM90873.",
        "target_text": "Question: Find a majority element in an array of length n=90873 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Counting sort\nc) Boyer–Moore voting with verification\nd) Divide-and-conquer merges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL30232.",
        "target_text": "Question: Check if a singly linked list of length n=30232 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Sort and compare with original\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Operator handling via stacks preserves associativity rules. Variant IP2_3.",
        "target_text": "Question: Evaluate an infix expression with 2–3 precedence levels and parentheses. Linear-time method?\nChoices:\na) Sort tokens by precedence then scan\nb) Left-to-right without stacks\nc) Build a tree without any stack\nd) Convert to postfix and evaluate with a stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ761059.",
        "target_text": "Question: Schedule 761059 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Stack\nc) Unordered array\nd) Circular queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM314_136187.",
        "target_text": "Question: Merge k=314 sorted streams totaling N=136187 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(N + k^2)\nc) Θ(N log N)\nd) Θ(k log N)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.66.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.66?\nChoices:\na) To maintain key stability\nb) To reduce memory usage to exact size\nc) To sort keys implicitly\nd) To keep expected O(1) operations\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA19304.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=19304 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) Naive parent climbing O(n) per query\nc) DFS from root each time\nd) Sort node labels then binary search\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D639062.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 639062]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Graph must be undirected\nc) Self-loops must be absent\nd) Distinct weights are required\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE52.",
        "target_text": "Question: Search a trie over alphabet size σ=52 for a key of length m. Time complexity?\nChoices:\na) Θ(m log σ)\nb) Θ(m)\nc) Θ(log n)\nd) Θ(1) average for all m\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST946871.",
        "target_text": "Question: Stability (id=946871): which pairing is correct?\nChoices:\na) Merge sort (stable), Heap sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Counting sort (unstable)\nd) Quick sort (stable), Selection sort (unstable)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX839204583.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈839204583. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Requires the array to be cyclic\nc) Sorts the array first\nd) Uses hashing to index unknown segments\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M4_3_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/3) + n^4 for n being a power of 3.\nChoices:\na) Θ(n^1.2619)\nb) Θ(n^4)\nc) Θ(n^1.2619 log n)\nd) Θ(n^4 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM675901.",
        "target_text": "Question: Find a majority element in an array of length n=675901 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Binary search on value domain\nc) Divide-and-conquer merges\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL66398.",
        "target_text": "Question: Check if a singly linked list of length n=66398 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Copy to array and two-pointer check\nc) Sort and compare with original\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP294.",
        "target_text": "Question: Verify whether a pop sequence of length n=294 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Simulate using one stack in Θ(n)\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS3706.",
        "target_text": "Question: A queue via two stacks handles a burst of 3706 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) Both Θ(log n)\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL647_171199.",
        "target_text": "Question: Find the k=647-th largest element among n=171199 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Heapsort then index\nc) Binary search on value domain\nd) Build max-heap and extract k times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH16384.",
        "target_text": "Question: In open addressing with double hashing over table size m=16384, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Make both hash functions identical\nc) Choose m even and g(k) even\nd) Use g(k)=0 for some keys\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H550339652.",
        "target_text": "Question: For a balanced BST with n=550339652 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(log log n)\nc) Θ(n)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS892529_2690576.",
        "target_text": "Question: A directed graph with V=892529, E≈2690576. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) When all vertices have outdegree ≥ 1\nc) Only if the graph is connected\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN351487.",
        "target_text": "Question: Check anagrams for strings of length n=351487 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) DFS on character graph\nc) Sort both in Θ(n log n)\nd) Use a stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB65752148.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=65752148 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(log n)\nc) Ω(n^2)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI83_226.",
        "target_text": "Question: Binary search over half-open range [83, 226)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Increase both lo and hi to skip duplicates\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T4_5_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^4, f3=n^4 (log n)^5, f4=n^9?\nChoices:\na) Θ(n^4 (log n)^5)\nb) Θ(n^4)\nc) Θ(n^9)\nd) Θ((log n)^5)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM8905.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=8905-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Binary search on index vs value gap\nc) Hash all present values then scan\nd) Scan linearly counting gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN138593_57822.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=138593, B=57822. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Reverse one list then compare\nc) Advance pointers; when one ends, jump to the other head\nd) Binary search on addresses\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP201.",
        "target_text": "Question: Verify whether a pop sequence of length n=201 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Use a queue to mirror the stack\nc) Simulate using one stack in Θ(n)\nd) Backtrack with recursion in Θ(2^n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA7593.",
        "target_text": "Question: Circular-array queue with capacity 7593: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Require power-of-two capacity\nc) Require prime capacity\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL424_197565.",
        "target_text": "Question: Find the k=424-th largest element among n=197565 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Build max-heap and extract k times\nc) Heapsort then index\nd) Binary search on value domain\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.08.",
        "target_text": "Question: In separate chaining with load factor α=1.08, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA248232.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=248232 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) DFS from root each time\nc) Euler tour + RMQ yields O(1) per query\nd) Naive parent climbing O(n) per query\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC90271.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=90271 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(VE)\nc) Θ(V+E)\nd) Θ(V log V)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB52633.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=52633. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) BST over all substrings\nc) Binary heap of substrings\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX7_1024.",
        "target_text": "Question: Radix sort with d=7 digits and base b=1024 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(d·n·log b)\nc) Θ(b^d)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX81077702.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈81077702. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Doubles the bound to bracket, then binary search\nc) Requires the array to be cyclic\nd) Sorts the array first\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T3_3_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^3, f3=n^3 (log n)^3, f4=n^9?\nChoices:\na) Θ(n^9)\nb) Θ((log n)^3)\nc) Θ(n^3 (log n)^3)\nd) Θ(n^3)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM50381.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=50381-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Binary search on index vs value gap\nc) Use a heap of differences\nd) Hash all present values then scan\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN769746_630391.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=769746, B=630391. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Reverse one list then compare\nc) Hash addresses of first list\nd) Binary search on addresses\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS8.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 8 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Greedy left-to-right without memory\nb) Sort segments then concatenate\nc) Use two stacks for counts and fragments\nd) Use BFS on substring graph\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS111.",
        "target_text": "Question: A queue via two stacks handles a burst of 111 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) Both Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL97_23506.",
        "target_text": "Question: Find the k=97-th largest element among n=23506 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Heapsort then index\nc) Deterministic selection (median-of-medians)\nd) Binary search on value domain\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.49.",
        "target_text": "Question: In separate chaining with load factor α=1.49, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(log n)\nc) Θ(α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS622072.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=622072-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(k)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS829852_1568285.",
        "target_text": "Question: A directed graph with V=829852, E≈1568285. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) When all vertices have outdegree ≥ 1\nc) When it is a DAG (no directed cycles)\nd) Only if the graph is connected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB77138.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=77138. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) Suffix automaton or suffix array + LCP\nc) BST over all substrings\nd) Queue of rolling hashes only\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX5_256.",
        "target_text": "Question: Radix sort with d=5 digits and base b=256 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·n·log b)\nb) Θ(n log n)\nc) Θ(b^d)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS3370619.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=3370619 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(log n) average\nc) O(1) worst-case\nd) Θ(n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T2_2_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^2, f3=n^2 (log n)^2, f4=n^4?\nChoices:\na) Θ(n^2 (log n)^2)\nb) Θ(n^4)\nc) Θ(n^2)\nd) Θ((log n)^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM667244.",
        "target_text": "Question: Find a majority element in an array of length n=667244 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Divide-and-conquer merges\nc) Binary search on value domain\nd) Counting sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL70680.",
        "target_text": "Question: Check if a singly linked list of length n=70680 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Find middle, reverse second half, compare\nc) Sort and compare with original\nd) Use a hash set of seen values\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS1951.",
        "target_text": "Question: Compute stock span for 1951 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Fenwick tree\nc) Priority queue\nd) Hash table\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B787246.",
        "target_text": "Question: Run BFS on an unweighted graph with 787246 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Nondecreasing distance from source\nc) Minimum memory footprint\nd) Lexicographic vertex order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC23149104.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=23149104?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Adversarial patterns are neutralized by random choice. Variant UH10000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=10000 slots yields what benefit?\nChoices:\na) Eliminates need for resizing\nb) Zero collisions guaranteed\nc) Expected constant-time operations against adversaries\nd) Cryptographic security by default\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS669088.",
        "target_text": "Question: BST with parent pointers (id=669088): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Always climb to root then go right once\nc) Use level-order and pick next node\nd) Reverse postorder traversal entirely\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR525431.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=525431 edges. What algorithmic idea achieves linear time?\nChoices:\na) Kruskal’s algorithm\nb) Topological sorting\nc) Tarjan’s low-link DFS\nd) Dijkstra’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP33020.",
        "target_text": "Question: KMP matches a pattern of length m=33020 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) Suffix array\nc) LPS (failure) function\nd) Rolling hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST259712.",
        "target_text": "Question: Stability (id=259712): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Quick sort (stable), Selection sort (unstable)\nc) Heap sort (stable), Merge sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI13_2366.",
        "target_text": "Question: Binary search over half-open range [13, 2366)—which invariant prevents infinite loops?\nChoices:\na) Increase both lo and hi to skip duplicates\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Keep inclusive bounds on both ends\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M6_2_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/2) + n^4 for n being a power of 2.\nChoices:\na) Θ(n^4 log n)\nb) Θ(n^2.585 log n)\nc) Θ(n^2.585)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P864128.",
        "target_text": "Question: Answer 864128 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Build prefix-sum array; O(1) per query\nc) Use a stack to store partial sums\nd) Recompute sums per query in Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK100_18620.",
        "target_text": "Question: Merge k=100 sorted linked lists totaling n=18620 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n log k)\nc) Θ(n + k^2)\nd) Θ(k n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP189.",
        "target_text": "Question: Verify whether a pop sequence of length n=189 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Simulate using one stack in Θ(n)\nc) Sort both sequences then compare\nd) Use a queue to mirror the stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA6203.",
        "target_text": "Question: Circular-array queue with capacity 6203: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Head==Tail means full\nc) Require prime capacity\nd) Require power-of-two capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC9242520.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=9242520?\nChoices:\na) Θ(1)\nb) Θ(log log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Threshold-based expansion preserves performance. Variant RS0.75.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.75?\nChoices:\na) To sort keys implicitly\nb) To keep expected O(1) operations\nc) To reduce memory usage to exact size\nd) To maintain key stability\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS701103.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=701103-th smallest?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(k)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP46459.",
        "target_text": "Question: Test bipartiteness (id=46459) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Sort vertices and deduplicate\nc) Check all degrees even\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP12503.",
        "target_text": "Question: KMP matches a pattern of length m=12503 in linear time using which table?\nChoices:\na) Rolling hash table\nb) LPS (failure) function\nc) Suffix array\nd) Z-array exclusively\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS14.",
        "target_text": "Question: Array is nearly sorted with at most 14 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Shell sort with fixed gaps\nc) Insertion sort\nd) Radix sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Geometric level distribution mirrors balanced trees. Variant SL0.5.",
        "target_text": "Question: Skip list with level promotion probability p=0.5: expected complexity of search/insert/delete?\nChoices:\na) Θ(n) for all three\nb) Θ(1) for all three\nc) Θ(√n) for all three\nd) Θ(log n) for all three\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T3_6_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^3, f3=n^3 (log n)^6, f4=n^7?\nChoices:\na) Θ(n^7)\nb) Θ(n^3)\nc) Θ(n^3 (log n)^6)\nd) Θ((log n)^6)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P324496.",
        "target_text": "Question: Answer 324496 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Recompute sums per query in Θ(n)\nc) Use a stack to store partial sums\nd) Sort once and binary search per query\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL23692.",
        "target_text": "Question: Check if a singly linked list of length n=23692 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Sort and compare with original\nc) Use a hash set of seen values\nd) Copy to array and two-pointer check\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1620.",
        "target_text": "Question: Verify whether a pop sequence of length n=1620 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Backtrack with recursion in Θ(2^n)\nc) Simulate using one stack in Θ(n)\nd) Use a queue to mirror the stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ595141.",
        "target_text": "Question: Schedule 595141 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Binary heap\nc) Circular queue\nd) Stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK8.",
        "target_text": "Question: In a d-ary heap (d=8), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It makes the operation constant time\nb) It increases height linearly\nc) No effect whatsoever\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH4096.",
        "target_text": "Question: In open addressing with double hashing over table size m=4096, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) Make both hash functions identical\nc) g(k) coprime with m for all keys\nd) Use g(k)=0 for some keys\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H399902726.",
        "target_text": "Question: For a balanced BST with n=399902726 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(log log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR611832.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=611832 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Kruskal’s algorithm\nc) Tarjan’s low-link DFS\nd) Topological sorting\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB68628.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=68628. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Binary heap of substrings\nc) Suffix automaton or suffix array + LCP\nd) Queue of rolling hashes only\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS869.",
        "target_text": "Question: Array is nearly sorted with at most 869 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Radix sort\nc) Heap sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI46_3339.",
        "target_text": "Question: Binary search over half-open range [46, 3339)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Increase both lo and hi to skip duplicates\nc) Keep inclusive bounds on both ends\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_5_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^4, f3=n^4 (log n)^5, f4=n^11?\nChoices:\na) Θ((log n)^5)\nb) Θ(n^4 (log n)^5)\nc) Θ(n^4)\nd) Θ(n^11)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP12325_4730.",
        "target_text": "Question: Sorted array length n=12325. Decide if any pair sums to 4730. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Hash set in Θ(n log n)\nc) Divide and conquer in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Phase difference accumulates around the cycle. Variant C4.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 4× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(1) space\nb) Θ(n) time, Θ(n) space\nc) Θ(log n) time, Θ(1) space\nd) Θ(1) time, Θ(1) space\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS4.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 4 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Use BFS on substring graph\nc) Use two stacks for counts and fragments\nd) Greedy left-to-right without memory\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B480762.",
        "target_text": "Question: Run BFS on an unweighted graph with 480762 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) All simple paths before all edges\nc) Lexicographic vertex order\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA3_66005429.",
        "target_text": "Question: In a d-ary heap with d=3 and n=66005429 nodes, what is the height?\nChoices:\na) Θ(log_3 n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH16384.",
        "target_text": "Question: In open addressing with double hashing over table size m=16384, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) g(k) coprime with m for all keys\nc) Choose m even and g(k) even\nd) Make both hash functions identical\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS113760.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=113760-th smallest?\nChoices:\na) Θ(1)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR859781.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=859781 edges. What algorithmic idea achieves linear time?\nChoices:\na) Kruskal’s algorithm\nb) Tarjan’s low-link DFS\nc) Topological sorting\nd) Dijkstra’s algorithm\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z489227.",
        "target_text": "Question: For string S (id=489227), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Length of the longest prefix starting at i matching S[0..]\nc) Number of mismatches at i\nd) Number of distinct substrings up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS197178.",
        "target_text": "Question: Heapsort stability check id=197178: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is stable\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS6324361.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=6324361 typically runs in?\nChoices:\na) Θ(log n) average\nb) O(log log n) average\nc) O(1) worst-case\nd) Θ(n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M7_6_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/6) + n^3 for n being a power of 6.\nChoices:\na) Θ(n^1.086 log n)\nb) Θ(n^1.086)\nc) Θ(n^3)\nd) Θ(n^3 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP16088_1156.",
        "target_text": "Question: Sorted array length n=16088. Decide if any pair sums to 1156. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Hash set in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Brute force in Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK77_6936.",
        "target_text": "Question: Merge k=77 sorted linked lists totaling n=6936 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n + k^2)\nc) Θ(k n)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE8434.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=8434. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Binary search tree\nc) Queue\nd) Max-heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ518860.",
        "target_text": "Question: For 518860 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Queue\nc) Binary heap\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH1610478.",
        "target_text": "Question: Build a binary heap from n=1610478 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(n^2)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC1.13.",
        "target_text": "Question: In separate chaining with load factor α=1.13, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS130864.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=130864-th smallest?\nChoices:\na) Θ(k)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST208746.",
        "target_text": "Question: MST question id=208746: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) MST is always unique in connected graphs\nc) MST minimizes number of edges\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS34569.",
        "target_text": "Question: In KMP, what does LPS[34569] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Number of mismatches up to i\nd) Total distinct prefixes up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB94488324.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=94488324 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n)\nc) Ω(n^2)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS8835677.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=8835677 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(1) expected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M7_3_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/3) + n^4 for n being a power of 3.\nChoices:\na) Θ(n^1.7712 log n)\nb) Θ(n^1.7712)\nc) Θ(n^4)\nd) Θ(n^4 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R487902.",
        "target_text": "Question: Rotate an array right by r=487902 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Selection sort then shift\nc) Three-reversal method\nd) Single-step rotate repeated r times\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK54_5697.",
        "target_text": "Question: Merge k=54 sorted linked lists totaling n=5697 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log k)\nc) Θ(k n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS1496.",
        "target_text": "Question: Compute stock span for 1496 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Priority queue\nc) Hash table\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B637940.",
        "target_text": "Question: Run BFS on an unweighted graph with 637940 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Minimum memory footprint\nc) Lexicographic vertex order\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA11_91185136.",
        "target_text": "Question: In a d-ary heap with d=11 and n=91185136 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(log_11 n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.23.",
        "target_text": "Question: In separate chaining with load factor α=1.23, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS873170.",
        "target_text": "Question: BST with parent pointers (id=873170): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Reverse postorder traversal entirely\nc) Use level-order and pick next node\nd) Always climb to root then go right once\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR864144.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=864144 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Tarjan’s low-link DFS\nc) Topological sorting\nd) Kruskal’s algorithm\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z725040.",
        "target_text": "Question: For string S (id=725040), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Length of the longest prefix starting at i matching S[0..]\nc) Number of mismatches at i\nd) Number of distinct substrings up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS700657.",
        "target_text": "Question: Keys are integers in range [0..700657]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Quick sort\nc) Shell sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU1139584.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=1139584. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Hashing with chaining\nc) Linear scan with early exit\nd) Heap-based selection\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M2_4_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/4) + n^2 for n being a power of 4.\nChoices:\na) Θ(n^2 log n)\nb) Θ(n^2)\nc) Θ(n^0.5 log n)\nd) Θ(n^0.5)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM938581.",
        "target_text": "Question: Find a majority element in an array of length n=938581 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Divide-and-conquer merges\nc) Binary search on value domain\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN43863.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 43863, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Traverse from head to find predecessor\nc) Reverse list then delete head\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS4896.",
        "target_text": "Question: Compute stock span for 4896 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Hash table\nc) Monotonic stack\nd) Priority queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA6777.",
        "target_text": "Question: Circular-array queue with capacity 6777: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Require prime capacity\nc) Track count or keep one slot empty\nd) Require power-of-two capacity\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH1653872.",
        "target_text": "Question: Build a binary heap from n=1653872 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n^2)\nc) Θ(log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH8192.",
        "target_text": "Question: In open addressing with double hashing over table size m=8192, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) Choose m even and g(k) even\nc) Make both hash functions identical\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA963439.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=963439 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Naive parent climbing O(n) per query\nc) DFS from root each time\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS216379_790019.",
        "target_text": "Question: A directed graph with V=216379, E≈790019. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) Only if the graph is connected\nc) When all vertices have outdegree ≥ 1\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Character-by-character descent. Variant TRIE128.",
        "target_text": "Question: Search a trie over alphabet size σ=128 for a key of length m. Time complexity?\nChoices:\na) Θ(m)\nb) Θ(log n)\nc) Θ(1) average for all m\nd) Θ(m log σ)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS237025.",
        "target_text": "Question: Keys are integers in range [0..237025]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Quick sort\nc) Heap sort\nd) Shell sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI47_2239.",
        "target_text": "Question: Binary search over half-open range [47, 2239)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Increase both lo and hi to skip duplicates\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M5_5_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/5) + n^1 for n being a power of 5.\nChoices:\na) Θ(n^1.0 log^2 n)\nb) Θ(n^1)\nc) Θ(n^1 log n)\nd) Θ(n^1.0)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM961672.",
        "target_text": "Question: Find a majority element in an array of length n=961672 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Counting sort\nc) Boyer–Moore voting with verification\nd) Binary search on value domain\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR3.",
        "target_text": "Question: Reverse a singly linked list in groups of k=3 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(n log k)\nc) Θ(nk)\nd) Θ(k log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS8.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 8 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Sort segments then concatenate\nc) Use BFS on substring graph\nd) Greedy left-to-right without memory\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B215878.",
        "target_text": "Question: Run BFS on an unweighted graph with 215878 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) Nondecreasing distance from source\nc) All simple paths before all edges\nd) Minimum memory footprint\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH7931362.",
        "target_text": "Question: Build a binary heap from n=7931362 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(log n)\nc) Θ(n^2)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.62.",
        "target_text": "Question: In separate chaining with load factor α=0.62, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H668780345.",
        "target_text": "Question: For a balanced BST with n=668780345 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(log log n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP523064.",
        "target_text": "Question: Test bipartiteness (id=523064) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Sort vertices and deduplicate\nc) Compute an MST then inspect edges\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z517048.",
        "target_text": "Question: For string S (id=517048), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Next index of S[i]\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of distinct substrings up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS42.",
        "target_text": "Question: Array is nearly sorted with at most 42 inversions. Which algorithm excels?\nChoices:\na) Insertion sort\nb) Heap sort\nc) Shell sort with fixed gaps\nd) Radix sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU6630205.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=6630205. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Heap-based selection\nc) Linear scan with early exit\nd) Hashing with chaining\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T5_6_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^5, f3=n^5 (log n)^6, f4=n^10?\nChoices:\na) Θ((log n)^6)\nb) Θ(n^5 (log n)^6)\nc) Θ(n^5)\nd) Θ(n^10)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP17476_1357.",
        "target_text": "Question: Sorted array length n=17476. Decide if any pair sums to 1357. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Hash set in Θ(n log n)\nc) Divide and conquer in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR9.",
        "target_text": "Question: Reverse a singly linked list in groups of k=9 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(n)\nc) Θ(k log n)\nd) Θ(nk)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE99531.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=99531. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Decreasing stack\nc) Max-heap\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ952353.",
        "target_text": "Question: For 952353 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Deque\nc) Binary heap\nd) Stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC27456130.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=27456130?\nChoices:\na) Θ(1)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.37.",
        "target_text": "Question: In separate chaining with load factor α=0.37, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS405432.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=405432-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(k)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC160879.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=160879 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(E log V)\nc) Θ(V log V)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB97242.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=97242. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) Binary heap of substrings\nc) Queue of rolling hashes only\nd) BST over all substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST812534.",
        "target_text": "Question: Stability (id=812534): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS6535881.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=6535881 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(1) expected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M6_5_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/5) + n^1 for n being a power of 5.\nChoices:\na) Θ(n^1.1133)\nb) Θ(n^1.1133 log n)\nc) Θ(n^1)\nd) Θ(n^1 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P104816.",
        "target_text": "Question: Answer 104816 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Use a stack to store partial sums\nc) Recompute sums per query in Θ(n)\nd) Sort once and binary search per query\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN409277_626260.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=409277, B=626260. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Binary search on addresses\nc) Hash addresses of first list\nd) Advance pointers; when one ends, jump to the other head\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1021.",
        "target_text": "Question: Verify whether a pop sequence of length n=1021 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Simulate using one stack in Θ(n)\nc) Use a queue to mirror the stack\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA7072.",
        "target_text": "Question: Circular-array queue with capacity 7072: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Head==Tail means full\nc) Require power-of-two capacity\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA8_39368662.",
        "target_text": "Question: In a d-ary heap with d=8 and n=39368662 nodes, what is the height?\nChoices:\na) Θ(log_8 n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.39.",
        "target_text": "Question: In separate chaining with load factor α=0.39, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA941843.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=941843 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) DFS from root each time\nc) Euler tour + RMQ yields O(1) per query\nd) Sort node labels then binary search\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP928055.",
        "target_text": "Question: Test bipartiteness (id=928055) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Compute an MST then inspect edges\nc) Sort vertices and deduplicate\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS73714.",
        "target_text": "Question: In KMP, what does LPS[73714] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Total distinct prefixes up to i\nd) Index of next occurrence\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX3_256.",
        "target_text": "Question: Radix sort with d=3 digits and base b=256 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·n·log b)\nb) Θ(n log n)\nc) Θ(d·(n + b))\nd) Θ(b^d)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS1096742.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=1096742 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(1) expected\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T2_1_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^2, f3=n^2 (log n)^1, f4=n^4?\nChoices:\na) Θ((log n)^1)\nb) Θ(n^2 (log n)^1)\nc) Θ(n^4)\nd) Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM7430.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=7430-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Scan linearly counting gaps\nc) Hash all present values then scan\nd) Use a heap of differences\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN748281_345558.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=748281, B=345558. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Advance pointers; when one ends, jump to the other head\nc) Hash addresses of first list\nd) Reverse one list then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE48444.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=48444. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Decreasing stack\nc) Queue\nd) Max-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW8322_778.",
        "target_text": "Question: Sliding window maximum for array length n=8322 and window w=778. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(n log n)\nc) Θ(w log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK6.",
        "target_text": "Question: In a d-ary heap (d=6), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) No effect whatsoever\nc) It increases height linearly\nd) It makes the operation constant time\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF5771607_0.37.",
        "target_text": "Question: Chaining hash table with n=5771607 keys at load factor α=0.37. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS650735.",
        "target_text": "Question: BST with parent pointers (id=650735): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Use level-order and pick next node\nc) Reverse postorder traversal entirely\nd) Always climb to root then go right once\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS717286_2828767.",
        "target_text": "Question: A directed graph with V=717286, E≈2828767. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) When it is a DAG (no directed cycles)\nc) Only if the graph is connected\nd) Only if edges are unweighted\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z504523.",
        "target_text": "Question: For string S (id=504523), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Number of distinct substrings up to i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of mismatches at i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB62605002.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=62605002 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n)\nc) Ω(n^2)\nd) Ω(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX685345326.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈685345326. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Doubles the bound to bracket, then binary search\nc) Sorts the array first\nd) Requires the array to be cyclic\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_5_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^3, f3=n^3 (log n)^5, f4=n^9?\nChoices:\na) Θ(n^9)\nb) Θ(n^3 (log n)^5)\nc) Θ((log n)^5)\nd) Θ(n^3)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S12881_43.",
        "target_text": "Question: Array length n=12881, find max-sum subarray of fixed length k=43. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN547090_449232.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=547090, B=449232. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Hash addresses of first list\nc) Reverse one list then compare\nd) Binary search on addresses\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS4.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 4 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Greedy left-to-right without memory\nc) Sort segments then concatenate\nd) Use BFS on substring graph\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B210962.",
        "target_text": "Question: Run BFS on an unweighted graph with 210962 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) Lexicographic vertex order\nc) All simple paths before all edges\nd) Minimum memory footprint\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC69609479.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=69609479?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(1)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.35.",
        "target_text": "Question: In separate chaining with load factor α=0.35, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA362466.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=362466 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Euler tour + RMQ yields O(1) per query\nc) DFS from root each time\nd) Naive parent climbing O(n) per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS281248_1042392.",
        "target_text": "Question: A directed graph with V=281248, E≈1042392. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) Only if edges are unweighted\nc) When all vertices have outdegree ≥ 1\nd) Only if the graph is connected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Randomized hashing makes spurious matches rare. Variant RK257_998244353.",
        "target_text": "Question: Rabin–Karp with base=257, mod=998244353 achieves expected linear time due to what?\nChoices:\na) Use of a min-heap\nb) Trie of all substrings\nc) Suffix tree guaranteeing O(1) per char\nd) Low collision probability of rolling hash\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB59252794.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=59252794 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n^2)\nc) Ω(n log n)\nd) Ω(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI56_275.",
        "target_text": "Question: Binary search over half-open range [56, 275)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Increase both lo and hi to skip duplicates\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T5_1_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^5, f3=n^5 (log n)^1, f4=n^9?\nChoices:\na) Θ(n^5 (log n)^1)\nb) Θ((log n)^1)\nc) Θ(n^9)\nd) Θ(n^5)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM598395.",
        "target_text": "Question: Find a majority element in an array of length n=598395 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Counting sort\nc) Binary search on value domain\nd) Divide-and-conquer merges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK5_592.",
        "target_text": "Question: Merge k=5 sorted linked lists totaling n=592 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(k n)\nc) Θ(n log n)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE11232.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=11232. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Binary search tree\nc) Queue\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ484605.",
        "target_text": "Question: Schedule 484605 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Unordered array\nc) Circular queue\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH782159.",
        "target_text": "Question: Build a binary heap from n=782159 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n log n)\nc) Θ(n^2)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.69.",
        "target_text": "Question: In separate chaining with load factor α=0.69, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(α)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA25821.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=25821 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) DFS from root each time\nc) Euler tour + RMQ yields O(1) per query\nd) Sort node labels then binary search\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC409765.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=409765 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V log V)\nb) Θ(V+E)\nc) Θ(E log V)\nd) Θ(VE)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN13199.",
        "target_text": "Question: Check anagrams for strings of length n=13199 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Count character frequencies in Θ(n)\nc) Sort both in Θ(n log n)\nd) Use a stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB53306623.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=53306623 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n log n)\nc) Ω(log n)\nd) Ω(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX793865022.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈793865022. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Requires the array to be cyclic\nc) Uses hashing to index unknown segments\nd) Sorts the array first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A1.",
        "target_text": "Question: A dynamic array starts with capacity 1 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(√m)\nc) Θ(log m)\nd) Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R773045.",
        "target_text": "Question: Rotate an array right by r=773045 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Selection sort then shift\nc) Three-reversal method\nd) Heapify then extract\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN677814_184408.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=677814, B=184408. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Reverse one list then compare\nc) Hash addresses of first list\nd) Advance pointers; when one ends, jump to the other head\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP300.",
        "target_text": "Question: Verify whether a pop sequence of length n=300 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Backtrack with recursion in Θ(2^n)\nc) Use a queue to mirror the stack\nd) Sort both sequences then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B578113.",
        "target_text": "Question: Run BFS on an unweighted graph with 578113 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) All simple paths before all edges\nc) Nondecreasing distance from source\nd) Minimum memory footprint\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL648_560435.",
        "target_text": "Question: Find the k=648-th largest element among n=560435 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Heapsort then index\nc) Binary search on value domain\nd) Build max-heap and extract k times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF6878475_0.85.",
        "target_text": "Question: Chaining hash table with n=6878475 keys at load factor α=0.85. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(α log α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR992935.",
        "target_text": "Question: In a BST with distinct keys (id=992935), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Postorder\nc) Inorder\nd) Preorder\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST222939.",
        "target_text": "Question: MST question id=222939: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) MST minimizes number of edges\nc) MST is always unique in connected graphs\nd) Prim requires the entire edge set to be sorted first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z376761.",
        "target_text": "Question: For string S (id=376761), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Next index of S[i]\nc) Number of distinct substrings up to i\nd) Number of mismatches at i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS426621.",
        "target_text": "Question: Heapsort stability check id=426621: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort is not stable by default\nd) Heapsort always beats merge sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI64_2154.",
        "target_text": "Question: Binary search over half-open range [64, 2154)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Keep inclusive bounds on both ends\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Increase both lo and hi to skip duplicates\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M6_5_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/5) + n^1 for n being a power of 5.\nChoices:\na) Θ(n^1.1133)\nb) Θ(n^1 log n)\nc) Θ(n^1)\nd) Θ(n^1.1133 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S1479_23.",
        "target_text": "Question: Array length n=1479, find max-sum subarray of fixed length k=23. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n)\nc) Θ(k log n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN882271.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 882271, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Traverse from head to find predecessor\nc) Impossible under any model\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE12756.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=12756. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Decreasing stack\nc) Max-heap\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS6008.",
        "target_text": "Question: A queue via two stacks handles a burst of 6008 operations. Amortized costs?\nChoices:\na) ENQUEUE and DEQUEUE both amortized Θ(1)\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) Both Θ(log n)\nd) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL234_159469.",
        "target_text": "Question: Find the k=234-th largest element among n=159469 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Deterministic selection (median-of-medians)\nc) Heapsort then index\nd) Binary search on value domain\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.53.",
        "target_text": "Question: In separate chaining with load factor α=0.53, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS47096.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=47096-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(k)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS234938_1568194.",
        "target_text": "Question: A directed graph with V=234938, E≈1568194. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) When it is a DAG (no directed cycles)\nc) Only if edges are unweighted\nd) Only if the graph is connected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE52.",
        "target_text": "Question: Search a trie over alphabet size σ=52 for a key of length m. Time complexity?\nChoices:\na) Θ(1) average for all m\nb) Θ(m)\nc) Θ(m log σ)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST837139.",
        "target_text": "Question: Stability (id=837139): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Merge sort (stable), Heap sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU2699421.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=2699421. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Linear scan with early exit\nc) Hashing with chaining\nd) Heap-based selection\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M5_3_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/3) + n^1 for n being a power of 3.\nChoices:\na) Θ(n^1.465)\nb) Θ(n^1.465 log n)\nc) Θ(n^1 log n)\nd) Θ(n^1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R461279.",
        "target_text": "Question: Rotate an array right by r=461279 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Selection sort then shift\nc) Heapify then extract\nd) Single-step rotate repeated r times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN994779_354301.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=994779, B=354301. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Advance pointers; when one ends, jump to the other head\nc) Binary search on addresses\nd) Reverse one list then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS65.",
        "target_text": "Question: Compute stock span for 65 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Priority queue\nc) Fenwick tree\nd) Hash table\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ666979.",
        "target_text": "Question: For 666979 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Deque\nc) Stack\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK5.",
        "target_text": "Question: In a d-ary heap (d=5), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It makes the operation constant time\nb) It increases height linearly\nc) No effect whatsoever\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH4096.",
        "target_text": "Question: In open addressing with double hashing over table size m=4096, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) g(k) coprime with m for all keys\nc) Choose m even and g(k) even\nd) Make both hash functions identical\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA252416.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=252416 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) Euler tour + RMQ yields O(1) per query\nc) Sort node labels then binary search\nd) DFS from root each time\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF63355.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=63355 can handle which case while detecting it?\nChoices:\na) Equal runtime on all graphs\nb) Faster runtime on sparse nonnegative graphs\nc) Only acyclic graphs\nd) Negative edge weights and negative cycles\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP28937.",
        "target_text": "Question: KMP matches a pattern of length m=28937 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Rolling hash table\nc) Suffix array\nd) Z-array exclusively\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS805060.",
        "target_text": "Question: Keys are integers in range [0..805060]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Shell sort\nc) Heap sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX41078050.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈41078050. Why?\nChoices:\na) Sorts the array first\nb) Uses hashing to index unknown segments\nc) Requires the array to be cyclic\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T2_5_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^2, f3=n^2 (log n)^5, f4=n^8?\nChoices:\na) Θ(n^8)\nb) Θ(n^2)\nc) Θ(n^2 (log n)^5)\nd) Θ((log n)^5)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R432655.",
        "target_text": "Question: Rotate an array right by r=432655 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Single-step rotate repeated r times\nc) Heapify then extract\nd) Selection sort then shift\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN245135_197964.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=245135, B=197964. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Reverse one list then compare\nc) Binary search on addresses\nd) Advance pointers; when one ends, jump to the other head\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1166.",
        "target_text": "Question: Verify whether a pop sequence of length n=1166 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA4806.",
        "target_text": "Question: Circular-array queue with capacity 4806: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Require power-of-two capacity\nc) Head==Tail means full\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL543_453521.",
        "target_text": "Question: Find the k=543-th largest element among n=453521 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Binary search on value domain\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF2730420_0.89.",
        "target_text": "Question: Chaining hash table with n=2730420 keys at load factor α=0.89. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(nα)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H310491837.",
        "target_text": "Question: For a balanced BST with n=310491837 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(log log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D181482.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 181482]. Why?\nChoices:\na) Graph must be undirected\nb) Nonnegative weights ensure greedy optimality\nc) Self-loops must be absent\nd) Distinct weights are required\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS95026.",
        "target_text": "Question: In KMP, what does LPS[95026] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Total distinct prefixes up to i\nd) Number of mismatches up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS451992.",
        "target_text": "Question: Keys are integers in range [0..451992]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Counting sort\nc) Shell sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS4125360.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=4125360 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(log n)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T2_1_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^2, f3=n^2 (log n)^1, f4=n^5?\nChoices:\na) Θ(n^2 (log n)^1)\nb) Θ(n^5)\nc) Θ((log n)^1)\nd) Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM466639.",
        "target_text": "Question: Find a majority element in an array of length n=466639 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Counting sort\nc) Binary search on value domain\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK89_16269.",
        "target_text": "Question: Merge k=89 sorted linked lists totaling n=16269 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(k n)\nc) Θ(n log n)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS1876.",
        "target_text": "Question: Compute stock span for 1876 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Hash table\nc) Monotonic stack\nd) Priority queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA1019.",
        "target_text": "Question: Circular-array queue with capacity 1019: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Require prime capacity\nc) Track count or keep one slot empty\nd) Head==Tail means full\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL399_831554.",
        "target_text": "Question: Find the k=399-th largest element among n=831554 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Binary search on value domain\nc) Deterministic selection (median-of-medians)\nd) Heapsort then index\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF8940266_0.81.",
        "target_text": "Question: Chaining hash table with n=8940266 keys at load factor α=0.81. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(nα)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA141847.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=141847 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Sort node labels then binary search\nc) Euler tour + RMQ yields O(1) per query\nd) Naive parent climbing O(n) per query\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR244924.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=244924 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Kruskal’s algorithm\nc) Topological sorting\nd) Tarjan’s low-link DFS\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB6902.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=6902. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Suffix automaton or suffix array + LCP\nc) Binary heap of substrings\nd) BST over all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX7_8.",
        "target_text": "Question: Radix sort with d=7 digits and base b=8 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·n·log b)\nb) Θ(d·(n + b))\nc) Θ(b^d)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS1821536.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=1821536 typically runs in?\nChoices:\na) Θ(n) average\nb) Θ(log n) average\nc) O(1) worst-case\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M4_3_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/3) + n^1 for n being a power of 3.\nChoices:\na) Θ(n^1 log n)\nb) Θ(n^1.2619)\nc) Θ(n^1)\nd) Θ(n^1.2619 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R165000.",
        "target_text": "Question: Rotate an array right by r=165000 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Heapify then extract\nc) Three-reversal method\nd) Single-step rotate repeated r times\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL17122.",
        "target_text": "Question: Check if a singly linked list of length n=17122 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Copy to array and two-pointer check\nc) Use a hash set of seen values\nd) Sort and compare with original\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS3571.",
        "target_text": "Question: Compute stock span for 3571 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Fenwick tree\nc) Priority queue\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ56671.",
        "target_text": "Question: Schedule 56671 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Circular queue\nc) Binary heap\nd) Stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK4.",
        "target_text": "Question: In a d-ary heap (d=4), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) It increases height linearly\nc) It makes the operation constant time\nd) No effect whatsoever\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.59.",
        "target_text": "Question: In separate chaining with load factor α=0.59, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H399820560.",
        "target_text": "Question: For a balanced BST with n=399820560 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF15339.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=15339 can handle which case while detecting it?\nChoices:\na) Negative edge weights and negative cycles\nb) Faster runtime on sparse nonnegative graphs\nc) Only acyclic graphs\nd) Equal runtime on all graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB86946.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=86946. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Binary heap of substrings\nc) BST over all substrings\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB97253274.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=97253274 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(log n)\nc) Ω(n log n)\nd) Ω(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX685443137.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈685443137. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Requires the array to be cyclic\nc) Doubles the bound to bracket, then binary search\nd) Sorts the array first\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T4_1_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^4, f3=n^4 (log n)^1, f4=n^11?\nChoices:\na) Θ((log n)^1)\nb) Θ(n^11)\nc) Θ(n^4)\nd) Θ(n^4 (log n)^1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S18275_31.",
        "target_text": "Question: Array length n=18275, find max-sum subarray of fixed length k=31. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(k log n)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(nk)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK32_2567.",
        "target_text": "Question: Merge k=32 sorted linked lists totaling n=2567 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(k n)\nc) Θ(n log k)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS4.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 4 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Greedy left-to-right without memory\nb) Use BFS on substring graph\nc) Sort segments then concatenate\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B422878.",
        "target_text": "Question: Run BFS on an unweighted graph with 422878 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) Minimum memory footprint\nc) All simple paths before all edges\nd) Lexicographic vertex order\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK6.",
        "target_text": "Question: In a d-ary heap (d=6), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) It increases height linearly\nc) It makes the operation constant time\nd) No effect whatsoever\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF1471757_0.78.",
        "target_text": "Question: Chaining hash table with n=1471757 keys at load factor α=0.78. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS40902.",
        "target_text": "Question: BST with parent pointers (id=40902): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Use level-order and pick next node\nc) Always climb to root then go right once\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST994524.",
        "target_text": "Question: MST question id=994524: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) Prim requires the entire edge set to be sorted first\nc) MST minimizes number of edges\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN757578.",
        "target_text": "Question: Check anagrams for strings of length n=757578 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) Use a stack\nc) DFS on character graph\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX4_4.",
        "target_text": "Question: Radix sort with d=4 digits and base b=4 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(b^d)\nc) Θ(d·n·log b)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX500105817.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈500105817. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Uses hashing to index unknown segments\nc) Requires the array to be cyclic\nd) Sorts the array first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M9_2_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/2) + n^0 for n being a power of 2.\nChoices:\na) Θ(n^3.1699 log n)\nb) Θ(n^3.1699)\nc) Θ(n^0 log n)\nd) Θ(n^0)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R131382.",
        "target_text": "Question: Rotate an array right by r=131382 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Three-reversal method\nc) Single-step rotate repeated r times\nd) Selection sort then shift\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR4.",
        "target_text": "Question: Reverse a singly linked list in groups of k=4 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(n log k)\nd) Θ(k log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1606.",
        "target_text": "Question: Verify whether a pop sequence of length n=1606 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Use a queue to mirror the stack\nc) Simulate using one stack in Θ(n)\nd) Sort both sequences then compare\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA2875.",
        "target_text": "Question: Circular-array queue with capacity 2875: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require power-of-two capacity\nc) Head==Tail means full\nd) Require prime capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC50723645.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=50723645?\nChoices:\na) Θ(1)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.23.",
        "target_text": "Question: In separate chaining with load factor α=0.23, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS465490.",
        "target_text": "Question: BST with parent pointers (id=465490): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Reverse postorder traversal entirely\nd) Use level-order and pick next node\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC419439.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=419439 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(V log V)\nc) Θ(V+E)\nd) Θ(VE)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z218321.",
        "target_text": "Question: For string S (id=218321), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Number of distinct substrings up to i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Next index of S[i]\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS503810.",
        "target_text": "Question: Keys are integers in range [0..503810]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Counting sort\nc) Heap sort\nd) Shell sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU9812176.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=9812176. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Heap-based selection\nc) Binary search with left/right bias\nd) Linear scan with early exit\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Geometric resizing spreads copying cost over many operations. Variant A1.",
        "target_text": "Question: A dynamic array starts with capacity 1 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(1)\nb) Θ(log m)\nc) Θ(m)\nd) Θ(√m)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP13617_3159.",
        "target_text": "Question: Sorted array length n=13617. Decide if any pair sums to 3159. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Brute force in Θ(n^2)\nc) Two-pointer scan in Θ(n)\nd) Hash set in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK45_1220.",
        "target_text": "Question: Merge k=45 sorted linked lists totaling n=1220 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n log k)\nc) Θ(k n)\nd) Θ(n + k^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE42939.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=42939. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Queue\nc) Binary search tree\nd) Max-heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA3644.",
        "target_text": "Question: Circular-array queue with capacity 3644: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require prime capacity\nc) Head==Tail means full\nd) Require power-of-two capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL473_603086.",
        "target_text": "Question: Find the k=473-th largest element among n=603086 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Deterministic selection (median-of-medians)\nc) Binary search on value domain\nd) Build max-heap and extract k times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF9926202_0.76.",
        "target_text": "Question: Chaining hash table with n=9926202 keys at load factor α=0.76. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(α log α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA548952.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=548952 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Euler tour + RMQ yields O(1) per query\nc) Naive parent climbing O(n) per query\nd) DFS from root each time\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP203713.",
        "target_text": "Question: Test bipartiteness (id=203713) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Compute an MST then inspect edges\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Check all degrees even\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK257_998244353.",
        "target_text": "Question: Rabin–Karp with base=257, mod=998244353 achieves expected linear time due to what?\nChoices:\na) Use of a min-heap\nb) Low collision probability of rolling hash\nc) Suffix tree guaranteeing O(1) per char\nd) Trie of all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS878056.",
        "target_text": "Question: Heapsort stability check id=878056: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort always beats merge sort\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is stable\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX924573177.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈924573177. Why?\nChoices:\na) Requires the array to be cyclic\nb) Doubles the bound to bracket, then binary search\nc) Uses hashing to index unknown segments\nd) Sorts the array first\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T2_4_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^2, f3=n^2 (log n)^4, f4=n^6?\nChoices:\na) Θ(n^2)\nb) Θ(n^2 (log n)^4)\nc) Θ((log n)^4)\nd) Θ(n^6)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM93961.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=93961-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Hash all present values then scan\nc) Scan linearly counting gaps\nd) Use a heap of differences\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL39250.",
        "target_text": "Question: Check if a singly linked list of length n=39250 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Sort and compare with original\nc) Find middle, reverse second half, compare\nd) Use a hash set of seen values\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE23861.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=23861. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Queue\nc) Max-heap\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B808604.",
        "target_text": "Question: Run BFS on an unweighted graph with 808604 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) All simple paths before all edges\nc) Nondecreasing distance from source\nd) Minimum memory footprint\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK3.",
        "target_text": "Question: In a d-ary heap (d=3), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It makes the operation constant time\nb) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nc) It increases height linearly\nd) No effect whatsoever\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.08.",
        "target_text": "Question: In separate chaining with load factor α=1.08, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS459373.",
        "target_text": "Question: BST with parent pointers (id=459373): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) Use level-order and pick next node\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Reverse postorder traversal entirely\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST182069.",
        "target_text": "Question: MST question id=182069: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) Prim requires the entire edge set to be sorted first\nc) MST is always unique in connected graphs\nd) MST minimizes number of edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB27992.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=27992. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) Binary heap of substrings\nc) Queue of rolling hashes only\nd) BST over all substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX5_2.",
        "target_text": "Question: Radix sort with d=5 digits and base b=2 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·(n + b))\nc) Θ(d·n·log b)\nd) Θ(b^d)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS2072435.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=2072435 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T4_2_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^4, f3=n^4 (log n)^2, f4=n^6?\nChoices:\na) Θ((log n)^2)\nb) Θ(n^4)\nc) Θ(n^6)\nd) Θ(n^4 (log n)^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S17864_471.",
        "target_text": "Question: Array length n=17864, find max-sum subarray of fixed length k=471. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(k log n)\nd) Θ(nk)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN655457.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 655457, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Reverse list then delete head\nc) Impossible under any model\nd) Traverse from head to find predecessor\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP943.",
        "target_text": "Question: Verify whether a pop sequence of length n=943 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Simulate using one stack in Θ(n)\nc) Backtrack with recursion in Θ(2^n)\nd) Sort both sequences then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW6076_653.",
        "target_text": "Question: Sliding window maximum for array length n=6076 and window w=653. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(nw)\nc) Θ(w log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA11_18878038.",
        "target_text": "Question: In a d-ary heap with d=11 and n=18878038 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(log_11 n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Adversarial patterns are neutralized by random choice. Variant UH10000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=10000 slots yields what benefit?\nChoices:\na) Zero collisions guaranteed\nb) Eliminates need for resizing\nc) Cryptographic security by default\nd) Expected constant-time operations against adversaries\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA643686.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=643686 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Euler tour + RMQ yields O(1) per query\nc) Sort node labels then binary search\nd) Naive parent climbing O(n) per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS366595_2516007.",
        "target_text": "Question: A directed graph with V=366595, E≈2516007. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) When all vertices have outdegree ≥ 1\nc) Only if the graph is connected\nd) Only if edges are unweighted\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS73146.",
        "target_text": "Question: In KMP, what does LPS[73146] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Index of next occurrence\nc) Number of mismatches up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX8_256.",
        "target_text": "Question: Radix sort with d=8 digits and base b=256 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·(n + b))\nc) Θ(d·n·log b)\nd) Θ(b^d)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU2709824.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=2709824. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Linear scan with early exit\nc) Hashing with chaining\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M6_6_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/6) + n^1 for n being a power of 6.\nChoices:\na) Θ(n^1 log n)\nb) Θ(n^1.0)\nc) Θ(n^1.0 log^2 n)\nd) Θ(n^1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R607513.",
        "target_text": "Question: Rotate an array right by r=607513 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Three-reversal method\nc) Selection sort then shift\nd) Single-step rotate repeated r times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR9.",
        "target_text": "Question: Reverse a singly linked list in groups of k=9 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(k log n)\nb) Θ(n)\nc) Θ(n log k)\nd) Θ(nk)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS6.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 6 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Use two stacks for counts and fragments\nc) Use BFS on substring graph\nd) Greedy left-to-right without memory\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ478549.",
        "target_text": "Question: Schedule 478549 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Stack\nc) Unordered array\nd) Circular queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH2485882.",
        "target_text": "Question: Build a binary heap from n=2485882 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n^2)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF9724191_0.91.",
        "target_text": "Question: Chaining hash table with n=9724191 keys at load factor α=0.91. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(α log α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS302817.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=302817-th smallest?\nChoices:\na) Θ(1)\nb) Θ(k)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D846270.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 846270]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Self-loops must be absent\nc) Distinct weights are required\nd) Graph must be undirected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS82128.",
        "target_text": "Question: In KMP, what does LPS[82128] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Total distinct prefixes up to i\nc) Number of mismatches up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS12089.",
        "target_text": "Question: Keys are integers in range [0..12089]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Heap sort\nc) Quick sort\nd) Shell sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI1_2423.",
        "target_text": "Question: Binary search over half-open range [1, 2423)—which invariant prevents infinite loops?\nChoices:\na) Increase both lo and hi to skip duplicates\nb) Keep inclusive bounds on both ends\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T1_3_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^1, f3=n^1 (log n)^3, f4=n^4?\nChoices:\na) Θ((log n)^3)\nb) Θ(n^4)\nc) Θ(n^1 (log n)^3)\nd) Θ(n^1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P6708.",
        "target_text": "Question: Answer 6708 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Recompute sums per query in Θ(n)\nb) Build prefix-sum array; O(1) per query\nc) Use a stack to store partial sums\nd) Sort once and binary search per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL9121.",
        "target_text": "Question: Check if a singly linked list of length n=9121 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Copy to array and two-pointer check\nc) Find middle, reverse second half, compare\nd) Sort and compare with original\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP343.",
        "target_text": "Question: Verify whether a pop sequence of length n=343 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Backtrack with recursion in Θ(2^n)\nc) Use a queue to mirror the stack\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B610326.",
        "target_text": "Question: Run BFS on an unweighted graph with 610326 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) Nondecreasing distance from source\nc) Lexicographic vertex order\nd) All simple paths before all edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL143_507607.",
        "target_text": "Question: Find the k=143-th largest element among n=507607 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Deterministic selection (median-of-medians)\nc) Binary search on value domain\nd) Heapsort then index\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.45.",
        "target_text": "Question: In separate chaining with load factor α=1.45, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS2008.",
        "target_text": "Question: BST with parent pointers (id=2008): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Use level-order and pick next node\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Always climb to root then go right once\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D808984.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 808984]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Self-loops must be absent\nc) Distinct weights are required\nd) Graph must be undirected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Randomized hashing makes spurious matches rare. Variant RK257_998244353.",
        "target_text": "Question: Rabin–Karp with base=257, mod=998244353 achieves expected linear time due to what?\nChoices:\na) Low collision probability of rolling hash\nb) Suffix tree guaranteeing O(1) per char\nc) Use of a min-heap\nd) Trie of all substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST311913.",
        "target_text": "Question: Stability (id=311913): which pairing is correct?\nChoices:\na) Heap sort (stable), Merge sort (unstable)\nb) Merge sort (stable), Heap sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Counting sort (unstable)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU5389347.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=5389347. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Hashing with chaining\nc) Heap-based selection\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M4_6_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/6) + n^1 for n being a power of 6.\nChoices:\na) Θ(n^0.7737)\nb) Θ(n^1 log n)\nc) Θ(n^0.7737 log n)\nd) Θ(n^1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P436607.",
        "target_text": "Question: Answer 436607 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Recompute sums per query in Θ(n)\nb) Use a stack to store partial sums\nc) Build prefix-sum array; O(1) per query\nd) Sort once and binary search per query\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN457724_190333.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=457724, B=190333. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Reverse one list then compare\nc) Hash addresses of first list\nd) Binary search on addresses\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE61288.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=61288. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Max-heap\nc) Queue\nd) Binary search tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ343654.",
        "target_text": "Question: Schedule 343654 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Unordered array\nc) Circular queue\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA12_19352490.",
        "target_text": "Question: In a d-ary heap with d=12 and n=19352490 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log_12 n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH16384.",
        "target_text": "Question: In open addressing with double hashing over table size m=16384, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) Make both hash functions identical\nc) g(k) coprime with m for all keys\nd) Choose m even and g(k) even\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H168073529.",
        "target_text": "Question: For a balanced BST with n=168073529 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Repeated edge relaxation tolerates negatives. Variant BF73789.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=73789 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Negative edge weights and negative cycles\nc) Equal runtime on all graphs\nd) Only acyclic graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN980211.",
        "target_text": "Question: Check anagrams for strings of length n=980211 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Sort both in Θ(n log n)\nc) Use a stack\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS561595.",
        "target_text": "Question: Heapsort stability check id=561595: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort is not stable by default\nc) Heapsort always beats merge sort\nd) Heapsort needs extra Θ(n) memory\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS6804097.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=6804097 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(1) expected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A4.",
        "target_text": "Question: A dynamic array starts with capacity 4 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(log m)\nb) Θ(1)\nc) Θ(m)\nd) Θ(√m)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P752748.",
        "target_text": "Question: Answer 752748 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Recompute sums per query in Θ(n)\nb) Sort once and binary search per query\nc) Use a stack to store partial sums\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN719340_192905.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=719340, B=192905. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Advance pointers; when one ends, jump to the other head\nc) Hash addresses of first list\nd) Binary search on addresses\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS2453.",
        "target_text": "Question: Compute stock span for 2453 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Hash table\nc) Fenwick tree\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ807880.",
        "target_text": "Question: Schedule 807880 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Unordered array\nc) Stack\nd) Circular queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK8.",
        "target_text": "Question: In a d-ary heap (d=8), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It increases height linearly\nb) It makes the operation constant time\nc) No effect whatsoever\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH2048.",
        "target_text": "Question: In open addressing with double hashing over table size m=2048, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) Choose m even and g(k) even\nc) Make both hash functions identical\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H237225123.",
        "target_text": "Question: For a balanced BST with n=237225123 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS179537_1082278.",
        "target_text": "Question: A directed graph with V=179537, E≈1082278. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When it is a DAG (no directed cycles)\nc) Only if edges are unweighted\nd) When all vertices have outdegree ≥ 1\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS56657.",
        "target_text": "Question: In KMP, what does LPS[56657] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Total distinct prefixes up to i\nd) Number of mismatches up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS106.",
        "target_text": "Question: Array is nearly sorted with at most 106 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Heap sort\nc) Insertion sort\nd) Shell sort with fixed gaps\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Geometric level distribution mirrors balanced trees. Variant SL0.25.",
        "target_text": "Question: Skip list with level promotion probability p=0.25: expected complexity of search/insert/delete?\nChoices:\na) Θ(log n) for all three\nb) Θ(√n) for all three\nc) Θ(1) for all three\nd) Θ(n) for all three\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T1_2_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^1, f3=n^1 (log n)^2, f4=n^4?\nChoices:\na) Θ((log n)^2)\nb) Θ(n^4)\nc) Θ(n^1)\nd) Θ(n^1 (log n)^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S7934_223.",
        "target_text": "Question: Array length n=7934, find max-sum subarray of fixed length k=223. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(k log n)\nb) Θ(n)\nc) Θ(nk)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN726268_50379.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=726268, B=50379. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Binary search on addresses\nc) Hash addresses of first list\nd) Advance pointers; when one ends, jump to the other head\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS8.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 8 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Use two stacks for counts and fragments\nc) Sort segments then concatenate\nd) Greedy left-to-right without memory\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW7538_887.",
        "target_text": "Question: Sliding window maximum for array length n=7538 and window w=887. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(n)\nc) Θ(w log n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA13_48085637.",
        "target_text": "Question: In a d-ary heap with d=13 and n=48085637 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(log_13 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.75.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.75?\nChoices:\na) To keep expected O(1) operations\nb) To maintain key stability\nc) To reduce memory usage to exact size\nd) To sort keys implicitly\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA596109.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=596109 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) Naive parent climbing O(n) per query\nc) DFS from root each time\nd) Sort node labels then binary search\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF21963.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=21963 can handle which case while detecting it?\nChoices:\na) Negative edge weights and negative cycles\nb) Faster runtime on sparse nonnegative graphs\nc) Only acyclic graphs\nd) Equal runtime on all graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB96869.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=96869. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Binary heap of substrings\nc) Queue of rolling hashes only\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS104.",
        "target_text": "Question: Array is nearly sorted with at most 104 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Shell sort with fixed gaps\nc) Insertion sort\nd) Radix sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS6243170.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=6243170 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(1) expected\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M7_2_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/2) + n^2 for n being a power of 2.\nChoices:\na) Θ(n^2.8074)\nb) Θ(n^2)\nc) Θ(n^2 log n)\nd) Θ(n^2.8074 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM753201.",
        "target_text": "Question: Find a majority element in an array of length n=753201 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Divide-and-conquer merges\nc) Counting sort\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Phase difference accumulates around the cycle. Variant C3.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 3× and 1×. Complexity?\nChoices:\na) Θ(1) time, Θ(1) space\nb) Θ(log n) time, Θ(1) space\nc) Θ(n) time, Θ(n) space\nd) Θ(n) time, Θ(1) space\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP335.",
        "target_text": "Question: Verify whether a pop sequence of length n=335 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Backtrack with recursion in Θ(2^n)\nc) Simulate using one stack in Θ(n)\nd) Use a queue to mirror the stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS2999.",
        "target_text": "Question: A queue via two stacks handles a burst of 2999 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) Both Θ(log n)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA5_72624978.",
        "target_text": "Question: In a d-ary heap with d=5 and n=72624978 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(log_5 n)\nc) Θ(n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH32768.",
        "target_text": "Question: In open addressing with double hashing over table size m=32768, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) Use g(k)=0 for some keys\nc) g(k) coprime with m for all keys\nd) Make both hash functions identical\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS818911.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=818911-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS309429_1213484.",
        "target_text": "Question: A directed graph with V=309429, E≈1213484. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) Only if the graph is connected\nc) When all vertices have outdegree ≥ 1\nd) Only if edges are unweighted\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Character-by-character descent. Variant TRIE26.",
        "target_text": "Question: Search a trie over alphabet size σ=26 for a key of length m. Time complexity?\nChoices:\na) Θ(m log σ)\nb) Θ(1) average for all m\nc) Θ(m)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS657906.",
        "target_text": "Question: Heapsort stability check id=657906: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort is stable\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort always beats merge sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI15_2729.",
        "target_text": "Question: Binary search over half-open range [15, 2729)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Keep inclusive bounds on both ends\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Increase both lo and hi to skip duplicates\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T5_1_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^5, f3=n^5 (log n)^1, f4=n^12?\nChoices:\na) Θ((log n)^1)\nb) Θ(n^5 (log n)^1)\nc) Θ(n^5)\nd) Θ(n^12)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM57745.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=57745-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Use a heap of differences\nc) Hash all present values then scan\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL27930.",
        "target_text": "Question: Check if a singly linked list of length n=27930 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Sort and compare with original\nc) Use a hash set of seen values\nd) Copy to array and two-pointer check\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS2.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 2 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Use BFS on substring graph\nc) Greedy left-to-right without memory\nd) Sort segments then concatenate\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW10236_934.",
        "target_text": "Question: Sliding window maximum for array length n=10236 and window w=934. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(w log n)\nd) Θ(nw)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL264_858316.",
        "target_text": "Question: Find the k=264-th largest element among n=858316 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Deterministic selection (median-of-medians)\nc) Heapsort then index\nd) Build max-heap and extract k times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.8.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.8?\nChoices:\na) To keep expected O(1) operations\nb) To maintain key stability\nc) To sort keys implicitly\nd) To reduce memory usage to exact size\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS10818.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=10818-th smallest?\nChoices:\na) Θ(k)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP421545.",
        "target_text": "Question: Test bipartiteness (id=421545) of an undirected graph efficiently. Which method works?\nChoices:\na) Attempt 2-coloring via BFS; failure indicates odd cycle\nb) Check all degrees even\nc) Compute an MST then inspect edges\nd) Sort vertices and deduplicate\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB2602.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=2602. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Suffix automaton or suffix array + LCP\nc) Queue of rolling hashes only\nd) Binary heap of substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS859.",
        "target_text": "Question: Array is nearly sorted with at most 859 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Heap sort\nc) Insertion sort\nd) Radix sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS7009007.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=7009007 typically runs in?\nChoices:\na) Θ(n) average\nb) O(1) worst-case\nc) Θ(log n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M3_3_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/3) + n^2 for n being a power of 3.\nChoices:\na) Θ(n^1.0 log n)\nb) Θ(n^2)\nc) Θ(n^1.0)\nd) Θ(n^2 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S18726_234.",
        "target_text": "Question: Array length n=18726, find max-sum subarray of fixed length k=234. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(nk)\nd) Θ(k log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN64101.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 64101, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Copy next node’s data here and bypass next\nc) Reverse list then delete head\nd) Traverse from head to find predecessor\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS3887.",
        "target_text": "Question: Compute stock span for 3887 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Hash table\nc) Priority queue\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW6302_670.",
        "target_text": "Question: Sliding window maximum for array length n=6302 and window w=670. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(w log n)\nd) Θ(nw)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH1098917.",
        "target_text": "Question: Build a binary heap from n=1098917 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.36.",
        "target_text": "Question: In separate chaining with load factor α=0.36, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(α)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR783290.",
        "target_text": "Question: In a BST with distinct keys (id=783290), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Inorder\nc) Postorder\nd) Level-order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF66852.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=66852 can handle which case while detecting it?\nChoices:\na) Only acyclic graphs\nb) Faster runtime on sparse nonnegative graphs\nc) Negative edge weights and negative cycles\nd) Equal runtime on all graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS62376.",
        "target_text": "Question: In KMP, what does LPS[62376] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Index of next occurrence\nc) Total distinct prefixes up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB76749721.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=76749721 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n^2)\nc) Ω(n)\nd) Ω(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX739329007.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈739329007. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Sorts the array first\nc) Requires the array to be cyclic\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T3_3_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^3, f3=n^3 (log n)^3, f4=n^6?\nChoices:\na) Θ(n^3)\nb) Θ((log n)^3)\nc) Θ(n^3 (log n)^3)\nd) Θ(n^6)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R492607.",
        "target_text": "Question: Rotate an array right by r=492607 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Selection sort then shift\nc) Heapify then extract\nd) Single-step rotate repeated r times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN674772.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 674772, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Reverse list then delete head\nc) Impossible under any model\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP106.",
        "target_text": "Question: Verify whether a pop sequence of length n=106 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Backtrack with recursion in Θ(2^n)\nc) Use a queue to mirror the stack\nd) Sort both sequences then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ442716.",
        "target_text": "Question: Schedule 442716 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Unordered array\nc) Binary heap\nd) Stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM526_91646.",
        "target_text": "Question: Merge k=526 sorted streams totaling N=91646 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log N)\nc) Θ(N log k)\nd) Θ(k log N)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.39.",
        "target_text": "Question: In separate chaining with load factor α=0.39, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(α)\nc) Θ(1/α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H629322251.",
        "target_text": "Question: For a balanced BST with n=629322251 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS714121_2178631.",
        "target_text": "Question: A directed graph with V=714121, E≈2178631. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) Only if edges are unweighted\nc) When all vertices have outdegree ≥ 1\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Character-by-character descent. Variant TRIE128.",
        "target_text": "Question: Search a trie over alphabet size σ=128 for a key of length m. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(m)\nc) Θ(1) average for all m\nd) Θ(m log σ)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS497035.",
        "target_text": "Question: Heapsort stability check id=497035: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is not stable by default\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is stable\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS3915936.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=3915936 typically runs in?\nChoices:\na) O(1) worst-case\nb) O(log log n) average\nc) Θ(n) average\nd) Θ(log n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_5_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^4, f3=n^4 (log n)^5, f4=n^10?\nChoices:\na) Θ(n^4 (log n)^5)\nb) Θ(n^10)\nc) Θ((log n)^5)\nd) Θ(n^4)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP4330_1897.",
        "target_text": "Question: Sorted array length n=4330. Decide if any pair sums to 1897. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Brute force in Θ(n^2)\nd) Divide and conquer in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL75028.",
        "target_text": "Question: Check if a singly linked list of length n=75028 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Use a hash set of seen values\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS3704.",
        "target_text": "Question: Compute stock span for 3704 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Priority queue\nc) Monotonic stack\nd) Hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS7393.",
        "target_text": "Question: A queue via two stacks handles a burst of 7393 operations. Amortized costs?\nChoices:\na) ENQUEUE and DEQUEUE both amortized Θ(1)\nb) Both Θ(log n)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK6.",
        "target_text": "Question: In a d-ary heap (d=6), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) It increases height linearly\nc) No effect whatsoever\nd) It makes the operation constant time\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.88.",
        "target_text": "Question: In separate chaining with load factor α=0.88, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR788902.",
        "target_text": "Question: In a BST with distinct keys (id=788902), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Inorder\nc) Postorder\nd) Level-order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST492585.",
        "target_text": "Question: MST question id=492585: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) MST is always unique in connected graphs\nc) MST minimizes number of edges\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z970137.",
        "target_text": "Question: For string S (id=970137), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Number of distinct substrings up to i\nc) Number of mismatches at i\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST231704.",
        "target_text": "Question: Stability (id=231704): which pairing is correct?\nChoices:\na) Merge sort (stable), Heap sort (unstable)\nb) Quick sort (stable), Selection sort (unstable)\nc) Counting sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI25_2235.",
        "target_text": "Question: Binary search over half-open range [25, 2235)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Increase both lo and hi to skip duplicates\nd) Keep inclusive bounds on both ends\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M2_2_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/2) + n^1 for n being a power of 2.\nChoices:\na) Θ(n^1 log n)\nb) Θ(n^1.0 log^2 n)\nc) Θ(n^1.0)\nd) Θ(n^1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM168878.",
        "target_text": "Question: Find a majority element in an array of length n=168878 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Binary search on value domain\nc) Counting sort\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN945493.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 945493, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Traverse from head to find predecessor\nc) Copy next node’s data here and bypass next\nd) Reverse list then delete head\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP659.",
        "target_text": "Question: Verify whether a pop sequence of length n=659 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Simulate using one stack in Θ(n)\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA1157.",
        "target_text": "Question: Circular-array queue with capacity 1157: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require power-of-two capacity\nc) Head==Tail means full\nd) Require prime capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA5_5874647.",
        "target_text": "Question: In a d-ary heap with d=5 and n=5874647 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log_5 n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF749442_0.47.",
        "target_text": "Question: Chaining hash table with n=749442 keys at load factor α=0.47. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(α log α)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS64284.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=64284-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(1)\nd) Θ(k)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST976990.",
        "target_text": "Question: MST question id=976990: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) MST is always unique in connected graphs\nc) Prim requires the entire edge set to be sorted first\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB91921.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=91921. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Binary heap of substrings\nc) Suffix automaton or suffix array + LCP\nd) BST over all substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS7162.",
        "target_text": "Question: Keys are integers in range [0..7162]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Quick sort\nc) Counting sort\nd) Heap sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Geometric level distribution mirrors balanced trees. Variant SL0.5.",
        "target_text": "Question: Skip list with level promotion probability p=0.5: expected complexity of search/insert/delete?\nChoices:\na) Θ(√n) for all three\nb) Θ(n) for all three\nc) Θ(1) for all three\nd) Θ(log n) for all three\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M5_6_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/6) + n^4 for n being a power of 6.\nChoices:\na) Θ(n^4 log n)\nb) Θ(n^0.8982 log n)\nc) Θ(n^0.8982)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM843517.",
        "target_text": "Question: Find a majority element in an array of length n=843517 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Boyer–Moore voting with verification\nc) Divide-and-conquer merges\nd) Binary search on value domain\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN212525_239620.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=212525, B=239620. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Reverse one list then compare\nc) Advance pointers; when one ends, jump to the other head\nd) Binary search on addresses\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE85432.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=85432. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Binary search tree\nc) Max-heap\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS9103.",
        "target_text": "Question: A queue via two stacks handles a burst of 9103 operations. Amortized costs?\nChoices:\na) ENQUEUE and DEQUEUE both amortized Θ(1)\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) Both Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK6.",
        "target_text": "Question: In a d-ary heap (d=6), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It increases height linearly\nb) It makes the operation constant time\nc) No effect whatsoever\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF5075883_0.81.",
        "target_text": "Question: Chaining hash table with n=5075883 keys at load factor α=0.81. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(nα)\nc) Θ(1 + α)\nd) Θ(α log α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA483867.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=483867 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) DFS from root each time\nc) Euler tour + RMQ yields O(1) per query\nd) Sort node labels then binary search\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST162040.",
        "target_text": "Question: MST question id=162040: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) MST minimizes number of edges\nd) MST is always unique in connected graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000007.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000007 achieves expected linear time due to what?\nChoices:\na) Use of a min-heap\nb) Low collision probability of rolling hash\nc) Suffix tree guaranteeing O(1) per char\nd) Trie of all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS331926.",
        "target_text": "Question: Keys are integers in range [0..331926]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Quick sort\nc) Shell sort\nd) Heap sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU6408623.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=6408623. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Binary search with left/right bias\nc) Linear scan with early exit\nd) Heap-based selection\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T3_3_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^3, f3=n^3 (log n)^3, f4=n^6?\nChoices:\na) Θ(n^3 (log n)^3)\nb) Θ(n^6)\nc) Θ((log n)^3)\nd) Θ(n^3)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM31708.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=31708-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Binary search on index vs value gap\nc) Use a heap of differences\nd) Hash all present values then scan\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Phase difference accumulates around the cycle. Variant C5.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 5× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(n) space\nb) Θ(1) time, Θ(1) space\nc) Θ(log n) time, Θ(1) space\nd) Θ(n) time, Θ(1) space\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE54512.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=54512. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Decreasing stack\nc) Max-heap\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS7671.",
        "target_text": "Question: A queue via two stacks handles a burst of 7671 operations. Amortized costs?\nChoices:\na) ENQUEUE and DEQUEUE both amortized Θ(1)\nb) Both Θ(log n)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM259_29615.",
        "target_text": "Question: Merge k=259 sorted streams totaling N=29615 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log k)\nc) Θ(N + k^2)\nd) Θ(N log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.41.",
        "target_text": "Question: In separate chaining with load factor α=0.41, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS912028.",
        "target_text": "Question: BST with parent pointers (id=912028): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Always climb to root then go right once\nd) Use level-order and pick next node\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF25167.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=25167 can handle which case while detecting it?\nChoices:\na) Only acyclic graphs\nb) Equal runtime on all graphs\nc) Faster runtime on sparse nonnegative graphs\nd) Negative edge weights and negative cycles\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB28033.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=28033. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Suffix automaton or suffix array + LCP\nc) Queue of rolling hashes only\nd) Binary heap of substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS839254.",
        "target_text": "Question: Heapsort stability check id=839254: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is not stable by default\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is stable\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS8955676.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=8955676 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n)\nc) Θ(log n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M2_5_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/5) + n^2 for n being a power of 5.\nChoices:\na) Θ(n^0.4307)\nb) Θ(n^2)\nc) Θ(n^2 log n)\nd) Θ(n^0.4307 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM61245.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=61245-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Binary search on index vs value gap\nc) Hash all present values then scan\nd) Scan linearly counting gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN304744.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 304744, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Traverse from head to find predecessor\nc) Reverse list then delete head\nd) Impossible under any model\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS3.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 3 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Use BFS on substring graph\nc) Use two stacks for counts and fragments\nd) Greedy left-to-right without memory\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ540880.",
        "target_text": "Question: For 540880 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Deque\nc) Stack\nd) Binary heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM639_187396.",
        "target_text": "Question: Merge k=639 sorted streams totaling N=187396 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log k)\nc) Θ(k log N)\nd) Θ(N log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.32.",
        "target_text": "Question: In separate chaining with load factor α=0.32, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H42280136.",
        "target_text": "Question: For a balanced BST with n=42280136 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(√n)\nd) Θ(log log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST798107.",
        "target_text": "Question: MST question id=798107: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) Prim requires the entire edge set to be sorted first\nc) MST minimizes number of edges\nd) MST is always unique in connected graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS68372.",
        "target_text": "Question: In KMP, what does LPS[68372] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Total distinct prefixes up to i\nc) Index of next occurrence\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX4_32.",
        "target_text": "Question: Radix sort with d=4 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(b^d)\nc) Θ(n log n)\nd) Θ(d·n·log b)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS5142662.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=5142662 typically runs in?\nChoices:\na) Θ(n) average\nb) O(log log n) average\nc) Θ(log n) average\nd) O(1) worst-case\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T5_4_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^5, f3=n^5 (log n)^4, f4=n^12?\nChoices:\na) Θ((log n)^4)\nb) Θ(n^5)\nc) Θ(n^12)\nd) Θ(n^5 (log n)^4)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP558_3974.",
        "target_text": "Question: Sorted array length n=558. Decide if any pair sums to 3974. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Brute force in Θ(n^2)\nc) Divide and conquer in Θ(n log n)\nd) Two-pointer scan in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN420737.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 420737, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Impossible under any model\nc) Traverse from head to find predecessor\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS2668.",
        "target_text": "Question: Compute stock span for 2668 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Priority queue\nc) Monotonic stack\nd) Hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B889781.",
        "target_text": "Question: Run BFS on an unweighted graph with 889781 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) Minimum memory footprint\nc) Nondecreasing distance from source\nd) All simple paths before all edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA5_75924429.",
        "target_text": "Question: In a d-ary heap with d=5 and n=75924429 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log_5 n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.79.",
        "target_text": "Question: In separate chaining with load factor α=0.79, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(α)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS370453.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=370453-th smallest?\nChoices:\na) Θ(1)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR425794.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=425794 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Tarjan’s low-link DFS\nc) Dijkstra’s algorithm\nd) Kruskal’s algorithm\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP81522.",
        "target_text": "Question: KMP matches a pattern of length m=81522 in linear time using which table?\nChoices:\na) Suffix array\nb) Rolling hash table\nc) Z-array exclusively\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST403483.",
        "target_text": "Question: Stability (id=403483): which pairing is correct?\nChoices:\na) Merge sort (stable), Heap sort (unstable)\nb) Quick sort (stable), Selection sort (unstable)\nc) Heap sort (stable), Merge sort (unstable)\nd) Counting sort (unstable)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS8682343.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=8682343 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(1) expected\nc) Θ(n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M9_6_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/6) + n^2 for n being a power of 6.\nChoices:\na) Θ(n^2 log n)\nb) Θ(n^1.2263 log n)\nc) Θ(n^1.2263)\nd) Θ(n^2)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM876528.",
        "target_text": "Question: Find a majority element in an array of length n=876528 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Binary search on value domain\nc) Boyer–Moore voting with verification\nd) Counting sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN100373.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 100373, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Reverse list then delete head\nc) Impossible under any model\nd) Traverse from head to find predecessor\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1333.",
        "target_text": "Question: Verify whether a pop sequence of length n=1333 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Use a queue to mirror the stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B886394.",
        "target_text": "Question: Run BFS on an unweighted graph with 886394 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) All simple paths before all edges\nc) Nondecreasing distance from source\nd) Minimum memory footprint\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL832_909074.",
        "target_text": "Question: Find the k=832-th largest element among n=909074 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Build max-heap and extract k times\nc) Heapsort then index\nd) Binary search on value domain\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.75.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.75?\nChoices:\na) To keep expected O(1) operations\nb) To sort keys implicitly\nc) To maintain key stability\nd) To reduce memory usage to exact size\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H552036783.",
        "target_text": "Question: For a balanced BST with n=552036783 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Repeated edge relaxation tolerates negatives. Variant BF96581.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=96581 can handle which case while detecting it?\nChoices:\na) Only acyclic graphs\nb) Negative edge weights and negative cycles\nc) Faster runtime on sparse nonnegative graphs\nd) Equal runtime on all graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS60846.",
        "target_text": "Question: In KMP, what does LPS[60846] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Index of next occurrence\nc) Number of mismatches up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST497519.",
        "target_text": "Question: Stability (id=497519): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Quick sort (stable), Selection sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS3973786.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=3973786 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(1) expected\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_5_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^1, f3=n^1 (log n)^5, f4=n^3?\nChoices:\na) Θ((log n)^5)\nb) Θ(n^1 (log n)^5)\nc) Θ(n^3)\nd) Θ(n^1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P256038.",
        "target_text": "Question: Answer 256038 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Recompute sums per query in Θ(n)\nc) Sort once and binary search per query\nd) Use a stack to store partial sums\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL20213.",
        "target_text": "Question: Check if a singly linked list of length n=20213 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Sort and compare with original\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS8.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 8 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Use BFS on substring graph\nc) Greedy left-to-right without memory\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ923962.",
        "target_text": "Question: Schedule 923962 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Unordered array\nc) Circular queue\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA12_43450300.",
        "target_text": "Question: In a d-ary heap with d=12 and n=43450300 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(log_12 n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.83.",
        "target_text": "Question: In separate chaining with load factor α=0.83, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS803283.",
        "target_text": "Question: BST with parent pointers (id=803283): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) Reverse postorder traversal entirely\nc) Use level-order and pick next node\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D368826.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 368826]. Why?\nChoices:\na) Distinct weights are required\nb) Self-loops must be absent\nc) Nonnegative weights ensure greedy optimality\nd) Graph must be undirected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP64434.",
        "target_text": "Question: KMP matches a pattern of length m=64434 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Rolling hash table\nc) Z-array exclusively\nd) Suffix array\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS532541.",
        "target_text": "Question: Keys are integers in range [0..532541]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Counting sort\nc) Shell sort\nd) Quick sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX338079049.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈338079049. Why?\nChoices:\na) Requires the array to be cyclic\nb) Uses hashing to index unknown segments\nc) Sorts the array first\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M8_6_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/6) + n^3 for n being a power of 6.\nChoices:\na) Θ(n^1.1606 log n)\nb) Θ(n^3 log n)\nc) Θ(n^1.1606)\nd) Θ(n^3)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S8066_210.",
        "target_text": "Question: Array length n=8066, find max-sum subarray of fixed length k=210. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(k log n)\nb) Θ(nk)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK6_774.",
        "target_text": "Question: Merge k=6 sorted linked lists totaling n=774 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(k n)\nc) Θ(n + k^2)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1875.",
        "target_text": "Question: Verify whether a pop sequence of length n=1875 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Backtrack with recursion in Θ(2^n)\nc) Sort both sequences then compare\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ86015.",
        "target_text": "Question: For 86015 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Binary heap\nc) Queue\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH98985.",
        "target_text": "Question: Build a binary heap from n=98985 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.58.",
        "target_text": "Question: In separate chaining with load factor α=0.58, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1/α)\nc) Θ(α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H235961780.",
        "target_text": "Question: For a balanced BST with n=235961780 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(√n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST789432.",
        "target_text": "Question: MST question id=789432: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) MST is always unique in connected graphs\nc) Kruskal adds the smallest edge that doesn't create a cycle\nd) Prim requires the entire edge set to be sorted first\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP15271.",
        "target_text": "Question: KMP matches a pattern of length m=15271 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Suffix array\nc) Z-array exclusively\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST401023.",
        "target_text": "Question: Stability (id=401023): which pairing is correct?\nChoices:\na) Heap sort (stable), Merge sort (unstable)\nb) Quick sort (stable), Selection sort (unstable)\nc) Counting sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS4261867.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=4261867 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(log n)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T2_1_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^2, f3=n^2 (log n)^1, f4=n^6?\nChoices:\na) Θ(n^2)\nb) Θ(n^6)\nc) Θ((log n)^1)\nd) Θ(n^2 (log n)^1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM591127.",
        "target_text": "Question: Find a majority element in an array of length n=591127 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Binary search on value domain\nc) Divide-and-conquer merges\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR7.",
        "target_text": "Question: Reverse a singly linked list in groups of k=7 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP447.",
        "target_text": "Question: Verify whether a pop sequence of length n=447 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Simulate using one stack in Θ(n)\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ651002.",
        "target_text": "Question: For 651002 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Binary heap\nc) Stack\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA5_39771931.",
        "target_text": "Question: In a d-ary heap with d=5 and n=39771931 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(√n)\nc) Θ(log_5 n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH32768.",
        "target_text": "Question: In open addressing with double hashing over table size m=32768, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) Choose m even and g(k) even\nc) Use g(k)=0 for some keys\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS482900.",
        "target_text": "Question: BST with parent pointers (id=482900): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Always climb to root then go right once\nd) Reverse postorder traversal entirely\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST901757.",
        "target_text": "Question: MST question id=901757: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) Prim requires the entire edge set to be sorted first\nc) MST minimizes number of edges\nd) MST is always unique in connected graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z928849.",
        "target_text": "Question: For string S (id=928849), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Number of distinct substrings up to i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Next index of S[i]\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB19660821.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=19660821 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n)\nc) Ω(n^2)\nd) Ω(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS5585697.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=5585697 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(1) expected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T4_5_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^4, f3=n^4 (log n)^5, f4=n^10?\nChoices:\na) Θ(n^4)\nb) Θ((log n)^5)\nc) Θ(n^10)\nd) Θ(n^4 (log n)^5)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P904702.",
        "target_text": "Question: Answer 904702 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Use a stack to store partial sums\nc) Build prefix-sum array; O(1) per query\nd) Recompute sums per query in Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK38_7136.",
        "target_text": "Question: Merge k=38 sorted linked lists totaling n=7136 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n log n)\nc) Θ(n + k^2)\nd) Θ(k n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS4022.",
        "target_text": "Question: Compute stock span for 4022 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Monotonic stack\nc) Hash table\nd) Fenwick tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS2314.",
        "target_text": "Question: A queue via two stacks handles a burst of 2314 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM918_124080.",
        "target_text": "Question: Merge k=918 sorted streams totaling N=124080 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(N log k)\nc) Θ(N + k^2)\nd) Θ(k log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.5.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.5?\nChoices:\na) To reduce memory usage to exact size\nb) To sort keys implicitly\nc) To keep expected O(1) operations\nd) To maintain key stability\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA973027.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=973027 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Sort node labels then binary search\nc) Euler tour + RMQ yields O(1) per query\nd) Naive parent climbing O(n) per query\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST793540.",
        "target_text": "Question: MST question id=793540: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) MST minimizes number of edges\nd) Prim requires the entire edge set to be sorted first\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP13998.",
        "target_text": "Question: KMP matches a pattern of length m=13998 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Suffix array\nc) Z-array exclusively\nd) Rolling hash table\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS215576.",
        "target_text": "Question: Keys are integers in range [0..215576]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Heap sort\nc) Counting sort\nd) Shell sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS3646410.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=3646410 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(log n) average\nc) O(1) worst-case\nd) Θ(n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T5_4_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^5, f3=n^5 (log n)^4, f4=n^10?\nChoices:\na) Θ(n^5 (log n)^4)\nb) Θ(n^10)\nc) Θ((log n)^4)\nd) Θ(n^5)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R65641.",
        "target_text": "Question: Rotate an array right by r=65641 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Heapify then extract\nc) Selection sort then shift\nd) Single-step rotate repeated r times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR8.",
        "target_text": "Question: Reverse a singly linked list in groups of k=8 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(n)\nc) Θ(k log n)\nd) Θ(nk)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS2849.",
        "target_text": "Question: Compute stock span for 2849 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Fenwick tree\nc) Hash table\nd) Priority queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS1958.",
        "target_text": "Question: A queue via two stacks handles a burst of 1958 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) Both Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL664_879793.",
        "target_text": "Question: Find the k=664-th largest element among n=879793 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Deterministic selection (median-of-medians)\nc) Heapsort then index\nd) Binary search on value domain\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF4337435_0.28.",
        "target_text": "Question: Chaining hash table with n=4337435 keys at load factor α=0.28. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H513875472.",
        "target_text": "Question: For a balanced BST with n=513875472 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(log log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS131535_806184.",
        "target_text": "Question: A directed graph with V=131535, E≈806184. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) Only if edges are unweighted\nc) When all vertices have outdegree ≥ 1\nd) Only if the graph is connected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP62182.",
        "target_text": "Question: KMP matches a pattern of length m=62182 in linear time using which table?\nChoices:\na) Rolling hash table\nb) LPS (failure) function\nc) Suffix array\nd) Z-array exclusively\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS142.",
        "target_text": "Question: Array is nearly sorted with at most 142 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Shell sort with fixed gaps\nc) Heap sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS7464690.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=7464690 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(log n)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M2_6_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/6) + n^0 for n being a power of 6.\nChoices:\na) Θ(n^0)\nb) Θ(n^0.3869)\nc) Θ(n^0.3869 log n)\nd) Θ(n^0 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP10868_4477.",
        "target_text": "Question: Sorted array length n=10868. Decide if any pair sums to 4477. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Hash set in Θ(n log n)\nc) Brute force in Θ(n^2)\nd) Divide and conquer in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR7.",
        "target_text": "Question: Reverse a singly linked list in groups of k=7 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n log k)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS3688.",
        "target_text": "Question: Compute stock span for 3688 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Fenwick tree\nc) Priority queue\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B823693.",
        "target_text": "Question: Run BFS on an unweighted graph with 823693 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Nondecreasing distance from source\nc) Minimum memory footprint\nd) Lexicographic vertex order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA15_48032953.",
        "target_text": "Question: In a d-ary heap with d=15 and n=48032953 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log_15 n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF7692296_0.45.",
        "target_text": "Question: Chaining hash table with n=7692296 keys at load factor α=0.45. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(α log α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR725550.",
        "target_text": "Question: In a BST with distinct keys (id=725550), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Postorder\nc) Inorder\nd) Preorder\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR326312.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=326312 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Tarjan’s low-link DFS\nc) Kruskal’s algorithm\nd) Topological sorting\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z770434.",
        "target_text": "Question: For string S (id=770434), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Next index of S[i]\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of distinct substrings up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST780820.",
        "target_text": "Question: Stability (id=780820): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Merge sort (stable), Heap sort (unstable)\nc) Counting sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS3446069.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=3446069 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(1) expected\nc) Θ(n log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M4_3_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/3) + n^0 for n being a power of 3.\nChoices:\na) Θ(n^0 log n)\nb) Θ(n^1.2619 log n)\nc) Θ(n^0)\nd) Θ(n^1.2619)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R883645.",
        "target_text": "Question: Rotate an array right by r=883645 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Heapify then extract\nc) Single-step rotate repeated r times\nd) Selection sort then shift\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN305797.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 305797, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Impossible under any model\nc) Reverse list then delete head\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1259.",
        "target_text": "Question: Verify whether a pop sequence of length n=1259 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Backtrack with recursion in Θ(2^n)\nc) Sort both sequences then compare\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ206812.",
        "target_text": "Question: Schedule 206812 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Stack\nc) Binary heap\nd) Unordered array\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK4.",
        "target_text": "Question: In a d-ary heap (d=4), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) No effect whatsoever\nb) It increases height linearly\nc) It makes the operation constant time\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.8.",
        "target_text": "Question: In separate chaining with load factor α=0.8, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS955970.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=955970-th smallest?\nChoices:\na) Θ(k)\nb) Θ(1)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR573794.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=573794 edges. What algorithmic idea achieves linear time?\nChoices:\na) Tarjan’s low-link DFS\nb) Topological sorting\nc) Kruskal’s algorithm\nd) Dijkstra’s algorithm\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB12822.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=12822. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Binary heap of substrings\nc) Suffix automaton or suffix array + LCP\nd) Queue of rolling hashes only\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS506.",
        "target_text": "Question: Array is nearly sorted with at most 506 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Insertion sort\nc) Shell sort with fixed gaps\nd) Radix sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX900690262.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈900690262. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Sorts the array first\nc) Requires the array to be cyclic\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Geometric resizing spreads copying cost over many operations. Variant A2.",
        "target_text": "Question: A dynamic array starts with capacity 2 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(√m)\nc) Θ(log m)\nd) Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM567960.",
        "target_text": "Question: Find a majority element in an array of length n=567960 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Binary search on value domain\nc) Counting sort\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL61770.",
        "target_text": "Question: Check if a singly linked list of length n=61770 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Use a hash set of seen values\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS2539.",
        "target_text": "Question: Compute stock span for 2539 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Fenwick tree\nc) Priority queue\nd) Hash table\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ960034.",
        "target_text": "Question: Schedule 960034 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Stack\nc) Binary heap\nd) Unordered array\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH9169457.",
        "target_text": "Question: Build a binary heap from n=9169457 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.5.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.5?\nChoices:\na) To keep expected O(1) operations\nb) To maintain key stability\nc) To sort keys implicitly\nd) To reduce memory usage to exact size\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA953370.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=953370 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Naive parent climbing O(n) per query\nc) Sort node labels then binary search\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D812649.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 812649]. Why?\nChoices:\na) Self-loops must be absent\nb) Distinct weights are required\nc) Nonnegative weights ensure greedy optimality\nd) Graph must be undirected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP44170.",
        "target_text": "Question: KMP matches a pattern of length m=44170 in linear time using which table?\nChoices:\na) Suffix array\nb) Z-array exclusively\nc) LPS (failure) function\nd) Rolling hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX2_32.",
        "target_text": "Question: Radix sort with d=2 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(d·(n + b))\nc) Θ(n log n)\nd) Θ(d·n·log b)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU9002371.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=9002371. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Hashing with chaining\nc) Binary search with left/right bias\nd) Linear scan with early exit\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_3_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^4, f3=n^4 (log n)^3, f4=n^10?\nChoices:\na) Θ(n^10)\nb) Θ(n^4)\nc) Θ(n^4 (log n)^3)\nd) Θ((log n)^3)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP1188_1845.",
        "target_text": "Question: Sorted array length n=1188. Decide if any pair sums to 1845. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Divide and conquer in Θ(n log n)\nc) Hash set in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK54_1562.",
        "target_text": "Question: Merge k=54 sorted linked lists totaling n=1562 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(k n)\nc) Θ(n log n)\nd) Θ(n + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS5.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 5 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Greedy left-to-right without memory\nb) Use two stacks for counts and fragments\nc) Sort segments then concatenate\nd) Use BFS on substring graph\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA708.",
        "target_text": "Question: Circular-array queue with capacity 708: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require power-of-two capacity\nc) Require prime capacity\nd) Head==Tail means full\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK3.",
        "target_text": "Question: In a d-ary heap (d=3), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) No effect whatsoever\nb) It makes the operation constant time\nc) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nd) It increases height linearly\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH2048.",
        "target_text": "Question: In open addressing with double hashing over table size m=2048, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) Choose m even and g(k) even\nc) g(k) coprime with m for all keys\nd) Use g(k)=0 for some keys\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA595855.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=595855 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Naive parent climbing O(n) per query\nc) DFS from root each time\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP992826.",
        "target_text": "Question: Test bipartiteness (id=992826) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Sort vertices and deduplicate\nc) Check all degrees even\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z225615.",
        "target_text": "Question: For string S (id=225615), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Length of the longest prefix starting at i matching S[0..]\nc) Number of distinct substrings up to i\nd) Number of mismatches at i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB15820207.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=15820207 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(log n)\nc) Ω(n^2)\nd) Ω(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI83_4730.",
        "target_text": "Question: Binary search over half-open range [83, 4730)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Keep inclusive bounds on both ends\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Increase both lo and hi to skip duplicates\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M7_3_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/3) + n^4 for n being a power of 3.\nChoices:\na) Θ(n^1.7712 log n)\nb) Θ(n^1.7712)\nc) Θ(n^4 log n)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM661127.",
        "target_text": "Question: Find a majority element in an array of length n=661127 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Counting sort\nc) Binary search on value domain\nd) Divide-and-conquer merges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN671815_644133.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=671815, B=644133. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Binary search on addresses\nc) Hash addresses of first list\nd) Advance pointers; when one ends, jump to the other head\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Operator handling via stacks preserves associativity rules. Variant IP4_5.",
        "target_text": "Question: Evaluate an infix expression with 4–5 precedence levels and parentheses. Linear-time method?\nChoices:\na) Sort tokens by precedence then scan\nb) Convert to postfix and evaluate with a stack\nc) Left-to-right without stacks\nd) Build a tree without any stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ455724.",
        "target_text": "Question: Schedule 455724 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Unordered array\nc) Binary heap\nd) Circular queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK6.",
        "target_text": "Question: In a d-ary heap (d=6), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It makes the operation constant time\nb) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nc) No effect whatsoever\nd) It increases height linearly\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF2700743_0.77.",
        "target_text": "Question: Chaining hash table with n=2700743 keys at load factor α=0.77. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(α log α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS654388.",
        "target_text": "Question: BST with parent pointers (id=654388): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Always climb to root then go right once\nc) Use level-order and pick next node\nd) Reverse postorder traversal entirely\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF79102.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=79102 can handle which case while detecting it?\nChoices:\na) Negative edge weights and negative cycles\nb) Equal runtime on all graphs\nc) Only acyclic graphs\nd) Faster runtime on sparse nonnegative graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS73297.",
        "target_text": "Question: In KMP, what does LPS[73297] represent for a given pattern?\nChoices:\na) Length of longest proper prefix that is also a suffix for prefix ending at i\nb) Number of mismatches up to i\nc) Index of next occurrence\nd) Total distinct prefixes up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB19711582.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=19711582 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(log n)\nc) Ω(n log n)\nd) Ω(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS971778.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=971778 typically runs in?\nChoices:\na) Θ(n) average\nb) O(log log n) average\nc) Θ(log n) average\nd) O(1) worst-case\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_4_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^1, f3=n^1 (log n)^4, f4=n^7?\nChoices:\na) Θ(n^1 (log n)^4)\nb) Θ((log n)^4)\nc) Θ(n^1)\nd) Θ(n^7)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM852640.",
        "target_text": "Question: Find a majority element in an array of length n=852640 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Divide-and-conquer merges\nc) Counting sort\nd) Binary search on value domain\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C2.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 2× and 1×. Complexity?\nChoices:\na) Θ(log n) time, Θ(1) space\nb) Θ(n) time, Θ(1) space\nc) Θ(1) time, Θ(1) space\nd) Θ(n) time, Θ(n) space\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS1064.",
        "target_text": "Question: Compute stock span for 1064 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Priority queue\nc) Hash table\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA3496.",
        "target_text": "Question: Circular-array queue with capacity 3496: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require prime capacity\nc) Require power-of-two capacity\nd) Head==Tail means full\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM930_193368.",
        "target_text": "Question: Merge k=930 sorted streams totaling N=193368 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log N)\nc) Θ(N log k)\nd) Θ(N + k^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.31.",
        "target_text": "Question: In separate chaining with load factor α=1.31, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1 + α)\nc) Θ(1/α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA919576.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=919576 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Euler tour + RMQ yields O(1) per query\nc) Naive parent climbing O(n) per query\nd) Sort node labels then binary search\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC499987.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=499987 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V log V)\nb) Θ(E log V)\nc) Θ(V+E)\nd) Θ(VE)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP79155.",
        "target_text": "Question: KMP matches a pattern of length m=79155 in linear time using which table?\nChoices:\na) Suffix array\nb) Rolling hash table\nc) LPS (failure) function\nd) Z-array exclusively\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS17492.",
        "target_text": "Question: Heapsort stability check id=17492: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort always beats merge sort\nc) Heapsort is stable\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS2361459.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=2361459 typically runs in?\nChoices:\na) Θ(n) average\nb) O(1) worst-case\nc) Θ(log n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M6_3_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/3) + n^2 for n being a power of 3.\nChoices:\na) Θ(n^2)\nb) Θ(n^2 log n)\nc) Θ(n^1.6309 log n)\nd) Θ(n^1.6309)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM50597.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=50597-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Binary search on index vs value gap\nc) Hash all present values then scan\nd) Scan linearly counting gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN414311.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 414311, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Traverse from head to find predecessor\nc) Reverse list then delete head\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE40312.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=40312. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Queue\nc) Binary search tree\nd) Max-heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ495151.",
        "target_text": "Question: Schedule 495151 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Binary heap\nc) Circular queue\nd) Stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH3460182.",
        "target_text": "Question: Build a binary heap from n=3460182 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF7860649_0.92.",
        "target_text": "Question: Chaining hash table with n=7860649 keys at load factor α=0.92. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(α log α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H104632594.",
        "target_text": "Question: For a balanced BST with n=104632594 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC195959.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=195959 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(V log V)\nc) Θ(E log V)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z481237.",
        "target_text": "Question: For string S (id=481237), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Number of mismatches at i\nc) Next index of S[i]\nd) Number of distinct substrings up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST749995.",
        "target_text": "Question: Stability (id=749995): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Geometric level distribution mirrors balanced trees. Variant SL0.25.",
        "target_text": "Question: Skip list with level promotion probability p=0.25: expected complexity of search/insert/delete?\nChoices:\na) Θ(log n) for all three\nb) Θ(n) for all three\nc) Θ(√n) for all three\nd) Θ(1) for all three\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Geometric resizing spreads copying cost over many operations. Variant A4.",
        "target_text": "Question: A dynamic array starts with capacity 4 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(1)\nb) Θ(√m)\nc) Θ(m)\nd) Θ(log m)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP2411_2266.",
        "target_text": "Question: Sorted array length n=2411. Decide if any pair sums to 2266. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Two-pointer scan in Θ(n)\nc) Divide and conquer in Θ(n log n)\nd) Hash set in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL111.",
        "target_text": "Question: Check if a singly linked list of length n=111 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Use a hash set of seen values\nc) Copy to array and two-pointer check\nd) Sort and compare with original\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS5.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 5 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Greedy left-to-right without memory\nb) Use two stacks for counts and fragments\nc) Use BFS on substring graph\nd) Sort segments then concatenate\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW9716_195.",
        "target_text": "Question: Sliding window maximum for array length n=9716 and window w=195. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(nw)\nd) Θ(w log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK5.",
        "target_text": "Question: In a d-ary heap (d=5), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) No effect whatsoever\nb) It makes the operation constant time\nc) It increases height linearly\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF3390016_0.68.",
        "target_text": "Question: Chaining hash table with n=3390016 keys at load factor α=0.68. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(α log α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR952903.",
        "target_text": "Question: In a BST with distinct keys (id=952903), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Postorder\nc) Inorder\nd) Preorder\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC628458.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=628458 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(V+E)\nc) Θ(E log V)\nd) Θ(V log V)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP10232.",
        "target_text": "Question: KMP matches a pattern of length m=10232 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Suffix array\nc) Z-array exclusively\nd) Rolling hash table\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST928190.",
        "target_text": "Question: Stability (id=928190): which pairing is correct?\nChoices:\na) Merge sort (stable), Heap sort (unstable)\nb) Counting sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU3972196.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=3972196. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Binary search with left/right bias\nc) Hashing with chaining\nd) Linear scan with early exit\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Geometric resizing spreads copying cost over many operations. Variant A1.",
        "target_text": "Question: A dynamic array starts with capacity 1 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(log m)\nc) Θ(1)\nd) Θ(√m)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP19124_2061.",
        "target_text": "Question: Sorted array length n=19124. Decide if any pair sums to 2061. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Divide and conquer in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Hash set in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN605998_93905.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=605998, B=93905. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Advance pointers; when one ends, jump to the other head\nc) Hash addresses of first list\nd) Binary search on addresses\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS6.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 6 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Greedy left-to-right without memory\nb) Use BFS on substring graph\nc) Sort segments then concatenate\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ944390.",
        "target_text": "Question: For 944390 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Stack\nc) Deque\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK3.",
        "target_text": "Question: In a d-ary heap (d=3), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It makes the operation constant time\nb) It increases height linearly\nc) No effect whatsoever\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF2868427_0.42.",
        "target_text": "Question: Chaining hash table with n=2868427 keys at load factor α=0.42. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(nα)\nc) Θ(1 + α)\nd) Θ(α log α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA355750.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=355750 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Naive parent climbing O(n) per query\nc) Euler tour + RMQ yields O(1) per query\nd) DFS from root each time\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST486652.",
        "target_text": "Question: MST question id=486652: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) MST is always unique in connected graphs\nc) Kruskal adds the smallest edge that doesn't create a cycle\nd) MST minimizes number of edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS74263.",
        "target_text": "Question: In KMP, what does LPS[74263] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Number of mismatches up to i\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Total distinct prefixes up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX2_32.",
        "target_text": "Question: Radix sort with d=2 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·n·log b)\nc) Θ(d·(n + b))\nd) Θ(b^d)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI61_3006.",
        "target_text": "Question: Binary search over half-open range [61, 3006)—which invariant prevents infinite loops?\nChoices:\na) Increase both lo and hi to skip duplicates\nb) Keep inclusive bounds on both ends\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M8_5_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/5) + n^1 for n being a power of 5.\nChoices:\na) Θ(n^1 log n)\nb) Θ(n^1.292)\nc) Θ(n^1)\nd) Θ(n^1.292 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM540435.",
        "target_text": "Question: Find a majority element in an array of length n=540435 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Divide-and-conquer merges\nc) Binary search on value domain\nd) Counting sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL14935.",
        "target_text": "Question: Check if a singly linked list of length n=14935 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Copy to array and two-pointer check\nc) Find middle, reverse second half, compare\nd) Sort and compare with original\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP440.",
        "target_text": "Question: Verify whether a pop sequence of length n=440 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ151666.",
        "target_text": "Question: For 151666 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Binary heap\nc) Deque\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC3430088.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=3430088?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.58.",
        "target_text": "Question: In separate chaining with load factor α=0.58, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS181921.",
        "target_text": "Question: BST with parent pointers (id=181921): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Always climb to root then go right once\nc) Use level-order and pick next node\nd) Reverse postorder traversal entirely\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D570077.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 570077]. Why?\nChoices:\na) Distinct weights are required\nb) Nonnegative weights ensure greedy optimality\nc) Graph must be undirected\nd) Self-loops must be absent\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Randomized hashing makes spurious matches rare. Variant RK257_998244353.",
        "target_text": "Question: Rabin–Karp with base=257, mod=998244353 achieves expected linear time due to what?\nChoices:\na) Trie of all substrings\nb) Suffix tree guaranteeing O(1) per char\nc) Use of a min-heap\nd) Low collision probability of rolling hash\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS528524.",
        "target_text": "Question: Keys are integers in range [0..528524]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Counting sort\nc) Quick sort\nd) Shell sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX761601326.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈761601326. Why?\nChoices:\na) Requires the array to be cyclic\nb) Sorts the array first\nc) Doubles the bound to bracket, then binary search\nd) Uses hashing to index unknown segments\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_2_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^1, f3=n^1 (log n)^2, f4=n^4?\nChoices:\na) Θ(n^1)\nb) Θ(n^1 (log n)^2)\nc) Θ((log n)^2)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S6125_160.",
        "target_text": "Question: Array length n=6125, find max-sum subarray of fixed length k=160. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Phase difference accumulates around the cycle. Variant C3.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 3× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(n) space\nb) Θ(log n) time, Θ(1) space\nc) Θ(1) time, Θ(1) space\nd) Θ(n) time, Θ(1) space\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE72989.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=72989. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Decreasing stack\nc) Binary search tree\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ645679.",
        "target_text": "Question: For 645679 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Queue\nc) Binary heap\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA12_78178084.",
        "target_text": "Question: In a d-ary heap with d=12 and n=78178084 nodes, what is the height?\nChoices:\na) Θ(log_12 n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC1.08.",
        "target_text": "Question: In separate chaining with load factor α=1.08, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H649789116.",
        "target_text": "Question: For a balanced BST with n=649789116 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(log log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST868808.",
        "target_text": "Question: MST question id=868808: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) Prim requires the entire edge set to be sorted first\nd) MST is always unique in connected graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000007.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000007 achieves expected linear time due to what?\nChoices:\na) Low collision probability of rolling hash\nb) Trie of all substrings\nc) Use of a min-heap\nd) Suffix tree guaranteeing O(1) per char\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS106610.",
        "target_text": "Question: Keys are integers in range [0..106610]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Counting sort\nc) Heap sort\nd) Shell sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS4238847.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=4238847 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M4_4_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/4) + n^2 for n being a power of 4.\nChoices:\na) Θ(n^2 log n)\nb) Θ(n^2)\nc) Θ(n^1.0 log n)\nd) Θ(n^1.0)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM48151.",
        "target_text": "Question: Find a majority element in an array of length n=48151 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Divide-and-conquer merges\nc) Binary search on value domain\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL70544.",
        "target_text": "Question: Check if a singly linked list of length n=70544 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Use a hash set of seen values\nc) Sort and compare with original\nd) Copy to array and two-pointer check\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS3312.",
        "target_text": "Question: Compute stock span for 3312 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Fenwick tree\nc) Priority queue\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS8068.",
        "target_text": "Question: A queue via two stacks handles a burst of 8068 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) Both Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM586_115273.",
        "target_text": "Question: Merge k=586 sorted streams totaling N=115273 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log N)\nc) Θ(N log k)\nd) Θ(k log N)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF9945168_0.8.",
        "target_text": "Question: Chaining hash table with n=9945168 keys at load factor α=0.8. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(α log α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS445454.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=445454-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(k)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D642849.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 642849]. Why?\nChoices:\na) Graph must be undirected\nb) Nonnegative weights ensure greedy optimality\nc) Self-loops must be absent\nd) Distinct weights are required\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN285880.",
        "target_text": "Question: Check anagrams for strings of length n=285880 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) Count character frequencies in Θ(n)\nc) DFS on character graph\nd) Use a stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST813113.",
        "target_text": "Question: Stability (id=813113): which pairing is correct?\nChoices:\na) Heap sort (stable), Merge sort (unstable)\nb) Merge sort (stable), Heap sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Counting sort (unstable)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX84940496.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈84940496. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Uses hashing to index unknown segments\nc) Requires the array to be cyclic\nd) Sorts the array first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M3_3_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/3) + n^2 for n being a power of 3.\nChoices:\na) Θ(n^2 log n)\nb) Θ(n^2)\nc) Θ(n^1.0)\nd) Θ(n^1.0 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM339269.",
        "target_text": "Question: Find a majority element in an array of length n=339269 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Binary search on value domain\nc) Boyer–Moore voting with verification\nd) Counting sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK98_16482.",
        "target_text": "Question: Merge k=98 sorted linked lists totaling n=16482 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n log n)\nc) Θ(n + k^2)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE80601.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=80601. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Decreasing stack\nc) Queue\nd) Max-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA3561.",
        "target_text": "Question: Circular-array queue with capacity 3561: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Track count or keep one slot empty\nc) Require power-of-two capacity\nd) Head==Tail means full\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA13_43702774.",
        "target_text": "Question: In a d-ary heap with d=13 and n=43702774 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(log_13 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Adversarial patterns are neutralized by random choice. Variant UH1000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=1000 slots yields what benefit?\nChoices:\na) Eliminates need for resizing\nb) Expected constant-time operations against adversaries\nc) Cryptographic security by default\nd) Zero collisions guaranteed\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS694714.",
        "target_text": "Question: BST with parent pointers (id=694714): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Reverse postorder traversal entirely\nc) Always climb to root then go right once\nd) Use level-order and pick next node\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF72518.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=72518 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Equal runtime on all graphs\nc) Negative edge weights and negative cycles\nd) Only acyclic graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB62148.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=62148. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Suffix automaton or suffix array + LCP\nc) Binary heap of substrings\nd) BST over all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST97067.",
        "target_text": "Question: Stability (id=97067): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Counting sort (unstable)\nc) Heap sort (stable), Merge sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU2460046.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=2460046. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Linear scan with early exit\nc) Hashing with chaining\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M2_3_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/3) + n^1 for n being a power of 3.\nChoices:\na) Θ(n^0.6309 log n)\nb) Θ(n^0.6309)\nc) Θ(n^1)\nd) Θ(n^1 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM38689.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=38689-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Scan linearly counting gaps\nc) Binary search on index vs value gap\nd) Use a heap of differences\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL23358.",
        "target_text": "Question: Check if a singly linked list of length n=23358 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Copy to array and two-pointer check\nc) Sort and compare with original\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE25466.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=25466. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Binary search tree\nc) Queue\nd) Max-heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B438753.",
        "target_text": "Question: Run BFS on an unweighted graph with 438753 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) All simple paths before all edges\nc) Lexicographic vertex order\nd) Minimum memory footprint\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH5739577.",
        "target_text": "Question: Build a binary heap from n=5739577 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.04.",
        "target_text": "Question: In separate chaining with load factor α=1.04, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA63258.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=63258 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) DFS from root each time\nc) Naive parent climbing O(n) per query\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR362946.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=362946 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Tarjan’s low-link DFS\nc) Dijkstra’s algorithm\nd) Kruskal’s algorithm\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS21304.",
        "target_text": "Question: In KMP, what does LPS[21304] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Total distinct prefixes up to i\nc) Number of mismatches up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS769928.",
        "target_text": "Question: Heapsort stability check id=769928: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort always beats merge sort\nc) Heapsort is stable\nd) Heapsort needs extra Θ(n) memory\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS7900720.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=7900720 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(1) expected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A4.",
        "target_text": "Question: A dynamic array starts with capacity 4 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(log m)\nc) Θ(√m)\nd) Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP13864_994.",
        "target_text": "Question: Sorted array length n=13864. Decide if any pair sums to 994. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Divide and conquer in Θ(n log n)\nc) Hash set in Θ(n log n)\nd) Two-pointer scan in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL73856.",
        "target_text": "Question: Check if a singly linked list of length n=73856 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Sort and compare with original\nc) Find middle, reverse second half, compare\nd) Use a hash set of seen values\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE52383.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=52383. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Decreasing stack\nc) Queue\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS220.",
        "target_text": "Question: A queue via two stacks handles a burst of 220 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) Both Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC91112515.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=91112515?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(1)\nd) Θ(log log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Threshold-based expansion preserves performance. Variant RS0.8.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.8?\nChoices:\na) To keep expected O(1) operations\nb) To maintain key stability\nc) To reduce memory usage to exact size\nd) To sort keys implicitly\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H166179696.",
        "target_text": "Question: For a balanced BST with n=166179696 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF7167.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=7167 can handle which case while detecting it?\nChoices:\na) Equal runtime on all graphs\nb) Only acyclic graphs\nc) Faster runtime on sparse nonnegative graphs\nd) Negative edge weights and negative cycles\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP55982.",
        "target_text": "Question: KMP matches a pattern of length m=55982 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) Rolling hash table\nc) Suffix array\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB75538996.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=75538996 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n)\nc) Ω(log n)\nd) Ω(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX27945592.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈27945592. Why?\nChoices:\na) Requires the array to be cyclic\nb) Sorts the array first\nc) Uses hashing to index unknown segments\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M7_4_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/4) + n^0 for n being a power of 4.\nChoices:\na) Θ(n^0 log n)\nb) Θ(n^1.4037 log n)\nc) Θ(n^0)\nd) Θ(n^1.4037)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R805724.",
        "target_text": "Question: Rotate an array right by r=805724 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Heapify then extract\nc) Three-reversal method\nd) Selection sort then shift\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN219323_713336.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=219323, B=713336. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Reverse one list then compare\nc) Advance pointers; when one ends, jump to the other head\nd) Hash addresses of first list\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1908.",
        "target_text": "Question: Verify whether a pop sequence of length n=1908 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Use a queue to mirror the stack\nc) Simulate using one stack in Θ(n)\nd) Sort both sequences then compare\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS4450.",
        "target_text": "Question: A queue via two stacks handles a burst of 4450 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) Both Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL1000_813386.",
        "target_text": "Question: Find the k=1000-th largest element among n=813386 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Heapsort then index\nc) Deterministic selection (median-of-medians)\nd) Build max-heap and extract k times\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF5676704_0.78.",
        "target_text": "Question: Chaining hash table with n=5676704 keys at load factor α=0.78. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(α log α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR369512.",
        "target_text": "Question: In a BST with distinct keys (id=369512), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Postorder\nc) Inorder\nd) Preorder\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP503173.",
        "target_text": "Question: Test bipartiteness (id=503173) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Compute an MST then inspect edges\nd) Sort vertices and deduplicate\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB83012.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=83012. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) BST over all substrings\nc) Suffix automaton or suffix array + LCP\nd) Binary heap of substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX4_16.",
        "target_text": "Question: Radix sort with d=4 digits and base b=16 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·n·log b)\nc) Θ(d·(n + b))\nd) Θ(b^d)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS9987319.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=9987319 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(1) expected\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T5_6_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^5, f3=n^5 (log n)^6, f4=n^11?\nChoices:\na) Θ(n^5 (log n)^6)\nb) Θ((log n)^6)\nc) Θ(n^5)\nd) Θ(n^11)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM68114.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=68114-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Hash all present values then scan\nc) Binary search on index vs value gap\nd) Use a heap of differences\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL95264.",
        "target_text": "Question: Check if a singly linked list of length n=95264 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Find middle, reverse second half, compare\nc) Sort and compare with original\nd) Copy to array and two-pointer check\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Operator handling via stacks preserves associativity rules. Variant IP3_4.",
        "target_text": "Question: Evaluate an infix expression with 3–4 precedence levels and parentheses. Linear-time method?\nChoices:\na) Build a tree without any stack\nb) Left-to-right without stacks\nc) Sort tokens by precedence then scan\nd) Convert to postfix and evaluate with a stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA5399.",
        "target_text": "Question: Circular-array queue with capacity 5399: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require prime capacity\nc) Require power-of-two capacity\nd) Head==Tail means full\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM845_330884.",
        "target_text": "Question: Merge k=845 sorted streams totaling N=330884 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(N + k^2)\nc) Θ(N log k)\nd) Θ(k log N)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.8.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.8?\nChoices:\na) To reduce memory usage to exact size\nb) To maintain key stability\nc) To keep expected O(1) operations\nd) To sort keys implicitly\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS937221.",
        "target_text": "Question: BST with parent pointers (id=937221): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Use level-order and pick next node\nc) Reverse postorder traversal entirely\nd) Always climb to root then go right once\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF83157.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=83157 can handle which case while detecting it?\nChoices:\na) Only acyclic graphs\nb) Equal runtime on all graphs\nc) Faster runtime on sparse nonnegative graphs\nd) Negative edge weights and negative cycles\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE128.",
        "target_text": "Question: Search a trie over alphabet size σ=128 for a key of length m. Time complexity?\nChoices:\na) Θ(1) average for all m\nb) Θ(m log σ)\nc) Θ(log n)\nd) Θ(m)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS759381.",
        "target_text": "Question: Keys are integers in range [0..759381]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Heap sort\nc) Shell sort\nd) Quick sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS2352050.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=2352050 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(n log n)\nd) Θ(1) expected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M7_5_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/5) + n^0 for n being a power of 5.\nChoices:\na) Θ(n^1.2091 log n)\nb) Θ(n^0)\nc) Θ(n^0 log n)\nd) Θ(n^1.2091)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S17108_228.",
        "target_text": "Question: Array length n=17108, find max-sum subarray of fixed length k=228. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK11_1012.",
        "target_text": "Question: Merge k=11 sorted linked lists totaling n=1012 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(k n)\nc) Θ(n + k^2)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS5.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 5 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Sort segments then concatenate\nc) Greedy left-to-right without memory\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA5980.",
        "target_text": "Question: Circular-array queue with capacity 5980: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Require prime capacity\nc) Track count or keep one slot empty\nd) Require power-of-two capacity\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA16_72683818.",
        "target_text": "Question: In a d-ary heap with d=16 and n=72683818 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(log_16 n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH32768.",
        "target_text": "Question: In open addressing with double hashing over table size m=32768, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) Make both hash functions identical\nc) g(k) coprime with m for all keys\nd) Choose m even and g(k) even\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS109599.",
        "target_text": "Question: BST with parent pointers (id=109599): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Always climb to root then go right once\nc) Reverse postorder traversal entirely\nd) Use level-order and pick next node\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC857837.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=857837 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(VE)\nc) Θ(V+E)\nd) Θ(V log V)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS64164.",
        "target_text": "Question: In KMP, what does LPS[64164] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Index of next occurrence\nc) Number of mismatches up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST364643.",
        "target_text": "Question: Stability (id=364643): which pairing is correct?\nChoices:\na) Merge sort (stable), Heap sort (unstable)\nb) Counting sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS3685823.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=3685823 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_2_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^1, f3=n^1 (log n)^2, f4=n^6?\nChoices:\na) Θ(n^1 (log n)^2)\nb) Θ(n^6)\nc) Θ(n^1)\nd) Θ((log n)^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM37401.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=37401-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Scan linearly counting gaps\nc) Binary search on index vs value gap\nd) Hash all present values then scan\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN987801_938522.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=987801, B=938522. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Hash addresses of first list\nc) Reverse one list then compare\nd) Binary search on addresses\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS3.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 3 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Greedy left-to-right without memory\nb) Sort segments then concatenate\nc) Use BFS on substring graph\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA7540.",
        "target_text": "Question: Circular-array queue with capacity 7540: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Require power-of-two capacity\nc) Track count or keep one slot empty\nd) Head==Tail means full\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK8.",
        "target_text": "Question: In a d-ary heap (d=8), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) No effect whatsoever\nb) It increases height linearly\nc) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nd) It makes the operation constant time\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF6668135_0.58.",
        "target_text": "Question: Chaining hash table with n=6668135 keys at load factor α=0.58. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(α log α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR608571.",
        "target_text": "Question: In a BST with distinct keys (id=608571), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Preorder\nc) Inorder\nd) Level-order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST936096.",
        "target_text": "Question: MST question id=936096: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) Prim requires the entire edge set to be sorted first\nc) MST minimizes number of edges\nd) MST is always unique in connected graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Character-by-character descent. Variant TRIE52.",
        "target_text": "Question: Search a trie over alphabet size σ=52 for a key of length m. Time complexity?\nChoices:\na) Θ(1) average for all m\nb) Θ(log n)\nc) Θ(m log σ)\nd) Θ(m)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS858824.",
        "target_text": "Question: Heapsort stability check id=858824: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort is not stable by default\nd) Heapsort always beats merge sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS5500339.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=5500339 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(log n) average\nc) Θ(n) average\nd) O(1) worst-case\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M6_2_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/2) + n^3 for n being a power of 2.\nChoices:\na) Θ(n^2.585)\nb) Θ(n^2.585 log n)\nc) Θ(n^3 log n)\nd) Θ(n^3)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM24322.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=24322-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Scan linearly counting gaps\nc) Hash all present values then scan\nd) Use a heap of differences\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C4.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 4× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(n) space\nb) Θ(log n) time, Θ(1) space\nc) Θ(1) time, Θ(1) space\nd) Θ(n) time, Θ(1) space\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP3_4.",
        "target_text": "Question: Evaluate an infix expression with 3–4 precedence levels and parentheses. Linear-time method?\nChoices:\na) Left-to-right without stacks\nb) Build a tree without any stack\nc) Convert to postfix and evaluate with a stack\nd) Sort tokens by precedence then scan\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW2522_224.",
        "target_text": "Question: Sliding window maximum for array length n=2522 and window w=224. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(w log n)\nc) Θ(n)\nd) Θ(nw)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL624_365325.",
        "target_text": "Question: Find the k=624-th largest element among n=365325 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Deterministic selection (median-of-medians)\nc) Binary search on value domain\nd) Build max-heap and extract k times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.16.",
        "target_text": "Question: In separate chaining with load factor α=1.16, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H957615859.",
        "target_text": "Question: For a balanced BST with n=957615859 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS100069_936691.",
        "target_text": "Question: A directed graph with V=100069, E≈936691. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) Only if the graph is connected\nc) When it is a DAG (no directed cycles)\nd) When all vertices have outdegree ≥ 1\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB32435.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=32435. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Suffix automaton or suffix array + LCP\nc) Binary heap of substrings\nd) BST over all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS895771.",
        "target_text": "Question: Heapsort stability check id=895771: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort is not stable by default\nd) Heapsort always beats merge sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS1879701.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=1879701 typically runs in?\nChoices:\na) Θ(log n) average\nb) O(log log n) average\nc) O(1) worst-case\nd) Θ(n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_2_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^4, f3=n^4 (log n)^2, f4=n^10?\nChoices:\na) Θ(n^4)\nb) Θ(n^10)\nc) Θ((log n)^2)\nd) Θ(n^4 (log n)^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP482_1754.",
        "target_text": "Question: Sorted array length n=482. Decide if any pair sums to 1754. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Divide and conquer in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK39_6736.",
        "target_text": "Question: Merge k=39 sorted linked lists totaling n=6736 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(k n)\nc) Θ(n log n)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Operator handling via stacks preserves associativity rules. Variant IP2_3.",
        "target_text": "Question: Evaluate an infix expression with 2–3 precedence levels and parentheses. Linear-time method?\nChoices:\na) Left-to-right without stacks\nb) Build a tree without any stack\nc) Convert to postfix and evaluate with a stack\nd) Sort tokens by precedence then scan\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ120781.",
        "target_text": "Question: For 120781 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Deque\nc) Binary heap\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL914_333317.",
        "target_text": "Question: Find the k=914-th largest element among n=333317 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Build max-heap and extract k times\nc) Heapsort then index\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Adversarial patterns are neutralized by random choice. Variant UH100000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=100000 slots yields what benefit?\nChoices:\na) Zero collisions guaranteed\nb) Eliminates need for resizing\nc) Cryptographic security by default\nd) Expected constant-time operations against adversaries\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA426186.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=426186 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Sort node labels then binary search\nc) Euler tour + RMQ yields O(1) per query\nd) Naive parent climbing O(n) per query\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D166973.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 166973]. Why?\nChoices:\na) Self-loops must be absent\nb) Nonnegative weights ensure greedy optimality\nc) Graph must be undirected\nd) Distinct weights are required\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Randomized hashing makes spurious matches rare. Variant RK257_1000000009.",
        "target_text": "Question: Rabin–Karp with base=257, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Trie of all substrings\nb) Suffix tree guaranteeing O(1) per char\nc) Low collision probability of rolling hash\nd) Use of a min-heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB81473120.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=81473120 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(log n)\nc) Ω(n log n)\nd) Ω(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS6385791.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=6385791 typically runs in?\nChoices:\na) Θ(log n) average\nb) Θ(n) average\nc) O(1) worst-case\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M8_5_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/5) + n^3 for n being a power of 5.\nChoices:\na) Θ(n^1.292)\nb) Θ(n^3)\nc) Θ(n^1.292 log n)\nd) Θ(n^3 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP18730_3911.",
        "target_text": "Question: Sorted array length n=18730. Decide if any pair sums to 3911. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Two-pointer scan in Θ(n)\nc) Divide and conquer in Θ(n log n)\nd) Hash set in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL50440.",
        "target_text": "Question: Check if a singly linked list of length n=50440 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Find middle, reverse second half, compare\nc) Use a hash set of seen values\nd) Sort and compare with original\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE1115.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=1115. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Decreasing stack\nc) Queue\nd) Max-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS7878.",
        "target_text": "Question: A queue via two stacks handles a burst of 7878 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) Both Θ(log n)\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC93117273.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=93117273?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF1236195_0.54.",
        "target_text": "Question: Chaining hash table with n=1236195 keys at load factor α=0.54. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H84111596.",
        "target_text": "Question: For a balanced BST with n=84111596 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D178456.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 178456]. Why?\nChoices:\na) Distinct weights are required\nb) Self-loops must be absent\nc) Graph must be undirected\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS54253.",
        "target_text": "Question: In KMP, what does LPS[54253] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Total distinct prefixes up to i\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Number of mismatches up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS930810.",
        "target_text": "Question: Keys are integers in range [0..930810]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Quick sort\nc) Counting sort\nd) Heap sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS7458224.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=7458224 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(1) expected\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T4_5_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^4, f3=n^4 (log n)^5, f4=n^6?\nChoices:\na) Θ((log n)^5)\nb) Θ(n^6)\nc) Θ(n^4)\nd) Θ(n^4 (log n)^5)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM615824.",
        "target_text": "Question: Find a majority element in an array of length n=615824 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Counting sort\nc) Boyer–Moore voting with verification\nd) Divide-and-conquer merges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN699228_781952.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=699228, B=781952. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Hash addresses of first list\nc) Reverse one list then compare\nd) Binary search on addresses\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE15505.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=15505. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Max-heap\nc) Decreasing stack\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ957223.",
        "target_text": "Question: For 957223 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Stack\nc) Queue\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC22595429.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=22595429?\nChoices:\na) Θ(1)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF5753907_0.82.",
        "target_text": "Question: Chaining hash table with n=5753907 keys at load factor α=0.82. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(nα)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H197423164.",
        "target_text": "Question: For a balanced BST with n=197423164 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST692742.",
        "target_text": "Question: MST question id=692742: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) MST is always unique in connected graphs\nc) MST minimizes number of edges\nd) Prim requires the entire edge set to be sorted first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN492045.",
        "target_text": "Question: Check anagrams for strings of length n=492045 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Count character frequencies in Θ(n)\nc) Sort both in Θ(n log n)\nd) Use a stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST640124.",
        "target_text": "Question: Stability (id=640124): which pairing is correct?\nChoices:\na) Merge sort (stable), Heap sort (unstable)\nb) Quick sort (stable), Selection sort (unstable)\nc) Counting sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS5622467.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=5622467 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T5_2_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^5, f3=n^5 (log n)^2, f4=n^11?\nChoices:\na) Θ(n^5 (log n)^2)\nb) Θ(n^11)\nc) Θ(n^5)\nd) Θ((log n)^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM220990.",
        "target_text": "Question: Find a majority element in an array of length n=220990 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Boyer–Moore voting with verification\nc) Divide-and-conquer merges\nd) Counting sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN44530.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 44530, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Impossible under any model\nc) Reverse list then delete head\nd) Traverse from head to find predecessor\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS3.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 3 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Use two stacks for counts and fragments\nc) Use BFS on substring graph\nd) Greedy left-to-right without memory\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B676621.",
        "target_text": "Question: Run BFS on an unweighted graph with 676621 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) Nondecreasing distance from source\nc) Minimum memory footprint\nd) All simple paths before all edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM765_312572.",
        "target_text": "Question: Merge k=765 sorted streams totaling N=312572 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(k log N)\nc) Θ(N + k^2)\nd) Θ(N log N)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.53.",
        "target_text": "Question: In separate chaining with load factor α=0.53, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(α)\nc) Θ(1/α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H917113515.",
        "target_text": "Question: For a balanced BST with n=917113515 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR461394.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=461394 edges. What algorithmic idea achieves linear time?\nChoices:\na) Tarjan’s low-link DFS\nb) Kruskal’s algorithm\nc) Dijkstra’s algorithm\nd) Topological sorting\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP16384.",
        "target_text": "Question: KMP matches a pattern of length m=16384 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Z-array exclusively\nc) LPS (failure) function\nd) Suffix array\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX6_8.",
        "target_text": "Question: Radix sort with d=6 digits and base b=8 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·n·log b)\nb) Θ(d·(n + b))\nc) Θ(b^d)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI14_336.",
        "target_text": "Question: Binary search over half-open range [14, 336)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Keep inclusive bounds on both ends\nc) Increase both lo and hi to skip duplicates\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_6_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^1, f3=n^1 (log n)^6, f4=n^5?\nChoices:\na) Θ((log n)^6)\nb) Θ(n^1)\nc) Θ(n^1 (log n)^6)\nd) Θ(n^5)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P697159.",
        "target_text": "Question: Answer 697159 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Build prefix-sum array; O(1) per query\nc) Recompute sums per query in Θ(n)\nd) Use a stack to store partial sums\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL72240.",
        "target_text": "Question: Check if a singly linked list of length n=72240 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Copy to array and two-pointer check\nc) Use a hash set of seen values\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE22832.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=22832. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Binary search tree\nc) Max-heap\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ709737.",
        "target_text": "Question: For 709737 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Deque\nc) Binary heap\nd) Stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA8_32673124.",
        "target_text": "Question: In a d-ary heap with d=8 and n=32673124 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(log_8 n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH8192.",
        "target_text": "Question: In open addressing with double hashing over table size m=8192, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Make both hash functions identical\nc) Choose m even and g(k) even\nd) Use g(k)=0 for some keys\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS171254.",
        "target_text": "Question: BST with parent pointers (id=171254): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Reverse postorder traversal entirely\nd) Use level-order and pick next node\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS369016_1202722.",
        "target_text": "Question: A directed graph with V=369016, E≈1202722. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When it is a DAG (no directed cycles)\nc) When all vertices have outdegree ≥ 1\nd) Only if edges are unweighted\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z399837.",
        "target_text": "Question: For string S (id=399837), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Next index of S[i]\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of distinct substrings up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS923418.",
        "target_text": "Question: Heapsort stability check id=923418: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort is stable\nc) Heapsort always beats merge sort\nd) Heapsort needs extra Θ(n) memory\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU6140993.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=6140993. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Linear scan with early exit\nc) Hashing with chaining\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_6_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^1, f3=n^1 (log n)^6, f4=n^7?\nChoices:\na) Θ(n^1)\nb) Θ(n^1 (log n)^6)\nc) Θ((log n)^6)\nd) Θ(n^7)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM454278.",
        "target_text": "Question: Find a majority element in an array of length n=454278 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Counting sort\nc) Binary search on value domain\nd) Divide-and-conquer merges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN408746_352925.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=408746, B=352925. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Advance pointers; when one ends, jump to the other head\nc) Binary search on addresses\nd) Hash addresses of first list\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP291.",
        "target_text": "Question: Verify whether a pop sequence of length n=291 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Simulate using one stack in Θ(n)\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW3518_786.",
        "target_text": "Question: Sliding window maximum for array length n=3518 and window w=786. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(nw)\nd) Θ(w log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC63614839.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=63614839?\nChoices:\na) Θ(1)\nb) Θ(log log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.01.",
        "target_text": "Question: In separate chaining with load factor α=1.01, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(1/α)\nd) Θ(α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H196709960.",
        "target_text": "Question: For a balanced BST with n=196709960 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS153914_595607.",
        "target_text": "Question: A directed graph with V=153914, E≈595607. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) Only if the graph is connected\nc) When it is a DAG (no directed cycles)\nd) When all vertices have outdegree ≥ 1\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB64144.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=64144. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Binary heap of substrings\nc) Suffix automaton or suffix array + LCP\nd) Queue of rolling hashes only\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS32510.",
        "target_text": "Question: Heapsort stability check id=32510: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort always beats merge sort\nc) Heapsort is not stable by default\nd) Heapsort is stable\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU9529668.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=9529668. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Heap-based selection\nc) Hashing with chaining\nd) Linear scan with early exit\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T2_1_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^2, f3=n^2 (log n)^1, f4=n^7?\nChoices:\na) Θ(n^7)\nb) Θ(n^2)\nc) Θ(n^2 (log n)^1)\nd) Θ((log n)^1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R625388.",
        "target_text": "Question: Rotate an array right by r=625388 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Three-reversal method\nc) Single-step rotate repeated r times\nd) Heapify then extract\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL80143.",
        "target_text": "Question: Check if a singly linked list of length n=80143 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Find middle, reverse second half, compare\nc) Use a hash set of seen values\nd) Sort and compare with original\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS2066.",
        "target_text": "Question: Compute stock span for 2066 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Priority queue\nc) Fenwick tree\nd) Hash table\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS8114.",
        "target_text": "Question: A queue via two stacks handles a burst of 8114 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK5.",
        "target_text": "Question: In a d-ary heap (d=5), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It increases height linearly\nb) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nc) It makes the operation constant time\nd) No effect whatsoever\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.6.",
        "target_text": "Question: In separate chaining with load factor α=0.6, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H579461974.",
        "target_text": "Question: For a balanced BST with n=579461974 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(log log n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC634122.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=634122 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(V log V)\nc) Θ(VE)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS43148.",
        "target_text": "Question: In KMP, what does LPS[43148] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Number of mismatches up to i\nd) Total distinct prefixes up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS153824.",
        "target_text": "Question: Heapsort stability check id=153824: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort is stable\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU8019567.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=8019567. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Hashing with chaining\nc) Binary search with left/right bias\nd) Heap-based selection\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M3_2_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/2) + n^2 for n being a power of 2.\nChoices:\na) Θ(n^1.585)\nb) Θ(n^2)\nc) Θ(n^1.585 log n)\nd) Θ(n^2 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP19092_344.",
        "target_text": "Question: Sorted array length n=19092. Decide if any pair sums to 344. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Divide and conquer in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Hash set in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK45_3947.",
        "target_text": "Question: Merge k=45 sorted linked lists totaling n=3947 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n + k^2)\nc) Θ(n log n)\nd) Θ(k n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE16127.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=16127. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Max-heap\nc) Queue\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA4669.",
        "target_text": "Question: Circular-array queue with capacity 4669: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Require prime capacity\nc) Head==Tail means full\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL132_913957.",
        "target_text": "Question: Find the k=132-th largest element among n=913957 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Binary search on value domain\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Adversarial patterns are neutralized by random choice. Variant UH1000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=1000 slots yields what benefit?\nChoices:\na) Zero collisions guaranteed\nb) Eliminates need for resizing\nc) Expected constant-time operations against adversaries\nd) Cryptographic security by default\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR632487.",
        "target_text": "Question: In a BST with distinct keys (id=632487), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Postorder\nc) Level-order\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D918652.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 918652]. Why?\nChoices:\na) Graph must be undirected\nb) Nonnegative weights ensure greedy optimality\nc) Self-loops must be absent\nd) Distinct weights are required\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK911382323_998244353.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=998244353 achieves expected linear time due to what?\nChoices:\na) Trie of all substrings\nb) Use of a min-heap\nc) Suffix tree guaranteeing O(1) per char\nd) Low collision probability of rolling hash\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX5_8.",
        "target_text": "Question: Radix sort with d=5 digits and base b=8 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·n·log b)\nc) Θ(b^d)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS9876182.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=9876182 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(log n) average\nc) O(1) worst-case\nd) Θ(n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A4.",
        "target_text": "Question: A dynamic array starts with capacity 4 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(√m)\nb) Θ(m)\nc) Θ(1)\nd) Θ(log m)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R457930.",
        "target_text": "Question: Rotate an array right by r=457930 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Three-reversal method\nc) Single-step rotate repeated r times\nd) Selection sort then shift\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR6.",
        "target_text": "Question: Reverse a singly linked list in groups of k=6 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n log k)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE42469.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=42469. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Max-heap\nc) Decreasing stack\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ569639.",
        "target_text": "Question: For 569639 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Stack\nc) Deque\nd) Binary heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL309_798078.",
        "target_text": "Question: Find the k=309-th largest element among n=798078 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Deterministic selection (median-of-medians)\nc) Heapsort then index\nd) Binary search on value domain\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF1635474_0.4.",
        "target_text": "Question: Chaining hash table with n=1635474 keys at load factor α=0.4. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS129927.",
        "target_text": "Question: BST with parent pointers (id=129927): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Reverse postorder traversal entirely\nc) Always climb to root then go right once\nd) Use level-order and pick next node\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP481688.",
        "target_text": "Question: Test bipartiteness (id=481688) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Sort vertices and deduplicate\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Compute an MST then inspect edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP61198.",
        "target_text": "Question: KMP matches a pattern of length m=61198 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Z-array exclusively\nc) Suffix array\nd) Rolling hash table\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS745792.",
        "target_text": "Question: Heapsort stability check id=745792: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is not stable by default\nc) Heapsort is stable\nd) Heapsort needs extra Θ(n) memory\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS4832926.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=4832926 typically runs in?\nChoices:\na) O(1) worst-case\nb) O(log log n) average\nc) Θ(n) average\nd) Θ(log n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T4_2_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^4, f3=n^4 (log n)^2, f4=n^8?\nChoices:\na) Θ((log n)^2)\nb) Θ(n^4)\nc) Θ(n^8)\nd) Θ(n^4 (log n)^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R906224.",
        "target_text": "Question: Rotate an array right by r=906224 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Selection sort then shift\nc) Three-reversal method\nd) Heapify then extract\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN565475_989718.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=565475, B=989718. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Hash addresses of first list\nc) Reverse one list then compare\nd) Advance pointers; when one ends, jump to the other head\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE56216.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=56216. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Binary search tree\nc) Decreasing stack\nd) Max-heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ364973.",
        "target_text": "Question: For 364973 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Deque\nc) Binary heap\nd) Stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA4_31743934.",
        "target_text": "Question: In a d-ary heap with d=4 and n=31743934 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(log_4 n)\nc) Θ(n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH131072.",
        "target_text": "Question: In open addressing with double hashing over table size m=131072, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) Choose m even and g(k) even\nc) g(k) coprime with m for all keys\nd) Use g(k)=0 for some keys\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS303341.",
        "target_text": "Question: BST with parent pointers (id=303341): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Reverse postorder traversal entirely\nd) Always climb to root then go right once\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP512921.",
        "target_text": "Question: Test bipartiteness (id=512921) of an undirected graph efficiently. Which method works?\nChoices:\na) Attempt 2-coloring via BFS; failure indicates odd cycle\nb) Sort vertices and deduplicate\nc) Compute an MST then inspect edges\nd) Check all degrees even\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB76949.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=76949. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) BST over all substrings\nc) Queue of rolling hashes only\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB41615109.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=41615109 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n)\nc) Ω(n log n)\nd) Ω(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS7904603.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=7904603 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(1) expected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T1_4_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^1, f3=n^1 (log n)^4, f4=n^7?\nChoices:\na) Θ(n^1 (log n)^4)\nb) Θ(n^1)\nc) Θ((log n)^4)\nd) Θ(n^7)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P773873.",
        "target_text": "Question: Answer 773873 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Sort once and binary search per query\nc) Recompute sums per query in Θ(n)\nd) Use a stack to store partial sums\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN887819.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 887819, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Reverse list then delete head\nc) Copy next node’s data here and bypass next\nd) Impossible under any model\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP862.",
        "target_text": "Question: Verify whether a pop sequence of length n=862 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ284128.",
        "target_text": "Question: Schedule 284128 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Stack\nc) Circular queue\nd) Unordered array\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH8286455.",
        "target_text": "Question: Build a binary heap from n=8286455 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.88.",
        "target_text": "Question: In separate chaining with load factor α=0.88, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA964005.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=964005 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Euler tour + RMQ yields O(1) per query\nc) DFS from root each time\nd) Naive parent climbing O(n) per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D236893.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 236893]. Why?\nChoices:\na) Graph must be undirected\nb) Self-loops must be absent\nc) Nonnegative weights ensure greedy optimality\nd) Distinct weights are required\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN28670.",
        "target_text": "Question: Check anagrams for strings of length n=28670 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Count character frequencies in Θ(n)\nc) Sort both in Θ(n log n)\nd) Use a stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS645.",
        "target_text": "Question: Array is nearly sorted with at most 645 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Shell sort with fixed gaps\nc) Insertion sort\nd) Radix sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS1613278.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=1613278 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(n) average\nc) Θ(log n) average\nd) O(1) worst-case\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Geometric resizing spreads copying cost over many operations. Variant A16.",
        "target_text": "Question: A dynamic array starts with capacity 16 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(log m)\nb) Θ(√m)\nc) Θ(1)\nd) Θ(m)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM64761.",
        "target_text": "Question: Find a majority element in an array of length n=64761 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Binary search on value domain\nc) Counting sort\nd) Divide-and-conquer merges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR9.",
        "target_text": "Question: Reverse a singly linked list in groups of k=9 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(k log n)\nc) Θ(n log k)\nd) Θ(nk)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE31170.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=31170. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Max-heap\nc) Decreasing stack\nd) Binary search tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA1952.",
        "target_text": "Question: Circular-array queue with capacity 1952: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Require prime capacity\nc) Track count or keep one slot empty\nd) Head==Tail means full\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH8382209.",
        "target_text": "Question: Build a binary heap from n=8382209 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n log n)\nc) Θ(n^2)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.31.",
        "target_text": "Question: In separate chaining with load factor α=1.31, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1/α)\nc) Θ(α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H151071420.",
        "target_text": "Question: For a balanced BST with n=151071420 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(√n)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP751995.",
        "target_text": "Question: Test bipartiteness (id=751995) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Check all degrees even\nc) Compute an MST then inspect edges\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z226285.",
        "target_text": "Question: For string S (id=226285), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Next index of S[i]\nc) Number of mismatches at i\nd) Number of distinct substrings up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS192.",
        "target_text": "Question: Array is nearly sorted with at most 192 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Shell sort with fixed gaps\nc) Radix sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Geometric level distribution mirrors balanced trees. Variant SL0.75.",
        "target_text": "Question: Skip list with level promotion probability p=0.75: expected complexity of search/insert/delete?\nChoices:\na) Θ(log n) for all three\nb) Θ(√n) for all three\nc) Θ(n) for all three\nd) Θ(1) for all three\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_1_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^4, f3=n^4 (log n)^1, f4=n^10?\nChoices:\na) Θ(n^4 (log n)^1)\nb) Θ((log n)^1)\nc) Θ(n^10)\nd) Θ(n^4)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM73458.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=73458-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Binary search on index vs value gap\nc) Hash all present values then scan\nd) Use a heap of differences\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN551848.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 551848, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Traverse from head to find predecessor\nc) Copy next node’s data here and bypass next\nd) Impossible under any model\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS692.",
        "target_text": "Question: Compute stock span for 692 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Priority queue\nc) Hash table\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B525575.",
        "target_text": "Question: Run BFS on an unweighted graph with 525575 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) Lexicographic vertex order\nc) Minimum memory footprint\nd) All simple paths before all edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL315_989390.",
        "target_text": "Question: Find the k=315-th largest element among n=989390 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Binary search on value domain\nc) Deterministic selection (median-of-medians)\nd) Heapsort then index\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF4624184_0.4.",
        "target_text": "Question: Chaining hash table with n=4624184 keys at load factor α=0.4. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(α log α)\nd) Θ(nα)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR685144.",
        "target_text": "Question: In a BST with distinct keys (id=685144), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Postorder\nc) Inorder\nd) Preorder\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP281165.",
        "target_text": "Question: Test bipartiteness (id=281165) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Compute an MST then inspect edges\nd) Sort vertices and deduplicate\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN372737.",
        "target_text": "Question: Check anagrams for strings of length n=372737 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Sort both in Θ(n log n)\nc) Use a stack\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB57304046.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=57304046 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(log n)\nc) Ω(n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX678940990.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈678940990. Why?\nChoices:\na) Requires the array to be cyclic\nb) Uses hashing to index unknown segments\nc) Sorts the array first\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M4_6_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/6) + n^4 for n being a power of 6.\nChoices:\na) Θ(n^4)\nb) Θ(n^0.7737 log n)\nc) Θ(n^4 log n)\nd) Θ(n^0.7737)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R281196.",
        "target_text": "Question: Rotate an array right by r=281196 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Three-reversal method\nc) Heapify then extract\nd) Single-step rotate repeated r times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN842420_155039.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=842420, B=155039. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Advance pointers; when one ends, jump to the other head\nc) Binary search on addresses\nd) Hash addresses of first list\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS4.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 4 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Use BFS on substring graph\nc) Greedy left-to-right without memory\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B877976.",
        "target_text": "Question: Run BFS on an unweighted graph with 877976 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) All simple paths before all edges\nc) Nondecreasing distance from source\nd) Lexicographic vertex order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL652_773207.",
        "target_text": "Question: Find the k=652-th largest element among n=773207 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Heapsort then index\nc) Binary search on value domain\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF8767747_0.36.",
        "target_text": "Question: Chaining hash table with n=8767747 keys at load factor α=0.36. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(nα)\nc) Θ(α log α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA629790.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=629790 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) DFS from root each time\nc) Euler tour + RMQ yields O(1) per query\nd) Naive parent climbing O(n) per query\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF52153.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=52153 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Only acyclic graphs\nc) Equal runtime on all graphs\nd) Negative edge weights and negative cycles\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB21412.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=21412. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) BST over all substrings\nc) Binary heap of substrings\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS44974.",
        "target_text": "Question: Keys are integers in range [0..44974]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Shell sort\nc) Heap sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS8226236.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=8226236 typically runs in?\nChoices:\na) O(1) worst-case\nb) O(log log n) average\nc) Θ(log n) average\nd) Θ(n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M2_4_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/4) + n^1 for n being a power of 4.\nChoices:\na) Θ(n^1)\nb) Θ(n^0.5 log n)\nc) Θ(n^0.5)\nd) Θ(n^1 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM63125.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=63125-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Hash all present values then scan\nc) Scan linearly counting gaps\nd) Use a heap of differences\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN803819_718385.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=803819, B=718385. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Advance pointers; when one ends, jump to the other head\nc) Reverse one list then compare\nd) Binary search on addresses\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1507.",
        "target_text": "Question: Verify whether a pop sequence of length n=1507 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B154714.",
        "target_text": "Question: Run BFS on an unweighted graph with 154714 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) All simple paths before all edges\nc) Lexicographic vertex order\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH7918081.",
        "target_text": "Question: Build a binary heap from n=7918081 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH1024.",
        "target_text": "Question: In open addressing with double hashing over table size m=1024, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) Use g(k)=0 for some keys\nc) g(k) coprime with m for all keys\nd) Choose m even and g(k) even\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS44526.",
        "target_text": "Question: BST with parent pointers (id=44526): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) Use level-order and pick next node\nc) Reverse postorder traversal entirely\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST33429.",
        "target_text": "Question: MST question id=33429: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) Prim requires the entire edge set to be sorted first\nc) MST is always unique in connected graphs\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS70233.",
        "target_text": "Question: In KMP, what does LPS[70233] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Index of next occurrence\nc) Total distinct prefixes up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS436463.",
        "target_text": "Question: Keys are integers in range [0..436463]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Quick sort\nc) Shell sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS6506364.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=6506364 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(1) expected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T2_3_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^2, f3=n^2 (log n)^3, f4=n^7?\nChoices:\na) Θ(n^2 (log n)^3)\nb) Θ(n^7)\nc) Θ((log n)^3)\nd) Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S9150_106.",
        "target_text": "Question: Array length n=9150, find max-sum subarray of fixed length k=106. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(k log n)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(nk)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR4.",
        "target_text": "Question: Reverse a singly linked list in groups of k=4 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(nk)\nc) Θ(n)\nd) Θ(k log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE92533.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=92533. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Decreasing stack\nc) Queue\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS5328.",
        "target_text": "Question: A queue via two stacks handles a burst of 5328 operations. Amortized costs?\nChoices:\na) ENQUEUE and DEQUEUE both amortized Θ(1)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) Both Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK6.",
        "target_text": "Question: In a d-ary heap (d=6), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) No effect whatsoever\nb) It increases height linearly\nc) It makes the operation constant time\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH4096.",
        "target_text": "Question: In open addressing with double hashing over table size m=4096, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) Use g(k)=0 for some keys\nc) Make both hash functions identical\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR869165.",
        "target_text": "Question: In a BST with distinct keys (id=869165), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Inorder\nc) Level-order\nd) Preorder\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D13984.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 13984]. Why?\nChoices:\na) Self-loops must be absent\nb) Nonnegative weights ensure greedy optimality\nc) Graph must be undirected\nd) Distinct weights are required\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Character-by-character descent. Variant TRIE128.",
        "target_text": "Question: Search a trie over alphabet size σ=128 for a key of length m. Time complexity?\nChoices:\na) Θ(1) average for all m\nb) Θ(log n)\nc) Θ(m)\nd) Θ(m log σ)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS983758.",
        "target_text": "Question: Keys are integers in range [0..983758]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Counting sort\nc) Quick sort\nd) Shell sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU5532593.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=5532593. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Linear scan with early exit\nc) Hashing with chaining\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M3_2_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/2) + n^4 for n being a power of 2.\nChoices:\na) Θ(n^4 log n)\nb) Θ(n^1.585)\nc) Θ(n^1.585 log n)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP7715_1442.",
        "target_text": "Question: Sorted array length n=7715. Decide if any pair sums to 1442. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Divide and conquer in Θ(n log n)\nc) Brute force in Θ(n^2)\nd) Hash set in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN876056_932518.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=876056, B=932518. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Binary search on addresses\nc) Hash addresses of first list\nd) Advance pointers; when one ends, jump to the other head\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS4556.",
        "target_text": "Question: Compute stock span for 4556 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Hash table\nc) Fenwick tree\nd) Priority queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ726762.",
        "target_text": "Question: For 726762 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Queue\nc) Deque\nd) Binary heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL78_735521.",
        "target_text": "Question: Find the k=78-th largest element among n=735521 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Build max-heap and extract k times\nc) Deterministic selection (median-of-medians)\nd) Heapsort then index\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF4284884_0.64.",
        "target_text": "Question: Chaining hash table with n=4284884 keys at load factor α=0.64. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA47992.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=47992 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Naive parent climbing O(n) per query\nc) Euler tour + RMQ yields O(1) per query\nd) Sort node labels then binary search\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC53004.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=53004 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V log V)\nb) Θ(E log V)\nc) Θ(V+E)\nd) Θ(VE)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z760411.",
        "target_text": "Question: For string S (id=760411), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Next index of S[i]\nc) Number of mismatches at i\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS727602.",
        "target_text": "Question: Heapsort stability check id=727602: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is not stable by default\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is stable\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS8283519.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=8283519 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(n) average\nc) Θ(log n) average\nd) O(1) worst-case\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A1.",
        "target_text": "Question: A dynamic array starts with capacity 1 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(log m)\nb) Θ(√m)\nc) Θ(1)\nd) Θ(m)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P506383.",
        "target_text": "Question: Answer 506383 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Recompute sums per query in Θ(n)\nc) Use a stack to store partial sums\nd) Sort once and binary search per query\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN382799_71201.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=382799, B=71201. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Advance pointers; when one ends, jump to the other head\nc) Hash addresses of first list\nd) Binary search on addresses\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS7.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 7 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Greedy left-to-right without memory\nc) Sort segments then concatenate\nd) Use BFS on substring graph\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ309125.",
        "target_text": "Question: Schedule 309125 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Unordered array\nc) Circular queue\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM1014_154566.",
        "target_text": "Question: Merge k=1014 sorted streams totaling N=154566 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(N + k^2)\nc) Θ(N log k)\nd) Θ(k log N)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF380780_0.75.",
        "target_text": "Question: Chaining hash table with n=380780 keys at load factor α=0.75. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(nα)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS780292.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=780292-th smallest?\nChoices:\na) Θ(1)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP364394.",
        "target_text": "Question: Test bipartiteness (id=364394) of an undirected graph efficiently. Which method works?\nChoices:\na) Attempt 2-coloring via BFS; failure indicates odd cycle\nb) Compute an MST then inspect edges\nc) Sort vertices and deduplicate\nd) Check all degrees even\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN885364.",
        "target_text": "Question: Check anagrams for strings of length n=885364 over fixed alphabet. Optimal approach?\nChoices:\na) Use a stack\nb) Count character frequencies in Θ(n)\nc) Sort both in Θ(n log n)\nd) DFS on character graph\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX2_32.",
        "target_text": "Question: Radix sort with d=2 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(d·n·log b)\nc) Θ(n log n)\nd) Θ(b^d)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX621902140.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈621902140. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Sorts the array first\nc) Requires the array to be cyclic\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T4_2_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^4, f3=n^4 (log n)^2, f4=n^6?\nChoices:\na) Θ(n^6)\nb) Θ(n^4)\nc) Θ((log n)^2)\nd) Θ(n^4 (log n)^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P427112.",
        "target_text": "Question: Answer 427112 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Recompute sums per query in Θ(n)\nc) Build prefix-sum array; O(1) per query\nd) Use a stack to store partial sums\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL40711.",
        "target_text": "Question: Check if a singly linked list of length n=40711 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Use a hash set of seen values\nc) Find middle, reverse second half, compare\nd) Sort and compare with original\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS2.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 2 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Greedy left-to-right without memory\nc) Use two stacks for counts and fragments\nd) Use BFS on substring graph\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ28309.",
        "target_text": "Question: For 28309 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Deque\nc) Binary heap\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK5.",
        "target_text": "Question: In a d-ary heap (d=5), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) No effect whatsoever\nb) It increases height linearly\nc) It makes the operation constant time\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.45.",
        "target_text": "Question: In separate chaining with load factor α=0.45, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA285938.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=285938 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) DFS from root each time\nc) Sort node labels then binary search\nd) Naive parent climbing O(n) per query\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D721407.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 721407]. Why?\nChoices:\na) Self-loops must be absent\nb) Graph must be undirected\nc) Nonnegative weights ensure greedy optimality\nd) Distinct weights are required\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS5503.",
        "target_text": "Question: In KMP, what does LPS[5503] represent for a given pattern?\nChoices:\na) Length of longest proper prefix that is also a suffix for prefix ending at i\nb) Index of next occurrence\nc) Number of mismatches up to i\nd) Total distinct prefixes up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS53.",
        "target_text": "Question: Array is nearly sorted with at most 53 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Insertion sort\nc) Shell sort with fixed gaps\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX791849441.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈791849441. Why?\nChoices:\na) Requires the array to be cyclic\nb) Uses hashing to index unknown segments\nc) Doubles the bound to bracket, then binary search\nd) Sorts the array first\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M5_3_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/3) + n^2 for n being a power of 3.\nChoices:\na) Θ(n^1.465)\nb) Θ(n^2 log n)\nc) Θ(n^1.465 log n)\nd) Θ(n^2)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM53316.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=53316-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Binary search on index vs value gap\nc) Scan linearly counting gaps\nd) Use a heap of differences\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL62735.",
        "target_text": "Question: Check if a singly linked list of length n=62735 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Copy to array and two-pointer check\nc) Use a hash set of seen values\nd) Sort and compare with original\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS2.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 2 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Use BFS on substring graph\nc) Greedy left-to-right without memory\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ29506.",
        "target_text": "Question: Schedule 29506 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Stack\nc) Unordered array\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL510_65736.",
        "target_text": "Question: Find the k=510-th largest element among n=65736 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Heapsort then index\nc) Binary search on value domain\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.49.",
        "target_text": "Question: In separate chaining with load factor α=1.49, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR453238.",
        "target_text": "Question: In a BST with distinct keys (id=453238), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Postorder\nc) Level-order\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS130120_1030834.",
        "target_text": "Question: A directed graph with V=130120, E≈1030834. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) Only if edges are unweighted\nc) Only if the graph is connected\nd) When all vertices have outdegree ≥ 1\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE52.",
        "target_text": "Question: Search a trie over alphabet size σ=52 for a key of length m. Time complexity?\nChoices:\na) Θ(1) average for all m\nb) Θ(m)\nc) Θ(log n)\nd) Θ(m log σ)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST702809.",
        "target_text": "Question: Stability (id=702809): which pairing is correct?\nChoices:\na) Heap sort (stable), Merge sort (unstable)\nb) Merge sort (stable), Heap sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Counting sort (unstable)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Geometric level distribution mirrors balanced trees. Variant SL0.75.",
        "target_text": "Question: Skip list with level promotion probability p=0.75: expected complexity of search/insert/delete?\nChoices:\na) Θ(n) for all three\nb) Θ(1) for all three\nc) Θ(√n) for all three\nd) Θ(log n) for all three\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_2_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^4, f3=n^4 (log n)^2, f4=n^11?\nChoices:\na) Θ(n^4)\nb) Θ((log n)^2)\nc) Θ(n^4 (log n)^2)\nd) Θ(n^11)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM546706.",
        "target_text": "Question: Find a majority element in an array of length n=546706 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Boyer–Moore voting with verification\nc) Counting sort\nd) Binary search on value domain\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL36100.",
        "target_text": "Question: Check if a singly linked list of length n=36100 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Use a hash set of seen values\nc) Sort and compare with original\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS1129.",
        "target_text": "Question: Compute stock span for 1129 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Hash table\nc) Fenwick tree\nd) Priority queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS5022.",
        "target_text": "Question: A queue via two stacks handles a burst of 5022 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) Both Θ(log n)\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM210_78966.",
        "target_text": "Question: Merge k=210 sorted streams totaling N=78966 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(k log N)\nc) Θ(N log N)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.72.",
        "target_text": "Question: In separate chaining with load factor α=0.72, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1/α)\nc) Θ(α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H471009851.",
        "target_text": "Question: For a balanced BST with n=471009851 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D371980.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 371980]. Why?\nChoices:\na) Self-loops must be absent\nb) Distinct weights are required\nc) Graph must be undirected\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000009.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Low collision probability of rolling hash\nb) Trie of all substrings\nc) Use of a min-heap\nd) Suffix tree guaranteeing O(1) per char\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS582132.",
        "target_text": "Question: Keys are integers in range [0..582132]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Quick sort\nc) Counting sort\nd) Heap sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS8820978.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=8820978 typically runs in?\nChoices:\na) O(1) worst-case\nb) O(log log n) average\nc) Θ(n) average\nd) Θ(log n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M4_6_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/6) + n^4 for n being a power of 6.\nChoices:\na) Θ(n^4 log n)\nb) Θ(n^0.7737)\nc) Θ(n^0.7737 log n)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P279219.",
        "target_text": "Question: Answer 279219 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Use a stack to store partial sums\nc) Sort once and binary search per query\nd) Recompute sums per query in Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL88419.",
        "target_text": "Question: Check if a singly linked list of length n=88419 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Find middle, reverse second half, compare\nc) Use a hash set of seen values\nd) Copy to array and two-pointer check\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Operator handling via stacks preserves associativity rules. Variant IP3_4.",
        "target_text": "Question: Evaluate an infix expression with 3–4 precedence levels and parentheses. Linear-time method?\nChoices:\na) Left-to-right without stacks\nb) Convert to postfix and evaluate with a stack\nc) Build a tree without any stack\nd) Sort tokens by precedence then scan\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS164.",
        "target_text": "Question: A queue via two stacks handles a burst of 164 operations. Amortized costs?\nChoices:\na) ENQUEUE and DEQUEUE both amortized Θ(1)\nb) Both Θ(log n)\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM189_30023.",
        "target_text": "Question: Merge k=189 sorted streams totaling N=30023 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log k)\nc) Θ(N log N)\nd) Θ(k log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF6804733_0.24.",
        "target_text": "Question: Chaining hash table with n=6804733 keys at load factor α=0.24. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(log n)\nc) Θ(α log α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR307308.",
        "target_text": "Question: In a BST with distinct keys (id=307308), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Postorder\nc) Level-order\nd) Preorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Repeated edge relaxation tolerates negatives. Variant BF71673.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=71673 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Only acyclic graphs\nc) Equal runtime on all graphs\nd) Negative edge weights and negative cycles\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE128.",
        "target_text": "Question: Search a trie over alphabet size σ=128 for a key of length m. Time complexity?\nChoices:\na) Θ(m)\nb) Θ(m log σ)\nc) Θ(log n)\nd) Θ(1) average for all m\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB61665368.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=61665368 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n log n)\nc) Ω(n)\nd) Ω(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX376185150.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈376185150. Why?\nChoices:\na) Requires the array to be cyclic\nb) Doubles the bound to bracket, then binary search\nc) Uses hashing to index unknown segments\nd) Sorts the array first\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M8_2_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/2) + n^4 for n being a power of 2.\nChoices:\na) Θ(n^3.0 log n)\nb) Θ(n^3.0)\nc) Θ(n^4)\nd) Θ(n^4 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S12320_447.",
        "target_text": "Question: Array length n=12320, find max-sum subarray of fixed length k=447. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(k log n)\nc) Θ(n log n)\nd) Θ(nk)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK43_7423.",
        "target_text": "Question: Merge k=43 sorted linked lists totaling n=7423 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(k n)\nc) Θ(n log n)\nd) Θ(n + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Operator handling via stacks preserves associativity rules. Variant IP2_3.",
        "target_text": "Question: Evaluate an infix expression with 2–3 precedence levels and parentheses. Linear-time method?\nChoices:\na) Convert to postfix and evaluate with a stack\nb) Sort tokens by precedence then scan\nc) Left-to-right without stacks\nd) Build a tree without any stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B219741.",
        "target_text": "Question: Run BFS on an unweighted graph with 219741 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) All simple paths before all edges\nc) Nondecreasing distance from source\nd) Lexicographic vertex order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC94330453.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=94330453?\nChoices:\na) Θ(1)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH2048.",
        "target_text": "Question: In open addressing with double hashing over table size m=2048, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Choose m even and g(k) even\nc) Make both hash functions identical\nd) Use g(k)=0 for some keys\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA734550.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=734550 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) DFS from root each time\nc) Naive parent climbing O(n) per query\nd) Sort node labels then binary search\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP26747.",
        "target_text": "Question: Test bipartiteness (id=26747) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Compute an MST then inspect edges\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Sort vertices and deduplicate\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z215548.",
        "target_text": "Question: For string S (id=215548), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Length of the longest prefix starting at i matching S[0..]\nc) Number of mismatches at i\nd) Next index of S[i]\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX4_16.",
        "target_text": "Question: Radix sort with d=4 digits and base b=16 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(n log n)\nc) Θ(d·n·log b)\nd) Θ(b^d)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS2670282.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=2670282 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M8_5_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/5) + n^0 for n being a power of 5.\nChoices:\na) Θ(n^1.292 log n)\nb) Θ(n^0)\nc) Θ(n^1.292)\nd) Θ(n^0 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM324476.",
        "target_text": "Question: Find a majority element in an array of length n=324476 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Boyer–Moore voting with verification\nc) Counting sort\nd) Divide-and-conquer merges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN100795.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 100795, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Reverse list then delete head\nc) Traverse from head to find predecessor\nd) Impossible under any model\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS3023.",
        "target_text": "Question: Compute stock span for 3023 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Priority queue\nc) Hash table\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B148488.",
        "target_text": "Question: Run BFS on an unweighted graph with 148488 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Lexicographic vertex order\nc) Minimum memory footprint\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL972_182108.",
        "target_text": "Question: Find the k=972-th largest element among n=182108 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Build max-heap and extract k times\nc) Binary search on value domain\nd) Heapsort then index\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH4096.",
        "target_text": "Question: In open addressing with double hashing over table size m=4096, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) Choose m even and g(k) even\nc) g(k) coprime with m for all keys\nd) Make both hash functions identical\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H719333581.",
        "target_text": "Question: For a balanced BST with n=719333581 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS490309_4391685.",
        "target_text": "Question: A directed graph with V=490309, E≈4391685. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if edges are unweighted\nc) Only if the graph is connected\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP15459.",
        "target_text": "Question: KMP matches a pattern of length m=15459 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) LPS (failure) function\nc) Rolling hash table\nd) Suffix array\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS53710.",
        "target_text": "Question: Heapsort stability check id=53710: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is not stable by default\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is stable\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI71_3989.",
        "target_text": "Question: Binary search over half-open range [71, 3989)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Keep inclusive bounds on both ends\nd) Increase both lo and hi to skip duplicates\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T5_3_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^5, f3=n^5 (log n)^3, f4=n^10?\nChoices:\na) Θ(n^10)\nb) Θ((log n)^3)\nc) Θ(n^5)\nd) Θ(n^5 (log n)^3)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P2611.",
        "target_text": "Question: Answer 2611 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Sort once and binary search per query\nc) Recompute sums per query in Θ(n)\nd) Use a stack to store partial sums\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK75_7048.",
        "target_text": "Question: Merge k=75 sorted linked lists totaling n=7048 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n log n)\nc) Θ(n log k)\nd) Θ(n + k^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE92389.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=92389. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Max-heap\nc) Binary search tree\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW761_16.",
        "target_text": "Question: Sliding window maximum for array length n=761 and window w=16. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(nw)\nc) Θ(w log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH6759063.",
        "target_text": "Question: Build a binary heap from n=6759063 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF8404232_0.25.",
        "target_text": "Question: Chaining hash table with n=8404232 keys at load factor α=0.25. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(α log α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA52670.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=52670 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) Naive parent climbing O(n) per query\nc) Sort node labels then binary search\nd) DFS from root each time\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS465137_921995.",
        "target_text": "Question: A directed graph with V=465137, E≈921995. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When it is a DAG (no directed cycles)\nc) Only if edges are unweighted\nd) When all vertices have outdegree ≥ 1\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z808844.",
        "target_text": "Question: For string S (id=808844), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Next index of S[i]\nc) Number of distinct substrings up to i\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB16154454.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=16154454 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(log n)\nc) Ω(n log n)\nd) Ω(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX639472516.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈639472516. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Doubles the bound to bracket, then binary search\nc) Sorts the array first\nd) Requires the array to be cyclic\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M5_6_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/6) + n^4 for n being a power of 6.\nChoices:\na) Θ(n^0.8982)\nb) Θ(n^4 log n)\nc) Θ(n^4)\nd) Θ(n^0.8982 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP498_3089.",
        "target_text": "Question: Sorted array length n=498. Decide if any pair sums to 3089. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Divide and conquer in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Hash set in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK46_5266.",
        "target_text": "Question: Merge k=46 sorted linked lists totaling n=5266 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(k n)\nc) Θ(n log n)\nd) Θ(n + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP764.",
        "target_text": "Question: Verify whether a pop sequence of length n=764 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Backtrack with recursion in Θ(2^n)\nc) Use a queue to mirror the stack\nd) Sort both sequences then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW4984_280.",
        "target_text": "Question: Sliding window maximum for array length n=4984 and window w=280. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(nw)\nd) Θ(w log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM204_81102.",
        "target_text": "Question: Merge k=204 sorted streams totaling N=81102 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log k)\nc) Θ(N log N)\nd) Θ(k log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF3771391_0.55.",
        "target_text": "Question: Chaining hash table with n=3771391 keys at load factor α=0.55. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(α log α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR634705.",
        "target_text": "Question: In a BST with distinct keys (id=634705), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Preorder\nc) Postorder\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC18721.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=18721 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(E log V)\nc) Θ(V log V)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK257_998244353.",
        "target_text": "Question: Rabin–Karp with base=257, mod=998244353 achieves expected linear time due to what?\nChoices:\na) Use of a min-heap\nb) Suffix tree guaranteeing O(1) per char\nc) Low collision probability of rolling hash\nd) Trie of all substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS243.",
        "target_text": "Question: Array is nearly sorted with at most 243 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Insertion sort\nc) Heap sort\nd) Radix sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS7599586.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=7599586 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(1) expected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T5_4_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^5, f3=n^5 (log n)^4, f4=n^12?\nChoices:\na) Θ(n^5 (log n)^4)\nb) Θ(n^12)\nc) Θ((log n)^4)\nd) Θ(n^5)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP2849_4994.",
        "target_text": "Question: Sorted array length n=2849. Decide if any pair sums to 4994. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Brute force in Θ(n^2)\nd) Divide and conquer in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL710.",
        "target_text": "Question: Check if a singly linked list of length n=710 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Use a hash set of seen values\nc) Find middle, reverse second half, compare\nd) Sort and compare with original\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP397.",
        "target_text": "Question: Verify whether a pop sequence of length n=397 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW10197_475.",
        "target_text": "Question: Sliding window maximum for array length n=10197 and window w=475. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(nw)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH9240476.",
        "target_text": "Question: Build a binary heap from n=9240476 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH16384.",
        "target_text": "Question: In open addressing with double hashing over table size m=16384, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Make both hash functions identical\nc) Use g(k)=0 for some keys\nd) Choose m even and g(k) even\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H792883671.",
        "target_text": "Question: For a balanced BST with n=792883671 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC54606.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=54606 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(V log V)\nc) Θ(V+E)\nd) Θ(E log V)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP42716.",
        "target_text": "Question: KMP matches a pattern of length m=42716 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Rolling hash table\nc) Z-array exclusively\nd) Suffix array\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS986.",
        "target_text": "Question: Array is nearly sorted with at most 986 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Insertion sort\nc) Radix sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU9170625.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=9170625. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Binary search with left/right bias\nc) Heap-based selection\nd) Hashing with chaining\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A2.",
        "target_text": "Question: A dynamic array starts with capacity 2 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(√m)\nb) Θ(1)\nc) Θ(log m)\nd) Θ(m)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R786580.",
        "target_text": "Question: Rotate an array right by r=786580 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Selection sort then shift\nc) Three-reversal method\nd) Single-step rotate repeated r times\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C4.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 4× and 1×. Complexity?\nChoices:\na) Θ(log n) time, Θ(1) space\nb) Θ(1) time, Θ(1) space\nc) Θ(n) time, Θ(n) space\nd) Θ(n) time, Θ(1) space\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE34629.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=34629. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Queue\nc) Max-heap\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ488970.",
        "target_text": "Question: Schedule 488970 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Unordered array\nc) Binary heap\nd) Circular queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL909_212458.",
        "target_text": "Question: Find the k=909-th largest element among n=212458 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Heapsort then index\nc) Build max-heap and extract k times\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH1024.",
        "target_text": "Question: In open addressing with double hashing over table size m=1024, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) Make both hash functions identical\nc) Use g(k)=0 for some keys\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS437264.",
        "target_text": "Question: BST with parent pointers (id=437264): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Use level-order and pick next node\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Always climb to root then go right once\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST272764.",
        "target_text": "Question: MST question id=272764: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) MST minimizes number of edges\nc) Kruskal adds the smallest edge that doesn't create a cycle\nd) MST is always unique in connected graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z518107.",
        "target_text": "Question: For string S (id=518107), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Next index of S[i]\nc) Number of distinct substrings up to i\nd) Number of mismatches at i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS729598.",
        "target_text": "Question: Keys are integers in range [0..729598]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Counting sort\nc) Quick sort\nd) Shell sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS4069360.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=4069360 typically runs in?\nChoices:\na) Θ(n) average\nb) O(log log n) average\nc) Θ(log n) average\nd) O(1) worst-case\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A4.",
        "target_text": "Question: A dynamic array starts with capacity 4 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(log m)\nc) Θ(1)\nd) Θ(√m)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R815088.",
        "target_text": "Question: Rotate an array right by r=815088 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Selection sort then shift\nc) Heapify then extract\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK95_4640.",
        "target_text": "Question: Merge k=95 sorted linked lists totaling n=4640 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n log k)\nc) Θ(n log n)\nd) Θ(n + k^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1390.",
        "target_text": "Question: Verify whether a pop sequence of length n=1390 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Use a queue to mirror the stack\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW6823_163.",
        "target_text": "Question: Sliding window maximum for array length n=6823 and window w=163. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(nw)\nd) Θ(w log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA15_50887919.",
        "target_text": "Question: In a d-ary heap with d=15 and n=50887919 nodes, what is the height?\nChoices:\na) Θ(log_15 n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.9.",
        "target_text": "Question: In separate chaining with load factor α=0.9, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS229901.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=229901-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(k)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC904966.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=904966 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(V log V)\nc) Θ(E log V)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB24693.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=24693. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Binary heap of substrings\nc) Queue of rolling hashes only\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS127.",
        "target_text": "Question: Array is nearly sorted with at most 127 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Heap sort\nc) Shell sort with fixed gaps\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Geometric level distribution mirrors balanced trees. Variant SL0.75.",
        "target_text": "Question: Skip list with level promotion probability p=0.75: expected complexity of search/insert/delete?\nChoices:\na) Θ(√n) for all three\nb) Θ(log n) for all three\nc) Θ(n) for all three\nd) Θ(1) for all three\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M6_4_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/4) + n^0 for n being a power of 4.\nChoices:\na) Θ(n^0)\nb) Θ(n^1.2925)\nc) Θ(n^0 log n)\nd) Θ(n^1.2925 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP11656_2392.",
        "target_text": "Question: Sorted array length n=11656. Decide if any pair sums to 2392. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Hash set in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Divide and conquer in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN116988.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 116988, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Copy next node’s data here and bypass next\nc) Impossible under any model\nd) Reverse list then delete head\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS7.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 7 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Greedy left-to-right without memory\nc) Use two stacks for counts and fragments\nd) Sort segments then concatenate\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA2500.",
        "target_text": "Question: Circular-array queue with capacity 2500: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Head==Tail means full\nc) Track count or keep one slot empty\nd) Require power-of-two capacity\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM999_236785.",
        "target_text": "Question: Merge k=999 sorted streams totaling N=236785 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(N log k)\nc) Θ(N + k^2)\nd) Θ(k log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.9.",
        "target_text": "Question: In separate chaining with load factor α=0.9, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1/α)\nc) Θ(α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS292522.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=292522-th smallest?\nChoices:\na) Θ(1)\nb) Θ(k)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC919079.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=919079 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(V+E)\nc) Θ(E log V)\nd) Θ(V log V)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB36990.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=36990. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) Queue of rolling hashes only\nc) BST over all substrings\nd) Binary heap of substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB89863567.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=89863567 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n log n)\nc) Ω(n)\nd) Ω(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS6106778.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=6106778 typically runs in?\nChoices:\na) Θ(n) average\nb) O(1) worst-case\nc) O(log log n) average\nd) Θ(log n) average\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M9_6_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/6) + n^4 for n being a power of 6.\nChoices:\na) Θ(n^4)\nb) Θ(n^1.2263)\nc) Θ(n^1.2263 log n)\nd) Θ(n^4 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM215493.",
        "target_text": "Question: Find a majority element in an array of length n=215493 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Binary search on value domain\nc) Boyer–Moore voting with verification\nd) Counting sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN897596_822202.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=897596, B=822202. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Binary search on addresses\nc) Hash addresses of first list\nd) Reverse one list then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1301.",
        "target_text": "Question: Verify whether a pop sequence of length n=1301 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ242167.",
        "target_text": "Question: For 242167 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Deque\nc) Stack\nd) Binary heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA14_49646538.",
        "target_text": "Question: In a d-ary heap with d=14 and n=49646538 nodes, what is the height?\nChoices:\na) Θ(log_14 n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.99.",
        "target_text": "Question: In separate chaining with load factor α=0.99, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS332899.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=332899-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(1)\nd) Θ(k)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D863157.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 863157]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Self-loops must be absent\nc) Distinct weights are required\nd) Graph must be undirected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Randomized hashing makes spurious matches rare. Variant RK911382323_998244353.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=998244353 achieves expected linear time due to what?\nChoices:\na) Trie of all substrings\nb) Low collision probability of rolling hash\nc) Suffix tree guaranteeing O(1) per char\nd) Use of a min-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST772979.",
        "target_text": "Question: Stability (id=772979): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Merge sort (stable), Heap sort (unstable)\nc) Counting sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS3505431.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=3505431 typically runs in?\nChoices:\na) O(1) worst-case\nb) O(log log n) average\nc) Θ(log n) average\nd) Θ(n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M6_6_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/6) + n^3 for n being a power of 6.\nChoices:\na) Θ(n^1.0)\nb) Θ(n^3)\nc) Θ(n^1.0 log n)\nd) Θ(n^3 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S13761_61.",
        "target_text": "Question: Array length n=13761, find max-sum subarray of fixed length k=61. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n log n)\nc) Θ(k log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL77525.",
        "target_text": "Question: Check if a singly linked list of length n=77525 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Use a hash set of seen values\nc) Find middle, reverse second half, compare\nd) Sort and compare with original\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS71.",
        "target_text": "Question: Compute stock span for 71 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Fenwick tree\nc) Hash table\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS4896.",
        "target_text": "Question: A queue via two stacks handles a burst of 4896 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM74_17469.",
        "target_text": "Question: Merge k=74 sorted streams totaling N=17469 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N + k^2)\nc) Θ(N log N)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Threshold-based expansion preserves performance. Variant RS0.8.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.8?\nChoices:\na) To sort keys implicitly\nb) To keep expected O(1) operations\nc) To maintain key stability\nd) To reduce memory usage to exact size\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA377609.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=377609 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) DFS from root each time\nc) Sort node labels then binary search\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D869134.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 869134]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Graph must be undirected\nc) Self-loops must be absent\nd) Distinct weights are required\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN638539.",
        "target_text": "Question: Check anagrams for strings of length n=638539 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) Sort both in Θ(n log n)\nc) DFS on character graph\nd) Use a stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS719785.",
        "target_text": "Question: Heapsort stability check id=719785: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort is stable\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort always beats merge sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS8106986.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=8106986 typically runs in?\nChoices:\na) O(log log n) average\nb) O(1) worst-case\nc) Θ(n) average\nd) Θ(log n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A16.",
        "target_text": "Question: A dynamic array starts with capacity 16 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(1)\nc) Θ(√m)\nd) Θ(log m)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P665101.",
        "target_text": "Question: Answer 665101 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Use a stack to store partial sums\nb) Recompute sums per query in Θ(n)\nc) Build prefix-sum array; O(1) per query\nd) Sort once and binary search per query\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL93951.",
        "target_text": "Question: Check if a singly linked list of length n=93951 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Use a hash set of seen values\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS6.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 6 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Sort segments then concatenate\nc) Greedy left-to-right without memory\nd) Use BFS on substring graph\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA2286.",
        "target_text": "Question: Circular-array queue with capacity 2286: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Require power-of-two capacity\nc) Head==Tail means full\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL436_666978.",
        "target_text": "Question: Find the k=436-th largest element among n=666978 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Heapsort then index\nc) Binary search on value domain\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH1024.",
        "target_text": "Question: In open addressing with double hashing over table size m=1024, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) Use g(k)=0 for some keys\nc) g(k) coprime with m for all keys\nd) Make both hash functions identical\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA847818.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=847818 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) DFS from root each time\nc) Euler tour + RMQ yields O(1) per query\nd) Naive parent climbing O(n) per query\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS455102_3019355.",
        "target_text": "Question: A directed graph with V=455102, E≈3019355. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) When all vertices have outdegree ≥ 1\nc) Only if the graph is connected\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS75420.",
        "target_text": "Question: In KMP, what does LPS[75420] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Total distinct prefixes up to i\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Index of next occurrence\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS493733.",
        "target_text": "Question: Heapsort stability check id=493733: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort always beats merge sort\nc) Heapsort is not stable by default\nd) Heapsort needs extra Θ(n) memory\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU4392334.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=4392334. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Binary search with left/right bias\nc) Heap-based selection\nd) Hashing with chaining\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M8_2_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/2) + n^3 for n being a power of 2.\nChoices:\na) Θ(n^3 log n)\nb) Θ(n^3.0 log^2 n)\nc) Θ(n^3.0)\nd) Θ(n^3)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM58105.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=58105-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Hash all present values then scan\nc) Use a heap of differences\nd) Scan linearly counting gaps\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Phase difference accumulates around the cycle. Variant C3.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 3× and 1×. Complexity?\nChoices:\na) Θ(log n) time, Θ(1) space\nb) Θ(1) time, Θ(1) space\nc) Θ(n) time, Θ(n) space\nd) Θ(n) time, Θ(1) space\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP913.",
        "target_text": "Question: Verify whether a pop sequence of length n=913 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ137908.",
        "target_text": "Question: For 137908 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Binary heap\nc) Stack\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL939_878423.",
        "target_text": "Question: Find the k=939-th largest element among n=878423 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Heapsort then index\nc) Deterministic selection (median-of-medians)\nd) Build max-heap and extract k times\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.24.",
        "target_text": "Question: In separate chaining with load factor α=1.24, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1/α)\nc) Θ(α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS59358.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=59358-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(k)\nc) Θ(√n)\nd) Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS464528_4609889.",
        "target_text": "Question: A directed graph with V=464528, E≈4609889. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if the graph is connected\nc) When it is a DAG (no directed cycles)\nd) Only if edges are unweighted\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN324522.",
        "target_text": "Question: Check anagrams for strings of length n=324522 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Count character frequencies in Θ(n)\nc) Sort both in Θ(n log n)\nd) Use a stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS767.",
        "target_text": "Question: Array is nearly sorted with at most 767 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Insertion sort\nc) Heap sort\nd) Shell sort with fixed gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS2757437.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=2757437 typically runs in?\nChoices:\na) Θ(n) average\nb) O(log log n) average\nc) Θ(log n) average\nd) O(1) worst-case\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M8_6_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/6) + n^2 for n being a power of 6.\nChoices:\na) Θ(n^2 log n)\nb) Θ(n^1.1606 log n)\nc) Θ(n^1.1606)\nd) Θ(n^2)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P711141.",
        "target_text": "Question: Answer 711141 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Use a stack to store partial sums\nc) Build prefix-sum array; O(1) per query\nd) Recompute sums per query in Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN807248_370124.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=807248, B=370124. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Reverse one list then compare\nc) Binary search on addresses\nd) Hash addresses of first list\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE2195.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=2195. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Binary search tree\nc) Decreasing stack\nd) Max-heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ26818.",
        "target_text": "Question: Schedule 26818 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Binary heap\nc) Unordered array\nd) Stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM506_161488.",
        "target_text": "Question: Merge k=506 sorted streams totaling N=161488 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log k)\nc) Θ(k log N)\nd) Θ(N log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Adversarial patterns are neutralized by random choice. Variant UH10000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=10000 slots yields what benefit?\nChoices:\na) Eliminates need for resizing\nb) Cryptographic security by default\nc) Expected constant-time operations against adversaries\nd) Zero collisions guaranteed\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS509986.",
        "target_text": "Question: BST with parent pointers (id=509986): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Use level-order and pick next node\nc) Reverse postorder traversal entirely\nd) Always climb to root then go right once\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS962935_1773372.",
        "target_text": "Question: A directed graph with V=962935, E≈1773372. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) When it is a DAG (no directed cycles)\nc) Only if edges are unweighted\nd) Only if the graph is connected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB60585.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=60585. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) BST over all substrings\nc) Binary heap of substrings\nd) Queue of rolling hashes only\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS790651.",
        "target_text": "Question: Keys are integers in range [0..790651]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Counting sort\nc) Quick sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI44_1593.",
        "target_text": "Question: Binary search over half-open range [44, 1593)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Increase both lo and hi to skip duplicates\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T5_3_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^5, f3=n^5 (log n)^3, f4=n^8?\nChoices:\na) Θ(n^8)\nb) Θ(n^5 (log n)^3)\nc) Θ(n^5)\nd) Θ((log n)^3)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R500840.",
        "target_text": "Question: Rotate an array right by r=500840 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Selection sort then shift\nc) Heapify then extract\nd) Single-step rotate repeated r times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK43_1781.",
        "target_text": "Question: Merge k=43 sorted linked lists totaling n=1781 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n log k)\nc) Θ(n + k^2)\nd) Θ(k n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1595.",
        "target_text": "Question: Verify whether a pop sequence of length n=1595 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Simulate using one stack in Θ(n)\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B575849.",
        "target_text": "Question: Run BFS on an unweighted graph with 575849 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) Nondecreasing distance from source\nc) Minimum memory footprint\nd) All simple paths before all edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA15_85663780.",
        "target_text": "Question: In a d-ary heap with d=15 and n=85663780 nodes, what is the height?\nChoices:\na) Θ(log_15 n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.81.",
        "target_text": "Question: In separate chaining with load factor α=0.81, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(1/α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA205580.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=205580 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) DFS from root each time\nc) Euler tour + RMQ yields O(1) per query\nd) Naive parent climbing O(n) per query\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST73580.",
        "target_text": "Question: MST question id=73580: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) Prim requires the entire edge set to be sorted first\nc) MST is always unique in connected graphs\nd) MST minimizes number of edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS46616.",
        "target_text": "Question: In KMP, what does LPS[46616] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Number of mismatches up to i\nd) Index of next occurrence\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS328.",
        "target_text": "Question: Array is nearly sorted with at most 328 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Radix sort\nc) Heap sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI76_3940.",
        "target_text": "Question: Binary search over half-open range [76, 3940)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Increase both lo and hi to skip duplicates\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Keep inclusive bounds on both ends\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A1.",
        "target_text": "Question: A dynamic array starts with capacity 1 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(√m)\nb) Θ(1)\nc) Θ(log m)\nd) Θ(m)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R480819.",
        "target_text": "Question: Rotate an array right by r=480819 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Single-step rotate repeated r times\nc) Three-reversal method\nd) Heapify then extract\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN389717.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 389717, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Impossible under any model\nc) Reverse list then delete head\nd) Traverse from head to find predecessor\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS2.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 2 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Sort segments then concatenate\nc) Use BFS on substring graph\nd) Greedy left-to-right without memory\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ491621.",
        "target_text": "Question: For 491621 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Stack\nc) Deque\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK6.",
        "target_text": "Question: In a d-ary heap (d=6), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) No effect whatsoever\nb) It makes the operation constant time\nc) It increases height linearly\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH32768.",
        "target_text": "Question: In open addressing with double hashing over table size m=32768, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) Make both hash functions identical\nc) Choose m even and g(k) even\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H37111573.",
        "target_text": "Question: For a balanced BST with n=37111573 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(√n)\nd) Θ(log log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP230710.",
        "target_text": "Question: Test bipartiteness (id=230710) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Check all degrees even\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Compute an MST then inspect edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS72329.",
        "target_text": "Question: In KMP, what does LPS[72329] represent for a given pattern?\nChoices:\na) Length of longest proper prefix that is also a suffix for prefix ending at i\nb) Index of next occurrence\nc) Total distinct prefixes up to i\nd) Number of mismatches up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX6_16.",
        "target_text": "Question: Radix sort with d=6 digits and base b=16 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·n·log b)\nb) Θ(d·(n + b))\nc) Θ(b^d)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX814014904.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈814014904. Why?\nChoices:\na) Requires the array to be cyclic\nb) Uses hashing to index unknown segments\nc) Doubles the bound to bracket, then binary search\nd) Sorts the array first\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T4_3_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^4, f3=n^4 (log n)^3, f4=n^8?\nChoices:\na) Θ(n^8)\nb) Θ(n^4 (log n)^3)\nc) Θ(n^4)\nd) Θ((log n)^3)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S3133_474.",
        "target_text": "Question: Array length n=3133, find max-sum subarray of fixed length k=474. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(k log n)\nb) Θ(n log n)\nc) Θ(nk)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK50_8566.",
        "target_text": "Question: Merge k=50 sorted linked lists totaling n=8566 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(k n)\nc) Θ(n + k^2)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS1423.",
        "target_text": "Question: Compute stock span for 1423 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Fenwick tree\nc) Hash table\nd) Priority queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA2734.",
        "target_text": "Question: Circular-array queue with capacity 2734: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Track count or keep one slot empty\nc) Require power-of-two capacity\nd) Require prime capacity\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL505_441967.",
        "target_text": "Question: Find the k=505-th largest element among n=441967 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Binary search on value domain\nc) Deterministic selection (median-of-medians)\nd) Build max-heap and extract k times\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.05.",
        "target_text": "Question: In separate chaining with load factor α=1.05, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS912031.",
        "target_text": "Question: BST with parent pointers (id=912031): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) Use level-order and pick next node\nc) Reverse postorder traversal entirely\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D721612.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 721612]. Why?\nChoices:\na) Self-loops must be absent\nb) Nonnegative weights ensure greedy optimality\nc) Graph must be undirected\nd) Distinct weights are required\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN760556.",
        "target_text": "Question: Check anagrams for strings of length n=760556 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) DFS on character graph\nc) Count character frequencies in Θ(n)\nd) Use a stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS722700.",
        "target_text": "Question: Keys are integers in range [0..722700]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Counting sort\nc) Shell sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS2242234.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=2242234 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(log n)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M8_6_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/6) + n^4 for n being a power of 6.\nChoices:\na) Θ(n^1.1606)\nb) Θ(n^4 log n)\nc) Θ(n^1.1606 log n)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM969697.",
        "target_text": "Question: Find a majority element in an array of length n=969697 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Binary search on value domain\nc) Boyer–Moore voting with verification\nd) Divide-and-conquer merges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK30_932.",
        "target_text": "Question: Merge k=30 sorted linked lists totaling n=932 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n log n)\nc) Θ(n + k^2)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS169.",
        "target_text": "Question: Compute stock span for 169 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Hash table\nc) Fenwick tree\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B567699.",
        "target_text": "Question: Run BFS on an unweighted graph with 567699 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) All simple paths before all edges\nc) Minimum memory footprint\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA6_31815183.",
        "target_text": "Question: In a d-ary heap with d=6 and n=31815183 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(log_6 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH65536.",
        "target_text": "Question: In open addressing with double hashing over table size m=65536, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) g(k) coprime with m for all keys\nc) Use g(k)=0 for some keys\nd) Make both hash functions identical\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H374434715.",
        "target_text": "Question: For a balanced BST with n=374434715 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF68466.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=68466 can handle which case while detecting it?\nChoices:\na) Negative edge weights and negative cycles\nb) Equal runtime on all graphs\nc) Faster runtime on sparse nonnegative graphs\nd) Only acyclic graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN758405.",
        "target_text": "Question: Check anagrams for strings of length n=758405 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Use a stack\nc) Sort both in Θ(n log n)\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS454.",
        "target_text": "Question: Array is nearly sorted with at most 454 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Shell sort with fixed gaps\nc) Insertion sort\nd) Radix sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU4244626.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=4244626. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Heap-based selection\nc) Linear scan with early exit\nd) Hashing with chaining\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M2_3_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/3) + n^4 for n being a power of 3.\nChoices:\na) Θ(n^0.6309 log n)\nb) Θ(n^0.6309)\nc) Θ(n^4)\nd) Θ(n^4 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P239909.",
        "target_text": "Question: Answer 239909 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Recompute sums per query in Θ(n)\nb) Use a stack to store partial sums\nc) Build prefix-sum array; O(1) per query\nd) Sort once and binary search per query\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR9.",
        "target_text": "Question: Reverse a singly linked list in groups of k=9 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n)\nd) Θ(n log k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE22783.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=22783. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Binary search tree\nc) Decreasing stack\nd) Max-heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW5761_239.",
        "target_text": "Question: Sliding window maximum for array length n=5761 and window w=239. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(nw)\nc) Θ(n)\nd) Θ(w log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH6519478.",
        "target_text": "Question: Build a binary heap from n=6519478 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF576153_0.41.",
        "target_text": "Question: Chaining hash table with n=576153 keys at load factor α=0.41. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS429941.",
        "target_text": "Question: BST with parent pointers (id=429941): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Reverse postorder traversal entirely\nc) Always climb to root then go right once\nd) Use level-order and pick next node\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS878930_4712186.",
        "target_text": "Question: A directed graph with V=878930, E≈4712186. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if the graph is connected\nc) When it is a DAG (no directed cycles)\nd) Only if edges are unweighted\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN304595.",
        "target_text": "Question: Check anagrams for strings of length n=304595 over fixed alphabet. Optimal approach?\nChoices:\na) Use a stack\nb) DFS on character graph\nc) Count character frequencies in Θ(n)\nd) Sort both in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST161289.",
        "target_text": "Question: Stability (id=161289): which pairing is correct?\nChoices:\na) Heap sort (stable), Merge sort (unstable)\nb) Counting sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX237425202.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈237425202. Why?\nChoices:\na) Requires the array to be cyclic\nb) Sorts the array first\nc) Uses hashing to index unknown segments\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T5_5_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^5, f3=n^5 (log n)^5, f4=n^9?\nChoices:\na) Θ((log n)^5)\nb) Θ(n^5)\nc) Θ(n^9)\nd) Θ(n^5 (log n)^5)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P609291.",
        "target_text": "Question: Answer 609291 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Build prefix-sum array; O(1) per query\nc) Use a stack to store partial sums\nd) Recompute sums per query in Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK75_7633.",
        "target_text": "Question: Merge k=75 sorted linked lists totaling n=7633 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n log k)\nc) Θ(n + k^2)\nd) Θ(k n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS3414.",
        "target_text": "Question: Compute stock span for 3414 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Hash table\nc) Priority queue\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ250877.",
        "target_text": "Question: For 250877 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Stack\nc) Deque\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL887_636437.",
        "target_text": "Question: Find the k=887-th largest element among n=636437 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Binary search on value domain\nc) Heapsort then index\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH2048.",
        "target_text": "Question: In open addressing with double hashing over table size m=2048, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) g(k) coprime with m for all keys\nc) Use g(k)=0 for some keys\nd) Choose m even and g(k) even\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H946043831.",
        "target_text": "Question: For a balanced BST with n=946043831 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(√n)\nc) Θ(n)\nd) Θ(log log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC221248.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=221248 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(V log V)\nc) Θ(E log V)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS98143.",
        "target_text": "Question: In KMP, what does LPS[98143] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Index of next occurrence\nd) Total distinct prefixes up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB46163865.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=46163865 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n)\nc) Ω(n^2)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS8132205.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=8132205 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(n log n)\nd) Θ(1) expected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T5_1_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^5, f3=n^5 (log n)^1, f4=n^7?\nChoices:\na) Θ(n^7)\nb) Θ(n^5)\nc) Θ(n^5 (log n)^1)\nd) Θ((log n)^1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM665432.",
        "target_text": "Question: Find a majority element in an array of length n=665432 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Divide-and-conquer merges\nc) Counting sort\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN888321_418915.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=888321, B=418915. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Reverse one list then compare\nc) Binary search on addresses\nd) Hash addresses of first list\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS8.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 8 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Greedy left-to-right without memory\nc) Sort segments then concatenate\nd) Use BFS on substring graph\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW4789_557.",
        "target_text": "Question: Sliding window maximum for array length n=4789 and window w=557. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(w log n)\nc) Θ(n)\nd) Θ(nw)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH7238334.",
        "target_text": "Question: Build a binary heap from n=7238334 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF3852280_0.2.",
        "target_text": "Question: Chaining hash table with n=3852280 keys at load factor α=0.2. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H38866136.",
        "target_text": "Question: For a balanced BST with n=38866136 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR96335.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=96335 edges. What algorithmic idea achieves linear time?\nChoices:\na) Kruskal’s algorithm\nb) Topological sorting\nc) Dijkstra’s algorithm\nd) Tarjan’s low-link DFS\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z950331.",
        "target_text": "Question: For string S (id=950331), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Number of mismatches at i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of distinct substrings up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS842002.",
        "target_text": "Question: Heapsort stability check id=842002: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort always beats merge sort\nc) Heapsort is stable\nd) Heapsort needs extra Θ(n) memory\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI97_1142.",
        "target_text": "Question: Binary search over half-open range [97, 1142)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Increase both lo and hi to skip duplicates\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Keep inclusive bounds on both ends\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M9_3_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/3) + n^1 for n being a power of 3.\nChoices:\na) Θ(n^1 log n)\nb) Θ(n^2.0)\nc) Θ(n^2.0 log n)\nd) Θ(n^1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM921165.",
        "target_text": "Question: Find a majority element in an array of length n=921165 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Counting sort\nc) Binary search on value domain\nd) Divide-and-conquer merges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN93008.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 93008, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Copy next node’s data here and bypass next\nc) Traverse from head to find predecessor\nd) Reverse list then delete head\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Per-node metadata preserves constant-time MIN. Variant MS8991.",
        "target_text": "Question: Support PUSH, POP, and MIN in worst-case Θ(1). What augmentation works?\nChoices:\na) Periodically rebuild the stack\nb) Keep a global heap\nc) Store (value, currentMin) per node\nd) Scan on demand for MIN\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B673310.",
        "target_text": "Question: Run BFS on an unweighted graph with 673310 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Nondecreasing distance from source\nc) Lexicographic vertex order\nd) Minimum memory footprint\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL201_311596.",
        "target_text": "Question: Find the k=201-th largest element among n=311596 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Heapsort then index\nc) Binary search on value domain\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH32768.",
        "target_text": "Question: In open addressing with double hashing over table size m=32768, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) g(k) coprime with m for all keys\nc) Make both hash functions identical\nd) Use g(k)=0 for some keys\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS313194.",
        "target_text": "Question: BST with parent pointers (id=313194): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Reverse postorder traversal entirely\nc) Use level-order and pick next node\nd) Always climb to root then go right once\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST412652.",
        "target_text": "Question: MST question id=412652: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) Prim requires the entire edge set to be sorted first\nc) MST is always unique in connected graphs\nd) MST minimizes number of edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN600630.",
        "target_text": "Question: Check anagrams for strings of length n=600630 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Sort both in Θ(n log n)\nc) Count character frequencies in Θ(n)\nd) Use a stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS121777.",
        "target_text": "Question: Keys are integers in range [0..121777]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Counting sort\nc) Heap sort\nd) Shell sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS8486561.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=8486561 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M9_6_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/6) + n^2 for n being a power of 6.\nChoices:\na) Θ(n^2)\nb) Θ(n^1.2263 log n)\nc) Θ(n^1.2263)\nd) Θ(n^2 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R878858.",
        "target_text": "Question: Rotate an array right by r=878858 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Heapify then extract\nc) Selection sort then shift\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK70_3957.",
        "target_text": "Question: Merge k=70 sorted linked lists totaling n=3957 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n + k^2)\nc) Θ(k n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS3.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 3 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Use two stacks for counts and fragments\nc) Sort segments then concatenate\nd) Greedy left-to-right without memory\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ658527.",
        "target_text": "Question: For 658527 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Binary heap\nc) Deque\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK5.",
        "target_text": "Question: In a d-ary heap (d=5), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) No effect whatsoever\nc) It increases height linearly\nd) It makes the operation constant time\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH16384.",
        "target_text": "Question: In open addressing with double hashing over table size m=16384, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) g(k) coprime with m for all keys\nc) Make both hash functions identical\nd) Use g(k)=0 for some keys\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA641091.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=641091 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) DFS from root each time\nc) Naive parent climbing O(n) per query\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST277539.",
        "target_text": "Question: MST question id=277539: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) Prim requires the entire edge set to be sorted first\nc) Kruskal adds the smallest edge that doesn't create a cycle\nd) MST minimizes number of edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z659756.",
        "target_text": "Question: For string S (id=659756), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Number of distinct substrings up to i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of mismatches at i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS31405.",
        "target_text": "Question: Keys are integers in range [0..31405]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Counting sort\nc) Quick sort\nd) Shell sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU100363.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=100363. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Binary search with left/right bias\nc) Heap-based selection\nd) Hashing with chaining\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M7_2_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/2) + n^4 for n being a power of 2.\nChoices:\na) Θ(n^2.8074 log n)\nb) Θ(n^2.8074)\nc) Θ(n^4 log n)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM165831.",
        "target_text": "Question: Find a majority element in an array of length n=165831 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Binary search on value domain\nc) Divide-and-conquer merges\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL48629.",
        "target_text": "Question: Check if a singly linked list of length n=48629 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Copy to array and two-pointer check\nc) Find middle, reverse second half, compare\nd) Sort and compare with original\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS981.",
        "target_text": "Question: Compute stock span for 981 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Fenwick tree\nc) Monotonic stack\nd) Hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW6851_178.",
        "target_text": "Question: Sliding window maximum for array length n=6851 and window w=178. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n)\nc) Θ(nw)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA3_78706603.",
        "target_text": "Question: In a d-ary heap with d=3 and n=78706603 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(log_3 n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.17.",
        "target_text": "Question: In separate chaining with load factor α=1.17, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H935072927.",
        "target_text": "Question: For a balanced BST with n=935072927 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(log log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC363108.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=363108 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(V+E)\nc) Θ(V log V)\nd) Θ(VE)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB38081.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=38081. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Suffix automaton or suffix array + LCP\nc) Binary heap of substrings\nd) BST over all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB56712819.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=56712819 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n)\nc) Ω(n log n)\nd) Ω(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU7777419.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=7777419. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Binary search with left/right bias\nc) Linear scan with early exit\nd) Hashing with chaining\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M9_4_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/4) + n^3 for n being a power of 4.\nChoices:\na) Θ(n^3)\nb) Θ(n^1.585)\nc) Θ(n^1.585 log n)\nd) Θ(n^3 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM88741.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=88741-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Scan linearly counting gaps\nc) Binary search on index vs value gap\nd) Use a heap of differences\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR5.",
        "target_text": "Question: Reverse a singly linked list in groups of k=5 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS4.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 4 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Use BFS on substring graph\nc) Greedy left-to-right without memory\nd) Sort segments then concatenate\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS1173.",
        "target_text": "Question: A queue via two stacks handles a burst of 1173 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC45380719.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=45380719?\nChoices:\na) Θ(1)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.86.",
        "target_text": "Question: In separate chaining with load factor α=0.86, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS98952.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=98952-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(k)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS533782_1878887.",
        "target_text": "Question: A directed graph with V=533782, E≈1878887. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if the graph is connected\nc) Only if edges are unweighted\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN703951.",
        "target_text": "Question: Check anagrams for strings of length n=703951 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Sort both in Θ(n log n)\nc) Use a stack\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS999.",
        "target_text": "Question: Array is nearly sorted with at most 999 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Radix sort\nc) Heap sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI69_479.",
        "target_text": "Question: Binary search over half-open range [69, 479)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Increase both lo and hi to skip duplicates\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M4_3_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/3) + n^0 for n being a power of 3.\nChoices:\na) Θ(n^0)\nb) Θ(n^0 log n)\nc) Θ(n^1.2619)\nd) Θ(n^1.2619 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P94548.",
        "target_text": "Question: Answer 94548 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Use a stack to store partial sums\nb) Sort once and binary search per query\nc) Build prefix-sum array; O(1) per query\nd) Recompute sums per query in Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Phase difference accumulates around the cycle. Variant C5.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 5× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(n) space\nb) Θ(log n) time, Θ(1) space\nc) Θ(n) time, Θ(1) space\nd) Θ(1) time, Θ(1) space\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Operator handling via stacks preserves associativity rules. Variant IP3_4.",
        "target_text": "Question: Evaluate an infix expression with 3–4 precedence levels and parentheses. Linear-time method?\nChoices:\na) Convert to postfix and evaluate with a stack\nb) Left-to-right without stacks\nc) Build a tree without any stack\nd) Sort tokens by precedence then scan\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ618394.",
        "target_text": "Question: Schedule 618394 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Circular queue\nc) Stack\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA6_43479006.",
        "target_text": "Question: In a d-ary heap with d=6 and n=43479006 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log_6 n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF7063497_0.53.",
        "target_text": "Question: Chaining hash table with n=7063497 keys at load factor α=0.53. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(1 + α)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS819761.",
        "target_text": "Question: BST with parent pointers (id=819761): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) Reverse postorder traversal entirely\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Always climb to root then go right once\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST616901.",
        "target_text": "Question: MST question id=616901: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) MST minimizes number of edges\nc) Kruskal adds the smallest edge that doesn't create a cycle\nd) Prim requires the entire edge set to be sorted first\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000007.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000007 achieves expected linear time due to what?\nChoices:\na) Use of a min-heap\nb) Trie of all substrings\nc) Low collision probability of rolling hash\nd) Suffix tree guaranteeing O(1) per char\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS862876.",
        "target_text": "Question: Heapsort stability check id=862876: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort is stable\nc) Heapsort always beats merge sort\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS4833975.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=4833975 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(1) expected\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M3_3_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/3) + n^4 for n being a power of 3.\nChoices:\na) Θ(n^1.0)\nb) Θ(n^4 log n)\nc) Θ(n^4)\nd) Θ(n^1.0 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM888243.",
        "target_text": "Question: Find a majority element in an array of length n=888243 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Boyer–Moore voting with verification\nc) Counting sort\nd) Divide-and-conquer merges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Phase difference accumulates around the cycle. Variant C4.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 4× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(1) space\nb) Θ(1) time, Θ(1) space\nc) Θ(log n) time, Θ(1) space\nd) Θ(n) time, Θ(n) space\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE8926.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=8926. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Decreasing stack\nc) Queue\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA4507.",
        "target_text": "Question: Circular-array queue with capacity 4507: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Head==Tail means full\nc) Track count or keep one slot empty\nd) Require prime capacity\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC60709099.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=60709099?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(1)\nd) Θ(log log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF813225_0.2.",
        "target_text": "Question: Chaining hash table with n=813225 keys at load factor α=0.2. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(α log α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA731623.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=731623 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) DFS from root each time\nc) Sort node labels then binary search\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D924709.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 924709]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Graph must be undirected\nc) Distinct weights are required\nd) Self-loops must be absent\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB23462.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=23462. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) Queue of rolling hashes only\nc) BST over all substrings\nd) Binary heap of substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS242998.",
        "target_text": "Question: Keys are integers in range [0..242998]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Heap sort\nc) Counting sort\nd) Quick sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS5490684.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=5490684 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A4.",
        "target_text": "Question: A dynamic array starts with capacity 4 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(√m)\nc) Θ(log m)\nd) Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S12620_380.",
        "target_text": "Question: Array length n=12620, find max-sum subarray of fixed length k=380. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(k log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK59_793.",
        "target_text": "Question: Merge k=59 sorted linked lists totaling n=793 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(k n)\nc) Θ(n log k)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP4_5.",
        "target_text": "Question: Evaluate an infix expression with 4–5 precedence levels and parentheses. Linear-time method?\nChoices:\na) Build a tree without any stack\nb) Left-to-right without stacks\nc) Sort tokens by precedence then scan\nd) Convert to postfix and evaluate with a stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW5063_848.",
        "target_text": "Question: Sliding window maximum for array length n=5063 and window w=848. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(w log n)\nc) Θ(nw)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH5679543.",
        "target_text": "Question: Build a binary heap from n=5679543 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF4928307_0.44.",
        "target_text": "Question: Chaining hash table with n=4928307 keys at load factor α=0.44. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(α log α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS189807.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=189807-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP656440.",
        "target_text": "Question: Test bipartiteness (id=656440) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Compute an MST then inspect edges\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Sort vertices and deduplicate\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB4553.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=4553. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) BST over all substrings\nc) Suffix automaton or suffix array + LCP\nd) Binary heap of substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS924.",
        "target_text": "Question: Array is nearly sorted with at most 924 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Insertion sort\nc) Radix sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX418764548.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈418764548. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Sorts the array first\nc) Uses hashing to index unknown segments\nd) Requires the array to be cyclic\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T4_3_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^4, f3=n^4 (log n)^3, f4=n^7?\nChoices:\na) Θ(n^4 (log n)^3)\nb) Θ(n^4)\nc) Θ(n^7)\nd) Θ((log n)^3)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM995158.",
        "target_text": "Question: Find a majority element in an array of length n=995158 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Boyer–Moore voting with verification\nc) Counting sort\nd) Binary search on value domain\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL59527.",
        "target_text": "Question: Check if a singly linked list of length n=59527 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Use a hash set of seen values\nc) Find middle, reverse second half, compare\nd) Sort and compare with original\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE99061.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=99061. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Queue\nc) Binary search tree\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW7349_662.",
        "target_text": "Question: Sliding window maximum for array length n=7349 and window w=662. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(nw)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK8.",
        "target_text": "Question: In a d-ary heap (d=8), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) It increases height linearly\nc) No effect whatsoever\nd) It makes the operation constant time\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF6171328_0.31.",
        "target_text": "Question: Chaining hash table with n=6171328 keys at load factor α=0.31. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(α log α)\nd) Θ(nα)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS487623.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=487623-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(k)\nc) Θ(1)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS62908_573610.",
        "target_text": "Question: A directed graph with V=62908, E≈573610. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) When all vertices have outdegree ≥ 1\nc) Only if edges are unweighted\nd) Only if the graph is connected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP53109.",
        "target_text": "Question: KMP matches a pattern of length m=53109 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Suffix array\nc) Z-array exclusively\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS559.",
        "target_text": "Question: Array is nearly sorted with at most 559 inversions. Which algorithm excels?\nChoices:\na) Insertion sort\nb) Radix sort\nc) Shell sort with fixed gaps\nd) Heap sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX432699331.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈432699331. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Requires the array to be cyclic\nc) Uses hashing to index unknown segments\nd) Sorts the array first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M8_5_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/5) + n^1 for n being a power of 5.\nChoices:\na) Θ(n^1.292 log n)\nb) Θ(n^1.292)\nc) Θ(n^1)\nd) Θ(n^1 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P616924.",
        "target_text": "Question: Answer 616924 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Use a stack to store partial sums\nc) Recompute sums per query in Θ(n)\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN467867_832585.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=467867, B=832585. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Advance pointers; when one ends, jump to the other head\nc) Binary search on addresses\nd) Hash addresses of first list\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1919.",
        "target_text": "Question: Verify whether a pop sequence of length n=1919 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B110217.",
        "target_text": "Question: Run BFS on an unweighted graph with 110217 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) Nondecreasing distance from source\nc) Minimum memory footprint\nd) All simple paths before all edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL194_698153.",
        "target_text": "Question: Find the k=194-th largest element among n=698153 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Heapsort then index\nc) Build max-heap and extract k times\nd) Binary search on value domain\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.26.",
        "target_text": "Question: In separate chaining with load factor α=0.26, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR370422.",
        "target_text": "Question: In a BST with distinct keys (id=370422), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Level-order\nc) Preorder\nd) Postorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP882069.",
        "target_text": "Question: Test bipartiteness (id=882069) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Sort vertices and deduplicate\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Compute an MST then inspect edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP61882.",
        "target_text": "Question: KMP matches a pattern of length m=61882 in linear time using which table?\nChoices:\na) Rolling hash table\nb) LPS (failure) function\nc) Z-array exclusively\nd) Suffix array\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS840577.",
        "target_text": "Question: Heapsort stability check id=840577: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort always beats merge sort\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU6680961.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=6680961. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Heap-based selection\nc) Linear scan with early exit\nd) Hashing with chaining\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_5_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^1, f3=n^1 (log n)^5, f4=n^3?\nChoices:\na) Θ(n^1 (log n)^5)\nb) Θ(n^1)\nc) Θ(n^3)\nd) Θ((log n)^5)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S16432_364.",
        "target_text": "Question: Array length n=16432, find max-sum subarray of fixed length k=364. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(k log n)\nb) Θ(nk)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK93_2791.",
        "target_text": "Question: Merge k=93 sorted linked lists totaling n=2791 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(k n)\nc) Θ(n + k^2)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE47513.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=47513. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Queue\nc) Max-heap\nd) Binary search tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS8836.",
        "target_text": "Question: A queue via two stacks handles a burst of 8836 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) Both Θ(log n)\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM67_20985.",
        "target_text": "Question: Merge k=67 sorted streams totaling N=20985 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log k)\nc) Θ(k log N)\nd) Θ(N log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H791604564.",
        "target_text": "Question: For a balanced BST with n=791604564 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP891085.",
        "target_text": "Question: Test bipartiteness (id=891085) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Compute an MST then inspect edges\nc) Check all degrees even\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS32604.",
        "target_text": "Question: In KMP, what does LPS[32604] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Total distinct prefixes up to i\nc) Index of next occurrence\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS955.",
        "target_text": "Question: Array is nearly sorted with at most 955 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Heap sort\nc) Insertion sort\nd) Shell sort with fixed gaps\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI70_4163.",
        "target_text": "Question: Binary search over half-open range [70, 4163)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Increase both lo and hi to skip duplicates\nd) Keep inclusive bounds on both ends\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T2_4_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^2, f3=n^2 (log n)^4, f4=n^6?\nChoices:\na) Θ(n^2)\nb) Θ(n^6)\nc) Θ((log n)^4)\nd) Θ(n^2 (log n)^4)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM44246.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=44246-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Scan linearly counting gaps\nc) Use a heap of differences\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN564146_832978.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=564146, B=832978. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Hash addresses of first list\nc) Advance pointers; when one ends, jump to the other head\nd) Reverse one list then compare\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE27440.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=27440. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Max-heap\nc) Queue\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B541392.",
        "target_text": "Question: Run BFS on an unweighted graph with 541392 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) All simple paths before all edges\nc) Lexicographic vertex order\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH752329.",
        "target_text": "Question: Build a binary heap from n=752329 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n^2)\nc) Θ(log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.75.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.75?\nChoices:\na) To keep expected O(1) operations\nb) To reduce memory usage to exact size\nc) To maintain key stability\nd) To sort keys implicitly\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR688870.",
        "target_text": "Question: In a BST with distinct keys (id=688870), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Inorder\nc) Level-order\nd) Postorder\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR807287.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=807287 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Kruskal’s algorithm\nc) Topological sorting\nd) Tarjan’s low-link DFS\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS3514.",
        "target_text": "Question: In KMP, what does LPS[3514] represent for a given pattern?\nChoices:\na) Length of longest proper prefix that is also a suffix for prefix ending at i\nb) Number of mismatches up to i\nc) Total distinct prefixes up to i\nd) Index of next occurrence\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS600726.",
        "target_text": "Question: Keys are integers in range [0..600726]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Counting sort\nc) Heap sort\nd) Shell sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS3617806.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=3617806 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(log n)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_3_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^4, f3=n^4 (log n)^3, f4=n^6?\nChoices:\na) Θ(n^6)\nb) Θ(n^4)\nc) Θ((log n)^3)\nd) Θ(n^4 (log n)^3)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP17438_2318.",
        "target_text": "Question: Sorted array length n=17438. Decide if any pair sums to 2318. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Brute force in Θ(n^2)\nd) Hash set in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN861567_708431.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=861567, B=708431. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Reverse one list then compare\nc) Hash addresses of first list\nd) Binary search on addresses\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1383.",
        "target_text": "Question: Verify whether a pop sequence of length n=1383 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Simulate using one stack in Θ(n)\nc) Use a queue to mirror the stack\nd) Sort both sequences then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ233331.",
        "target_text": "Question: For 233331 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Queue\nc) Deque\nd) Stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH7496898.",
        "target_text": "Question: Build a binary heap from n=7496898 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(n^2)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF7389750_0.91.",
        "target_text": "Question: Chaining hash table with n=7389750 keys at load factor α=0.91. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(α log α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H980506129.",
        "target_text": "Question: For a balanced BST with n=980506129 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS526990_2656887.",
        "target_text": "Question: A directed graph with V=526990, E≈2656887. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When all vertices have outdegree ≥ 1\nc) Only if edges are unweighted\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z806352.",
        "target_text": "Question: For string S (id=806352), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Length of the longest prefix starting at i matching S[0..]\nc) Next index of S[i]\nd) Number of distinct substrings up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS102558.",
        "target_text": "Question: Heapsort stability check id=102558: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is not stable by default\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is stable\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX363711903.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈363711903. Why?\nChoices:\na) Sorts the array first\nb) Requires the array to be cyclic\nc) Doubles the bound to bracket, then binary search\nd) Uses hashing to index unknown segments\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M9_5_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/5) + n^2 for n being a power of 5.\nChoices:\na) Θ(n^1.3652)\nb) Θ(n^2)\nc) Θ(n^1.3652 log n)\nd) Θ(n^2 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P272373.",
        "target_text": "Question: Answer 272373 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Recompute sums per query in Θ(n)\nc) Use a stack to store partial sums\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK49_4554.",
        "target_text": "Question: Merge k=49 sorted linked lists totaling n=4554 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log n)\nc) Θ(n log k)\nd) Θ(k n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS572.",
        "target_text": "Question: Compute stock span for 572 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Priority queue\nc) Hash table\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ846857.",
        "target_text": "Question: For 846857 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Queue\nc) Binary heap\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK3.",
        "target_text": "Question: In a d-ary heap (d=3), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) It makes the operation constant time\nc) No effect whatsoever\nd) It increases height linearly\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF3331545_0.44.",
        "target_text": "Question: Chaining hash table with n=3331545 keys at load factor α=0.44. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS610128.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=610128-th smallest?\nChoices:\na) Θ(k)\nb) Θ(log n)\nc) Θ(1)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST649513.",
        "target_text": "Question: MST question id=649513: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) Prim requires the entire edge set to be sorted first\nc) Kruskal adds the smallest edge that doesn't create a cycle\nd) MST is always unique in connected graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z788825.",
        "target_text": "Question: For string S (id=788825), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Next index of S[i]\nc) Number of distinct substrings up to i\nd) Number of mismatches at i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX2_8.",
        "target_text": "Question: Radix sort with d=2 digits and base b=8 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·n·log b)\nc) Θ(d·(n + b))\nd) Θ(b^d)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI48_1947.",
        "target_text": "Question: Binary search over half-open range [48, 1947)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Increase both lo and hi to skip duplicates\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_3_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^1, f3=n^1 (log n)^3, f4=n^7?\nChoices:\na) Θ(n^7)\nb) Θ(n^1)\nc) Θ(n^1 (log n)^3)\nd) Θ((log n)^3)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P719833.",
        "target_text": "Question: Answer 719833 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Use a stack to store partial sums\nb) Recompute sums per query in Θ(n)\nc) Sort once and binary search per query\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN430951.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 430951, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Reverse list then delete head\nc) Impossible under any model\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP4_5.",
        "target_text": "Question: Evaluate an infix expression with 4–5 precedence levels and parentheses. Linear-time method?\nChoices:\na) Sort tokens by precedence then scan\nb) Left-to-right without stacks\nc) Build a tree without any stack\nd) Convert to postfix and evaluate with a stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW8732_771.",
        "target_text": "Question: Sliding window maximum for array length n=8732 and window w=771. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(nw)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA6_17423533.",
        "target_text": "Question: In a d-ary heap with d=6 and n=17423533 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(log_6 n)\nc) Θ(n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.2.",
        "target_text": "Question: In separate chaining with load factor α=0.2, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1/α)\nc) Θ(α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H548370158.",
        "target_text": "Question: For a balanced BST with n=548370158 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(log log n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D777536.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 777536]. Why?\nChoices:\na) Distinct weights are required\nb) Self-loops must be absent\nc) Nonnegative weights ensure greedy optimality\nd) Graph must be undirected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z82068.",
        "target_text": "Question: For string S (id=82068), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Next index of S[i]\nc) Number of mismatches at i\nd) Number of distinct substrings up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX8_32.",
        "target_text": "Question: Radix sort with d=8 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·(n + b))\nc) Θ(b^d)\nd) Θ(d·n·log b)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU4084391.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=4084391. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Linear scan with early exit\nc) Heap-based selection\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A8.",
        "target_text": "Question: A dynamic array starts with capacity 8 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(1)\nb) Θ(m)\nc) Θ(log m)\nd) Θ(√m)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P574154.",
        "target_text": "Question: Answer 574154 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Build prefix-sum array; O(1) per query\nc) Recompute sums per query in Θ(n)\nd) Use a stack to store partial sums\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN568620.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 568620, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Impossible under any model\nc) Traverse from head to find predecessor\nd) Reverse list then delete head\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS4073.",
        "target_text": "Question: Compute stock span for 4073 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Fenwick tree\nc) Hash table\nd) Priority queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B819585.",
        "target_text": "Question: Run BFS on an unweighted graph with 819585 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Minimum memory footprint\nc) Lexicographic vertex order\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK6.",
        "target_text": "Question: In a d-ary heap (d=6), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It increases height linearly\nb) No effect whatsoever\nc) It makes the operation constant time\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF4048294_0.57.",
        "target_text": "Question: Chaining hash table with n=4048294 keys at load factor α=0.57. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(nα)\nc) Θ(α log α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS105509.",
        "target_text": "Question: BST with parent pointers (id=105509): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Always climb to root then go right once\nc) Use level-order and pick next node\nd) Reverse postorder traversal entirely\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP473322.",
        "target_text": "Question: Test bipartiteness (id=473322) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Sort vertices and deduplicate\nc) Compute an MST then inspect edges\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP68016.",
        "target_text": "Question: KMP matches a pattern of length m=68016 in linear time using which table?\nChoices:\na) Rolling hash table\nb) LPS (failure) function\nc) Suffix array\nd) Z-array exclusively\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB79726363.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=79726363 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n log n)\nc) Ω(log n)\nd) Ω(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX167961694.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈167961694. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Doubles the bound to bracket, then binary search\nc) Requires the array to be cyclic\nd) Sorts the array first\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M3_2_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/2) + n^4 for n being a power of 2.\nChoices:\na) Θ(n^1.585 log n)\nb) Θ(n^4)\nc) Θ(n^1.585)\nd) Θ(n^4 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM435591.",
        "target_text": "Question: Find a majority element in an array of length n=435591 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Divide-and-conquer merges\nc) Boyer–Moore voting with verification\nd) Counting sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK49_2675.",
        "target_text": "Question: Merge k=49 sorted linked lists totaling n=2675 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n log n)\nc) Θ(k n)\nd) Θ(n + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS5.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 5 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Greedy left-to-right without memory\nc) Sort segments then concatenate\nd) Use BFS on substring graph\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B43640.",
        "target_text": "Question: Run BFS on an unweighted graph with 43640 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) All simple paths before all edges\nc) Minimum memory footprint\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA9_86331749.",
        "target_text": "Question: In a d-ary heap with d=9 and n=86331749 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log_9 n)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF1669257_0.64.",
        "target_text": "Question: Chaining hash table with n=1669257 keys at load factor α=0.64. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(α log α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS242975.",
        "target_text": "Question: BST with parent pointers (id=242975): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Always climb to root then go right once\nd) Use level-order and pick next node\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST420071.",
        "target_text": "Question: MST question id=420071: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) MST minimizes number of edges\nd) MST is always unique in connected graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB76864.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=76864. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) Queue of rolling hashes only\nc) Suffix automaton or suffix array + LCP\nd) BST over all substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS246.",
        "target_text": "Question: Array is nearly sorted with at most 246 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Shell sort with fixed gaps\nc) Radix sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS38613.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=38613 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M9_4_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/4) + n^2 for n being a power of 4.\nChoices:\na) Θ(n^2 log n)\nb) Θ(n^2)\nc) Θ(n^1.585 log n)\nd) Θ(n^1.585)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S6650_79.",
        "target_text": "Question: Array length n=6650, find max-sum subarray of fixed length k=79. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN241676.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 241676, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Copy next node’s data here and bypass next\nc) Traverse from head to find predecessor\nd) Impossible under any model\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE39625.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=39625. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Decreasing stack\nc) Queue\nd) Max-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA7994.",
        "target_text": "Question: Circular-array queue with capacity 7994: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Track count or keep one slot empty\nc) Require prime capacity\nd) Head==Tail means full\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA16_96514348.",
        "target_text": "Question: In a d-ary heap with d=16 and n=96514348 nodes, what is the height?\nChoices:\na) Θ(log_16 n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF388517_0.86.",
        "target_text": "Question: Chaining hash table with n=388517 keys at load factor α=0.86. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H559361883.",
        "target_text": "Question: For a balanced BST with n=559361883 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP225716.",
        "target_text": "Question: Test bipartiteness (id=225716) of an undirected graph efficiently. Which method works?\nChoices:\na) Attempt 2-coloring via BFS; failure indicates odd cycle\nb) Compute an MST then inspect edges\nc) Sort vertices and deduplicate\nd) Check all degrees even\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN629584.",
        "target_text": "Question: Check anagrams for strings of length n=629584 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) Use a stack\nc) DFS on character graph\nd) Sort both in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS146386.",
        "target_text": "Question: Keys are integers in range [0..146386]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Quick sort\nc) Shell sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS4746026.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=4746026 typically runs in?\nChoices:\na) Θ(log n) average\nb) O(log log n) average\nc) O(1) worst-case\nd) Θ(n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M2_5_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/5) + n^4 for n being a power of 5.\nChoices:\na) Θ(n^0.4307 log n)\nb) Θ(n^0.4307)\nc) Θ(n^4 log n)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM666903.",
        "target_text": "Question: Find a majority element in an array of length n=666903 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Counting sort\nc) Binary search on value domain\nd) Divide-and-conquer merges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR2.",
        "target_text": "Question: Reverse a singly linked list in groups of k=2 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(n log k)\nd) Θ(k log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS328.",
        "target_text": "Question: Compute stock span for 328 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Monotonic stack\nc) Hash table\nd) Fenwick tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA3308.",
        "target_text": "Question: Circular-array queue with capacity 3308: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Head==Tail means full\nc) Require power-of-two capacity\nd) Require prime capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA12_52354233.",
        "target_text": "Question: In a d-ary heap with d=12 and n=52354233 nodes, what is the height?\nChoices:\na) Θ(log_12 n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF9429796_0.28.",
        "target_text": "Question: Chaining hash table with n=9429796 keys at load factor α=0.28. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(α log α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS684984.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=684984-th smallest?\nChoices:\na) Θ(1)\nb) Θ(k)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D914088.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 914088]. Why?\nChoices:\na) Self-loops must be absent\nb) Graph must be undirected\nc) Distinct weights are required\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z452828.",
        "target_text": "Question: For string S (id=452828), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Number of distinct substrings up to i\nc) Next index of S[i]\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS275049.",
        "target_text": "Question: Heapsort stability check id=275049: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort is not stable by default\nd) Heapsort always beats merge sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS4533234.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=4533234 typically runs in?\nChoices:\na) O(1) worst-case\nb) Θ(log n) average\nc) O(log log n) average\nd) Θ(n) average\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M9_4_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/4) + n^3 for n being a power of 4.\nChoices:\na) Θ(n^3)\nb) Θ(n^1.585)\nc) Θ(n^3 log n)\nd) Θ(n^1.585 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM94052.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=94052-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Hash all present values then scan\nc) Binary search on index vs value gap\nd) Scan linearly counting gaps\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN634882.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 634882, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Traverse from head to find predecessor\nc) Copy next node’s data here and bypass next\nd) Reverse list then delete head\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1207.",
        "target_text": "Question: Verify whether a pop sequence of length n=1207 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW5257_563.",
        "target_text": "Question: Sliding window maximum for array length n=5257 and window w=563. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n log n)\nc) Θ(nw)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA6_94742741.",
        "target_text": "Question: In a d-ary heap with d=6 and n=94742741 nodes, what is the height?\nChoices:\na) Θ(log_6 n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF795668_0.86.",
        "target_text": "Question: Chaining hash table with n=795668 keys at load factor α=0.86. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(nα)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H105835212.",
        "target_text": "Question: For a balanced BST with n=105835212 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS552023_3356676.",
        "target_text": "Question: A directed graph with V=552023, E≈3356676. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When all vertices have outdegree ≥ 1\nc) When it is a DAG (no directed cycles)\nd) Only if edges are unweighted\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z587947.",
        "target_text": "Question: For string S (id=587947), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Number of mismatches at i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Next index of S[i]\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS841736.",
        "target_text": "Question: Heapsort stability check id=841736: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort always beats merge sort\nd) Heapsort is stable\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX888876114.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈888876114. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Doubles the bound to bracket, then binary search\nc) Requires the array to be cyclic\nd) Sorts the array first\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_4_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^3, f3=n^3 (log n)^4, f4=n^7?\nChoices:\na) Θ(n^3 (log n)^4)\nb) Θ((log n)^4)\nc) Θ(n^7)\nd) Θ(n^3)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP4145_734.",
        "target_text": "Question: Sorted array length n=4145. Decide if any pair sums to 734. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Hash set in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Divide and conquer in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN306602_531121.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=306602, B=531121. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Reverse one list then compare\nc) Advance pointers; when one ends, jump to the other head\nd) Binary search on addresses\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS6.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 6 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Sort segments then concatenate\nc) Use two stacks for counts and fragments\nd) Greedy left-to-right without memory\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B211563.",
        "target_text": "Question: Run BFS on an unweighted graph with 211563 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) Minimum memory footprint\nc) Lexicographic vertex order\nd) All simple paths before all edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL576_30867.",
        "target_text": "Question: Find the k=576-th largest element among n=30867 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Binary search on value domain\nc) Heapsort then index\nd) Build max-heap and extract k times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH1024.",
        "target_text": "Question: In open addressing with double hashing over table size m=1024, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Choose m even and g(k) even\nc) Make both hash functions identical\nd) Use g(k)=0 for some keys\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS725695.",
        "target_text": "Question: BST with parent pointers (id=725695): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) Use level-order and pick next node\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Reverse postorder traversal entirely\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS2792_17493.",
        "target_text": "Question: A directed graph with V=2792, E≈17493. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) When it is a DAG (no directed cycles)\nc) Only if the graph is connected\nd) Only if edges are unweighted\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Randomized hashing makes spurious matches rare. Variant RK257_1000000009.",
        "target_text": "Question: Rabin–Karp with base=257, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Use of a min-heap\nb) Suffix tree guaranteeing O(1) per char\nc) Trie of all substrings\nd) Low collision probability of rolling hash\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS300647.",
        "target_text": "Question: Heapsort stability check id=300647: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort is not stable by default\nc) Heapsort always beats merge sort\nd) Heapsort needs extra Θ(n) memory\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX589183394.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈589183394. Why?\nChoices:\na) Requires the array to be cyclic\nb) Doubles the bound to bracket, then binary search\nc) Uses hashing to index unknown segments\nd) Sorts the array first\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M3_4_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/4) + n^2 for n being a power of 4.\nChoices:\na) Θ(n^2 log n)\nb) Θ(n^0.7925 log n)\nc) Θ(n^2)\nd) Θ(n^0.7925)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R125993.",
        "target_text": "Question: Rotate an array right by r=125993 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Heapify then extract\nc) Single-step rotate repeated r times\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL31265.",
        "target_text": "Question: Check if a singly linked list of length n=31265 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Sort and compare with original\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS4107.",
        "target_text": "Question: Compute stock span for 4107 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Monotonic stack\nc) Priority queue\nd) Fenwick tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B452828.",
        "target_text": "Question: Run BFS on an unweighted graph with 452828 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Minimum memory footprint\nc) Nondecreasing distance from source\nd) Lexicographic vertex order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL159_284567.",
        "target_text": "Question: Find the k=159-th largest element among n=284567 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Deterministic selection (median-of-medians)\nc) Binary search on value domain\nd) Heapsort then index\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH131072.",
        "target_text": "Question: In open addressing with double hashing over table size m=131072, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) Use g(k)=0 for some keys\nc) Make both hash functions identical\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR228636.",
        "target_text": "Question: In a BST with distinct keys (id=228636), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Inorder\nc) Level-order\nd) Postorder\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST991236.",
        "target_text": "Question: MST question id=991236: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) MST is always unique in connected graphs\nc) Kruskal adds the smallest edge that doesn't create a cycle\nd) Prim requires the entire edge set to be sorted first\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z181473.",
        "target_text": "Question: For string S (id=181473), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Number of distinct substrings up to i\nc) Number of mismatches at i\nd) Next index of S[i]\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB4320653.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=4320653 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n^2)\nc) Ω(n)\nd) Ω(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS3212741.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=3212741 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n)\nc) Θ(log n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_1_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^4, f3=n^4 (log n)^1, f4=n^11?\nChoices:\na) Θ(n^4)\nb) Θ((log n)^1)\nc) Θ(n^4 (log n)^1)\nd) Θ(n^11)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R958030.",
        "target_text": "Question: Rotate an array right by r=958030 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Three-reversal method\nc) Heapify then extract\nd) Single-step rotate repeated r times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK47_2059.",
        "target_text": "Question: Merge k=47 sorted linked lists totaling n=2059 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n log n)\nc) Θ(n + k^2)\nd) Θ(k n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS4.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 4 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Greedy left-to-right without memory\nb) Use two stacks for counts and fragments\nc) Use BFS on substring graph\nd) Sort segments then concatenate\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ473319.",
        "target_text": "Question: For 473319 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Deque\nc) Binary heap\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH6372876.",
        "target_text": "Question: Build a binary heap from n=6372876 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n^2)\nc) Θ(log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF980107_0.6.",
        "target_text": "Question: Chaining hash table with n=980107 keys at load factor α=0.6. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(nα)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H624147541.",
        "target_text": "Question: For a balanced BST with n=624147541 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP488781.",
        "target_text": "Question: Test bipartiteness (id=488781) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Compute an MST then inspect edges\nd) Sort vertices and deduplicate\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP33615.",
        "target_text": "Question: KMP matches a pattern of length m=33615 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Suffix array\nc) Z-array exclusively\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS110322.",
        "target_text": "Question: Heapsort stability check id=110322: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort always beats merge sort\nc) Heapsort is not stable by default\nd) Heapsort is stable\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS4442374.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=4442374 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(1) expected\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T2_1_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^2, f3=n^2 (log n)^1, f4=n^9?\nChoices:\na) Θ(n^9)\nb) Θ((log n)^1)\nc) Θ(n^2)\nd) Θ(n^2 (log n)^1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM65929.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=65929-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Hash all present values then scan\nc) Use a heap of differences\nd) Scan linearly counting gaps\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL50384.",
        "target_text": "Question: Check if a singly linked list of length n=50384 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Sort and compare with original\nc) Copy to array and two-pointer check\nd) Use a hash set of seen values\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS4425.",
        "target_text": "Question: Compute stock span for 4425 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Hash table\nc) Monotonic stack\nd) Priority queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW5028_494.",
        "target_text": "Question: Sliding window maximum for array length n=5028 and window w=494. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(nw)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA15_28868093.",
        "target_text": "Question: In a d-ary heap with d=15 and n=28868093 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(√n)\nd) Θ(log_15 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.66.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.66?\nChoices:\na) To reduce memory usage to exact size\nb) To maintain key stability\nc) To sort keys implicitly\nd) To keep expected O(1) operations\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS463975.",
        "target_text": "Question: BST with parent pointers (id=463975): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Use level-order and pick next node\nc) Reverse postorder traversal entirely\nd) Always climb to root then go right once\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST441198.",
        "target_text": "Question: MST question id=441198: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) MST is always unique in connected graphs\nd) MST minimizes number of edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS58722.",
        "target_text": "Question: In KMP, what does LPS[58722] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Total distinct prefixes up to i\nd) Number of mismatches up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS524896.",
        "target_text": "Question: Keys are integers in range [0..524896]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Heap sort\nc) Counting sort\nd) Quick sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS6314960.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=6314960 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(1) expected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M8_4_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/4) + n^4 for n being a power of 4.\nChoices:\na) Θ(n^1.5 log n)\nb) Θ(n^4)\nc) Θ(n^4 log n)\nd) Θ(n^1.5)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM972079.",
        "target_text": "Question: Find a majority element in an array of length n=972079 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Boyer–Moore voting with verification\nc) Counting sort\nd) Binary search on value domain\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL92577.",
        "target_text": "Question: Check if a singly linked list of length n=92577 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Use a hash set of seen values\nc) Copy to array and two-pointer check\nd) Sort and compare with original\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1809.",
        "target_text": "Question: Verify whether a pop sequence of length n=1809 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Backtrack with recursion in Θ(2^n)\nc) Sort both sequences then compare\nd) Use a queue to mirror the stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B766277.",
        "target_text": "Question: Run BFS on an unweighted graph with 766277 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Nondecreasing distance from source\nc) Minimum memory footprint\nd) Lexicographic vertex order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM305_34195.",
        "target_text": "Question: Merge k=305 sorted streams totaling N=34195 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(N log k)\nc) Θ(k log N)\nd) Θ(N + k^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.99.",
        "target_text": "Question: In separate chaining with load factor α=0.99, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(α)\nd) Θ(1/α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS845733.",
        "target_text": "Question: BST with parent pointers (id=845733): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Use level-order and pick next node\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Always climb to root then go right once\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D775633.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 775633]. Why?\nChoices:\na) Self-loops must be absent\nb) Graph must be undirected\nc) Nonnegative weights ensure greedy optimality\nd) Distinct weights are required\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN278072.",
        "target_text": "Question: Check anagrams for strings of length n=278072 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) DFS on character graph\nc) Count character frequencies in Θ(n)\nd) Use a stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB87867091.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=87867091 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n)\nc) Ω(log n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS996749.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=996749 typically runs in?\nChoices:\na) Θ(log n) average\nb) O(1) worst-case\nc) Θ(n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T5_3_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^5, f3=n^5 (log n)^3, f4=n^12?\nChoices:\na) Θ((log n)^3)\nb) Θ(n^5 (log n)^3)\nc) Θ(n^12)\nd) Θ(n^5)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R678623.",
        "target_text": "Question: Rotate an array right by r=678623 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Single-step rotate repeated r times\nc) Three-reversal method\nd) Selection sort then shift\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR5.",
        "target_text": "Question: Reverse a singly linked list in groups of k=5 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(n log k)\nc) Θ(nk)\nd) Θ(k log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1913.",
        "target_text": "Question: Verify whether a pop sequence of length n=1913 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Backtrack with recursion in Θ(2^n)\nc) Simulate using one stack in Θ(n)\nd) Sort both sequences then compare\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ977379.",
        "target_text": "Question: For 977379 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Stack\nc) Deque\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM547_208977.",
        "target_text": "Question: Merge k=547 sorted streams totaling N=208977 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(N log k)\nc) Θ(N + k^2)\nd) Θ(k log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH131072.",
        "target_text": "Question: In open addressing with double hashing over table size m=131072, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) g(k) coprime with m for all keys\nc) Choose m even and g(k) even\nd) Make both hash functions identical\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS593285.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=593285-th smallest?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(k)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC663630.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=663630 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V log V)\nb) Θ(VE)\nc) Θ(E log V)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP27711.",
        "target_text": "Question: KMP matches a pattern of length m=27711 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Z-array exclusively\nc) LPS (failure) function\nd) Suffix array\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS600.",
        "target_text": "Question: Array is nearly sorted with at most 600 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Shell sort with fixed gaps\nc) Insertion sort\nd) Heap sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS4442031.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=4442031 typically runs in?\nChoices:\na) O(1) worst-case\nb) Θ(n) average\nc) O(log log n) average\nd) Θ(log n) average\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M8_2_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/2) + n^1 for n being a power of 2.\nChoices:\na) Θ(n^1 log n)\nb) Θ(n^1)\nc) Θ(n^3.0)\nd) Θ(n^3.0 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM26475.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=26475-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Hash all present values then scan\nc) Binary search on index vs value gap\nd) Use a heap of differences\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL60012.",
        "target_text": "Question: Check if a singly linked list of length n=60012 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Use a hash set of seen values\nc) Copy to array and two-pointer check\nd) Sort and compare with original\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP891.",
        "target_text": "Question: Verify whether a pop sequence of length n=891 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Use a queue to mirror the stack\nc) Simulate using one stack in Θ(n)\nd) Backtrack with recursion in Θ(2^n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ40444.",
        "target_text": "Question: For 40444 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Queue\nc) Stack\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC35332143.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=35332143?\nChoices:\na) Θ(log log n)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.37.",
        "target_text": "Question: In separate chaining with load factor α=0.37, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS791195.",
        "target_text": "Question: BST with parent pointers (id=791195): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Always climb to root then go right once\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Use level-order and pick next node\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS620545_1240879.",
        "target_text": "Question: A directed graph with V=620545, E≈1240879. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) Only if the graph is connected\nc) When all vertices have outdegree ≥ 1\nd) Only if edges are unweighted\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Character-by-character descent. Variant TRIE2.",
        "target_text": "Question: Search a trie over alphabet size σ=2 for a key of length m. Time complexity?\nChoices:\na) Θ(m log σ)\nb) Θ(m)\nc) Θ(1) average for all m\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB97349695.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=97349695 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n log n)\nc) Ω(log n)\nd) Ω(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX480085601.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈480085601. Why?\nChoices:\na) Requires the array to be cyclic\nb) Uses hashing to index unknown segments\nc) Sorts the array first\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_2_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^1, f3=n^1 (log n)^2, f4=n^5?\nChoices:\na) Θ(n^1 (log n)^2)\nb) Θ(n^5)\nc) Θ((log n)^2)\nd) Θ(n^1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P447569.",
        "target_text": "Question: Answer 447569 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Use a stack to store partial sums\nc) Build prefix-sum array; O(1) per query\nd) Recompute sums per query in Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL54177.",
        "target_text": "Question: Check if a singly linked list of length n=54177 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Copy to array and two-pointer check\nc) Use a hash set of seen values\nd) Sort and compare with original\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP3_4.",
        "target_text": "Question: Evaluate an infix expression with 3–4 precedence levels and parentheses. Linear-time method?\nChoices:\na) Sort tokens by precedence then scan\nb) Left-to-right without stacks\nc) Build a tree without any stack\nd) Convert to postfix and evaluate with a stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ511924.",
        "target_text": "Question: For 511924 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Queue\nc) Deque\nd) Stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM513_181849.",
        "target_text": "Question: Merge k=513 sorted streams totaling N=181849 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log N)\nc) Θ(N + k^2)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF4223925_0.82.",
        "target_text": "Question: Chaining hash table with n=4223925 keys at load factor α=0.82. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA836679.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=836679 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Euler tour + RMQ yields O(1) per query\nc) DFS from root each time\nd) Naive parent climbing O(n) per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR306166.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=306166 edges. What algorithmic idea achieves linear time?\nChoices:\na) Kruskal’s algorithm\nb) Topological sorting\nc) Dijkstra’s algorithm\nd) Tarjan’s low-link DFS\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS35755.",
        "target_text": "Question: In KMP, what does LPS[35755] represent for a given pattern?\nChoices:\na) Length of longest proper prefix that is also a suffix for prefix ending at i\nb) Index of next occurrence\nc) Total distinct prefixes up to i\nd) Number of mismatches up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS683454.",
        "target_text": "Question: Keys are integers in range [0..683454]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Shell sort\nc) Heap sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU5124163.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=5124163. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Linear scan with early exit\nc) Hashing with chaining\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M4_5_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/5) + n^2 for n being a power of 5.\nChoices:\na) Θ(n^0.8614 log n)\nb) Θ(n^2 log n)\nc) Θ(n^2)\nd) Θ(n^0.8614)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P975611.",
        "target_text": "Question: Answer 975611 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Use a stack to store partial sums\nc) Recompute sums per query in Θ(n)\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN503491.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 503491, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Traverse from head to find predecessor\nc) Reverse list then delete head\nd) Impossible under any model\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE64821.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=64821. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Max-heap\nc) Queue\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ363204.",
        "target_text": "Question: For 363204 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Stack\nc) Deque\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH1708169.",
        "target_text": "Question: Build a binary heap from n=1708169 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H76462190.",
        "target_text": "Question: For a balanced BST with n=76462190 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC755074.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=755074 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(V log V)\nc) Θ(VE)\nd) Θ(E log V)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Character-by-character descent. Variant TRIE26.",
        "target_text": "Question: Search a trie over alphabet size σ=26 for a key of length m. Time complexity?\nChoices:\na) Θ(m log σ)\nb) Θ(m)\nc) Θ(1) average for all m\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS116680.",
        "target_text": "Question: Keys are integers in range [0..116680]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Shell sort\nc) Counting sort\nd) Heap sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI84_366.",
        "target_text": "Question: Binary search over half-open range [84, 366)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Keep inclusive bounds on both ends\nd) Increase both lo and hi to skip duplicates\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M9_3_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/3) + n^2 for n being a power of 3.\nChoices:\na) Θ(n^2 log n)\nb) Θ(n^2.0 log^2 n)\nc) Θ(n^2.0)\nd) Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP17566_1978.",
        "target_text": "Question: Sorted array length n=17566. Decide if any pair sums to 1978. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Brute force in Θ(n^2)\nc) Hash set in Θ(n log n)\nd) Divide and conquer in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN659765.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 659765, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Copy next node’s data here and bypass next\nc) Impossible under any model\nd) Traverse from head to find predecessor\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS1840.",
        "target_text": "Question: Compute stock span for 1840 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Hash table\nc) Fenwick tree\nd) Priority queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ65635.",
        "target_text": "Question: For 65635 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Stack\nc) Queue\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM156_43821.",
        "target_text": "Question: Merge k=156 sorted streams totaling N=43821 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log k)\nc) Θ(k log N)\nd) Θ(N log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR928760.",
        "target_text": "Question: In a BST with distinct keys (id=928760), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Postorder\nc) Level-order\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP339016.",
        "target_text": "Question: Test bipartiteness (id=339016) of an undirected graph efficiently. Which method works?\nChoices:\na) Attempt 2-coloring via BFS; failure indicates odd cycle\nb) Compute an MST then inspect edges\nc) Sort vertices and deduplicate\nd) Check all degrees even\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN766232.",
        "target_text": "Question: Check anagrams for strings of length n=766232 over fixed alphabet. Optimal approach?\nChoices:\na) Use a stack\nb) Sort both in Θ(n log n)\nc) DFS on character graph\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS92.",
        "target_text": "Question: Array is nearly sorted with at most 92 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Shell sort with fixed gaps\nc) Radix sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS3644059.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=3644059 typically runs in?\nChoices:\na) O(1) worst-case\nb) Θ(n) average\nc) O(log log n) average\nd) Θ(log n) average\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Geometric resizing spreads copying cost over many operations. Variant A8.",
        "target_text": "Question: A dynamic array starts with capacity 8 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(1)\nb) Θ(√m)\nc) Θ(log m)\nd) Θ(m)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R157682.",
        "target_text": "Question: Rotate an array right by r=157682 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Three-reversal method\nc) Selection sort then shift\nd) Single-step rotate repeated r times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN421552_529670.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=421552, B=529670. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Hash addresses of first list\nc) Binary search on addresses\nd) Reverse one list then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP11.",
        "target_text": "Question: Verify whether a pop sequence of length n=11 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Sort both sequences then compare\nc) Use a queue to mirror the stack\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS1578.",
        "target_text": "Question: A queue via two stacks handles a burst of 1578 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) Both Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL368_647229.",
        "target_text": "Question: Find the k=368-th largest element among n=647229 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Deterministic selection (median-of-medians)\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF8548415_0.74.",
        "target_text": "Question: Chaining hash table with n=8548415 keys at load factor α=0.74. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS533490.",
        "target_text": "Question: BST with parent pointers (id=533490): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Use level-order and pick next node\nc) Always climb to root then go right once\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC73028.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=73028 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(V+E)\nc) Θ(V log V)\nd) Θ(E log V)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN972510.",
        "target_text": "Question: Check anagrams for strings of length n=972510 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Sort both in Θ(n log n)\nc) Count character frequencies in Θ(n)\nd) Use a stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS130.",
        "target_text": "Question: Array is nearly sorted with at most 130 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Radix sort\nc) Insertion sort\nd) Heap sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS7774905.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=7774905 typically runs in?\nChoices:\na) Θ(n) average\nb) O(log log n) average\nc) O(1) worst-case\nd) Θ(log n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M9_2_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/2) + n^4 for n being a power of 2.\nChoices:\na) Θ(n^4 log n)\nb) Θ(n^3.1699)\nc) Θ(n^4)\nd) Θ(n^3.1699 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R378178.",
        "target_text": "Question: Rotate an array right by r=378178 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Three-reversal method\nc) Single-step rotate repeated r times\nd) Heapify then extract\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL55863.",
        "target_text": "Question: Check if a singly linked list of length n=55863 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Find middle, reverse second half, compare\nc) Copy to array and two-pointer check\nd) Use a hash set of seen values\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE63721.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=63721. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Decreasing stack\nc) Queue\nd) Max-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ505486.",
        "target_text": "Question: For 505486 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Stack\nc) Binary heap\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA8_55799137.",
        "target_text": "Question: In a d-ary heap with d=8 and n=55799137 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(log_8 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.82.",
        "target_text": "Question: In separate chaining with load factor α=0.82, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(1/α)\nd) Θ(α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR825778.",
        "target_text": "Question: In a BST with distinct keys (id=825778), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Inorder\nc) Level-order\nd) Preorder\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC635413.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=635413 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(E log V)\nc) Θ(V+E)\nd) Θ(V log V)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP66740.",
        "target_text": "Question: KMP matches a pattern of length m=66740 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Suffix array\nc) Z-array exclusively\nd) Rolling hash table\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS953.",
        "target_text": "Question: Array is nearly sorted with at most 953 inversions. Which algorithm excels?\nChoices:\na) Insertion sort\nb) Heap sort\nc) Shell sort with fixed gaps\nd) Radix sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS9181444.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=9181444 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(1) expected\nc) Θ(log n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T5_3_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^5, f3=n^5 (log n)^3, f4=n^12?\nChoices:\na) Θ((log n)^3)\nb) Θ(n^5)\nc) Θ(n^5 (log n)^3)\nd) Θ(n^12)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S7208_139.",
        "target_text": "Question: Array length n=7208, find max-sum subarray of fixed length k=139. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Phase difference accumulates around the cycle. Variant C4.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 4× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(n) space\nb) Θ(n) time, Θ(1) space\nc) Θ(log n) time, Θ(1) space\nd) Θ(1) time, Θ(1) space\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE4194.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=4194. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Decreasing stack\nc) Max-heap\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ327939.",
        "target_text": "Question: Schedule 327939 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Unordered array\nc) Circular queue\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC63121350.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=63121350?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH4096.",
        "target_text": "Question: In open addressing with double hashing over table size m=4096, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) Choose m even and g(k) even\nc) g(k) coprime with m for all keys\nd) Use g(k)=0 for some keys\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA518443.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=518443 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) DFS from root each time\nc) Euler tour + RMQ yields O(1) per query\nd) Sort node labels then binary search\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D893294.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 893294]. Why?\nChoices:\na) Self-loops must be absent\nb) Nonnegative weights ensure greedy optimality\nc) Distinct weights are required\nd) Graph must be undirected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z960597.",
        "target_text": "Question: For string S (id=960597), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Number of distinct substrings up to i\nc) Next index of S[i]\nd) Number of mismatches at i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS877688.",
        "target_text": "Question: Keys are integers in range [0..877688]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Quick sort\nc) Counting sort\nd) Shell sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX155516463.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈155516463. Why?\nChoices:\na) Requires the array to be cyclic\nb) Sorts the array first\nc) Doubles the bound to bracket, then binary search\nd) Uses hashing to index unknown segments\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M4_5_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/5) + n^0 for n being a power of 5.\nChoices:\na) Θ(n^0.8614 log n)\nb) Θ(n^0)\nc) Θ(n^0.8614)\nd) Θ(n^0 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM80705.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=80705-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Hash all present values then scan\nc) Scan linearly counting gaps\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR9.",
        "target_text": "Question: Reverse a singly linked list in groups of k=9 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n log k)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1731.",
        "target_text": "Question: Verify whether a pop sequence of length n=1731 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Sort both sequences then compare\nc) Use a queue to mirror the stack\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ894241.",
        "target_text": "Question: Schedule 894241 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Binary heap\nc) Unordered array\nd) Stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK5.",
        "target_text": "Question: In a d-ary heap (d=5), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It makes the operation constant time\nb) No effect whatsoever\nc) It increases height linearly\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF6124876_0.27.",
        "target_text": "Question: Chaining hash table with n=6124876 keys at load factor α=0.27. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(α log α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS645399.",
        "target_text": "Question: BST with parent pointers (id=645399): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Reverse postorder traversal entirely\nd) Always climb to root then go right once\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR491583.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=491583 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Tarjan’s low-link DFS\nc) Kruskal’s algorithm\nd) Dijkstra’s algorithm\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN214268.",
        "target_text": "Question: Check anagrams for strings of length n=214268 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) Use a stack\nc) DFS on character graph\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX9_4.",
        "target_text": "Question: Radix sort with d=9 digits and base b=4 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(d·n·log b)\nc) Θ(n log n)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX432354591.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈432354591. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Sorts the array first\nc) Requires the array to be cyclic\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T5_4_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^5, f3=n^5 (log n)^4, f4=n^11?\nChoices:\na) Θ(n^5)\nb) Θ((log n)^4)\nc) Θ(n^5 (log n)^4)\nd) Θ(n^11)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM577572.",
        "target_text": "Question: Find a majority element in an array of length n=577572 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Binary search on value domain\nc) Counting sort\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL67463.",
        "target_text": "Question: Check if a singly linked list of length n=67463 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Copy to array and two-pointer check\nc) Sort and compare with original\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP860.",
        "target_text": "Question: Verify whether a pop sequence of length n=860 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS7600.",
        "target_text": "Question: A queue via two stacks handles a burst of 7600 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) Both Θ(log n)\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC41069491.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=41069491?\nChoices:\na) Θ(1)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF8977919_0.24.",
        "target_text": "Question: Chaining hash table with n=8977919 keys at load factor α=0.24. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(nα)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS189505.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=189505-th smallest?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(k)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST367782.",
        "target_text": "Question: MST question id=367782: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) Prim requires the entire edge set to be sorted first\nd) MST is always unique in connected graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z814458.",
        "target_text": "Question: For string S (id=814458), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Length of the longest prefix starting at i matching S[0..]\nc) Next index of S[i]\nd) Number of distinct substrings up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS580.",
        "target_text": "Question: Array is nearly sorted with at most 580 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Insertion sort\nc) Heap sort\nd) Radix sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS8623464.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=8623464 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_5_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^3, f3=n^3 (log n)^5, f4=n^8?\nChoices:\na) Θ(n^8)\nb) Θ((log n)^5)\nc) Θ(n^3 (log n)^5)\nd) Θ(n^3)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM855948.",
        "target_text": "Question: Find a majority element in an array of length n=855948 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Binary search on value domain\nc) Boyer–Moore voting with verification\nd) Divide-and-conquer merges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK28_1502.",
        "target_text": "Question: Merge k=28 sorted linked lists totaling n=1502 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log k)\nc) Θ(n log n)\nd) Θ(k n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ957676.",
        "target_text": "Question: Schedule 957676 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Binary heap\nc) Stack\nd) Circular queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH7015657.",
        "target_text": "Question: Build a binary heap from n=7015657 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n^2)\nc) Θ(n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.17.",
        "target_text": "Question: In separate chaining with load factor α=1.17, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(α)\nc) Θ(1/α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS899515.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=899515-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(√n)\nd) Θ(k)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS546325_1722502.",
        "target_text": "Question: A directed graph with V=546325, E≈1722502. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) When it is a DAG (no directed cycles)\nc) Only if the graph is connected\nd) When all vertices have outdegree ≥ 1\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN332648.",
        "target_text": "Question: Check anagrams for strings of length n=332648 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) Sort both in Θ(n log n)\nc) Use a stack\nd) DFS on character graph\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS280918.",
        "target_text": "Question: Heapsort stability check id=280918: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort is stable\nc) Heapsort always beats merge sort\nd) Heapsort needs extra Θ(n) memory\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS2729197.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=2729197 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(1) expected\nc) Θ(log n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T3_3_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^3, f3=n^3 (log n)^3, f4=n^5?\nChoices:\na) Θ(n^3)\nb) Θ((log n)^3)\nc) Θ(n^3 (log n)^3)\nd) Θ(n^5)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM986466.",
        "target_text": "Question: Find a majority element in an array of length n=986466 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Binary search on value domain\nc) Boyer–Moore voting with verification\nd) Divide-and-conquer merges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR3.",
        "target_text": "Question: Reverse a singly linked list in groups of k=3 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(n)\nc) Θ(nk)\nd) Θ(k log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE61843.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=61843. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Max-heap\nc) Decreasing stack\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ26982.",
        "target_text": "Question: Schedule 26982 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Circular queue\nc) Unordered array\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH1014443.",
        "target_text": "Question: Build a binary heap from n=1014443 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF6371224_0.53.",
        "target_text": "Question: Chaining hash table with n=6371224 keys at load factor α=0.53. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(α log α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS645355.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=645355-th smallest?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(k)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC997427.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=997427 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(E log V)\nc) Θ(V+E)\nd) Θ(V log V)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB70694.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=70694. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Suffix automaton or suffix array + LCP\nc) Binary heap of substrings\nd) BST over all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS202025.",
        "target_text": "Question: Heapsort stability check id=202025: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort is not stable by default\nc) Heapsort is stable\nd) Heapsort always beats merge sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU3815389.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=3815389. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Hashing with chaining\nc) Binary search with left/right bias\nd) Heap-based selection\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M2_2_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/2) + n^0 for n being a power of 2.\nChoices:\na) Θ(n^0)\nb) Θ(n^1.0 log n)\nc) Θ(n^1.0)\nd) Θ(n^0 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM331364.",
        "target_text": "Question: Find a majority element in an array of length n=331364 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Counting sort\nc) Binary search on value domain\nd) Divide-and-conquer merges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK67_6478.",
        "target_text": "Question: Merge k=67 sorted linked lists totaling n=6478 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(k n)\nc) Θ(n log n)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Operator handling via stacks preserves associativity rules. Variant IP3_4.",
        "target_text": "Question: Evaluate an infix expression with 3–4 precedence levels and parentheses. Linear-time method?\nChoices:\na) Sort tokens by precedence then scan\nb) Left-to-right without stacks\nc) Convert to postfix and evaluate with a stack\nd) Build a tree without any stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS8995.",
        "target_text": "Question: A queue via two stacks handles a burst of 8995 operations. Amortized costs?\nChoices:\na) ENQUEUE and DEQUEUE both amortized Θ(1)\nb) Both Θ(log n)\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL41_734501.",
        "target_text": "Question: Find the k=41-th largest element among n=734501 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Binary search on value domain\nc) Build max-heap and extract k times\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF1435441_0.28.",
        "target_text": "Question: Chaining hash table with n=1435441 keys at load factor α=0.28. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(α log α)\nc) Θ(1 + α)\nd) Θ(nα)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H219429798.",
        "target_text": "Question: For a balanced BST with n=219429798 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS309641_2048015.",
        "target_text": "Question: A directed graph with V=309641, E≈2048015. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) Only if edges are unweighted\nc) Only if the graph is connected\nd) When all vertices have outdegree ≥ 1\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Character-by-character descent. Variant TRIE2.",
        "target_text": "Question: Search a trie over alphabet size σ=2 for a key of length m. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(m log σ)\nc) Θ(1) average for all m\nd) Θ(m)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST335180.",
        "target_text": "Question: Stability (id=335180): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Quick sort (stable), Selection sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS9557670.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=9557670 typically runs in?\nChoices:\na) Θ(log n) average\nb) O(1) worst-case\nc) O(log log n) average\nd) Θ(n) average\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M7_2_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/2) + n^4 for n being a power of 2.\nChoices:\na) Θ(n^2.8074 log n)\nb) Θ(n^4 log n)\nc) Θ(n^2.8074)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P580278.",
        "target_text": "Question: Answer 580278 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Recompute sums per query in Θ(n)\nc) Use a stack to store partial sums\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN948192.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 948192, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Reverse list then delete head\nc) Copy next node’s data here and bypass next\nd) Impossible under any model\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP54.",
        "target_text": "Question: Verify whether a pop sequence of length n=54 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Backtrack with recursion in Θ(2^n)\nc) Simulate using one stack in Θ(n)\nd) Use a queue to mirror the stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA3360.",
        "target_text": "Question: Circular-array queue with capacity 3360: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Head==Tail means full\nc) Require power-of-two capacity\nd) Require prime capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH1088179.",
        "target_text": "Question: Build a binary heap from n=1088179 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH131072.",
        "target_text": "Question: In open addressing with double hashing over table size m=131072, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Use g(k)=0 for some keys\nc) Choose m even and g(k) even\nd) Make both hash functions identical\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS285732.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=285732-th smallest?\nChoices:\na) Θ(k)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D269251.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 269251]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Graph must be undirected\nc) Self-loops must be absent\nd) Distinct weights are required\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB51421.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=51421. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) Suffix automaton or suffix array + LCP\nc) Queue of rolling hashes only\nd) BST over all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS281.",
        "target_text": "Question: Array is nearly sorted with at most 281 inversions. Which algorithm excels?\nChoices:\na) Insertion sort\nb) Heap sort\nc) Shell sort with fixed gaps\nd) Radix sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS5014098.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=5014098 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(1) expected\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M6_5_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/5) + n^3 for n being a power of 5.\nChoices:\na) Θ(n^1.1133)\nb) Θ(n^3)\nc) Θ(n^1.1133 log n)\nd) Θ(n^3 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S4728_221.",
        "target_text": "Question: Array length n=4728, find max-sum subarray of fixed length k=221. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN369115_569406.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=369115, B=569406. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Binary search on addresses\nc) Hash addresses of first list\nd) Advance pointers; when one ends, jump to the other head\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1439.",
        "target_text": "Question: Verify whether a pop sequence of length n=1439 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Simulate using one stack in Θ(n)\nc) Use a queue to mirror the stack\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA740.",
        "target_text": "Question: Circular-array queue with capacity 740: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Track count or keep one slot empty\nc) Require power-of-two capacity\nd) Head==Tail means full\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL457_649376.",
        "target_text": "Question: Find the k=457-th largest element among n=649376 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Binary search on value domain\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.49.",
        "target_text": "Question: In separate chaining with load factor α=1.49, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H835892228.",
        "target_text": "Question: For a balanced BST with n=835892228 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(√n)\nd) Θ(log log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D550221.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 550221]. Why?\nChoices:\na) Self-loops must be absent\nb) Distinct weights are required\nc) Nonnegative weights ensure greedy optimality\nd) Graph must be undirected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS89393.",
        "target_text": "Question: In KMP, what does LPS[89393] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Total distinct prefixes up to i\nd) Number of mismatches up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS148807.",
        "target_text": "Question: Heapsort stability check id=148807: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort always beats merge sort\nd) Heapsort is stable\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX671773828.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈671773828. Why?\nChoices:\na) Requires the array to be cyclic\nb) Sorts the array first\nc) Uses hashing to index unknown segments\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Geometric resizing spreads copying cost over many operations. Variant A4.",
        "target_text": "Question: A dynamic array starts with capacity 4 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(1)\nb) Θ(√m)\nc) Θ(log m)\nd) Θ(m)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P418650.",
        "target_text": "Question: Answer 418650 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Use a stack to store partial sums\nb) Recompute sums per query in Θ(n)\nc) Sort once and binary search per query\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK65_1826.",
        "target_text": "Question: Merge k=65 sorted linked lists totaling n=1826 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n + k^2)\nc) Θ(k n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1241.",
        "target_text": "Question: Verify whether a pop sequence of length n=1241 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Use a queue to mirror the stack\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS8825.",
        "target_text": "Question: A queue via two stacks handles a burst of 8825 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) Both Θ(log n)\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC41931129.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=41931129?\nChoices:\na) Θ(log log n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF6863427_0.45.",
        "target_text": "Question: Chaining hash table with n=6863427 keys at load factor α=0.45. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(nα)\nc) Θ(α log α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR418373.",
        "target_text": "Question: In a BST with distinct keys (id=418373), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Preorder\nc) Level-order\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP799230.",
        "target_text": "Question: Test bipartiteness (id=799230) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Compute an MST then inspect edges\nd) Sort vertices and deduplicate\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB62125.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=62125. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Binary heap of substrings\nc) Queue of rolling hashes only\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB32793568.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=32793568 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n^2)\nc) Ω(log n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX284050178.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈284050178. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Doubles the bound to bracket, then binary search\nc) Sorts the array first\nd) Requires the array to be cyclic\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M8_6_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/6) + n^3 for n being a power of 6.\nChoices:\na) Θ(n^1.1606 log n)\nb) Θ(n^3)\nc) Θ(n^3 log n)\nd) Θ(n^1.1606)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S1261_332.",
        "target_text": "Question: Array length n=1261, find max-sum subarray of fixed length k=332. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(k log n)\nd) Θ(nk)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL37825.",
        "target_text": "Question: Check if a singly linked list of length n=37825 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Use a hash set of seen values\nc) Copy to array and two-pointer check\nd) Sort and compare with original\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS1655.",
        "target_text": "Question: Compute stock span for 1655 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Priority queue\nc) Monotonic stack\nd) Hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA2233.",
        "target_text": "Question: Circular-array queue with capacity 2233: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require power-of-two capacity\nc) Require prime capacity\nd) Head==Tail means full\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL506_86449.",
        "target_text": "Question: Find the k=506-th largest element among n=86449 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Deterministic selection (median-of-medians)\nc) Heapsort then index\nd) Binary search on value domain\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF1157771_0.4.",
        "target_text": "Question: Chaining hash table with n=1157771 keys at load factor α=0.4. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS384069.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=384069-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(√n)\nd) Θ(k)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC877847.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=877847 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(V+E)\nc) Θ(VE)\nd) Θ(V log V)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB77512.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=77512. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Binary heap of substrings\nc) Queue of rolling hashes only\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX7_32.",
        "target_text": "Question: Radix sort with d=7 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(d·(n + b))\nc) Θ(n log n)\nd) Θ(d·n·log b)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX362804603.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈362804603. Why?\nChoices:\na) Requires the array to be cyclic\nb) Sorts the array first\nc) Doubles the bound to bracket, then binary search\nd) Uses hashing to index unknown segments\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A8.",
        "target_text": "Question: A dynamic array starts with capacity 8 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(√m)\nb) Θ(m)\nc) Θ(log m)\nd) Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R236946.",
        "target_text": "Question: Rotate an array right by r=236946 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Single-step rotate repeated r times\nc) Heapify then extract\nd) Selection sort then shift\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN21498.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 21498, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Reverse list then delete head\nc) Impossible under any model\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1787.",
        "target_text": "Question: Verify whether a pop sequence of length n=1787 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Simulate using one stack in Θ(n)\nc) Sort both sequences then compare\nd) Use a queue to mirror the stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS1353.",
        "target_text": "Question: A queue via two stacks handles a burst of 1353 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL888_769157.",
        "target_text": "Question: Find the k=888-th largest element among n=769157 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Deterministic selection (median-of-medians)\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.12.",
        "target_text": "Question: In separate chaining with load factor α=1.12, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H273309373.",
        "target_text": "Question: For a balanced BST with n=273309373 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP512870.",
        "target_text": "Question: Test bipartiteness (id=512870) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Compute an MST then inspect edges\nd) Check all degrees even\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z31689.",
        "target_text": "Question: For string S (id=31689), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Number of mismatches at i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of distinct substrings up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB91070211.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=91070211 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n^2)\nc) Ω(log n)\nd) Ω(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS4202566.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=4202566 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(1) expected\nc) Θ(n log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M3_4_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/4) + n^0 for n being a power of 4.\nChoices:\na) Θ(n^0 log n)\nb) Θ(n^0.7925 log n)\nc) Θ(n^0)\nd) Θ(n^0.7925)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S17906_432.",
        "target_text": "Question: Array length n=17906, find max-sum subarray of fixed length k=432. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(k log n)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(nk)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL24162.",
        "target_text": "Question: Check if a singly linked list of length n=24162 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Copy to array and two-pointer check\nc) Use a hash set of seen values\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP497.",
        "target_text": "Question: Verify whether a pop sequence of length n=497 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Simulate using one stack in Θ(n)\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ207242.",
        "target_text": "Question: For 207242 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Stack\nc) Binary heap\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK7.",
        "target_text": "Question: In a d-ary heap (d=7), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It increases height linearly\nb) It makes the operation constant time\nc) No effect whatsoever\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.75.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.75?\nChoices:\na) To reduce memory usage to exact size\nb) To keep expected O(1) operations\nc) To maintain key stability\nd) To sort keys implicitly\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS743786.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=743786-th smallest?\nChoices:\na) Θ(1)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D290086.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 290086]. Why?\nChoices:\na) Distinct weights are required\nb) Nonnegative weights ensure greedy optimality\nc) Self-loops must be absent\nd) Graph must be undirected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP58846.",
        "target_text": "Question: KMP matches a pattern of length m=58846 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) Suffix array\nc) Rolling hash table\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST368482.",
        "target_text": "Question: Stability (id=368482): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Merge sort (stable), Heap sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX748238493.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈748238493. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Requires the array to be cyclic\nc) Uses hashing to index unknown segments\nd) Sorts the array first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T4_2_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^4, f3=n^4 (log n)^2, f4=n^9?\nChoices:\na) Θ(n^9)\nb) Θ(n^4 (log n)^2)\nc) Θ((log n)^2)\nd) Θ(n^4)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P889482.",
        "target_text": "Question: Answer 889482 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Use a stack to store partial sums\nb) Sort once and binary search per query\nc) Build prefix-sum array; O(1) per query\nd) Recompute sums per query in Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN937687.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 937687, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Reverse list then delete head\nc) Traverse from head to find predecessor\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE5545.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=5545. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Max-heap\nc) Binary search tree\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA399.",
        "target_text": "Question: Circular-array queue with capacity 399: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require power-of-two capacity\nc) Require prime capacity\nd) Head==Tail means full\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK7.",
        "target_text": "Question: In a d-ary heap (d=7), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) No effect whatsoever\nb) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nc) It increases height linearly\nd) It makes the operation constant time\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.57.",
        "target_text": "Question: In separate chaining with load factor α=0.57, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(α)\nc) Θ(1/α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS683951.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=683951-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(k)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS35475_213023.",
        "target_text": "Question: A directed graph with V=35475, E≈213023. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if edges are unweighted\nc) When it is a DAG (no directed cycles)\nd) Only if the graph is connected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE2.",
        "target_text": "Question: Search a trie over alphabet size σ=2 for a key of length m. Time complexity?\nChoices:\na) Θ(1) average for all m\nb) Θ(m log σ)\nc) Θ(m)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS498744.",
        "target_text": "Question: Heapsort stability check id=498744: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort is stable\nc) Heapsort is not stable by default\nd) Heapsort always beats merge sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU7348405.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=7348405. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Binary search with left/right bias\nc) Hashing with chaining\nd) Linear scan with early exit\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M6_6_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/6) + n^2 for n being a power of 6.\nChoices:\na) Θ(n^1.0)\nb) Θ(n^2 log n)\nc) Θ(n^2)\nd) Θ(n^1.0 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P687954.",
        "target_text": "Question: Answer 687954 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Use a stack to store partial sums\nb) Recompute sums per query in Θ(n)\nc) Sort once and binary search per query\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Phase difference accumulates around the cycle. Variant C2.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 2× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(n) space\nb) Θ(n) time, Θ(1) space\nc) Θ(log n) time, Θ(1) space\nd) Θ(1) time, Θ(1) space\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1165.",
        "target_text": "Question: Verify whether a pop sequence of length n=1165 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Use a queue to mirror the stack\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA4010.",
        "target_text": "Question: Circular-array queue with capacity 4010: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Head==Tail means full\nc) Require prime capacity\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH3043805.",
        "target_text": "Question: Build a binary heap from n=3043805 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(n^2)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF252211_0.37.",
        "target_text": "Question: Chaining hash table with n=252211 keys at load factor α=0.37. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(log n)\nc) Θ(α log α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS970022.",
        "target_text": "Question: BST with parent pointers (id=970022): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Always climb to root then go right once\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Use level-order and pick next node\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF7044.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=7044 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Negative edge weights and negative cycles\nc) Only acyclic graphs\nd) Equal runtime on all graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS93562.",
        "target_text": "Question: In KMP, what does LPS[93562] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Total distinct prefixes up to i\nc) Number of mismatches up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS286961.",
        "target_text": "Question: Keys are integers in range [0..286961]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Quick sort\nc) Shell sort\nd) Heap sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Geometric level distribution mirrors balanced trees. Variant SL0.5.",
        "target_text": "Question: Skip list with level promotion probability p=0.5: expected complexity of search/insert/delete?\nChoices:\na) Θ(n) for all three\nb) Θ(√n) for all three\nc) Θ(1) for all three\nd) Θ(log n) for all three\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M4_3_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/3) + n^3 for n being a power of 3.\nChoices:\na) Θ(n^3)\nb) Θ(n^3 log n)\nc) Θ(n^1.2619 log n)\nd) Θ(n^1.2619)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S9787_393.",
        "target_text": "Question: Array length n=9787, find max-sum subarray of fixed length k=393. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(k log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C5.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 5× and 1×. Complexity?\nChoices:\na) Θ(log n) time, Θ(1) space\nb) Θ(n) time, Θ(1) space\nc) Θ(n) time, Θ(n) space\nd) Θ(1) time, Θ(1) space\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE79056.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=79056. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Queue\nc) Decreasing stack\nd) Binary search tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ8262.",
        "target_text": "Question: Schedule 8262 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Unordered array\nc) Stack\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL868_357322.",
        "target_text": "Question: Find the k=868-th largest element among n=357322 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Deterministic selection (median-of-medians)\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Threshold-based expansion preserves performance. Variant RS0.5.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.5?\nChoices:\na) To reduce memory usage to exact size\nb) To maintain key stability\nc) To keep expected O(1) operations\nd) To sort keys implicitly\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H740922266.",
        "target_text": "Question: For a balanced BST with n=740922266 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST740867.",
        "target_text": "Question: MST question id=740867: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) MST is always unique in connected graphs\nc) Kruskal adds the smallest edge that doesn't create a cycle\nd) Prim requires the entire edge set to be sorted first\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN176314.",
        "target_text": "Question: Check anagrams for strings of length n=176314 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Sort both in Θ(n log n)\nc) Count character frequencies in Θ(n)\nd) Use a stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS958764.",
        "target_text": "Question: Heapsort stability check id=958764: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort is not stable by default\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort always beats merge sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS7748928.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=7748928 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(1) expected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_1_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^1, f3=n^1 (log n)^1, f4=n^5?\nChoices:\na) Θ(n^5)\nb) Θ(n^1)\nc) Θ(n^1 (log n)^1)\nd) Θ((log n)^1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S985_322.",
        "target_text": "Question: Array length n=985, find max-sum subarray of fixed length k=322. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(k log n)\nb) Θ(nk)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL48812.",
        "target_text": "Question: Check if a singly linked list of length n=48812 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Use a hash set of seen values\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE39254.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=39254. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Binary search tree\nc) Queue\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA3677.",
        "target_text": "Question: Circular-array queue with capacity 3677: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Require prime capacity\nc) Head==Tail means full\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK7.",
        "target_text": "Question: In a d-ary heap (d=7), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) No effect whatsoever\nb) It increases height linearly\nc) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nd) It makes the operation constant time\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.84.",
        "target_text": "Question: In separate chaining with load factor α=0.84, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1 + α)\nc) Θ(1/α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H224229066.",
        "target_text": "Question: For a balanced BST with n=224229066 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(log log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF54455.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=54455 can handle which case while detecting it?\nChoices:\na) Only acyclic graphs\nb) Negative edge weights and negative cycles\nc) Equal runtime on all graphs\nd) Faster runtime on sparse nonnegative graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000009.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Low collision probability of rolling hash\nb) Use of a min-heap\nc) Suffix tree guaranteeing O(1) per char\nd) Trie of all substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS782199.",
        "target_text": "Question: Heapsort stability check id=782199: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort always beats merge sort\nc) Heapsort is stable\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI27_1236.",
        "target_text": "Question: Binary search over half-open range [27, 1236)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Increase both lo and hi to skip duplicates\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M7_6_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/6) + n^1 for n being a power of 6.\nChoices:\na) Θ(n^1.086)\nb) Θ(n^1 log n)\nc) Θ(n^1.086 log n)\nd) Θ(n^1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM76698.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=76698-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Hash all present values then scan\nc) Binary search on index vs value gap\nd) Use a heap of differences\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN80761_118502.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=80761, B=118502. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Binary search on addresses\nc) Hash addresses of first list\nd) Reverse one list then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS1515.",
        "target_text": "Question: Compute stock span for 1515 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Priority queue\nc) Hash table\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS922.",
        "target_text": "Question: A queue via two stacks handles a burst of 922 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC48778024.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=48778024?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(1)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.76.",
        "target_text": "Question: In separate chaining with load factor α=0.76, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR814660.",
        "target_text": "Question: In a BST with distinct keys (id=814660), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Inorder\nc) Preorder\nd) Postorder\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Repeated edge relaxation tolerates negatives. Variant BF43772.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=43772 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Only acyclic graphs\nc) Negative edge weights and negative cycles\nd) Equal runtime on all graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP3241.",
        "target_text": "Question: KMP matches a pattern of length m=3241 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) LPS (failure) function\nc) Rolling hash table\nd) Suffix array\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS368158.",
        "target_text": "Question: Keys are integers in range [0..368158]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Counting sort\nc) Shell sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU9631767.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=9631767. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Hashing with chaining\nc) Binary search with left/right bias\nd) Linear scan with early exit\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M9_4_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/4) + n^4 for n being a power of 4.\nChoices:\na) Θ(n^1.585 log n)\nb) Θ(n^1.585)\nc) Θ(n^4)\nd) Θ(n^4 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R597101.",
        "target_text": "Question: Rotate an array right by r=597101 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Three-reversal method\nc) Heapify then extract\nd) Selection sort then shift\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN573063_961725.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=573063, B=961725. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Reverse one list then compare\nc) Binary search on addresses\nd) Advance pointers; when one ends, jump to the other head\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP214.",
        "target_text": "Question: Verify whether a pop sequence of length n=214 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Sort both sequences then compare\nc) Simulate using one stack in Θ(n)\nd) Use a queue to mirror the stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B625396.",
        "target_text": "Question: Run BFS on an unweighted graph with 625396 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) Minimum memory footprint\nc) Nondecreasing distance from source\nd) All simple paths before all edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC3841977.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=3841977?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.68.",
        "target_text": "Question: In separate chaining with load factor α=0.68, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(log n)\nc) Θ(α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR198859.",
        "target_text": "Question: In a BST with distinct keys (id=198859), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Postorder\nc) Inorder\nd) Preorder\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST56220.",
        "target_text": "Question: MST question id=56220: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) MST minimizes number of edges\nc) MST is always unique in connected graphs\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z125217.",
        "target_text": "Question: For string S (id=125217), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Length of the longest prefix starting at i matching S[0..]\nc) Number of mismatches at i\nd) Next index of S[i]\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS70570.",
        "target_text": "Question: Keys are integers in range [0..70570]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Heap sort\nc) Counting sort\nd) Shell sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS7789301.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=7789301 typically runs in?\nChoices:\na) O(log log n) average\nb) O(1) worst-case\nc) Θ(log n) average\nd) Θ(n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M4_3_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/3) + n^0 for n being a power of 3.\nChoices:\na) Θ(n^1.2619 log n)\nb) Θ(n^0)\nc) Θ(n^1.2619)\nd) Θ(n^0 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM5011.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=5011-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Use a heap of differences\nc) Binary search on index vs value gap\nd) Scan linearly counting gaps\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR7.",
        "target_text": "Question: Reverse a singly linked list in groups of k=7 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(k log n)\nb) Θ(n)\nc) Θ(nk)\nd) Θ(n log k)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS1136.",
        "target_text": "Question: Compute stock span for 1136 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Monotonic stack\nc) Hash table\nd) Priority queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B606344.",
        "target_text": "Question: Run BFS on an unweighted graph with 606344 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) Lexicographic vertex order\nc) All simple paths before all edges\nd) Minimum memory footprint\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA3_45312933.",
        "target_text": "Question: In a d-ary heap with d=3 and n=45312933 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log_3 n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.46.",
        "target_text": "Question: In separate chaining with load factor α=0.46, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(1/α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H689988771.",
        "target_text": "Question: For a balanced BST with n=689988771 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST461902.",
        "target_text": "Question: MST question id=461902: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) MST minimizes number of edges\nc) Prim requires the entire edge set to be sorted first\nd) MST is always unique in connected graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS8790.",
        "target_text": "Question: In KMP, what does LPS[8790] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Index of next occurrence\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Total distinct prefixes up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB38375190.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=38375190 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n^2)\nc) Ω(n log n)\nd) Ω(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU2683310.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=2683310. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Heap-based selection\nc) Hashing with chaining\nd) Linear scan with early exit\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T5_3_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^5, f3=n^5 (log n)^3, f4=n^10?\nChoices:\na) Θ(n^5 (log n)^3)\nb) Θ((log n)^3)\nc) Θ(n^10)\nd) Θ(n^5)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R959988.",
        "target_text": "Question: Rotate an array right by r=959988 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Selection sort then shift\nc) Three-reversal method\nd) Single-step rotate repeated r times\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN517805_618051.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=517805, B=618051. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Hash addresses of first list\nc) Binary search on addresses\nd) Reverse one list then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE8825.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=8825. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Queue\nc) Decreasing stack\nd) Max-heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA2589.",
        "target_text": "Question: Circular-array queue with capacity 2589: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Head==Tail means full\nc) Require power-of-two capacity\nd) Require prime capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM171_64987.",
        "target_text": "Question: Merge k=171 sorted streams totaling N=64987 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(N + k^2)\nc) Θ(N log k)\nd) Θ(k log N)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC1.1.",
        "target_text": "Question: In separate chaining with load factor α=1.1, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H454732959.",
        "target_text": "Question: For a balanced BST with n=454732959 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF61660.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=61660 can handle which case while detecting it?\nChoices:\na) Only acyclic graphs\nb) Negative edge weights and negative cycles\nc) Equal runtime on all graphs\nd) Faster runtime on sparse nonnegative graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Randomized hashing makes spurious matches rare. Variant RK911382323_998244353.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=998244353 achieves expected linear time due to what?\nChoices:\na) Use of a min-heap\nb) Suffix tree guaranteeing O(1) per char\nc) Trie of all substrings\nd) Low collision probability of rolling hash\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB17022382.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=17022382 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n log n)\nc) Ω(n^2)\nd) Ω(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS4882260.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=4882260 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M8_5_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/5) + n^2 for n being a power of 5.\nChoices:\na) Θ(n^2)\nb) Θ(n^2 log n)\nc) Θ(n^1.292)\nd) Θ(n^1.292 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R732700.",
        "target_text": "Question: Rotate an array right by r=732700 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Selection sort then shift\nc) Three-reversal method\nd) Single-step rotate repeated r times\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C3.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 3× and 1×. Complexity?\nChoices:\na) Θ(1) time, Θ(1) space\nb) Θ(n) time, Θ(1) space\nc) Θ(n) time, Θ(n) space\nd) Θ(log n) time, Θ(1) space\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE80540.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=80540. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Queue\nc) Decreasing stack\nd) Binary search tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS1328.",
        "target_text": "Question: A queue via two stacks handles a burst of 1328 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) Both Θ(log n)\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK8.",
        "target_text": "Question: In a d-ary heap (d=8), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) It increases height linearly\nc) It makes the operation constant time\nd) No effect whatsoever\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Adversarial patterns are neutralized by random choice. Variant UH100000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=100000 slots yields what benefit?\nChoices:\na) Eliminates need for resizing\nb) Expected constant-time operations against adversaries\nc) Cryptographic security by default\nd) Zero collisions guaranteed\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS199755.",
        "target_text": "Question: BST with parent pointers (id=199755): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Use level-order and pick next node\nc) Always climb to root then go right once\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D152383.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 152383]. Why?\nChoices:\na) Graph must be undirected\nb) Distinct weights are required\nc) Self-loops must be absent\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z100865.",
        "target_text": "Question: For string S (id=100865), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Number of mismatches at i\nc) Next index of S[i]\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS698963.",
        "target_text": "Question: Heapsort stability check id=698963: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is stable\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU2566952.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=2566952. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Linear scan with early exit\nc) Binary search with left/right bias\nd) Heap-based selection\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M3_5_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/5) + n^1 for n being a power of 5.\nChoices:\na) Θ(n^1)\nb) Θ(n^0.6826 log n)\nc) Θ(n^1 log n)\nd) Θ(n^0.6826)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM20131.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=20131-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Binary search on index vs value gap\nc) Use a heap of differences\nd) Scan linearly counting gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK84_1263.",
        "target_text": "Question: Merge k=84 sorted linked lists totaling n=1263 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n + k^2)\nc) Θ(k n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP119.",
        "target_text": "Question: Verify whether a pop sequence of length n=119 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Use a queue to mirror the stack\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA2679.",
        "target_text": "Question: Circular-array queue with capacity 2679: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require power-of-two capacity\nc) Require prime capacity\nd) Head==Tail means full\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC40514647.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=40514647?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(1)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF4204389_0.83.",
        "target_text": "Question: Chaining hash table with n=4204389 keys at load factor α=0.83. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(α log α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR869796.",
        "target_text": "Question: In a BST with distinct keys (id=869796), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Preorder\nc) Postorder\nd) Level-order\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Repeated edge relaxation tolerates negatives. Variant BF58619.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=58619 can handle which case while detecting it?\nChoices:\na) Negative edge weights and negative cycles\nb) Faster runtime on sparse nonnegative graphs\nc) Only acyclic graphs\nd) Equal runtime on all graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Randomized hashing makes spurious matches rare. Variant RK257_1000000007.",
        "target_text": "Question: Rabin–Karp with base=257, mod=1000000007 achieves expected linear time due to what?\nChoices:\na) Suffix tree guaranteeing O(1) per char\nb) Trie of all substrings\nc) Low collision probability of rolling hash\nd) Use of a min-heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX4_2.",
        "target_text": "Question: Radix sort with d=4 digits and base b=2 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(b^d)\nc) Θ(d·n·log b)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU3629320.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=3629320. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Binary search with left/right bias\nc) Hashing with chaining\nd) Heap-based selection\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M9_3_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/3) + n^3 for n being a power of 3.\nChoices:\na) Θ(n^3)\nb) Θ(n^2.0)\nc) Θ(n^3 log n)\nd) Θ(n^2.0 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM22900.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=22900-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Scan linearly counting gaps\nc) Use a heap of differences\nd) Hash all present values then scan\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK80_4035.",
        "target_text": "Question: Merge k=80 sorted linked lists totaling n=4035 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n log k)\nc) Θ(n + k^2)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE24167.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=24167. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Max-heap\nc) Binary search tree\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ152578.",
        "target_text": "Question: Schedule 152578 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Binary heap\nc) Stack\nd) Unordered array\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH465577.",
        "target_text": "Question: Build a binary heap from n=465577 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(n^2)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH65536.",
        "target_text": "Question: In open addressing with double hashing over table size m=65536, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) Choose m even and g(k) even\nc) Make both hash functions identical\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H28577150.",
        "target_text": "Question: For a balanced BST with n=28577150 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(log log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP904611.",
        "target_text": "Question: Test bipartiteness (id=904611) of an undirected graph efficiently. Which method works?\nChoices:\na) Attempt 2-coloring via BFS; failure indicates odd cycle\nb) Sort vertices and deduplicate\nc) Check all degrees even\nd) Compute an MST then inspect edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS4295.",
        "target_text": "Question: In KMP, what does LPS[4295] represent for a given pattern?\nChoices:\na) Length of longest proper prefix that is also a suffix for prefix ending at i\nb) Number of mismatches up to i\nc) Index of next occurrence\nd) Total distinct prefixes up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB58017466.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=58017466 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(log n)\nc) Ω(n)\nd) Ω(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX852655331.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈852655331. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Requires the array to be cyclic\nc) Uses hashing to index unknown segments\nd) Sorts the array first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T2_1_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^2, f3=n^2 (log n)^1, f4=n^9?\nChoices:\na) Θ(n^2)\nb) Θ(n^2 (log n)^1)\nc) Θ(n^9)\nd) Θ((log n)^1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P787982.",
        "target_text": "Question: Answer 787982 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Use a stack to store partial sums\nc) Recompute sums per query in Θ(n)\nd) Sort once and binary search per query\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN255789_867333.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=255789, B=867333. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Reverse one list then compare\nc) Advance pointers; when one ends, jump to the other head\nd) Binary search on addresses\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP315.",
        "target_text": "Question: Verify whether a pop sequence of length n=315 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Simulate using one stack in Θ(n)\nc) Use a queue to mirror the stack\nd) Sort both sequences then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW9146_292.",
        "target_text": "Question: Sliding window maximum for array length n=9146 and window w=292. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(w log n)\nc) Θ(n log n)\nd) Θ(nw)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC5443006.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=5443006?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.78.",
        "target_text": "Question: In separate chaining with load factor α=0.78, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(α)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR435429.",
        "target_text": "Question: In a BST with distinct keys (id=435429), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Inorder\nc) Postorder\nd) Preorder\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST279769.",
        "target_text": "Question: MST question id=279769: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) Prim requires the entire edge set to be sorted first\nc) MST is always unique in connected graphs\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS9113.",
        "target_text": "Question: In KMP, what does LPS[9113] represent for a given pattern?\nChoices:\na) Length of longest proper prefix that is also a suffix for prefix ending at i\nb) Total distinct prefixes up to i\nc) Index of next occurrence\nd) Number of mismatches up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS570004.",
        "target_text": "Question: Heapsort stability check id=570004: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort is not stable by default\nc) Heapsort always beats merge sort\nd) Heapsort needs extra Θ(n) memory\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS1086617.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=1086617 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(1) expected\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T4_4_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^4, f3=n^4 (log n)^4, f4=n^6?\nChoices:\na) Θ(n^6)\nb) Θ(n^4)\nc) Θ(n^4 (log n)^4)\nd) Θ((log n)^4)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP3702_4619.",
        "target_text": "Question: Sorted array length n=3702. Decide if any pair sums to 4619. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Brute force in Θ(n^2)\nc) Hash set in Θ(n log n)\nd) Two-pointer scan in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN966123_682937.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=966123, B=682937. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Hash addresses of first list\nc) Binary search on addresses\nd) Advance pointers; when one ends, jump to the other head\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE26088.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=26088. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Max-heap\nc) Decreasing stack\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ627318.",
        "target_text": "Question: Schedule 627318 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Binary heap\nc) Circular queue\nd) Unordered array\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA3_81275481.",
        "target_text": "Question: In a d-ary heap with d=3 and n=81275481 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log_3 n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.23.",
        "target_text": "Question: In separate chaining with load factor α=0.23, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(α)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA466134.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=466134 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) DFS from root each time\nc) Naive parent climbing O(n) per query\nd) Sort node labels then binary search\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC396182.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=396182 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(E log V)\nc) Θ(V log V)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z95411.",
        "target_text": "Question: For string S (id=95411), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Number of mismatches at i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of distinct substrings up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX3_1024.",
        "target_text": "Question: Radix sort with d=3 digits and base b=1024 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(n log n)\nc) Θ(d·n·log b)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX298848788.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈298848788. Why?\nChoices:\na) Sorts the array first\nb) Doubles the bound to bracket, then binary search\nc) Requires the array to be cyclic\nd) Uses hashing to index unknown segments\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M8_5_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/5) + n^2 for n being a power of 5.\nChoices:\na) Θ(n^1.292 log n)\nb) Θ(n^2)\nc) Θ(n^2 log n)\nd) Θ(n^1.292)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM937268.",
        "target_text": "Question: Find a majority element in an array of length n=937268 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Counting sort\nc) Binary search on value domain\nd) Divide-and-conquer merges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR9.",
        "target_text": "Question: Reverse a singly linked list in groups of k=9 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(k log n)\nb) Θ(n)\nc) Θ(nk)\nd) Θ(n log k)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS4611.",
        "target_text": "Question: Compute stock span for 4611 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Fenwick tree\nc) Monotonic stack\nd) Hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ252205.",
        "target_text": "Question: Schedule 252205 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Stack\nc) Circular queue\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA12_23301416.",
        "target_text": "Question: In a d-ary heap with d=12 and n=23301416 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log_12 n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.26.",
        "target_text": "Question: In separate chaining with load factor α=0.26, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS41435.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=41435-th smallest?\nChoices:\na) Θ(k)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST635444.",
        "target_text": "Question: MST question id=635444: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) MST minimizes number of edges\nc) Prim requires the entire edge set to be sorted first\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS77278.",
        "target_text": "Question: In KMP, what does LPS[77278] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Number of mismatches up to i\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Total distinct prefixes up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS441144.",
        "target_text": "Question: Keys are integers in range [0..441144]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Shell sort\nc) Counting sort\nd) Quick sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX995581024.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈995581024. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Doubles the bound to bracket, then binary search\nc) Sorts the array first\nd) Requires the array to be cyclic\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T1_6_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^1, f3=n^1 (log n)^6, f4=n^5?\nChoices:\na) Θ(n^1)\nb) Θ(n^5)\nc) Θ((log n)^6)\nd) Θ(n^1 (log n)^6)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S9850_95.",
        "target_text": "Question: Array length n=9850, find max-sum subarray of fixed length k=95. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(k log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL13094.",
        "target_text": "Question: Check if a singly linked list of length n=13094 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Copy to array and two-pointer check\nc) Use a hash set of seen values\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS2185.",
        "target_text": "Question: Compute stock span for 2185 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Priority queue\nc) Fenwick tree\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B791495.",
        "target_text": "Question: Run BFS on an unweighted graph with 791495 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) All simple paths before all edges\nc) Lexicographic vertex order\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH5016771.",
        "target_text": "Question: Build a binary heap from n=5016771 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.07.",
        "target_text": "Question: In separate chaining with load factor α=1.07, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA749629.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=749629 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) Sort node labels then binary search\nc) DFS from root each time\nd) Naive parent climbing O(n) per query\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS663525_4994420.",
        "target_text": "Question: A directed graph with V=663525, E≈4994420. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if the graph is connected\nc) Only if edges are unweighted\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN929267.",
        "target_text": "Question: Check anagrams for strings of length n=929267 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) DFS on character graph\nc) Use a stack\nd) Sort both in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB81481828.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=81481828 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n^2)\nc) Ω(log n)\nd) Ω(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS7070600.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=7070600 typically runs in?\nChoices:\na) Θ(n) average\nb) O(1) worst-case\nc) O(log log n) average\nd) Θ(log n) average\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T2_3_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^2, f3=n^2 (log n)^3, f4=n^7?\nChoices:\na) Θ(n^7)\nb) Θ((log n)^3)\nc) Θ(n^2 (log n)^3)\nd) Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM22767.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=22767-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Scan linearly counting gaps\nc) Use a heap of differences\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN231101.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 231101, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Impossible under any model\nc) Reverse list then delete head\nd) Traverse from head to find predecessor\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS4.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 4 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Greedy left-to-right without memory\nc) Use two stacks for counts and fragments\nd) Use BFS on substring graph\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW5928_4.",
        "target_text": "Question: Sliding window maximum for array length n=5928 and window w=4. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(nw)\nc) Θ(n)\nd) Θ(w log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC62531005.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=62531005?\nChoices:\na) Θ(log n)\nb) Θ(log log n)\nc) Θ(1)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF9159653_0.73.",
        "target_text": "Question: Chaining hash table with n=9159653 keys at load factor α=0.73. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(α log α)\nc) Θ(log n)\nd) Θ(nα)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR287403.",
        "target_text": "Question: In a BST with distinct keys (id=287403), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Preorder\nc) Inorder\nd) Level-order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP109188.",
        "target_text": "Question: Test bipartiteness (id=109188) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Compute an MST then inspect edges\nd) Check all degrees even\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z386155.",
        "target_text": "Question: For string S (id=386155), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Length of the longest prefix starting at i matching S[0..]\nc) Number of mismatches at i\nd) Number of distinct substrings up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX10_32.",
        "target_text": "Question: Radix sort with d=10 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(n log n)\nc) Θ(b^d)\nd) Θ(d·n·log b)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI52_458.",
        "target_text": "Question: Binary search over half-open range [52, 458)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Increase both lo and hi to skip duplicates\nd) Keep inclusive bounds on both ends\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T4_2_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^4, f3=n^4 (log n)^2, f4=n^8?\nChoices:\na) Θ(n^4 (log n)^2)\nb) Θ(n^8)\nc) Θ((log n)^2)\nd) Θ(n^4)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R29699.",
        "target_text": "Question: Rotate an array right by r=29699 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Single-step rotate repeated r times\nc) Three-reversal method\nd) Heapify then extract\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL17639.",
        "target_text": "Question: Check if a singly linked list of length n=17639 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Find middle, reverse second half, compare\nc) Sort and compare with original\nd) Copy to array and two-pointer check\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS5.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 5 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Use BFS on substring graph\nc) Use two stacks for counts and fragments\nd) Greedy left-to-right without memory\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW4202_481.",
        "target_text": "Question: Sliding window maximum for array length n=4202 and window w=481. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(w log n)\nc) Θ(nw)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL535_421632.",
        "target_text": "Question: Find the k=535-th largest element among n=421632 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Heapsort then index\nc) Deterministic selection (median-of-medians)\nd) Binary search on value domain\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Adversarial patterns are neutralized by random choice. Variant UH1000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=1000 slots yields what benefit?\nChoices:\na) Expected constant-time operations against adversaries\nb) Zero collisions guaranteed\nc) Eliminates need for resizing\nd) Cryptographic security by default\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H118161504.",
        "target_text": "Question: For a balanced BST with n=118161504 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(log log n)\nc) Θ(n)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR628478.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=628478 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Topological sorting\nc) Tarjan’s low-link DFS\nd) Kruskal’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS35232.",
        "target_text": "Question: In KMP, what does LPS[35232] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Number of mismatches up to i\nd) Index of next occurrence\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS917114.",
        "target_text": "Question: Heapsort stability check id=917114: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort is stable\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort always beats merge sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS1654688.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=1654688 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(n) average\nc) Θ(log n) average\nd) O(1) worst-case\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T1_4_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^1, f3=n^1 (log n)^4, f4=n^5?\nChoices:\na) Θ(n^5)\nb) Θ(n^1 (log n)^4)\nc) Θ(n^1)\nd) Θ((log n)^4)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP12558_4702.",
        "target_text": "Question: Sorted array length n=12558. Decide if any pair sums to 4702. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Divide and conquer in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Brute force in Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR2.",
        "target_text": "Question: Reverse a singly linked list in groups of k=2 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(n log k)\nc) Θ(k log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS4035.",
        "target_text": "Question: Compute stock span for 4035 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Monotonic stack\nc) Fenwick tree\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ414690.",
        "target_text": "Question: Schedule 414690 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Circular queue\nc) Stack\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM784_243790.",
        "target_text": "Question: Merge k=784 sorted streams totaling N=243790 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log k)\nc) Θ(k log N)\nd) Θ(N log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.22.",
        "target_text": "Question: In separate chaining with load factor α=0.22, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA554669.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=554669 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Euler tour + RMQ yields O(1) per query\nc) DFS from root each time\nd) Naive parent climbing O(n) per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D511097.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 511097]. Why?\nChoices:\na) Distinct weights are required\nb) Nonnegative weights ensure greedy optimality\nc) Self-loops must be absent\nd) Graph must be undirected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP94833.",
        "target_text": "Question: KMP matches a pattern of length m=94833 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Suffix array\nc) LPS (failure) function\nd) Z-array exclusively\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS531707.",
        "target_text": "Question: Heapsort stability check id=531707: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort is not stable by default\nc) Heapsort always beats merge sort\nd) Heapsort is stable\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS8514934.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=8514934 typically runs in?\nChoices:\na) Θ(n) average\nb) O(log log n) average\nc) Θ(log n) average\nd) O(1) worst-case\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_4_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^4, f3=n^4 (log n)^4, f4=n^11?\nChoices:\na) Θ(n^4 (log n)^4)\nb) Θ(n^11)\nc) Θ(n^4)\nd) Θ((log n)^4)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R964313.",
        "target_text": "Question: Rotate an array right by r=964313 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Heapify then extract\nc) Single-step rotate repeated r times\nd) Selection sort then shift\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR8.",
        "target_text": "Question: Reverse a singly linked list in groups of k=8 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(k log n)\nb) Θ(nk)\nc) Θ(n log k)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS3110.",
        "target_text": "Question: Compute stock span for 3110 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Hash table\nc) Priority queue\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW7893_255.",
        "target_text": "Question: Sliding window maximum for array length n=7893 and window w=255. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(w log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL177_653091.",
        "target_text": "Question: Find the k=177-th largest element among n=653091 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Deterministic selection (median-of-medians)\nc) Heapsort then index\nd) Binary search on value domain\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.59.",
        "target_text": "Question: In separate chaining with load factor α=0.59, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(log n)\nc) Θ(1/α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR191452.",
        "target_text": "Question: In a BST with distinct keys (id=191452), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Postorder\nc) Level-order\nd) Preorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST328120.",
        "target_text": "Question: MST question id=328120: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) MST is always unique in connected graphs\nd) MST minimizes number of edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS64473.",
        "target_text": "Question: In KMP, what does LPS[64473] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Index of next occurrence\nd) Number of mismatches up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST439471.",
        "target_text": "Question: Stability (id=439471): which pairing is correct?\nChoices:\na) Merge sort (stable), Heap sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Counting sort (unstable)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI36_3577.",
        "target_text": "Question: Binary search over half-open range [36, 3577)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Keep inclusive bounds on both ends\nc) Increase both lo and hi to skip duplicates\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M7_4_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/4) + n^4 for n being a power of 4.\nChoices:\na) Θ(n^4 log n)\nb) Θ(n^1.4037 log n)\nc) Θ(n^1.4037)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM391063.",
        "target_text": "Question: Find a majority element in an array of length n=391063 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Binary search on value domain\nc) Boyer–Moore voting with verification\nd) Counting sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL21908.",
        "target_text": "Question: Check if a singly linked list of length n=21908 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Use a hash set of seen values\nc) Find middle, reverse second half, compare\nd) Sort and compare with original\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE63302.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=63302. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Max-heap\nc) Queue\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ525513.",
        "target_text": "Question: For 525513 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Binary heap\nc) Queue\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM47_7471.",
        "target_text": "Question: Merge k=47 sorted streams totaling N=7471 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log k)\nc) Θ(N log N)\nd) Θ(k log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH65536.",
        "target_text": "Question: In open addressing with double hashing over table size m=65536, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) g(k) coprime with m for all keys\nc) Use g(k)=0 for some keys\nd) Choose m even and g(k) even\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS841574.",
        "target_text": "Question: BST with parent pointers (id=841574): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Reverse postorder traversal entirely\nd) Use level-order and pick next node\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D894790.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 894790]. Why?\nChoices:\na) Distinct weights are required\nb) Nonnegative weights ensure greedy optimality\nc) Graph must be undirected\nd) Self-loops must be absent\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP7351.",
        "target_text": "Question: KMP matches a pattern of length m=7351 in linear time using which table?\nChoices:\na) Suffix array\nb) Rolling hash table\nc) Z-array exclusively\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX5_32.",
        "target_text": "Question: Radix sort with d=5 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·n·log b)\nc) Θ(b^d)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS4911880.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=4911880 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(log n)\nc) Θ(1) expected\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T2_4_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^2, f3=n^2 (log n)^4, f4=n^5?\nChoices:\na) Θ(n^2)\nb) Θ((log n)^4)\nc) Θ(n^2 (log n)^4)\nd) Θ(n^5)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM78661.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=78661-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Hash all present values then scan\nc) Scan linearly counting gaps\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN875538_607903.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=875538, B=607903. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Hash addresses of first list\nc) Reverse one list then compare\nd) Binary search on addresses\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE23950.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=23950. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Max-heap\nc) Decreasing stack\nd) Binary search tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B446038.",
        "target_text": "Question: Run BFS on an unweighted graph with 446038 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) All simple paths before all edges\nc) Lexicographic vertex order\nd) Minimum memory footprint\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL352_296785.",
        "target_text": "Question: Find the k=352-th largest element among n=296785 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Deterministic selection (median-of-medians)\nc) Heapsort then index\nd) Build max-heap and extract k times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.3.",
        "target_text": "Question: In separate chaining with load factor α=0.3, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA441588.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=441588 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Naive parent climbing O(n) per query\nc) Euler tour + RMQ yields O(1) per query\nd) DFS from root each time\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP431289.",
        "target_text": "Question: Test bipartiteness (id=431289) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Check all degrees even\nc) Sort vertices and deduplicate\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP42055.",
        "target_text": "Question: KMP matches a pattern of length m=42055 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Suffix array\nc) Z-array exclusively\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS708185.",
        "target_text": "Question: Heapsort stability check id=708185: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort is not stable by default\nd) Heapsort always beats merge sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Geometric level distribution mirrors balanced trees. Variant SL0.5.",
        "target_text": "Question: Skip list with level promotion probability p=0.5: expected complexity of search/insert/delete?\nChoices:\na) Θ(log n) for all three\nb) Θ(n) for all three\nc) Θ(√n) for all three\nd) Θ(1) for all three\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Geometric resizing spreads copying cost over many operations. Variant A2.",
        "target_text": "Question: A dynamic array starts with capacity 2 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(log m)\nb) Θ(1)\nc) Θ(√m)\nd) Θ(m)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP17993_1808.",
        "target_text": "Question: Sorted array length n=17993. Decide if any pair sums to 1808. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Hash set in Θ(n log n)\nc) Brute force in Θ(n^2)\nd) Divide and conquer in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN153769_465889.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=153769, B=465889. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Advance pointers; when one ends, jump to the other head\nc) Binary search on addresses\nd) Hash addresses of first list\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Operator handling via stacks preserves associativity rules. Variant IP4_5.",
        "target_text": "Question: Evaluate an infix expression with 4–5 precedence levels and parentheses. Linear-time method?\nChoices:\na) Sort tokens by precedence then scan\nb) Convert to postfix and evaluate with a stack\nc) Build a tree without any stack\nd) Left-to-right without stacks\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ944788.",
        "target_text": "Question: For 944788 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Binary heap\nc) Deque\nd) Stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA6_83605244.",
        "target_text": "Question: In a d-ary heap with d=6 and n=83605244 nodes, what is the height?\nChoices:\na) Θ(log_6 n)\nb) Θ(n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF4862755_0.8.",
        "target_text": "Question: Chaining hash table with n=4862755 keys at load factor α=0.8. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(α log α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H372338119.",
        "target_text": "Question: For a balanced BST with n=372338119 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC784658.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=784658 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(V+E)\nc) Θ(V log V)\nd) Θ(VE)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN22907.",
        "target_text": "Question: Check anagrams for strings of length n=22907 over fixed alphabet. Optimal approach?\nChoices:\na) Use a stack\nb) DFS on character graph\nc) Sort both in Θ(n log n)\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS405546.",
        "target_text": "Question: Heapsort stability check id=405546: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort always beats merge sort\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX41641093.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈41641093. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Requires the array to be cyclic\nc) Uses hashing to index unknown segments\nd) Sorts the array first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M3_2_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/2) + n^0 for n being a power of 2.\nChoices:\na) Θ(n^0 log n)\nb) Θ(n^1.585)\nc) Θ(n^1.585 log n)\nd) Θ(n^0)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM789695.",
        "target_text": "Question: Find a majority element in an array of length n=789695 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Divide-and-conquer merges\nc) Binary search on value domain\nd) Counting sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL53094.",
        "target_text": "Question: Check if a singly linked list of length n=53094 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Use a hash set of seen values\nc) Copy to array and two-pointer check\nd) Sort and compare with original\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1035.",
        "target_text": "Question: Verify whether a pop sequence of length n=1035 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Use a queue to mirror the stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ991002.",
        "target_text": "Question: For 991002 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Queue\nc) Stack\nd) Binary heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL274_916162.",
        "target_text": "Question: Find the k=274-th largest element among n=916162 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Heapsort then index\nc) Binary search on value domain\nd) Build max-heap and extract k times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF5319694_0.41.",
        "target_text": "Question: Chaining hash table with n=5319694 keys at load factor α=0.41. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(α log α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA876826.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=876826 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Naive parent climbing O(n) per query\nc) Euler tour + RMQ yields O(1) per query\nd) Sort node labels then binary search\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST628509.",
        "target_text": "Question: MST question id=628509: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) MST is always unique in connected graphs\nc) MST minimizes number of edges\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z739729.",
        "target_text": "Question: For string S (id=739729), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Number of mismatches at i\nc) Next index of S[i]\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX10_4.",
        "target_text": "Question: Radix sort with d=10 digits and base b=4 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(d·(n + b))\nc) Θ(d·n·log b)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI89_611.",
        "target_text": "Question: Binary search over half-open range [89, 611)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Increase both lo and hi to skip duplicates\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T2_6_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^2, f3=n^2 (log n)^6, f4=n^4?\nChoices:\na) Θ(n^4)\nb) Θ((log n)^6)\nc) Θ(n^2)\nd) Θ(n^2 (log n)^6)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P336390.",
        "target_text": "Question: Answer 336390 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Recompute sums per query in Θ(n)\nc) Build prefix-sum array; O(1) per query\nd) Use a stack to store partial sums\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK53_586.",
        "target_text": "Question: Merge k=53 sorted linked lists totaling n=586 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n log k)\nc) Θ(n + k^2)\nd) Θ(k n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS2801.",
        "target_text": "Question: Compute stock span for 2801 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Monotonic stack\nc) Fenwick tree\nd) Priority queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS1792.",
        "target_text": "Question: A queue via two stacks handles a burst of 1792 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) Both Θ(log n)\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA15_14195710.",
        "target_text": "Question: In a d-ary heap with d=15 and n=14195710 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(log_15 n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF5482193_0.52.",
        "target_text": "Question: Chaining hash table with n=5482193 keys at load factor α=0.52. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA942131.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=942131 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) DFS from root each time\nc) Naive parent climbing O(n) per query\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS176481_325597.",
        "target_text": "Question: A directed graph with V=176481, E≈325597. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) When all vertices have outdegree ≥ 1\nc) Only if edges are unweighted\nd) Only if the graph is connected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS67180.",
        "target_text": "Question: In KMP, what does LPS[67180] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Number of mismatches up to i\nc) Index of next occurrence\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB71910162.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=71910162 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(log n)\nc) Ω(n^2)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX638508831.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈638508831. Why?\nChoices:\na) Sorts the array first\nb) Doubles the bound to bracket, then binary search\nc) Requires the array to be cyclic\nd) Uses hashing to index unknown segments\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M9_4_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/4) + n^2 for n being a power of 4.\nChoices:\na) Θ(n^1.585 log n)\nb) Θ(n^1.585)\nc) Θ(n^2)\nd) Θ(n^2 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP3114_4346.",
        "target_text": "Question: Sorted array length n=3114. Decide if any pair sums to 4346. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Divide and conquer in Θ(n log n)\nc) Hash set in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR4.",
        "target_text": "Question: Reverse a singly linked list in groups of k=4 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(n)\nc) Θ(k log n)\nd) Θ(n log k)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP955.",
        "target_text": "Question: Verify whether a pop sequence of length n=955 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Use a queue to mirror the stack\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ532491.",
        "target_text": "Question: Schedule 532491 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Binary heap\nc) Stack\nd) Unordered array\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH5514867.",
        "target_text": "Question: Build a binary heap from n=5514867 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n^2)\nc) Θ(n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA900158.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=900158 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Euler tour + RMQ yields O(1) per query\nc) Naive parent climbing O(n) per query\nd) Sort node labels then binary search\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST311957.",
        "target_text": "Question: MST question id=311957: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) MST is always unique in connected graphs\nc) MST minimizes number of edges\nd) Prim requires the entire edge set to be sorted first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Character-by-character descent. Variant TRIE128.",
        "target_text": "Question: Search a trie over alphabet size σ=128 for a key of length m. Time complexity?\nChoices:\na) Θ(m)\nb) Θ(m log σ)\nc) Θ(1) average for all m\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS395042.",
        "target_text": "Question: Keys are integers in range [0..395042]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Counting sort\nc) Shell sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS4749895.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=4749895 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(1) expected\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M3_5_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/5) + n^2 for n being a power of 5.\nChoices:\na) Θ(n^0.6826 log n)\nb) Θ(n^0.6826)\nc) Θ(n^2 log n)\nd) Θ(n^2)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R338402.",
        "target_text": "Question: Rotate an array right by r=338402 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Single-step rotate repeated r times\nc) Selection sort then shift\nd) Heapify then extract\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN450587.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 450587, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Reverse list then delete head\nc) Impossible under any model\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE46051.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=46051. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Queue\nc) Max-heap\nd) Binary search tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW2798_759.",
        "target_text": "Question: Sliding window maximum for array length n=2798 and window w=759. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(nw)\nc) Θ(w log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL757_511729.",
        "target_text": "Question: Find the k=757-th largest element among n=511729 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Build max-heap and extract k times\nc) Deterministic selection (median-of-medians)\nd) Heapsort then index\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF2622608_0.95.",
        "target_text": "Question: Chaining hash table with n=2622608 keys at load factor α=0.95. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(α log α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H835144275.",
        "target_text": "Question: For a balanced BST with n=835144275 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR952652.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=952652 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Tarjan’s low-link DFS\nc) Dijkstra’s algorithm\nd) Kruskal’s algorithm\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS83011.",
        "target_text": "Question: In KMP, what does LPS[83011] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Index of next occurrence\nd) Total distinct prefixes up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST593034.",
        "target_text": "Question: Stability (id=593034): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Counting sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Geometric level distribution mirrors balanced trees. Variant SL0.5.",
        "target_text": "Question: Skip list with level promotion probability p=0.5: expected complexity of search/insert/delete?\nChoices:\na) Θ(log n) for all three\nb) Θ(√n) for all three\nc) Θ(n) for all three\nd) Θ(1) for all three\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A1.",
        "target_text": "Question: A dynamic array starts with capacity 1 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(√m)\nc) Θ(1)\nd) Θ(log m)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM84858.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=84858-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Binary search on index vs value gap\nc) Hash all present values then scan\nd) Use a heap of differences\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK99_1932.",
        "target_text": "Question: Merge k=99 sorted linked lists totaling n=1932 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n log n)\nc) Θ(k n)\nd) Θ(n + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS4686.",
        "target_text": "Question: Compute stock span for 4686 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Monotonic stack\nc) Fenwick tree\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ533772.",
        "target_text": "Question: Schedule 533772 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Stack\nc) Unordered array\nd) Circular queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL36_697272.",
        "target_text": "Question: Find the k=36-th largest element among n=697272 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Build max-heap and extract k times\nc) Binary search on value domain\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF2544257_0.59.",
        "target_text": "Question: Chaining hash table with n=2544257 keys at load factor α=0.59. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS158692.",
        "target_text": "Question: BST with parent pointers (id=158692): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) Always climb to root then go right once\nc) Reverse postorder traversal entirely\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF55483.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=55483 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Equal runtime on all graphs\nc) Only acyclic graphs\nd) Negative edge weights and negative cycles\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB34944.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=34944. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) Suffix automaton or suffix array + LCP\nc) BST over all substrings\nd) Queue of rolling hashes only\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX2_32.",
        "target_text": "Question: Radix sort with d=2 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(d·n·log b)\nc) Θ(b^d)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS8492218.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=8492218 typically runs in?\nChoices:\na) O(1) worst-case\nb) O(log log n) average\nc) Θ(n) average\nd) Θ(log n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M6_5_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/5) + n^3 for n being a power of 5.\nChoices:\na) Θ(n^1.1133 log n)\nb) Θ(n^3 log n)\nc) Θ(n^3)\nd) Θ(n^1.1133)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM1235.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=1235-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Hash all present values then scan\nc) Binary search on index vs value gap\nd) Use a heap of differences\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN229763_449122.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=229763, B=449122. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Advance pointers; when one ends, jump to the other head\nc) Reverse one list then compare\nd) Hash addresses of first list\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS596.",
        "target_text": "Question: Compute stock span for 596 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Priority queue\nc) Fenwick tree\nd) Hash table\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS2364.",
        "target_text": "Question: A queue via two stacks handles a burst of 2364 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) Both Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC16042412.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=16042412?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(1)\nd) Θ(log log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF2270697_0.46.",
        "target_text": "Question: Chaining hash table with n=2270697 keys at load factor α=0.46. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(log n)\nc) Θ(α log α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS799054.",
        "target_text": "Question: BST with parent pointers (id=799054): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Reverse postorder traversal entirely\nd) Use level-order and pick next node\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS570923_4725902.",
        "target_text": "Question: A directed graph with V=570923, E≈4725902. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When all vertices have outdegree ≥ 1\nc) Only if edges are unweighted\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB81109.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=81109. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) Queue of rolling hashes only\nc) BST over all substrings\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB2737823.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=2737823 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n^2)\nc) Ω(n log n)\nd) Ω(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS5938351.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=5938351 typically runs in?\nChoices:\na) O(1) worst-case\nb) Θ(log n) average\nc) Θ(n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_5_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^3, f3=n^3 (log n)^5, f4=n^5?\nChoices:\na) Θ(n^5)\nb) Θ((log n)^5)\nc) Θ(n^3 (log n)^5)\nd) Θ(n^3)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM76631.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=76631-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Binary search on index vs value gap\nc) Scan linearly counting gaps\nd) Use a heap of differences\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN691985_477889.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=691985, B=477889. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Hash addresses of first list\nc) Binary search on addresses\nd) Advance pointers; when one ends, jump to the other head\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS845.",
        "target_text": "Question: Compute stock span for 845 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Priority queue\nc) Fenwick tree\nd) Hash table\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW7988_324.",
        "target_text": "Question: Sliding window maximum for array length n=7988 and window w=324. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(n log n)\nc) Θ(w log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC52254453.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=52254453?\nChoices:\na) Θ(1)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC1.23.",
        "target_text": "Question: In separate chaining with load factor α=1.23, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(α)\nd) Θ(1/α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA573419.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=573419 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) DFS from root each time\nc) Sort node labels then binary search\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D100947.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 100947]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Self-loops must be absent\nc) Distinct weights are required\nd) Graph must be undirected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z564329.",
        "target_text": "Question: For string S (id=564329), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Number of mismatches at i\nc) Next index of S[i]\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB9421371.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=9421371 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(log n)\nc) Ω(n^2)\nd) Ω(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Geometric level distribution mirrors balanced trees. Variant SL0.25.",
        "target_text": "Question: Skip list with level promotion probability p=0.25: expected complexity of search/insert/delete?\nChoices:\na) Θ(n) for all three\nb) Θ(1) for all three\nc) Θ(log n) for all three\nd) Θ(√n) for all three\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T5_4_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^5, f3=n^5 (log n)^4, f4=n^8?\nChoices:\na) Θ(n^8)\nb) Θ(n^5 (log n)^4)\nc) Θ((log n)^4)\nd) Θ(n^5)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P962683.",
        "target_text": "Question: Answer 962683 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Use a stack to store partial sums\nc) Sort once and binary search per query\nd) Recompute sums per query in Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL84299.",
        "target_text": "Question: Check if a singly linked list of length n=84299 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Find middle, reverse second half, compare\nc) Copy to array and two-pointer check\nd) Sort and compare with original\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS4697.",
        "target_text": "Question: Compute stock span for 4697 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Hash table\nc) Fenwick tree\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW9310_624.",
        "target_text": "Question: Sliding window maximum for array length n=9310 and window w=624. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(n)\nc) Θ(w log n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM358_114455.",
        "target_text": "Question: Merge k=358 sorted streams totaling N=114455 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(k log N)\nc) Θ(N + k^2)\nd) Θ(N log N)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS38103.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=38103-th smallest?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(k)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC361543.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=361543 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(E log V)\nc) Θ(V log V)\nd) Θ(VE)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z184004.",
        "target_text": "Question: For string S (id=184004), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Length of the longest prefix starting at i matching S[0..]\nc) Next index of S[i]\nd) Number of distinct substrings up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB58393212.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=58393212 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n)\nc) Ω(log n)\nd) Ω(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS3944161.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=3944161 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(log n) average\nc) O(1) worst-case\nd) Θ(n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M6_4_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/4) + n^1 for n being a power of 4.\nChoices:\na) Θ(n^1.2925)\nb) Θ(n^1.2925 log n)\nc) Θ(n^1 log n)\nd) Θ(n^1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P484324.",
        "target_text": "Question: Answer 484324 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Build prefix-sum array; O(1) per query\nc) Recompute sums per query in Θ(n)\nd) Use a stack to store partial sums\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN153386_704069.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=153386, B=704069. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Hash addresses of first list\nc) Binary search on addresses\nd) Reverse one list then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1045.",
        "target_text": "Question: Verify whether a pop sequence of length n=1045 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Sort both sequences then compare\nc) Use a queue to mirror the stack\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B163371.",
        "target_text": "Question: Run BFS on an unweighted graph with 163371 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) All simple paths before all edges\nc) Minimum memory footprint\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA3_16412501.",
        "target_text": "Question: In a d-ary heap with d=3 and n=16412501 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(log_3 n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC1.43.",
        "target_text": "Question: In separate chaining with load factor α=1.43, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H79613149.",
        "target_text": "Question: For a balanced BST with n=79613149 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS662925_1601590.",
        "target_text": "Question: A directed graph with V=662925, E≈1601590. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) Only if the graph is connected\nc) Only if edges are unweighted\nd) When all vertices have outdegree ≥ 1\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP80676.",
        "target_text": "Question: KMP matches a pattern of length m=80676 in linear time using which table?\nChoices:\na) Suffix array\nb) Z-array exclusively\nc) Rolling hash table\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS356244.",
        "target_text": "Question: Keys are integers in range [0..356244]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Shell sort\nc) Heap sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS9788176.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=9788176 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(n log n)\nc) Θ(1) expected\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T3_3_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^3, f3=n^3 (log n)^3, f4=n^9?\nChoices:\na) Θ((log n)^3)\nb) Θ(n^3)\nc) Θ(n^3 (log n)^3)\nd) Θ(n^9)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R635750.",
        "target_text": "Question: Rotate an array right by r=635750 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Selection sort then shift\nc) Three-reversal method\nd) Single-step rotate repeated r times\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK39_6983.",
        "target_text": "Question: Merge k=39 sorted linked lists totaling n=6983 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n log k)\nc) Θ(n + k^2)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP663.",
        "target_text": "Question: Verify whether a pop sequence of length n=663 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Backtrack with recursion in Θ(2^n)\nc) Sort both sequences then compare\nd) Use a queue to mirror the stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ10644.",
        "target_text": "Question: For 10644 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Stack\nc) Queue\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM421_198538.",
        "target_text": "Question: Merge k=421 sorted streams totaling N=198538 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(N + k^2)\nc) Θ(k log N)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.44.",
        "target_text": "Question: In separate chaining with load factor α=1.44, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H990590461.",
        "target_text": "Question: For a balanced BST with n=990590461 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP47855.",
        "target_text": "Question: Test bipartiteness (id=47855) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Check all degrees even\nd) Compute an MST then inspect edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z830662.",
        "target_text": "Question: For string S (id=830662), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Number of distinct substrings up to i\nc) Next index of S[i]\nd) Number of mismatches at i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS246830.",
        "target_text": "Question: Keys are integers in range [0..246830]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Heap sort\nc) Counting sort\nd) Quick sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS1413168.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=1413168 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(n log n)\nc) Θ(1) expected\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_4_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^4, f3=n^4 (log n)^4, f4=n^9?\nChoices:\na) Θ((log n)^4)\nb) Θ(n^4 (log n)^4)\nc) Θ(n^4)\nd) Θ(n^9)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM49572.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=49572-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Use a heap of differences\nc) Scan linearly counting gaps\nd) Hash all present values then scan\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK11_215.",
        "target_text": "Question: Merge k=11 sorted linked lists totaling n=215 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n log n)\nc) Θ(n + k^2)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE2512.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=2512. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Binary search tree\nc) Max-heap\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ362118.",
        "target_text": "Question: Schedule 362118 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Circular queue\nc) Unordered array\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC35513577.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=35513577?\nChoices:\na) Θ(log log n)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF3837066_0.9.",
        "target_text": "Question: Chaining hash table with n=3837066 keys at load factor α=0.9. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(log n)\nc) Θ(α log α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS360929.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=360929-th smallest?\nChoices:\na) Θ(k)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS899414_1979842.",
        "target_text": "Question: A directed graph with V=899414, E≈1979842. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) Only if edges are unweighted\nc) When all vertices have outdegree ≥ 1\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB24663.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=24663. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Suffix automaton or suffix array + LCP\nc) BST over all substrings\nd) Binary heap of substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS838.",
        "target_text": "Question: Array is nearly sorted with at most 838 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Radix sort\nc) Insertion sort\nd) Heap sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS6773857.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=6773857 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(1) expected\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M7_6_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/6) + n^2 for n being a power of 6.\nChoices:\na) Θ(n^2 log n)\nb) Θ(n^2)\nc) Θ(n^1.086)\nd) Θ(n^1.086 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP18492_734.",
        "target_text": "Question: Sorted array length n=18492. Decide if any pair sums to 734. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Divide and conquer in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Hash set in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK12_896.",
        "target_text": "Question: Merge k=12 sorted linked lists totaling n=896 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n log n)\nc) Θ(k n)\nd) Θ(n + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS1800.",
        "target_text": "Question: Compute stock span for 1800 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Fenwick tree\nc) Monotonic stack\nd) Hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B310701.",
        "target_text": "Question: Run BFS on an unweighted graph with 310701 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) Lexicographic vertex order\nc) All simple paths before all edges\nd) Minimum memory footprint\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA5_25002564.",
        "target_text": "Question: In a d-ary heap with d=5 and n=25002564 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log_5 n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.73.",
        "target_text": "Question: In separate chaining with load factor α=0.73, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(log n)\nc) Θ(α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS341929.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=341929-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(k)\nc) Θ(√n)\nd) Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST548703.",
        "target_text": "Question: MST question id=548703: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) Prim requires the entire edge set to be sorted first\nc) Kruskal adds the smallest edge that doesn't create a cycle\nd) MST is always unique in connected graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z911477.",
        "target_text": "Question: For string S (id=911477), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Number of mismatches at i\nc) Number of distinct substrings up to i\nd) Next index of S[i]\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX8_4.",
        "target_text": "Question: Radix sort with d=8 digits and base b=4 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(d·n·log b)\nc) Θ(b^d)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU544210.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=544210. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Binary search with left/right bias\nc) Linear scan with early exit\nd) Heap-based selection\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M9_6_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/6) + n^2 for n being a power of 6.\nChoices:\na) Θ(n^1.2263)\nb) Θ(n^2)\nc) Θ(n^2 log n)\nd) Θ(n^1.2263 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP3919_2819.",
        "target_text": "Question: Sorted array length n=3919. Decide if any pair sums to 2819. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Divide and conquer in Θ(n log n)\nc) Brute force in Θ(n^2)\nd) Hash set in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN87169_506892.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=87169, B=506892. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Binary search on addresses\nc) Reverse one list then compare\nd) Advance pointers; when one ends, jump to the other head\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE58642.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=58642. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Max-heap\nc) Binary search tree\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B86100.",
        "target_text": "Question: Run BFS on an unweighted graph with 86100 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Nondecreasing distance from source\nc) Lexicographic vertex order\nd) Minimum memory footprint\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH4012661.",
        "target_text": "Question: Build a binary heap from n=4012661 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(n^2)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF828260_0.92.",
        "target_text": "Question: Chaining hash table with n=828260 keys at load factor α=0.92. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(nα)\nc) Θ(1 + α)\nd) Θ(α log α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H263082676.",
        "target_text": "Question: For a balanced BST with n=263082676 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS19383_46372.",
        "target_text": "Question: A directed graph with V=19383, E≈46372. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) Only if edges are unweighted\nc) Only if the graph is connected\nd) When all vertices have outdegree ≥ 1\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB21318.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=21318. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Suffix automaton or suffix array + LCP\nc) Binary heap of substrings\nd) BST over all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST22011.",
        "target_text": "Question: Stability (id=22011): which pairing is correct?\nChoices:\na) Merge sort (stable), Heap sort (unstable)\nb) Counting sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX455206055.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈455206055. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Requires the array to be cyclic\nc) Sorts the array first\nd) Uses hashing to index unknown segments\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M8_2_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/2) + n^1 for n being a power of 2.\nChoices:\na) Θ(n^1)\nb) Θ(n^3.0 log n)\nc) Θ(n^3.0)\nd) Θ(n^1 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP7575_3461.",
        "target_text": "Question: Sorted array length n=7575. Decide if any pair sums to 3461. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Hash set in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Brute force in Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN656063.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 656063, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Copy next node’s data here and bypass next\nc) Traverse from head to find predecessor\nd) Impossible under any model\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS4476.",
        "target_text": "Question: Compute stock span for 4476 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Fenwick tree\nc) Hash table\nd) Priority queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ497742.",
        "target_text": "Question: Schedule 497742 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Stack\nc) Unordered array\nd) Circular queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC99381906.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=99381906?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF1481813_0.45.",
        "target_text": "Question: Chaining hash table with n=1481813 keys at load factor α=0.45. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS905330.",
        "target_text": "Question: BST with parent pointers (id=905330): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Use level-order and pick next node\nd) Always climb to root then go right once\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF64025.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=64025 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Negative edge weights and negative cycles\nc) Equal runtime on all graphs\nd) Only acyclic graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP76358.",
        "target_text": "Question: KMP matches a pattern of length m=76358 in linear time using which table?\nChoices:\na) Suffix array\nb) Rolling hash table\nc) Z-array exclusively\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST598999.",
        "target_text": "Question: Stability (id=598999): which pairing is correct?\nChoices:\na) Heap sort (stable), Merge sort (unstable)\nb) Counting sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Quick sort (stable), Selection sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI15_2870.",
        "target_text": "Question: Binary search over half-open range [15, 2870)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Increase both lo and hi to skip duplicates\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M9_3_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/3) + n^2 for n being a power of 3.\nChoices:\na) Θ(n^2.0)\nb) Θ(n^2 log n)\nc) Θ(n^2.0 log^2 n)\nd) Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S4923_241.",
        "target_text": "Question: Array length n=4923, find max-sum subarray of fixed length k=241. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(nk)\nd) Θ(k log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK98_18874.",
        "target_text": "Question: Merge k=98 sorted linked lists totaling n=18874 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n + k^2)\nc) Θ(n log k)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS3.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 3 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Sort segments then concatenate\nc) Use two stacks for counts and fragments\nd) Greedy left-to-right without memory\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS7525.",
        "target_text": "Question: A queue via two stacks handles a burst of 7525 operations. Amortized costs?\nChoices:\na) ENQUEUE and DEQUEUE both amortized Θ(1)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) Both Θ(log n)\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL477_29449.",
        "target_text": "Question: Find the k=477-th largest element among n=29449 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Deterministic selection (median-of-medians)\nc) Heapsort then index\nd) Build max-heap and extract k times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH4096.",
        "target_text": "Question: In open addressing with double hashing over table size m=4096, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) Make both hash functions identical\nc) Choose m even and g(k) even\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR842172.",
        "target_text": "Question: In a BST with distinct keys (id=842172), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Inorder\nc) Postorder\nd) Preorder\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP923864.",
        "target_text": "Question: Test bipartiteness (id=923864) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Sort vertices and deduplicate\nd) Check all degrees even\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB77555.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=77555. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) BST over all substrings\nc) Binary heap of substrings\nd) Queue of rolling hashes only\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB23565899.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=23565899 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n log n)\nc) Ω(n)\nd) Ω(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS5710932.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=5710932 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(1) expected\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M3_6_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/6) + n^3 for n being a power of 6.\nChoices:\na) Θ(n^3)\nb) Θ(n^0.6131 log n)\nc) Θ(n^3 log n)\nd) Θ(n^0.6131)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S16794_460.",
        "target_text": "Question: Array length n=16794, find max-sum subarray of fixed length k=460. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(k log n)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(nk)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR7.",
        "target_text": "Question: Reverse a singly linked list in groups of k=7 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(n)\nc) Θ(k log n)\nd) Θ(n log k)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Operator handling via stacks preserves associativity rules. Variant IP3_4.",
        "target_text": "Question: Evaluate an infix expression with 3–4 precedence levels and parentheses. Linear-time method?\nChoices:\na) Left-to-right without stacks\nb) Sort tokens by precedence then scan\nc) Convert to postfix and evaluate with a stack\nd) Build a tree without any stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B794985.",
        "target_text": "Question: Run BFS on an unweighted graph with 794985 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) Nondecreasing distance from source\nc) Minimum memory footprint\nd) All simple paths before all edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA7_76098083.",
        "target_text": "Question: In a d-ary heap with d=7 and n=76098083 nodes, what is the height?\nChoices:\na) Θ(log_7 n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF8923482_0.6.",
        "target_text": "Question: Chaining hash table with n=8923482 keys at load factor α=0.6. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA982776.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=982776 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) Sort node labels then binary search\nc) DFS from root each time\nd) Naive parent climbing O(n) per query\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP428488.",
        "target_text": "Question: Test bipartiteness (id=428488) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Compute an MST then inspect edges\nd) Check all degrees even\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z43839.",
        "target_text": "Question: For string S (id=43839), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Number of mismatches at i\nc) Next index of S[i]\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS819434.",
        "target_text": "Question: Heapsort stability check id=819434: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort is stable\nd) Heapsort always beats merge sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI16_3971.",
        "target_text": "Question: Binary search over half-open range [16, 3971)—which invariant prevents infinite loops?\nChoices:\na) Increase both lo and hi to skip duplicates\nb) Keep inclusive bounds on both ends\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M6_5_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/5) + n^1 for n being a power of 5.\nChoices:\na) Θ(n^1 log n)\nb) Θ(n^1.1133)\nc) Θ(n^1.1133 log n)\nd) Θ(n^1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R220620.",
        "target_text": "Question: Rotate an array right by r=220620 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Heapify then extract\nc) Three-reversal method\nd) Selection sort then shift\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL37710.",
        "target_text": "Question: Check if a singly linked list of length n=37710 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Find middle, reverse second half, compare\nc) Copy to array and two-pointer check\nd) Use a hash set of seen values\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS2558.",
        "target_text": "Question: Compute stock span for 2558 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Monotonic stack\nc) Hash table\nd) Priority queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B874481.",
        "target_text": "Question: Run BFS on an unweighted graph with 874481 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Minimum memory footprint\nc) Lexicographic vertex order\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC6388245.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=6388245?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(log log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH16384.",
        "target_text": "Question: In open addressing with double hashing over table size m=16384, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) Make both hash functions identical\nc) Choose m even and g(k) even\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR300602.",
        "target_text": "Question: In a BST with distinct keys (id=300602), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Level-order\nc) Inorder\nd) Preorder\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC844631.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=844631 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(E log V)\nc) Θ(V+E)\nd) Θ(V log V)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB69322.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=69322. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Suffix automaton or suffix array + LCP\nc) Binary heap of substrings\nd) BST over all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS527942.",
        "target_text": "Question: Heapsort stability check id=527942: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort always beats merge sort\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is stable\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU586967.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=586967. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Heap-based selection\nc) Hashing with chaining\nd) Linear scan with early exit\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M9_3_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/3) + n^4 for n being a power of 3.\nChoices:\na) Θ(n^2.0)\nb) Θ(n^4)\nc) Θ(n^2.0 log n)\nd) Θ(n^4 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM48175.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=48175-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Binary search on index vs value gap\nc) Scan linearly counting gaps\nd) Use a heap of differences\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL46029.",
        "target_text": "Question: Check if a singly linked list of length n=46029 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Use a hash set of seen values\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE23490.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=23490. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Binary search tree\nc) Decreasing stack\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA2813.",
        "target_text": "Question: Circular-array queue with capacity 2813: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require prime capacity\nc) Require power-of-two capacity\nd) Head==Tail means full\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL455_104910.",
        "target_text": "Question: Find the k=455-th largest element among n=104910 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Binary search on value domain\nc) Heapsort then index\nd) Build max-heap and extract k times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF1677033_0.48.",
        "target_text": "Question: Chaining hash table with n=1677033 keys at load factor α=0.48. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA282160.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=282160 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Naive parent climbing O(n) per query\nc) Euler tour + RMQ yields O(1) per query\nd) DFS from root each time\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC291085.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=291085 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(VE)\nc) Θ(V log V)\nd) Θ(E log V)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN287124.",
        "target_text": "Question: Check anagrams for strings of length n=287124 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) DFS on character graph\nc) Count character frequencies in Θ(n)\nd) Use a stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB19304502.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=19304502 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n)\nc) Ω(n^2)\nd) Ω(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS5004890.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=5004890 typically runs in?\nChoices:\na) Θ(n) average\nb) O(log log n) average\nc) Θ(log n) average\nd) O(1) worst-case\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_1_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^3, f3=n^3 (log n)^1, f4=n^8?\nChoices:\na) Θ(n^8)\nb) Θ(n^3 (log n)^1)\nc) Θ((log n)^1)\nd) Θ(n^3)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R674970.",
        "target_text": "Question: Rotate an array right by r=674970 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Heapify then extract\nc) Single-step rotate repeated r times\nd) Selection sort then shift\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK56_1653.",
        "target_text": "Question: Merge k=56 sorted linked lists totaling n=1653 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n log k)\nc) Θ(n log n)\nd) Θ(n + k^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE24460.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=24460. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Max-heap\nc) Binary search tree\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ64439.",
        "target_text": "Question: Schedule 64439 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Stack\nc) Binary heap\nd) Unordered array\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH6781693.",
        "target_text": "Question: Build a binary heap from n=6781693 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(n^2)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.3.",
        "target_text": "Question: In separate chaining with load factor α=0.3, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1 + α)\nc) Θ(1/α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS561086.",
        "target_text": "Question: BST with parent pointers (id=561086): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Reverse postorder traversal entirely\nc) Always climb to root then go right once\nd) Use level-order and pick next node\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR159668.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=159668 edges. What algorithmic idea achieves linear time?\nChoices:\na) Tarjan’s low-link DFS\nb) Topological sorting\nc) Kruskal’s algorithm\nd) Dijkstra’s algorithm\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS46426.",
        "target_text": "Question: In KMP, what does LPS[46426] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Number of mismatches up to i\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Total distinct prefixes up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS593.",
        "target_text": "Question: Array is nearly sorted with at most 593 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Heap sort\nc) Radix sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Geometric level distribution mirrors balanced trees. Variant SL0.75.",
        "target_text": "Question: Skip list with level promotion probability p=0.75: expected complexity of search/insert/delete?\nChoices:\na) Θ(log n) for all three\nb) Θ(1) for all three\nc) Θ(√n) for all three\nd) Θ(n) for all three\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M4_2_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/2) + n^0 for n being a power of 2.\nChoices:\na) Θ(n^2.0)\nb) Θ(n^0 log n)\nc) Θ(n^2.0 log n)\nd) Θ(n^0)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S6885_77.",
        "target_text": "Question: Array length n=6885, find max-sum subarray of fixed length k=77. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(k log n)\nb) Θ(n)\nc) Θ(nk)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN212750.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 212750, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Reverse list then delete head\nc) Impossible under any model\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE76530.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=76530. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Max-heap\nc) Queue\nd) Binary search tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA6204.",
        "target_text": "Question: Circular-array queue with capacity 6204: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Head==Tail means full\nc) Track count or keep one slot empty\nd) Require prime capacity\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM802_136108.",
        "target_text": "Question: Merge k=802 sorted streams totaling N=136108 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log N)\nc) Θ(N log k)\nd) Θ(k log N)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF8539840_0.21.",
        "target_text": "Question: Chaining hash table with n=8539840 keys at load factor α=0.21. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS561565.",
        "target_text": "Question: BST with parent pointers (id=561565): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Use level-order and pick next node\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Always climb to root then go right once\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST496308.",
        "target_text": "Question: MST question id=496308: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) MST minimizes number of edges\nc) Prim requires the entire edge set to be sorted first\nd) MST is always unique in connected graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS56123.",
        "target_text": "Question: In KMP, what does LPS[56123] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Number of mismatches up to i\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Index of next occurrence\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS490954.",
        "target_text": "Question: Keys are integers in range [0..490954]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Shell sort\nc) Counting sort\nd) Heap sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS6046671.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=6046671 typically runs in?\nChoices:\na) O(1) worst-case\nb) Θ(n) average\nc) O(log log n) average\nd) Θ(log n) average\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_3_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^1, f3=n^1 (log n)^3, f4=n^5?\nChoices:\na) Θ(n^1 (log n)^3)\nb) Θ((log n)^3)\nc) Θ(n^5)\nd) Θ(n^1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S8424_199.",
        "target_text": "Question: Array length n=8424, find max-sum subarray of fixed length k=199. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK66_4805.",
        "target_text": "Question: Merge k=66 sorted linked lists totaling n=4805 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n + k^2)\nc) Θ(n log k)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE24632.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=24632. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Decreasing stack\nc) Binary search tree\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW9467_560.",
        "target_text": "Question: Sliding window maximum for array length n=9467 and window w=560. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(nw)\nc) Θ(w log n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM583_87237.",
        "target_text": "Question: Merge k=583 sorted streams totaling N=87237 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(k log N)\nc) Θ(N log k)\nd) Θ(N log N)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH4096.",
        "target_text": "Question: In open addressing with double hashing over table size m=4096, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Choose m even and g(k) even\nc) Use g(k)=0 for some keys\nd) Make both hash functions identical\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS651956.",
        "target_text": "Question: BST with parent pointers (id=651956): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Reverse postorder traversal entirely\nc) Always climb to root then go right once\nd) Use level-order and pick next node\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS380087_2821048.",
        "target_text": "Question: A directed graph with V=380087, E≈2821048. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) Only if edges are unweighted\nc) When all vertices have outdegree ≥ 1\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Randomized hashing makes spurious matches rare. Variant RK257_1000000009.",
        "target_text": "Question: Rabin–Karp with base=257, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Trie of all substrings\nb) Use of a min-heap\nc) Low collision probability of rolling hash\nd) Suffix tree guaranteeing O(1) per char\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB21453752.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=21453752 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n)\nc) Ω(n^2)\nd) Ω(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS3538091.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=3538091 typically runs in?\nChoices:\na) Θ(n) average\nb) O(log log n) average\nc) O(1) worst-case\nd) Θ(log n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M8_2_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/2) + n^4 for n being a power of 2.\nChoices:\na) Θ(n^3.0)\nb) Θ(n^3.0 log n)\nc) Θ(n^4)\nd) Θ(n^4 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P383121.",
        "target_text": "Question: Answer 383121 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Sort once and binary search per query\nc) Use a stack to store partial sums\nd) Recompute sums per query in Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL56122.",
        "target_text": "Question: Check if a singly linked list of length n=56122 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Copy to array and two-pointer check\nc) Find middle, reverse second half, compare\nd) Sort and compare with original\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS2474.",
        "target_text": "Question: Compute stock span for 2474 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Fenwick tree\nc) Monotonic stack\nd) Priority queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ774362.",
        "target_text": "Question: For 774362 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Binary heap\nc) Deque\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL534_604782.",
        "target_text": "Question: Find the k=534-th largest element among n=604782 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Deterministic selection (median-of-medians)\nc) Binary search on value domain\nd) Heapsort then index\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH4096.",
        "target_text": "Question: In open addressing with double hashing over table size m=4096, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) Make both hash functions identical\nc) g(k) coprime with m for all keys\nd) Choose m even and g(k) even\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H528825944.",
        "target_text": "Question: For a balanced BST with n=528825944 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS900085_8683213.",
        "target_text": "Question: A directed graph with V=900085, E≈8683213. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) Only if edges are unweighted\nc) Only if the graph is connected\nd) When all vertices have outdegree ≥ 1\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB97457.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=97457. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) BST over all substrings\nc) Suffix automaton or suffix array + LCP\nd) Binary heap of substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST852578.",
        "target_text": "Question: Stability (id=852578): which pairing is correct?\nChoices:\na) Heap sort (stable), Merge sort (unstable)\nb) Counting sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Quick sort (stable), Selection sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS3980132.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=3980132 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(1) expected\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M9_3_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/3) + n^3 for n being a power of 3.\nChoices:\na) Θ(n^2.0 log n)\nb) Θ(n^2.0)\nc) Θ(n^3)\nd) Θ(n^3 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM10977.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=10977-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Scan linearly counting gaps\nc) Use a heap of differences\nd) Hash all present values then scan\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL47931.",
        "target_text": "Question: Check if a singly linked list of length n=47931 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Sort and compare with original\nc) Use a hash set of seen values\nd) Copy to array and two-pointer check\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS7.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 7 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Greedy left-to-right without memory\nb) Sort segments then concatenate\nc) Use BFS on substring graph\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW7280_772.",
        "target_text": "Question: Sliding window maximum for array length n=7280 and window w=772. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(w log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC47624874.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=47624874?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF5734456_0.2.",
        "target_text": "Question: Chaining hash table with n=5734456 keys at load factor α=0.2. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR807928.",
        "target_text": "Question: In a BST with distinct keys (id=807928), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Level-order\nc) Postorder\nd) Preorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D226078.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 226078]. Why?\nChoices:\na) Distinct weights are required\nb) Graph must be undirected\nc) Nonnegative weights ensure greedy optimality\nd) Self-loops must be absent\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Randomized hashing makes spurious matches rare. Variant RK911382323_998244353.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=998244353 achieves expected linear time due to what?\nChoices:\na) Suffix tree guaranteeing O(1) per char\nb) Trie of all substrings\nc) Use of a min-heap\nd) Low collision probability of rolling hash\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS300.",
        "target_text": "Question: Array is nearly sorted with at most 300 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Heap sort\nc) Insertion sort\nd) Radix sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI13_864.",
        "target_text": "Question: Binary search over half-open range [13, 864)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Keep inclusive bounds on both ends\nd) Increase both lo and hi to skip duplicates\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T1_4_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^1, f3=n^1 (log n)^4, f4=n^6?\nChoices:\na) Θ(n^6)\nb) Θ(n^1)\nc) Θ(n^1 (log n)^4)\nd) Θ((log n)^4)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R542682.",
        "target_text": "Question: Rotate an array right by r=542682 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Selection sort then shift\nc) Three-reversal method\nd) Single-step rotate repeated r times\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK9_664.",
        "target_text": "Question: Merge k=9 sorted linked lists totaling n=664 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(k n)\nc) Θ(n log n)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP788.",
        "target_text": "Question: Verify whether a pop sequence of length n=788 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA3984.",
        "target_text": "Question: Circular-array queue with capacity 3984: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Require power-of-two capacity\nc) Head==Tail means full\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL859_458003.",
        "target_text": "Question: Find the k=859-th largest element among n=458003 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Heapsort then index\nc) Binary search on value domain\nd) Build max-heap and extract k times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF6854733_0.9.",
        "target_text": "Question: Chaining hash table with n=6854733 keys at load factor α=0.9. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(α log α)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR216148.",
        "target_text": "Question: In a BST with distinct keys (id=216148), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Level-order\nc) Preorder\nd) Postorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR259171.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=259171 edges. What algorithmic idea achieves linear time?\nChoices:\na) Tarjan’s low-link DFS\nb) Dijkstra’s algorithm\nc) Topological sorting\nd) Kruskal’s algorithm\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP49824.",
        "target_text": "Question: KMP matches a pattern of length m=49824 in linear time using which table?\nChoices:\na) Suffix array\nb) Z-array exclusively\nc) Rolling hash table\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB89141682.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=89141682 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n)\nc) Ω(n^2)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU2851426.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=2851426. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Hashing with chaining\nc) Binary search with left/right bias\nd) Heap-based selection\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_2_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^3, f3=n^3 (log n)^2, f4=n^7?\nChoices:\na) Θ(n^3)\nb) Θ(n^7)\nc) Θ(n^3 (log n)^2)\nd) Θ((log n)^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM4364.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=4364-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Hash all present values then scan\nc) Use a heap of differences\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL47688.",
        "target_text": "Question: Check if a singly linked list of length n=47688 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Copy to array and two-pointer check\nc) Use a hash set of seen values\nd) Sort and compare with original\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP653.",
        "target_text": "Question: Verify whether a pop sequence of length n=653 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Simulate using one stack in Θ(n)\nc) Sort both sequences then compare\nd) Use a queue to mirror the stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ931923.",
        "target_text": "Question: For 931923 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Binary heap\nc) Queue\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA12_70096859.",
        "target_text": "Question: In a d-ary heap with d=12 and n=70096859 nodes, what is the height?\nChoices:\na) Θ(log_12 n)\nb) Θ(n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.75.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.75?\nChoices:\na) To maintain key stability\nb) To reduce memory usage to exact size\nc) To keep expected O(1) operations\nd) To sort keys implicitly\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR384274.",
        "target_text": "Question: In a BST with distinct keys (id=384274), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Inorder\nc) Postorder\nd) Level-order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST878766.",
        "target_text": "Question: MST question id=878766: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) MST is always unique in connected graphs\nc) MST minimizes number of edges\nd) Prim requires the entire edge set to be sorted first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS32069.",
        "target_text": "Question: In KMP, what does LPS[32069] represent for a given pattern?\nChoices:\na) Length of longest proper prefix that is also a suffix for prefix ending at i\nb) Total distinct prefixes up to i\nc) Index of next occurrence\nd) Number of mismatches up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS843832.",
        "target_text": "Question: Heapsort stability check id=843832: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort always beats merge sort\nc) Heapsort is stable\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI96_3782.",
        "target_text": "Question: Binary search over half-open range [96, 3782)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Increase both lo and hi to skip duplicates\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T3_2_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^3, f3=n^3 (log n)^2, f4=n^8?\nChoices:\na) Θ(n^3 (log n)^2)\nb) Θ(n^3)\nc) Θ((log n)^2)\nd) Θ(n^8)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S14126_322.",
        "target_text": "Question: Array length n=14126, find max-sum subarray of fixed length k=322. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(k log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR4.",
        "target_text": "Question: Reverse a singly linked list in groups of k=4 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE73244.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=73244. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Queue\nc) Max-heap\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW5727_427.",
        "target_text": "Question: Sliding window maximum for array length n=5727 and window w=427. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(nw)\nc) Θ(n)\nd) Θ(w log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK4.",
        "target_text": "Question: In a d-ary heap (d=4), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It increases height linearly\nb) No effect whatsoever\nc) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nd) It makes the operation constant time\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.75.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.75?\nChoices:\na) To sort keys implicitly\nb) To maintain key stability\nc) To keep expected O(1) operations\nd) To reduce memory usage to exact size\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Two-step rotations repair misaligned subtrees. Variant AVL5244.",
        "target_text": "Question: After inserting into an AVL tree, a Left-Right imbalance occurs at node X. Which fix is correct?\nChoices:\na) Left rotate left child of X, then right rotate X\nb) Single right rotate X\nc) Single left rotate X\nd) Right rotate right child of X, then left rotate X\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP360864.",
        "target_text": "Question: Test bipartiteness (id=360864) of an undirected graph efficiently. Which method works?\nChoices:\na) Attempt 2-coloring via BFS; failure indicates odd cycle\nb) Sort vertices and deduplicate\nc) Compute an MST then inspect edges\nd) Check all degrees even\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP6354.",
        "target_text": "Question: KMP matches a pattern of length m=6354 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Z-array exclusively\nc) Suffix array\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS963400.",
        "target_text": "Question: Keys are integers in range [0..963400]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Heap sort\nc) Quick sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI37_3823.",
        "target_text": "Question: Binary search over half-open range [37, 3823)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Keep inclusive bounds on both ends\nc) Increase both lo and hi to skip duplicates\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_5_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^1, f3=n^1 (log n)^5, f4=n^4?\nChoices:\na) Θ(n^1)\nb) Θ(n^4)\nc) Θ(n^1 (log n)^5)\nd) Θ((log n)^5)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM73080.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=73080-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Binary search on index vs value gap\nc) Hash all present values then scan\nd) Scan linearly counting gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN292839_346798.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=292839, B=346798. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Advance pointers; when one ends, jump to the other head\nc) Hash addresses of first list\nd) Binary search on addresses\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE77938.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=77938. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Max-heap\nc) Binary search tree\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS675.",
        "target_text": "Question: A queue via two stacks handles a burst of 675 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA14_52485694.",
        "target_text": "Question: In a d-ary heap with d=14 and n=52485694 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log_14 n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH16384.",
        "target_text": "Question: In open addressing with double hashing over table size m=16384, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Choose m even and g(k) even\nc) Make both hash functions identical\nd) Use g(k)=0 for some keys\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS602783.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=602783-th smallest?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(k)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D335969.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 335969]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Graph must be undirected\nc) Distinct weights are required\nd) Self-loops must be absent\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN896727.",
        "target_text": "Question: Check anagrams for strings of length n=896727 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) Use a stack\nc) Count character frequencies in Θ(n)\nd) DFS on character graph\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX8_8.",
        "target_text": "Question: Radix sort with d=8 digits and base b=8 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(n log n)\nc) Θ(d·(n + b))\nd) Θ(d·n·log b)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Geometric level distribution mirrors balanced trees. Variant SL0.5.",
        "target_text": "Question: Skip list with level promotion probability p=0.5: expected complexity of search/insert/delete?\nChoices:\na) Θ(log n) for all three\nb) Θ(√n) for all three\nc) Θ(1) for all three\nd) Θ(n) for all three\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_5_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^1, f3=n^1 (log n)^5, f4=n^5?\nChoices:\na) Θ(n^1 (log n)^5)\nb) Θ(n^1)\nc) Θ((log n)^5)\nd) Θ(n^5)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P407697.",
        "target_text": "Question: Answer 407697 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Use a stack to store partial sums\nc) Recompute sums per query in Θ(n)\nd) Sort once and binary search per query\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN68909_257008.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=68909, B=257008. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Advance pointers; when one ends, jump to the other head\nc) Hash addresses of first list\nd) Binary search on addresses\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE65538.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=65538. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Decreasing stack\nc) Queue\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS1482.",
        "target_text": "Question: A queue via two stacks handles a burst of 1482 operations. Amortized costs?\nChoices:\na) ENQUEUE and DEQUEUE both amortized Θ(1)\nb) Both Θ(log n)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK8.",
        "target_text": "Question: In a d-ary heap (d=8), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It increases height linearly\nb) No effect whatsoever\nc) It makes the operation constant time\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.56.",
        "target_text": "Question: In separate chaining with load factor α=0.56, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1/α)\nc) Θ(α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS674713.",
        "target_text": "Question: BST with parent pointers (id=674713): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Always climb to root then go right once\nc) Reverse postorder traversal entirely\nd) Use level-order and pick next node\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS200544_997551.",
        "target_text": "Question: A directed graph with V=200544, E≈997551. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When it is a DAG (no directed cycles)\nc) When all vertices have outdegree ≥ 1\nd) Only if edges are unweighted\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB83039.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=83039. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) Queue of rolling hashes only\nc) Suffix automaton or suffix array + LCP\nd) BST over all substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS469.",
        "target_text": "Question: Array is nearly sorted with at most 469 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Shell sort with fixed gaps\nc) Insertion sort\nd) Radix sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI70_580.",
        "target_text": "Question: Binary search over half-open range [70, 580)—which invariant prevents infinite loops?\nChoices:\na) Increase both lo and hi to skip duplicates\nb) Keep inclusive bounds on both ends\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_6_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^1, f3=n^1 (log n)^6, f4=n^6?\nChoices:\na) Θ(n^6)\nb) Θ((log n)^6)\nc) Θ(n^1)\nd) Θ(n^1 (log n)^6)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM11067.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=11067-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Scan linearly counting gaps\nc) Binary search on index vs value gap\nd) Hash all present values then scan\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK14_969.",
        "target_text": "Question: Merge k=14 sorted linked lists totaling n=969 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log n)\nc) Θ(n log k)\nd) Θ(k n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP4_5.",
        "target_text": "Question: Evaluate an infix expression with 4–5 precedence levels and parentheses. Linear-time method?\nChoices:\na) Build a tree without any stack\nb) Left-to-right without stacks\nc) Convert to postfix and evaluate with a stack\nd) Sort tokens by precedence then scan\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ607500.",
        "target_text": "Question: For 607500 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Binary heap\nc) Queue\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK6.",
        "target_text": "Question: In a d-ary heap (d=6), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It makes the operation constant time\nb) No effect whatsoever\nc) It increases height linearly\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH65536.",
        "target_text": "Question: In open addressing with double hashing over table size m=65536, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) Use g(k)=0 for some keys\nc) Make both hash functions identical\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H783846921.",
        "target_text": "Question: For a balanced BST with n=783846921 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS6523_13693.",
        "target_text": "Question: A directed graph with V=6523, E≈13693. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) When it is a DAG (no directed cycles)\nc) Only if edges are unweighted\nd) Only if the graph is connected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS12832.",
        "target_text": "Question: In KMP, what does LPS[12832] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Number of mismatches up to i\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Total distinct prefixes up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS777.",
        "target_text": "Question: Array is nearly sorted with at most 777 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Insertion sort\nc) Shell sort with fixed gaps\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS843732.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=843732 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(log n) average\nc) Θ(n) average\nd) O(1) worst-case\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M6_2_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/2) + n^4 for n being a power of 2.\nChoices:\na) Θ(n^4)\nb) Θ(n^2.585)\nc) Θ(n^4 log n)\nd) Θ(n^2.585 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R136152.",
        "target_text": "Question: Rotate an array right by r=136152 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Single-step rotate repeated r times\nc) Heapify then extract\nd) Selection sort then shift\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN704500.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 704500, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Reverse list then delete head\nc) Copy next node’s data here and bypass next\nd) Traverse from head to find predecessor\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE91158.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=91158. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Max-heap\nc) Queue\nd) Binary search tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ131097.",
        "target_text": "Question: Schedule 131097 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Unordered array\nc) Stack\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC94089321.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=94089321?\nChoices:\na) Θ(log n)\nb) Θ(log log n)\nc) Θ(n)\nd) Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF2873903_0.72.",
        "target_text": "Question: Chaining hash table with n=2873903 keys at load factor α=0.72. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(α log α)\nd) Θ(nα)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS339310.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=339310-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(√n)\nd) Θ(k)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS860094_8531404.",
        "target_text": "Question: A directed graph with V=860094, E≈8531404. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if edges are unweighted\nc) When it is a DAG (no directed cycles)\nd) Only if the graph is connected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z426223.",
        "target_text": "Question: For string S (id=426223), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Number of mismatches at i\nc) Next index of S[i]\nd) Number of distinct substrings up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB2500222.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=2500222 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(log n)\nc) Ω(n)\nd) Ω(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU3941424.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=3941424. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Heap-based selection\nc) Linear scan with early exit\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T4_3_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^4, f3=n^4 (log n)^3, f4=n^8?\nChoices:\na) Θ((log n)^3)\nb) Θ(n^4 (log n)^3)\nc) Θ(n^4)\nd) Θ(n^8)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R37590.",
        "target_text": "Question: Rotate an array right by r=37590 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Selection sort then shift\nc) Heapify then extract\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN772073_966018.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=772073, B=966018. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Binary search on addresses\nc) Advance pointers; when one ends, jump to the other head\nd) Hash addresses of first list\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE10860.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=10860. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Max-heap\nc) Decreasing stack\nd) Binary search tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS6789.",
        "target_text": "Question: A queue via two stacks handles a burst of 6789 operations. Amortized costs?\nChoices:\na) ENQUEUE and DEQUEUE both amortized Θ(1)\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) Both Θ(log n)\nd) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM368_123411.",
        "target_text": "Question: Merge k=368 sorted streams totaling N=123411 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(N log N)\nc) Θ(N + k^2)\nd) Θ(k log N)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH16384.",
        "target_text": "Question: In open addressing with double hashing over table size m=16384, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) Choose m even and g(k) even\nc) Use g(k)=0 for some keys\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA317814.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=317814 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) DFS from root each time\nc) Sort node labels then binary search\nd) Naive parent climbing O(n) per query\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC403396.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=403396 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(V log V)\nc) Θ(V+E)\nd) Θ(E log V)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z84090.",
        "target_text": "Question: For string S (id=84090), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Next index of S[i]\nc) Number of distinct substrings up to i\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB68092683.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=68092683 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n log n)\nc) Ω(n^2)\nd) Ω(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Geometric level distribution mirrors balanced trees. Variant SL0.25.",
        "target_text": "Question: Skip list with level promotion probability p=0.25: expected complexity of search/insert/delete?\nChoices:\na) Θ(n) for all three\nb) Θ(1) for all three\nc) Θ(√n) for all three\nd) Θ(log n) for all three\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M6_2_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/2) + n^0 for n being a power of 2.\nChoices:\na) Θ(n^0 log n)\nb) Θ(n^2.585)\nc) Θ(n^2.585 log n)\nd) Θ(n^0)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM56295.",
        "target_text": "Question: Find a majority element in an array of length n=56295 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Divide-and-conquer merges\nc) Boyer–Moore voting with verification\nd) Counting sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN859240.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 859240, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Reverse list then delete head\nc) Impossible under any model\nd) Traverse from head to find predecessor\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE25481.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=25481. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Max-heap\nc) Binary search tree\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS9099.",
        "target_text": "Question: A queue via two stacks handles a burst of 9099 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL912_946063.",
        "target_text": "Question: Find the k=912-th largest element among n=946063 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Build max-heap and extract k times\nc) Binary search on value domain\nd) Heapsort then index\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.63.",
        "target_text": "Question: In separate chaining with load factor α=0.63, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(1/α)\nd) Θ(α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR97663.",
        "target_text": "Question: In a BST with distinct keys (id=97663), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Level-order\nc) Postorder\nd) Preorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR278794.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=278794 edges. What algorithmic idea achieves linear time?\nChoices:\na) Kruskal’s algorithm\nb) Topological sorting\nc) Tarjan’s low-link DFS\nd) Dijkstra’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z598546.",
        "target_text": "Question: For string S (id=598546), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Number of distinct substrings up to i\nc) Next index of S[i]\nd) Number of mismatches at i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS899088.",
        "target_text": "Question: Keys are integers in range [0..899088]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Shell sort\nc) Quick sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX372771827.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈372771827. Why?\nChoices:\na) Requires the array to be cyclic\nb) Doubles the bound to bracket, then binary search\nc) Uses hashing to index unknown segments\nd) Sorts the array first\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T5_3_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^5, f3=n^5 (log n)^3, f4=n^9?\nChoices:\na) Θ(n^5)\nb) Θ(n^5 (log n)^3)\nc) Θ(n^9)\nd) Θ((log n)^3)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP2194_1972.",
        "target_text": "Question: Sorted array length n=2194. Decide if any pair sums to 1972. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Hash set in Θ(n log n)\nc) Divide and conquer in Θ(n log n)\nd) Two-pointer scan in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN82553.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 82553, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Impossible under any model\nc) Traverse from head to find predecessor\nd) Reverse list then delete head\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE1888.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=1888. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Max-heap\nc) Decreasing stack\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ436259.",
        "target_text": "Question: For 436259 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Binary heap\nc) Deque\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL944_287461.",
        "target_text": "Question: Find the k=944-th largest element among n=287461 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Binary search on value domain\nc) Heapsort then index\nd) Build max-heap and extract k times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.71.",
        "target_text": "Question: In separate chaining with load factor α=0.71, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(1/α)\nd) Θ(α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H282567746.",
        "target_text": "Question: For a balanced BST with n=282567746 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC931755.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=931755 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(VE)\nc) Θ(V log V)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB55429.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=55429. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Binary heap of substrings\nc) BST over all substrings\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST975621.",
        "target_text": "Question: Stability (id=975621): which pairing is correct?\nChoices:\na) Heap sort (stable), Merge sort (unstable)\nb) Quick sort (stable), Selection sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Counting sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Geometric level distribution mirrors balanced trees. Variant SL0.5.",
        "target_text": "Question: Skip list with level promotion probability p=0.5: expected complexity of search/insert/delete?\nChoices:\na) Θ(√n) for all three\nb) Θ(n) for all three\nc) Θ(log n) for all three\nd) Θ(1) for all three\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_2_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^3, f3=n^3 (log n)^2, f4=n^6?\nChoices:\na) Θ(n^3)\nb) Θ(n^3 (log n)^2)\nc) Θ((log n)^2)\nd) Θ(n^6)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S18057_362.",
        "target_text": "Question: Array length n=18057, find max-sum subarray of fixed length k=362. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(k log n)\nc) Θ(n log n)\nd) Θ(nk)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK25_4694.",
        "target_text": "Question: Merge k=25 sorted linked lists totaling n=4694 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n + k^2)\nc) Θ(n log k)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP524.",
        "target_text": "Question: Verify whether a pop sequence of length n=524 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Backtrack with recursion in Θ(2^n)\nc) Use a queue to mirror the stack\nd) Sort both sequences then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA2019.",
        "target_text": "Question: Circular-array queue with capacity 2019: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Head==Tail means full\nc) Require power-of-two capacity\nd) Require prime capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM697_304338.",
        "target_text": "Question: Merge k=697 sorted streams totaling N=304338 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log k)\nc) Θ(N log N)\nd) Θ(k log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.5.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.5?\nChoices:\na) To reduce memory usage to exact size\nb) To keep expected O(1) operations\nc) To sort keys implicitly\nd) To maintain key stability\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H749357677.",
        "target_text": "Question: For a balanced BST with n=749357677 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS234664_257928.",
        "target_text": "Question: A directed graph with V=234664, E≈257928. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) Only if edges are unweighted\nc) When all vertices have outdegree ≥ 1\nd) Only if the graph is connected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN217718.",
        "target_text": "Question: Check anagrams for strings of length n=217718 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) Count character frequencies in Θ(n)\nc) Use a stack\nd) DFS on character graph\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS965630.",
        "target_text": "Question: Keys are integers in range [0..965630]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Heap sort\nc) Shell sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS125790.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=125790 typically runs in?\nChoices:\na) Θ(n) average\nb) Θ(log n) average\nc) O(log log n) average\nd) O(1) worst-case\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_4_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^3, f3=n^3 (log n)^4, f4=n^8?\nChoices:\na) Θ(n^3)\nb) Θ(n^3 (log n)^4)\nc) Θ((log n)^4)\nd) Θ(n^8)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM66392.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=66392-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Binary search on index vs value gap\nc) Scan linearly counting gaps\nd) Use a heap of differences\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL7168.",
        "target_text": "Question: Check if a singly linked list of length n=7168 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Find middle, reverse second half, compare\nc) Copy to array and two-pointer check\nd) Use a hash set of seen values\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS2.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 2 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Use two stacks for counts and fragments\nc) Greedy left-to-right without memory\nd) Sort segments then concatenate\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA3865.",
        "target_text": "Question: Circular-array queue with capacity 3865: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Require power-of-two capacity\nc) Track count or keep one slot empty\nd) Require prime capacity\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM548_126339.",
        "target_text": "Question: Merge k=548 sorted streams totaling N=126339 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log N)\nc) Θ(k log N)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Adversarial patterns are neutralized by random choice. Variant UH100000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=100000 slots yields what benefit?\nChoices:\na) Expected constant-time operations against adversaries\nb) Zero collisions guaranteed\nc) Eliminates need for resizing\nd) Cryptographic security by default\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS762484.",
        "target_text": "Question: BST with parent pointers (id=762484): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) Always climb to root then go right once\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Reverse postorder traversal entirely\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF59376.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=59376 can handle which case while detecting it?\nChoices:\na) Negative edge weights and negative cycles\nb) Only acyclic graphs\nc) Faster runtime on sparse nonnegative graphs\nd) Equal runtime on all graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB28583.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=28583. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) Queue of rolling hashes only\nc) Binary heap of substrings\nd) BST over all substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX4_8.",
        "target_text": "Question: Radix sort with d=4 digits and base b=8 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(b^d)\nc) Θ(d·n·log b)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX508677062.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈508677062. Why?\nChoices:\na) Requires the array to be cyclic\nb) Sorts the array first\nc) Doubles the bound to bracket, then binary search\nd) Uses hashing to index unknown segments\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M5_4_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/4) + n^2 for n being a power of 4.\nChoices:\na) Θ(n^2 log n)\nb) Θ(n^1.161 log n)\nc) Θ(n^1.161)\nd) Θ(n^2)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP13383_2583.",
        "target_text": "Question: Sorted array length n=13383. Decide if any pair sums to 2583. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Divide and conquer in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR10.",
        "target_text": "Question: Reverse a singly linked list in groups of k=10 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(n log k)\nc) Θ(nk)\nd) Θ(k log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS3.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 3 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Sort segments then concatenate\nc) Greedy left-to-right without memory\nd) Use BFS on substring graph\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ275859.",
        "target_text": "Question: Schedule 275859 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Unordered array\nc) Circular queue\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM523_99525.",
        "target_text": "Question: Merge k=523 sorted streams totaling N=99525 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log k)\nc) Θ(N log N)\nd) Θ(N + k^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.89.",
        "target_text": "Question: In separate chaining with load factor α=0.89, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H168646320.",
        "target_text": "Question: For a balanced BST with n=168646320 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(√n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST605194.",
        "target_text": "Question: MST question id=605194: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) Prim requires the entire edge set to be sorted first\nd) MST minimizes number of edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Character-by-character descent. Variant TRIE128.",
        "target_text": "Question: Search a trie over alphabet size σ=128 for a key of length m. Time complexity?\nChoices:\na) Θ(1) average for all m\nb) Θ(m log σ)\nc) Θ(m)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS27.",
        "target_text": "Question: Array is nearly sorted with at most 27 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Heap sort\nc) Shell sort with fixed gaps\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI42_3963.",
        "target_text": "Question: Binary search over half-open range [42, 3963)—which invariant prevents infinite loops?\nChoices:\na) Increase both lo and hi to skip duplicates\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Keep inclusive bounds on both ends\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M3_6_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/6) + n^0 for n being a power of 6.\nChoices:\na) Θ(n^0.6131)\nb) Θ(n^0 log n)\nc) Θ(n^0.6131 log n)\nd) Θ(n^0)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM870602.",
        "target_text": "Question: Find a majority element in an array of length n=870602 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Divide-and-conquer merges\nc) Binary search on value domain\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Phase difference accumulates around the cycle. Variant C4.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 4× and 1×. Complexity?\nChoices:\na) Θ(1) time, Θ(1) space\nb) Θ(n) time, Θ(1) space\nc) Θ(log n) time, Θ(1) space\nd) Θ(n) time, Θ(n) space\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE49405.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=49405. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Queue\nc) Binary search tree\nd) Max-heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS9409.",
        "target_text": "Question: A queue via two stacks handles a burst of 9409 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) Both Θ(log n)\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH5928713.",
        "target_text": "Question: Build a binary heap from n=5928713 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(n^2)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.0.",
        "target_text": "Question: In separate chaining with load factor α=1.0, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(1/α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H372985968.",
        "target_text": "Question: For a balanced BST with n=372985968 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST740900.",
        "target_text": "Question: MST question id=740900: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) MST minimizes number of edges\nc) MST is always unique in connected graphs\nd) Prim requires the entire edge set to be sorted first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB47241.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=47241. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Suffix automaton or suffix array + LCP\nc) Binary heap of substrings\nd) BST over all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX7_256.",
        "target_text": "Question: Radix sort with d=7 digits and base b=256 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·n·log b)\nc) Θ(d·(n + b))\nd) Θ(b^d)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS9792833.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=9792833 typically runs in?\nChoices:\na) Θ(log n) average\nb) O(log log n) average\nc) O(1) worst-case\nd) Θ(n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T5_5_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^5, f3=n^5 (log n)^5, f4=n^7?\nChoices:\na) Θ(n^7)\nb) Θ((log n)^5)\nc) Θ(n^5)\nd) Θ(n^5 (log n)^5)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM16105.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=16105-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Binary search on index vs value gap\nc) Use a heap of differences\nd) Scan linearly counting gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Phase difference accumulates around the cycle. Variant C4.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 4× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(1) space\nb) Θ(1) time, Θ(1) space\nc) Θ(n) time, Θ(n) space\nd) Θ(log n) time, Θ(1) space\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE63596.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=63596. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Binary search tree\nc) Decreasing stack\nd) Max-heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B7566.",
        "target_text": "Question: Run BFS on an unweighted graph with 7566 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) All simple paths before all edges\nc) Lexicographic vertex order\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK3.",
        "target_text": "Question: In a d-ary heap (d=3), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) No effect whatsoever\nc) It makes the operation constant time\nd) It increases height linearly\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.66.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.66?\nChoices:\na) To reduce memory usage to exact size\nb) To maintain key stability\nc) To keep expected O(1) operations\nd) To sort keys implicitly\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H833261160.",
        "target_text": "Question: For a balanced BST with n=833261160 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(log log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Repeated edge relaxation tolerates negatives. Variant BF46240.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=46240 can handle which case while detecting it?\nChoices:\na) Only acyclic graphs\nb) Faster runtime on sparse nonnegative graphs\nc) Equal runtime on all graphs\nd) Negative edge weights and negative cycles\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN459035.",
        "target_text": "Question: Check anagrams for strings of length n=459035 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Count character frequencies in Θ(n)\nc) Use a stack\nd) Sort both in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX6_256.",
        "target_text": "Question: Radix sort with d=6 digits and base b=256 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(b^d)\nc) Θ(d·n·log b)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS5683380.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=5683380 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(log n)\nc) Θ(1) expected\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M9_2_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/2) + n^4 for n being a power of 2.\nChoices:\na) Θ(n^3.1699 log n)\nb) Θ(n^4)\nc) Θ(n^4 log n)\nd) Θ(n^3.1699)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S16377_344.",
        "target_text": "Question: Array length n=16377, find max-sum subarray of fixed length k=344. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(k log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN689960_878964.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=689960, B=878964. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Reverse one list then compare\nc) Hash addresses of first list\nd) Binary search on addresses\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS1867.",
        "target_text": "Question: Compute stock span for 1867 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Fenwick tree\nc) Priority queue\nd) Hash table\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ5805.",
        "target_text": "Question: Schedule 5805 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Circular queue\nc) Stack\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL774_395425.",
        "target_text": "Question: Find the k=774-th largest element among n=395425 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Deterministic selection (median-of-medians)\nc) Binary search on value domain\nd) Heapsort then index\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF6225431_0.34.",
        "target_text": "Question: Chaining hash table with n=6225431 keys at load factor α=0.34. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(nα)\nc) Θ(α log α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA653886.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=653886 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Euler tour + RMQ yields O(1) per query\nc) Sort node labels then binary search\nd) Naive parent climbing O(n) per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS271082_2158194.",
        "target_text": "Question: A directed graph with V=271082, E≈2158194. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) Only if edges are unweighted\nc) When all vertices have outdegree ≥ 1\nd) Only if the graph is connected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP38873.",
        "target_text": "Question: KMP matches a pattern of length m=38873 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) Rolling hash table\nc) Suffix array\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB10589124.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=10589124 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n^2)\nc) Ω(n log n)\nd) Ω(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS6274157.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=6274157 typically runs in?\nChoices:\na) O(log log n) average\nb) O(1) worst-case\nc) Θ(log n) average\nd) Θ(n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M2_4_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/4) + n^2 for n being a power of 4.\nChoices:\na) Θ(n^0.5)\nb) Θ(n^2)\nc) Θ(n^0.5 log n)\nd) Θ(n^2 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S16511_311.",
        "target_text": "Question: Array length n=16511, find max-sum subarray of fixed length k=311. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(nk)\nd) Θ(k log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN347195.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 347195, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Impossible under any model\nc) Copy next node’s data here and bypass next\nd) Reverse list then delete head\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS2154.",
        "target_text": "Question: Compute stock span for 2154 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Monotonic stack\nc) Hash table\nd) Priority queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW7704_768.",
        "target_text": "Question: Sliding window maximum for array length n=7704 and window w=768. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(nw)\nc) Θ(w log n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC2552108.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=2552108?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.48.",
        "target_text": "Question: In separate chaining with load factor α=1.48, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS142584.",
        "target_text": "Question: BST with parent pointers (id=142584): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) Always climb to root then go right once\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Reverse postorder traversal entirely\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS340054_2791915.",
        "target_text": "Question: A directed graph with V=340054, E≈2791915. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When it is a DAG (no directed cycles)\nc) When all vertices have outdegree ≥ 1\nd) Only if edges are unweighted\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB30130.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=30130. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Suffix automaton or suffix array + LCP\nc) Binary heap of substrings\nd) Queue of rolling hashes only\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB11797236.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=11797236 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n)\nc) Ω(n log n)\nd) Ω(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU8918911.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=8918911. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Linear scan with early exit\nc) Heap-based selection\nd) Hashing with chaining\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M7_2_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/2) + n^3 for n being a power of 2.\nChoices:\na) Θ(n^2.8074 log n)\nb) Θ(n^3 log n)\nc) Θ(n^3)\nd) Θ(n^2.8074)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM56302.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=56302-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Binary search on index vs value gap\nc) Scan linearly counting gaps\nd) Hash all present values then scan\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN437532.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 437532, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Traverse from head to find predecessor\nc) Copy next node’s data here and bypass next\nd) Reverse list then delete head\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS2818.",
        "target_text": "Question: Compute stock span for 2818 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Monotonic stack\nc) Priority queue\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS6233.",
        "target_text": "Question: A queue via two stacks handles a burst of 6233 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) Both Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM750_245843.",
        "target_text": "Question: Merge k=750 sorted streams totaling N=245843 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(N + k^2)\nc) Θ(k log N)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF8297831_0.39.",
        "target_text": "Question: Chaining hash table with n=8297831 keys at load factor α=0.39. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(α log α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA43204.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=43204 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Euler tour + RMQ yields O(1) per query\nc) Sort node labels then binary search\nd) Naive parent climbing O(n) per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR160876.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=160876 edges. What algorithmic idea achieves linear time?\nChoices:\na) Tarjan’s low-link DFS\nb) Topological sorting\nc) Dijkstra’s algorithm\nd) Kruskal’s algorithm\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP13317.",
        "target_text": "Question: KMP matches a pattern of length m=13317 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Z-array exclusively\nc) LPS (failure) function\nd) Suffix array\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS878349.",
        "target_text": "Question: Keys are integers in range [0..878349]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Counting sort\nc) Shell sort\nd) Quick sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU3828787.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=3828787. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Binary search with left/right bias\nc) Linear scan with early exit\nd) Hashing with chaining\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T5_6_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^5, f3=n^5 (log n)^6, f4=n^7?\nChoices:\na) Θ(n^5 (log n)^6)\nb) Θ(n^7)\nc) Θ((log n)^6)\nd) Θ(n^5)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R978120.",
        "target_text": "Question: Rotate an array right by r=978120 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Three-reversal method\nc) Selection sort then shift\nd) Heapify then extract\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN799739.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 799739, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Copy next node’s data here and bypass next\nc) Reverse list then delete head\nd) Impossible under any model\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE57055.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=57055. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Binary search tree\nc) Max-heap\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ793455.",
        "target_text": "Question: For 793455 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Binary heap\nc) Stack\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC61661119.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=61661119?\nChoices:\na) Θ(1)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Threshold-based expansion preserves performance. Variant RS0.8.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.8?\nChoices:\na) To maintain key stability\nb) To keep expected O(1) operations\nc) To sort keys implicitly\nd) To reduce memory usage to exact size\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS144986.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=144986-th smallest?\nChoices:\na) Θ(k)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC121411.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=121411 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(VE)\nc) Θ(V+E)\nd) Θ(V log V)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB23589.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=23589. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Suffix automaton or suffix array + LCP\nc) Binary heap of substrings\nd) BST over all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX4_4.",
        "target_text": "Question: Radix sort with d=4 digits and base b=4 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·n·log b)\nc) Θ(b^d)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS6488741.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=6488741 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(1) expected\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M5_4_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/4) + n^1 for n being a power of 4.\nChoices:\na) Θ(n^1.161)\nb) Θ(n^1)\nc) Θ(n^1 log n)\nd) Θ(n^1.161 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P588850.",
        "target_text": "Question: Answer 588850 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Use a stack to store partial sums\nc) Sort once and binary search per query\nd) Recompute sums per query in Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN657386_899657.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=657386, B=899657. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Reverse one list then compare\nc) Advance pointers; when one ends, jump to the other head\nd) Binary search on addresses\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS1985.",
        "target_text": "Question: Compute stock span for 1985 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Hash table\nc) Fenwick tree\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS2142.",
        "target_text": "Question: A queue via two stacks handles a burst of 2142 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL908_616076.",
        "target_text": "Question: Find the k=908-th largest element among n=616076 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Deterministic selection (median-of-medians)\nc) Binary search on value domain\nd) Build max-heap and extract k times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH2048.",
        "target_text": "Question: In open addressing with double hashing over table size m=2048, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Use g(k)=0 for some keys\nc) Choose m even and g(k) even\nd) Make both hash functions identical\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR956906.",
        "target_text": "Question: In a BST with distinct keys (id=956906), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Level-order\nc) Preorder\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D901270.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 901270]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Distinct weights are required\nc) Self-loops must be absent\nd) Graph must be undirected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP9235.",
        "target_text": "Question: KMP matches a pattern of length m=9235 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) Suffix array\nc) LPS (failure) function\nd) Rolling hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST65124.",
        "target_text": "Question: Stability (id=65124): which pairing is correct?\nChoices:\na) Merge sort (stable), Heap sort (unstable)\nb) Counting sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS7616843.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=7616843 typically runs in?\nChoices:\na) Θ(log n) average\nb) Θ(n) average\nc) O(log log n) average\nd) O(1) worst-case\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T5_1_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^5, f3=n^5 (log n)^1, f4=n^9?\nChoices:\na) Θ(n^5 (log n)^1)\nb) Θ(n^5)\nc) Θ(n^9)\nd) Θ((log n)^1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP12720_3955.",
        "target_text": "Question: Sorted array length n=12720. Decide if any pair sums to 3955. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Hash set in Θ(n log n)\nc) Divide and conquer in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN226855_657437.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=226855, B=657437. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Advance pointers; when one ends, jump to the other head\nc) Reverse one list then compare\nd) Hash addresses of first list\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS2317.",
        "target_text": "Question: Compute stock span for 2317 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Priority queue\nc) Monotonic stack\nd) Fenwick tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW10286_509.",
        "target_text": "Question: Sliding window maximum for array length n=10286 and window w=509. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(w log n)\nc) Θ(n)\nd) Θ(nw)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM167_39542.",
        "target_text": "Question: Merge k=167 sorted streams totaling N=39542 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log N)\nc) Θ(N log k)\nd) Θ(N + k^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF3455375_0.69.",
        "target_text": "Question: Chaining hash table with n=3455375 keys at load factor α=0.69. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(1 + α)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS958421.",
        "target_text": "Question: BST with parent pointers (id=958421): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Always climb to root then go right once\nd) Use level-order and pick next node\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF78350.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=78350 can handle which case while detecting it?\nChoices:\na) Only acyclic graphs\nb) Equal runtime on all graphs\nc) Faster runtime on sparse nonnegative graphs\nd) Negative edge weights and negative cycles\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS29453.",
        "target_text": "Question: In KMP, what does LPS[29453] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Total distinct prefixes up to i\nc) Number of mismatches up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX2_16.",
        "target_text": "Question: Radix sort with d=2 digits and base b=16 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(d·n·log b)\nc) Θ(n log n)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI68_3150.",
        "target_text": "Question: Binary search over half-open range [68, 3150)—which invariant prevents infinite loops?\nChoices:\na) Increase both lo and hi to skip duplicates\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Keep inclusive bounds on both ends\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M7_6_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/6) + n^4 for n being a power of 6.\nChoices:\na) Θ(n^4 log n)\nb) Θ(n^1.086 log n)\nc) Θ(n^1.086)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R22558.",
        "target_text": "Question: Rotate an array right by r=22558 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Selection sort then shift\nc) Heapify then extract\nd) Single-step rotate repeated r times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Phase difference accumulates around the cycle. Variant C4.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 4× and 1×. Complexity?\nChoices:\na) Θ(log n) time, Θ(1) space\nb) Θ(1) time, Θ(1) space\nc) Θ(n) time, Θ(1) space\nd) Θ(n) time, Θ(n) space\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1142.",
        "target_text": "Question: Verify whether a pop sequence of length n=1142 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Use a queue to mirror the stack\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B582129.",
        "target_text": "Question: Run BFS on an unweighted graph with 582129 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) Nondecreasing distance from source\nc) All simple paths before all edges\nd) Lexicographic vertex order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC24769833.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=24769833?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Threshold-based expansion preserves performance. Variant RS0.5.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.5?\nChoices:\na) To reduce memory usage to exact size\nb) To keep expected O(1) operations\nc) To maintain key stability\nd) To sort keys implicitly\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS456210.",
        "target_text": "Question: BST with parent pointers (id=456210): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Use level-order and pick next node\nd) Always climb to root then go right once\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS89262_782515.",
        "target_text": "Question: A directed graph with V=89262, E≈782515. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) When it is a DAG (no directed cycles)\nc) Only if edges are unweighted\nd) Only if the graph is connected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000009.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Low collision probability of rolling hash\nb) Trie of all substrings\nc) Suffix tree guaranteeing O(1) per char\nd) Use of a min-heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS335392.",
        "target_text": "Question: Keys are integers in range [0..335392]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Shell sort\nc) Heap sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX852375843.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈852375843. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Requires the array to be cyclic\nc) Doubles the bound to bracket, then binary search\nd) Sorts the array first\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M7_5_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/5) + n^2 for n being a power of 5.\nChoices:\na) Θ(n^2)\nb) Θ(n^1.2091)\nc) Θ(n^2 log n)\nd) Θ(n^1.2091 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S432_23.",
        "target_text": "Question: Array length n=432, find max-sum subarray of fixed length k=23. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL63013.",
        "target_text": "Question: Check if a singly linked list of length n=63013 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Find middle, reverse second half, compare\nc) Sort and compare with original\nd) Copy to array and two-pointer check\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS1054.",
        "target_text": "Question: Compute stock span for 1054 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Priority queue\nc) Monotonic stack\nd) Fenwick tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ934118.",
        "target_text": "Question: Schedule 934118 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Circular queue\nc) Binary heap\nd) Stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC2891313.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=2891313?\nChoices:\na) Θ(1)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.83.",
        "target_text": "Question: In separate chaining with load factor α=0.83, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS282231.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=282231-th smallest?\nChoices:\na) Θ(k)\nb) Θ(1)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS186673_617035.",
        "target_text": "Question: A directed graph with V=186673, E≈617035. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) Only if edges are unweighted\nc) When all vertices have outdegree ≥ 1\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB90807.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=90807. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) Suffix automaton or suffix array + LCP\nc) Queue of rolling hashes only\nd) BST over all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS144981.",
        "target_text": "Question: Heapsort stability check id=144981: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort is stable\nc) Heapsort always beats merge sort\nd) Heapsort needs extra Θ(n) memory\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX169582560.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈169582560. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Sorts the array first\nc) Requires the array to be cyclic\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A4.",
        "target_text": "Question: A dynamic array starts with capacity 4 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(√m)\nb) Θ(1)\nc) Θ(m)\nd) Θ(log m)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP7531_4075.",
        "target_text": "Question: Sorted array length n=7531. Decide if any pair sums to 4075. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Hash set in Θ(n log n)\nc) Divide and conquer in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN61998.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 61998, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Copy next node’s data here and bypass next\nc) Reverse list then delete head\nd) Traverse from head to find predecessor\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS3796.",
        "target_text": "Question: Compute stock span for 3796 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Priority queue\nc) Hash table\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ100321.",
        "target_text": "Question: Schedule 100321 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Stack\nc) Circular queue\nd) Unordered array\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH2313215.",
        "target_text": "Question: Build a binary heap from n=2313215 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n log n)\nc) Θ(n^2)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.73.",
        "target_text": "Question: In separate chaining with load factor α=0.73, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR297943.",
        "target_text": "Question: In a BST with distinct keys (id=297943), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Preorder\nc) Postorder\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST121398.",
        "target_text": "Question: MST question id=121398: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) MST is always unique in connected graphs\nc) Prim requires the entire edge set to be sorted first\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP89695.",
        "target_text": "Question: KMP matches a pattern of length m=89695 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Z-array exclusively\nc) Rolling hash table\nd) Suffix array\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX10_8.",
        "target_text": "Question: Radix sort with d=10 digits and base b=8 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(d·n·log b)\nc) Θ(b^d)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX581072326.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈581072326. Why?\nChoices:\na) Sorts the array first\nb) Requires the array to be cyclic\nc) Uses hashing to index unknown segments\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T4_4_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^4, f3=n^4 (log n)^4, f4=n^10?\nChoices:\na) Θ((log n)^4)\nb) Θ(n^4)\nc) Θ(n^4 (log n)^4)\nd) Θ(n^10)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P211823.",
        "target_text": "Question: Answer 211823 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Build prefix-sum array; O(1) per query\nc) Use a stack to store partial sums\nd) Recompute sums per query in Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR4.",
        "target_text": "Question: Reverse a singly linked list in groups of k=4 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n)\nd) Θ(n log k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS4878.",
        "target_text": "Question: Compute stock span for 4878 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Monotonic stack\nc) Priority queue\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ814414.",
        "target_text": "Question: For 814414 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Queue\nc) Binary heap\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC96974901.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=96974901?\nChoices:\na) Θ(log log n)\nb) Θ(1)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF3337077_0.73.",
        "target_text": "Question: Chaining hash table with n=3337077 keys at load factor α=0.73. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(α log α)\nc) Θ(1 + α)\nd) Θ(nα)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H119617460.",
        "target_text": "Question: For a balanced BST with n=119617460 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(log log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST300516.",
        "target_text": "Question: MST question id=300516: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) Prim requires the entire edge set to be sorted first\nd) MST is always unique in connected graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN581989.",
        "target_text": "Question: Check anagrams for strings of length n=581989 over fixed alphabet. Optimal approach?\nChoices:\na) Use a stack\nb) Sort both in Θ(n log n)\nc) DFS on character graph\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST362919.",
        "target_text": "Question: Stability (id=362919): which pairing is correct?\nChoices:\na) Merge sort (stable), Heap sort (unstable)\nb) Counting sort (unstable)\nc) Heap sort (stable), Merge sort (unstable)\nd) Quick sort (stable), Selection sort (unstable)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX314515470.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈314515470. Why?\nChoices:\na) Sorts the array first\nb) Doubles the bound to bracket, then binary search\nc) Uses hashing to index unknown segments\nd) Requires the array to be cyclic\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T3_6_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^3, f3=n^3 (log n)^6, f4=n^8?\nChoices:\na) Θ(n^3 (log n)^6)\nb) Θ(n^8)\nc) Θ((log n)^6)\nd) Θ(n^3)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R387876.",
        "target_text": "Question: Rotate an array right by r=387876 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Three-reversal method\nc) Heapify then extract\nd) Selection sort then shift\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN385912.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 385912, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Copy next node’s data here and bypass next\nc) Reverse list then delete head\nd) Traverse from head to find predecessor\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE28099.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=28099. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Queue\nc) Max-heap\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW4895_142.",
        "target_text": "Question: Sliding window maximum for array length n=4895 and window w=142. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(nw)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM935_172643.",
        "target_text": "Question: Merge k=935 sorted streams totaling N=172643 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log N)\nc) Θ(N + k^2)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Threshold-based expansion preserves performance. Variant RS0.75.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.75?\nChoices:\na) To maintain key stability\nb) To sort keys implicitly\nc) To reduce memory usage to exact size\nd) To keep expected O(1) operations\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H537638499.",
        "target_text": "Question: For a balanced BST with n=537638499 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF93616.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=93616 can handle which case while detecting it?\nChoices:\na) Negative edge weights and negative cycles\nb) Equal runtime on all graphs\nc) Faster runtime on sparse nonnegative graphs\nd) Only acyclic graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP2517.",
        "target_text": "Question: KMP matches a pattern of length m=2517 in linear time using which table?\nChoices:\na) Rolling hash table\nb) LPS (failure) function\nc) Z-array exclusively\nd) Suffix array\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS73.",
        "target_text": "Question: Array is nearly sorted with at most 73 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Radix sort\nc) Heap sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS8080158.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=8080158 typically runs in?\nChoices:\na) Θ(log n) average\nb) O(1) worst-case\nc) O(log log n) average\nd) Θ(n) average\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M4_6_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/6) + n^0 for n being a power of 6.\nChoices:\na) Θ(n^0.7737)\nb) Θ(n^0)\nc) Θ(n^0.7737 log n)\nd) Θ(n^0 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S9975_417.",
        "target_text": "Question: Array length n=9975, find max-sum subarray of fixed length k=417. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(k log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK72_6607.",
        "target_text": "Question: Merge k=72 sorted linked lists totaling n=6607 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n + k^2)\nc) Θ(n log n)\nd) Θ(k n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE38749.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=38749. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Max-heap\nc) Binary search tree\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA3308.",
        "target_text": "Question: Circular-array queue with capacity 3308: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Track count or keep one slot empty\nc) Head==Tail means full\nd) Require prime capacity\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM349_122512.",
        "target_text": "Question: Merge k=349 sorted streams totaling N=122512 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(k log N)\nc) Θ(N + k^2)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.49.",
        "target_text": "Question: In separate chaining with load factor α=1.49, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA401510.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=401510 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Naive parent climbing O(n) per query\nc) Sort node labels then binary search\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR71004.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=71004 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Tarjan’s low-link DFS\nc) Kruskal’s algorithm\nd) Dijkstra’s algorithm\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB69625.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=69625. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Binary heap of substrings\nc) Suffix automaton or suffix array + LCP\nd) BST over all substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS660170.",
        "target_text": "Question: Keys are integers in range [0..660170]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Heap sort\nc) Quick sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU9561204.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=9561204. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Hashing with chaining\nc) Linear scan with early exit\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M4_6_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/6) + n^4 for n being a power of 6.\nChoices:\na) Θ(n^4 log n)\nb) Θ(n^4)\nc) Θ(n^0.7737)\nd) Θ(n^0.7737 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P718863.",
        "target_text": "Question: Answer 718863 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Use a stack to store partial sums\nc) Recompute sums per query in Θ(n)\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN26344_902879.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=26344, B=902879. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Advance pointers; when one ends, jump to the other head\nc) Reverse one list then compare\nd) Hash addresses of first list\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP595.",
        "target_text": "Question: Verify whether a pop sequence of length n=595 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS2371.",
        "target_text": "Question: A queue via two stacks handles a burst of 2371 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA14_47205043.",
        "target_text": "Question: In a d-ary heap with d=14 and n=47205043 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(√n)\nc) Θ(n)\nd) Θ(log_14 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.19.",
        "target_text": "Question: In separate chaining with load factor α=1.19, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS241640.",
        "target_text": "Question: BST with parent pointers (id=241640): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Use level-order and pick next node\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Always climb to root then go right once\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS8125_78697.",
        "target_text": "Question: A directed graph with V=8125, E≈78697. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) Only if the graph is connected\nc) When all vertices have outdegree ≥ 1\nd) Only if edges are unweighted\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z686598.",
        "target_text": "Question: For string S (id=686598), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Number of mismatches at i\nc) Number of distinct substrings up to i\nd) Next index of S[i]\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS472.",
        "target_text": "Question: Array is nearly sorted with at most 472 inversions. Which algorithm excels?\nChoices:\na) Insertion sort\nb) Heap sort\nc) Radix sort\nd) Shell sort with fixed gaps\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS5047255.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=5047255 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(n log n)\nc) Θ(1) expected\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T2_6_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^2, f3=n^2 (log n)^6, f4=n^5?\nChoices:\na) Θ(n^5)\nb) Θ((log n)^6)\nc) Θ(n^2 (log n)^6)\nd) Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S5892_414.",
        "target_text": "Question: Array length n=5892, find max-sum subarray of fixed length k=414. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(n log n)\nd) Θ(k log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN671447_686296.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=671447, B=686296. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Binary search on addresses\nc) Reverse one list then compare\nd) Hash addresses of first list\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP2_3.",
        "target_text": "Question: Evaluate an infix expression with 2–3 precedence levels and parentheses. Linear-time method?\nChoices:\na) Convert to postfix and evaluate with a stack\nb) Build a tree without any stack\nc) Sort tokens by precedence then scan\nd) Left-to-right without stacks\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW7268_638.",
        "target_text": "Question: Sliding window maximum for array length n=7268 and window w=638. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(nw)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA12_32961229.",
        "target_text": "Question: In a d-ary heap with d=12 and n=32961229 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(log_12 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH131072.",
        "target_text": "Question: In open addressing with double hashing over table size m=131072, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) Choose m even and g(k) even\nc) g(k) coprime with m for all keys\nd) Make both hash functions identical\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA611242.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=611242 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Euler tour + RMQ yields O(1) per query\nc) DFS from root each time\nd) Naive parent climbing O(n) per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC8450.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=8450 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V log V)\nb) Θ(V+E)\nc) Θ(E log V)\nd) Θ(VE)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS14371.",
        "target_text": "Question: In KMP, what does LPS[14371] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Number of mismatches up to i\nd) Index of next occurrence\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS273782.",
        "target_text": "Question: Heapsort stability check id=273782: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort is not stable by default\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort always beats merge sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX197820716.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈197820716. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Doubles the bound to bracket, then binary search\nc) Requires the array to be cyclic\nd) Sorts the array first\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M6_4_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/4) + n^3 for n being a power of 4.\nChoices:\na) Θ(n^1.2925)\nb) Θ(n^3 log n)\nc) Θ(n^3)\nd) Θ(n^1.2925 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P422245.",
        "target_text": "Question: Answer 422245 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Recompute sums per query in Θ(n)\nb) Use a stack to store partial sums\nc) Build prefix-sum array; O(1) per query\nd) Sort once and binary search per query\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN74218_488447.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=74218, B=488447. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Hash addresses of first list\nc) Binary search on addresses\nd) Reverse one list then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS2756.",
        "target_text": "Question: Compute stock span for 2756 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Monotonic stack\nc) Hash table\nd) Fenwick tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS6610.",
        "target_text": "Question: A queue via two stacks handles a burst of 6610 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK8.",
        "target_text": "Question: In a d-ary heap (d=8), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) No effect whatsoever\nb) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nc) It increases height linearly\nd) It makes the operation constant time\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.38.",
        "target_text": "Question: In separate chaining with load factor α=0.38, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(α)\nd) Θ(1/α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS187728.",
        "target_text": "Question: BST with parent pointers (id=187728): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Use level-order and pick next node\nc) Always climb to root then go right once\nd) Reverse postorder traversal entirely\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC876537.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=876537 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(E log V)\nc) Θ(V+E)\nd) Θ(V log V)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE26.",
        "target_text": "Question: Search a trie over alphabet size σ=26 for a key of length m. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(1) average for all m\nc) Θ(m log σ)\nd) Θ(m)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS257.",
        "target_text": "Question: Array is nearly sorted with at most 257 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Shell sort with fixed gaps\nc) Heap sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX622113281.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈622113281. Why?\nChoices:\na) Sorts the array first\nb) Requires the array to be cyclic\nc) Uses hashing to index unknown segments\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T2_1_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^2, f3=n^2 (log n)^1, f4=n^6?\nChoices:\na) Θ(n^2 (log n)^1)\nb) Θ(n^2)\nc) Θ(n^6)\nd) Θ((log n)^1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM62070.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=62070-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Binary search on index vs value gap\nc) Scan linearly counting gaps\nd) Hash all present values then scan\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN573145_869179.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=573145, B=869179. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Binary search on addresses\nc) Hash addresses of first list\nd) Reverse one list then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Operator handling via stacks preserves associativity rules. Variant IP4_5.",
        "target_text": "Question: Evaluate an infix expression with 4–5 precedence levels and parentheses. Linear-time method?\nChoices:\na) Left-to-right without stacks\nb) Convert to postfix and evaluate with a stack\nc) Build a tree without any stack\nd) Sort tokens by precedence then scan\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA2015.",
        "target_text": "Question: Circular-array queue with capacity 2015: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Head==Tail means full\nc) Track count or keep one slot empty\nd) Require power-of-two capacity\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC93172366.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=93172366?\nChoices:\na) Θ(log log n)\nb) Θ(1)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF2415982_0.62.",
        "target_text": "Question: Chaining hash table with n=2415982 keys at load factor α=0.62. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS589444.",
        "target_text": "Question: BST with parent pointers (id=589444): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) Reverse postorder traversal entirely\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Always climb to root then go right once\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP342776.",
        "target_text": "Question: Test bipartiteness (id=342776) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Compute an MST then inspect edges\nd) Sort vertices and deduplicate\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS24262.",
        "target_text": "Question: In KMP, what does LPS[24262] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Number of mismatches up to i\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Total distinct prefixes up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX10_4.",
        "target_text": "Question: Radix sort with d=10 digits and base b=4 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(d·n·log b)\nc) Θ(d·(n + b))\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS4874646.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=4874646 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(1) expected\nc) Θ(log n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T2_3_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^2, f3=n^2 (log n)^3, f4=n^7?\nChoices:\na) Θ((log n)^3)\nb) Θ(n^2)\nc) Θ(n^7)\nd) Θ(n^2 (log n)^3)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP19712_449.",
        "target_text": "Question: Sorted array length n=19712. Decide if any pair sums to 449. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Brute force in Θ(n^2)\nc) Divide and conquer in Θ(n log n)\nd) Two-pointer scan in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL53350.",
        "target_text": "Question: Check if a singly linked list of length n=53350 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Find middle, reverse second half, compare\nc) Use a hash set of seen values\nd) Sort and compare with original\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Operator handling via stacks preserves associativity rules. Variant IP3_4.",
        "target_text": "Question: Evaluate an infix expression with 3–4 precedence levels and parentheses. Linear-time method?\nChoices:\na) Sort tokens by precedence then scan\nb) Convert to postfix and evaluate with a stack\nc) Left-to-right without stacks\nd) Build a tree without any stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA3033.",
        "target_text": "Question: Circular-array queue with capacity 3033: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Head==Tail means full\nc) Require prime capacity\nd) Require power-of-two capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL33_561093.",
        "target_text": "Question: Find the k=33-th largest element among n=561093 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Binary search on value domain\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH2048.",
        "target_text": "Question: In open addressing with double hashing over table size m=2048, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Use g(k)=0 for some keys\nc) Make both hash functions identical\nd) Choose m even and g(k) even\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS437908.",
        "target_text": "Question: BST with parent pointers (id=437908): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) Reverse postorder traversal entirely\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Use level-order and pick next node\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS890078_6432523.",
        "target_text": "Question: A directed graph with V=890078, E≈6432523. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) When all vertices have outdegree ≥ 1\nc) Only if the graph is connected\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP20899.",
        "target_text": "Question: KMP matches a pattern of length m=20899 in linear time using which table?\nChoices:\na) Rolling hash table\nb) LPS (failure) function\nc) Suffix array\nd) Z-array exclusively\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS906406.",
        "target_text": "Question: Heapsort stability check id=906406: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is not stable by default\nc) Heapsort is stable\nd) Heapsort needs extra Θ(n) memory\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI21_4747.",
        "target_text": "Question: Binary search over half-open range [21, 4747)—which invariant prevents infinite loops?\nChoices:\na) Increase both lo and hi to skip duplicates\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Keep inclusive bounds on both ends\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T2_1_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^2, f3=n^2 (log n)^1, f4=n^5?\nChoices:\na) Θ(n^2)\nb) Θ((log n)^1)\nc) Θ(n^5)\nd) Θ(n^2 (log n)^1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP13284_3955.",
        "target_text": "Question: Sorted array length n=13284. Decide if any pair sums to 3955. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Divide and conquer in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Hash set in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL25466.",
        "target_text": "Question: Check if a singly linked list of length n=25466 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Use a hash set of seen values\nc) Copy to array and two-pointer check\nd) Sort and compare with original\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS5.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 5 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Use two stacks for counts and fragments\nc) Use BFS on substring graph\nd) Greedy left-to-right without memory\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS7850.",
        "target_text": "Question: A queue via two stacks handles a burst of 7850 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) Both Θ(log n)\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL120_921401.",
        "target_text": "Question: Find the k=120-th largest element among n=921401 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Binary search on value domain\nc) Heapsort then index\nd) Build max-heap and extract k times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.36.",
        "target_text": "Question: In separate chaining with load factor α=0.36, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(α)\nc) Θ(1/α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS198479.",
        "target_text": "Question: BST with parent pointers (id=198479): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Use level-order and pick next node\nc) Always climb to root then go right once\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP982943.",
        "target_text": "Question: Test bipartiteness (id=982943) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Compute an MST then inspect edges\nc) Check all degrees even\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB28291.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=28291. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) BST over all substrings\nc) Queue of rolling hashes only\nd) Binary heap of substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX10_16.",
        "target_text": "Question: Radix sort with d=10 digits and base b=16 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·n·log b)\nc) Θ(b^d)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU6411192.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=6411192. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Binary search with left/right bias\nc) Hashing with chaining\nd) Heap-based selection\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M3_4_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/4) + n^3 for n being a power of 4.\nChoices:\na) Θ(n^3 log n)\nb) Θ(n^3)\nc) Θ(n^0.7925)\nd) Θ(n^0.7925 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R748643.",
        "target_text": "Question: Rotate an array right by r=748643 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Heapify then extract\nc) Selection sort then shift\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN226332.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 226332, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Impossible under any model\nc) Reverse list then delete head\nd) Traverse from head to find predecessor\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1249.",
        "target_text": "Question: Verify whether a pop sequence of length n=1249 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Use a queue to mirror the stack\nc) Simulate using one stack in Θ(n)\nd) Sort both sequences then compare\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B654625.",
        "target_text": "Question: Run BFS on an unweighted graph with 654625 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) All simple paths before all edges\nc) Nondecreasing distance from source\nd) Lexicographic vertex order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM505_186318.",
        "target_text": "Question: Merge k=505 sorted streams totaling N=186318 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(k log N)\nc) Θ(N log k)\nd) Θ(N + k^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF7568683_0.38.",
        "target_text": "Question: Chaining hash table with n=7568683 keys at load factor α=0.38. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(α log α)\nc) Θ(1 + α)\nd) Θ(nα)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H69019799.",
        "target_text": "Question: For a balanced BST with n=69019799 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF38720.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=38720 can handle which case while detecting it?\nChoices:\na) Negative edge weights and negative cycles\nb) Faster runtime on sparse nonnegative graphs\nc) Only acyclic graphs\nd) Equal runtime on all graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS11573.",
        "target_text": "Question: In KMP, what does LPS[11573] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Total distinct prefixes up to i\nc) Number of mismatches up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB74447936.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=74447936 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n^2)\nc) Ω(log n)\nd) Ω(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS2308769.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=2308769 typically runs in?\nChoices:\na) Θ(n) average\nb) O(1) worst-case\nc) O(log log n) average\nd) Θ(log n) average\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M2_5_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/5) + n^3 for n being a power of 5.\nChoices:\na) Θ(n^3 log n)\nb) Θ(n^0.4307 log n)\nc) Θ(n^3)\nd) Θ(n^0.4307)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R537037.",
        "target_text": "Question: Rotate an array right by r=537037 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Selection sort then shift\nc) Single-step rotate repeated r times\nd) Heapify then extract\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK8_1416.",
        "target_text": "Question: Merge k=8 sorted linked lists totaling n=1416 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(k n)\nc) Θ(n log k)\nd) Θ(n + k^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE98575.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=98575. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Decreasing stack\nc) Queue\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ779937.",
        "target_text": "Question: Schedule 779937 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Unordered array\nc) Binary heap\nd) Stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM52_9028.",
        "target_text": "Question: Merge k=52 sorted streams totaling N=9028 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(N + k^2)\nc) Θ(k log N)\nd) Θ(N log N)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC1.23.",
        "target_text": "Question: In separate chaining with load factor α=1.23, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H998570422.",
        "target_text": "Question: For a balanced BST with n=998570422 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(√n)\nc) Θ(n)\nd) Θ(log log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP81591.",
        "target_text": "Question: Test bipartiteness (id=81591) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Sort vertices and deduplicate\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Check all degrees even\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK257_1000000009.",
        "target_text": "Question: Rabin–Karp with base=257, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Low collision probability of rolling hash\nb) Suffix tree guaranteeing O(1) per char\nc) Trie of all substrings\nd) Use of a min-heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB55131238.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=55131238 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n^2)\nc) Ω(log n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI37_4791.",
        "target_text": "Question: Binary search over half-open range [37, 4791)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Increase both lo and hi to skip duplicates\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Keep inclusive bounds on both ends\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_1_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^3, f3=n^3 (log n)^1, f4=n^6?\nChoices:\na) Θ(n^3)\nb) Θ(n^6)\nc) Θ(n^3 (log n)^1)\nd) Θ((log n)^1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP4774_3563.",
        "target_text": "Question: Sorted array length n=4774. Decide if any pair sums to 3563. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Hash set in Θ(n log n)\nc) Brute force in Θ(n^2)\nd) Divide and conquer in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN372524.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 372524, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Traverse from head to find predecessor\nc) Impossible under any model\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS3380.",
        "target_text": "Question: Compute stock span for 3380 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Priority queue\nc) Fenwick tree\nd) Hash table\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW8964_825.",
        "target_text": "Question: Sliding window maximum for array length n=8964 and window w=825. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(nw)\nc) Θ(n log n)\nd) Θ(w log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL495_882593.",
        "target_text": "Question: Find the k=495-th largest element among n=882593 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Deterministic selection (median-of-medians)\nc) Binary search on value domain\nd) Build max-heap and extract k times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH2048.",
        "target_text": "Question: In open addressing with double hashing over table size m=2048, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Make both hash functions identical\nc) Choose m even and g(k) even\nd) Use g(k)=0 for some keys\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA913907.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=913907 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Euler tour + RMQ yields O(1) per query\nc) Naive parent climbing O(n) per query\nd) DFS from root each time\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST756551.",
        "target_text": "Question: MST question id=756551: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) MST is always unique in connected graphs\nc) Prim requires the entire edge set to be sorted first\nd) MST minimizes number of edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP98241.",
        "target_text": "Question: KMP matches a pattern of length m=98241 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Suffix array\nc) Z-array exclusively\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX8_2.",
        "target_text": "Question: Radix sort with d=8 digits and base b=2 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(n log n)\nc) Θ(b^d)\nd) Θ(d·n·log b)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS7572612.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=7572612 typically runs in?\nChoices:\na) O(1) worst-case\nb) O(log log n) average\nc) Θ(n) average\nd) Θ(log n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M7_4_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/4) + n^4 for n being a power of 4.\nChoices:\na) Θ(n^1.4037)\nb) Θ(n^4 log n)\nc) Θ(n^1.4037 log n)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R175247.",
        "target_text": "Question: Rotate an array right by r=175247 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Selection sort then shift\nc) Single-step rotate repeated r times\nd) Heapify then extract\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK7_1031.",
        "target_text": "Question: Merge k=7 sorted linked lists totaling n=1031 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n + k^2)\nc) Θ(n log n)\nd) Θ(k n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE76221.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=76221. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Decreasing stack\nc) Max-heap\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW2190_376.",
        "target_text": "Question: Sliding window maximum for array length n=2190 and window w=376. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(nw)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA16_14218024.",
        "target_text": "Question: In a d-ary heap with d=16 and n=14218024 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(log_16 n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH32768.",
        "target_text": "Question: In open addressing with double hashing over table size m=32768, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) Choose m even and g(k) even\nc) g(k) coprime with m for all keys\nd) Use g(k)=0 for some keys\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA776573.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=776573 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) DFS from root each time\nc) Naive parent climbing O(n) per query\nd) Sort node labels then binary search\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS861346_3462660.",
        "target_text": "Question: A directed graph with V=861346, E≈3462660. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) When all vertices have outdegree ≥ 1\nc) Only if the graph is connected\nd) Only if edges are unweighted\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS77240.",
        "target_text": "Question: In KMP, what does LPS[77240] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Number of mismatches up to i\nd) Index of next occurrence\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS784934.",
        "target_text": "Question: Heapsort stability check id=784934: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is not stable by default\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is stable\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Geometric level distribution mirrors balanced trees. Variant SL0.75.",
        "target_text": "Question: Skip list with level promotion probability p=0.75: expected complexity of search/insert/delete?\nChoices:\na) Θ(1) for all three\nb) Θ(√n) for all three\nc) Θ(log n) for all three\nd) Θ(n) for all three\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M5_5_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/5) + n^4 for n being a power of 5.\nChoices:\na) Θ(n^1.0)\nb) Θ(n^4 log n)\nc) Θ(n^1.0 log n)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM896875.",
        "target_text": "Question: Find a majority element in an array of length n=896875 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Divide-and-conquer merges\nc) Binary search on value domain\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN656032.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 656032, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Copy next node’s data here and bypass next\nc) Reverse list then delete head\nd) Traverse from head to find predecessor\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS7.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 7 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Use BFS on substring graph\nc) Sort segments then concatenate\nd) Greedy left-to-right without memory\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW2435_919.",
        "target_text": "Question: Sliding window maximum for array length n=2435 and window w=919. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(w log n)\nc) Θ(nw)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM481_52418.",
        "target_text": "Question: Merge k=481 sorted streams totaling N=52418 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(k log N)\nc) Θ(N + k^2)\nd) Θ(N log N)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF4581052_0.26.",
        "target_text": "Question: Chaining hash table with n=4581052 keys at load factor α=0.26. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(α log α)\nc) Θ(1 + α)\nd) Θ(nα)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H445557347.",
        "target_text": "Question: For a balanced BST with n=445557347 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(√n)\nd) Θ(log log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS161406_264875.",
        "target_text": "Question: A directed graph with V=161406, E≈264875. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When all vertices have outdegree ≥ 1\nc) When it is a DAG (no directed cycles)\nd) Only if edges are unweighted\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z156619.",
        "target_text": "Question: For string S (id=156619), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Next index of S[i]\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of distinct substrings up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS929022.",
        "target_text": "Question: Keys are integers in range [0..929022]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Quick sort\nc) Heap sort\nd) Shell sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS6825642.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=6825642 typically runs in?\nChoices:\na) Θ(log n) average\nb) O(1) worst-case\nc) O(log log n) average\nd) Θ(n) average\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_2_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^1, f3=n^1 (log n)^2, f4=n^3?\nChoices:\na) Θ(n^1)\nb) Θ(n^1 (log n)^2)\nc) Θ((log n)^2)\nd) Θ(n^3)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S14759_33.",
        "target_text": "Question: Array length n=14759, find max-sum subarray of fixed length k=33. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN127123_348091.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=127123, B=348091. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Hash addresses of first list\nc) Binary search on addresses\nd) Reverse one list then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP770.",
        "target_text": "Question: Verify whether a pop sequence of length n=770 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Simulate using one stack in Θ(n)\nc) Use a queue to mirror the stack\nd) Sort both sequences then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW3794_720.",
        "target_text": "Question: Sliding window maximum for array length n=3794 and window w=720. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(n log n)\nc) Θ(w log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH6647493.",
        "target_text": "Question: Build a binary heap from n=6647493 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.25.",
        "target_text": "Question: In separate chaining with load factor α=1.25, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA284233.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=284233 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) DFS from root each time\nc) Euler tour + RMQ yields O(1) per query\nd) Sort node labels then binary search\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP194832.",
        "target_text": "Question: Test bipartiteness (id=194832) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Sort vertices and deduplicate\nc) Compute an MST then inspect edges\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS72968.",
        "target_text": "Question: In KMP, what does LPS[72968] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Total distinct prefixes up to i\nc) Number of mismatches up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST181173.",
        "target_text": "Question: Stability (id=181173): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Merge sort (stable), Heap sort (unstable)\nc) Heap sort (stable), Merge sort (unstable)\nd) Counting sort (unstable)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS6315682.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=6315682 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(1) expected\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T4_2_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^4, f3=n^4 (log n)^2, f4=n^7?\nChoices:\na) Θ(n^7)\nb) Θ(n^4)\nc) Θ(n^4 (log n)^2)\nd) Θ((log n)^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM89775.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=89775-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Binary search on index vs value gap\nc) Use a heap of differences\nd) Scan linearly counting gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN748590_553734.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=748590, B=553734. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Reverse one list then compare\nc) Hash addresses of first list\nd) Binary search on addresses\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP470.",
        "target_text": "Question: Verify whether a pop sequence of length n=470 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Sort both sequences then compare\nc) Use a queue to mirror the stack\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW3470_780.",
        "target_text": "Question: Sliding window maximum for array length n=3470 and window w=780. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(w log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK5.",
        "target_text": "Question: In a d-ary heap (d=5), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) No effect whatsoever\nc) It makes the operation constant time\nd) It increases height linearly\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Threshold-based expansion preserves performance. Variant RS0.75.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.75?\nChoices:\na) To keep expected O(1) operations\nb) To reduce memory usage to exact size\nc) To sort keys implicitly\nd) To maintain key stability\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS617739.",
        "target_text": "Question: BST with parent pointers (id=617739): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) Reverse postorder traversal entirely\nc) Use level-order and pick next node\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP680750.",
        "target_text": "Question: Test bipartiteness (id=680750) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Compute an MST then inspect edges\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Check all degrees even\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN492252.",
        "target_text": "Question: Check anagrams for strings of length n=492252 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) Sort both in Θ(n log n)\nc) DFS on character graph\nd) Use a stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS305.",
        "target_text": "Question: Array is nearly sorted with at most 305 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Radix sort\nc) Heap sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI16_2316.",
        "target_text": "Question: Binary search over half-open range [16, 2316)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Increase both lo and hi to skip duplicates\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_5_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^1, f3=n^1 (log n)^5, f4=n^3?\nChoices:\na) Θ(n^3)\nb) Θ(n^1)\nc) Θ((log n)^5)\nd) Θ(n^1 (log n)^5)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM57199.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=57199-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Hash all present values then scan\nc) Binary search on index vs value gap\nd) Scan linearly counting gaps\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL443.",
        "target_text": "Question: Check if a singly linked list of length n=443 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Sort and compare with original\nc) Copy to array and two-pointer check\nd) Use a hash set of seen values\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1598.",
        "target_text": "Question: Verify whether a pop sequence of length n=1598 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS3064.",
        "target_text": "Question: A queue via two stacks handles a burst of 3064 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA10_32891717.",
        "target_text": "Question: In a d-ary heap with d=10 and n=32891717 nodes, what is the height?\nChoices:\na) Θ(log_10 n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Adversarial patterns are neutralized by random choice. Variant UH100000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=100000 slots yields what benefit?\nChoices:\na) Zero collisions guaranteed\nb) Expected constant-time operations against adversaries\nc) Cryptographic security by default\nd) Eliminates need for resizing\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS454217.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=454217-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(k)\nc) Θ(1)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR895522.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=895522 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Topological sorting\nc) Kruskal’s algorithm\nd) Tarjan’s low-link DFS\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z604224.",
        "target_text": "Question: For string S (id=604224), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Number of mismatches at i\nc) Next index of S[i]\nd) Number of distinct substrings up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS218.",
        "target_text": "Question: Array is nearly sorted with at most 218 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Insertion sort\nc) Shell sort with fixed gaps\nd) Radix sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS7499098.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=7499098 typically runs in?\nChoices:\na) Θ(n) average\nb) Θ(log n) average\nc) O(log log n) average\nd) O(1) worst-case\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M3_3_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/3) + n^2 for n being a power of 3.\nChoices:\na) Θ(n^2)\nb) Θ(n^1.0)\nc) Θ(n^1.0 log n)\nd) Θ(n^2 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM761797.",
        "target_text": "Question: Find a majority element in an array of length n=761797 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Counting sort\nc) Binary search on value domain\nd) Divide-and-conquer merges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK73_4656.",
        "target_text": "Question: Merge k=73 sorted linked lists totaling n=4656 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n + k^2)\nc) Θ(n log n)\nd) Θ(k n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE13901.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=13901. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Decreasing stack\nc) Max-heap\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B124126.",
        "target_text": "Question: Run BFS on an unweighted graph with 124126 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) Lexicographic vertex order\nc) Minimum memory footprint\nd) All simple paths before all edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC26282249.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=26282249?\nChoices:\na) Θ(log log n)\nb) Θ(1)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH4096.",
        "target_text": "Question: In open addressing with double hashing over table size m=4096, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Choose m even and g(k) even\nc) Make both hash functions identical\nd) Use g(k)=0 for some keys\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS574084.",
        "target_text": "Question: BST with parent pointers (id=574084): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Always climb to root then go right once\nc) Reverse postorder traversal entirely\nd) Use level-order and pick next node\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC454492.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=454492 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V log V)\nb) Θ(E log V)\nc) Θ(V+E)\nd) Θ(VE)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN994654.",
        "target_text": "Question: Check anagrams for strings of length n=994654 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) DFS on character graph\nc) Use a stack\nd) Sort both in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB82700685.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=82700685 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n^2)\nc) Ω(n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS8075559.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=8075559 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(1) expected\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M3_3_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/3) + n^0 for n being a power of 3.\nChoices:\na) Θ(n^1.0)\nb) Θ(n^0)\nc) Θ(n^1.0 log n)\nd) Θ(n^0 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S354_112.",
        "target_text": "Question: Array length n=354, find max-sum subarray of fixed length k=112. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK20_1627.",
        "target_text": "Question: Merge k=20 sorted linked lists totaling n=1627 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n log k)\nc) Θ(k n)\nd) Θ(n + k^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP973.",
        "target_text": "Question: Verify whether a pop sequence of length n=973 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ739759.",
        "target_text": "Question: Schedule 739759 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Circular queue\nc) Binary heap\nd) Unordered array\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM227_29941.",
        "target_text": "Question: Merge k=227 sorted streams totaling N=29941 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(k log N)\nc) Θ(N + k^2)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH16384.",
        "target_text": "Question: In open addressing with double hashing over table size m=16384, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Use g(k)=0 for some keys\nc) Choose m even and g(k) even\nd) Make both hash functions identical\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR59827.",
        "target_text": "Question: In a BST with distinct keys (id=59827), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Postorder\nc) Inorder\nd) Preorder\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST714219.",
        "target_text": "Question: MST question id=714219: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) Prim requires the entire edge set to be sorted first\nc) MST minimizes number of edges\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS47030.",
        "target_text": "Question: In KMP, what does LPS[47030] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Index of next occurrence\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Total distinct prefixes up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS585608.",
        "target_text": "Question: Heapsort stability check id=585608: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort is stable\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort always beats merge sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU6459121.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=6459121. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Hashing with chaining\nc) Heap-based selection\nd) Linear scan with early exit\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_3_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^3, f3=n^3 (log n)^3, f4=n^9?\nChoices:\na) Θ(n^3)\nb) Θ((log n)^3)\nc) Θ(n^9)\nd) Θ(n^3 (log n)^3)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP6501_2096.",
        "target_text": "Question: Sorted array length n=6501. Decide if any pair sums to 2096. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Hash set in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Brute force in Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK57_6500.",
        "target_text": "Question: Merge k=57 sorted linked lists totaling n=6500 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n + k^2)\nc) Θ(n log n)\nd) Θ(k n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE80276.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=80276. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Queue\nc) Max-heap\nd) Binary search tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS645.",
        "target_text": "Question: A queue via two stacks handles a burst of 645 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) Both Θ(log n)\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC80610074.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=80610074?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH65536.",
        "target_text": "Question: In open addressing with double hashing over table size m=65536, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) Make both hash functions identical\nc) Use g(k)=0 for some keys\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS155323.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=155323-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(√n)\nc) Θ(1)\nd) Θ(k)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST270358.",
        "target_text": "Question: MST question id=270358: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) Prim requires the entire edge set to be sorted first\nc) MST is always unique in connected graphs\nd) MST minimizes number of edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP37567.",
        "target_text": "Question: KMP matches a pattern of length m=37567 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) LPS (failure) function\nc) Rolling hash table\nd) Suffix array\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX3_16.",
        "target_text": "Question: Radix sort with d=3 digits and base b=16 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(n log n)\nc) Θ(d·n·log b)\nd) Θ(b^d)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS4662258.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=4662258 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(1) expected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M9_6_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/6) + n^3 for n being a power of 6.\nChoices:\na) Θ(n^1.2263 log n)\nb) Θ(n^3 log n)\nc) Θ(n^3)\nd) Θ(n^1.2263)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM12235.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=12235-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Hash all present values then scan\nc) Use a heap of differences\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK16_445.",
        "target_text": "Question: Merge k=16 sorted linked lists totaling n=445 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log k)\nc) Θ(n log n)\nd) Θ(k n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS2950.",
        "target_text": "Question: Compute stock span for 2950 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Monotonic stack\nc) Fenwick tree\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ844410.",
        "target_text": "Question: Schedule 844410 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Unordered array\nc) Binary heap\nd) Circular queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM280_70878.",
        "target_text": "Question: Merge k=280 sorted streams totaling N=70878 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log k)\nc) Θ(N + k^2)\nd) Θ(N log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA334749.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=334749 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) DFS from root each time\nc) Naive parent climbing O(n) per query\nd) Sort node labels then binary search\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC531780.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=531780 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(VE)\nc) Θ(E log V)\nd) Θ(V log V)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Character-by-character descent. Variant TRIE128.",
        "target_text": "Question: Search a trie over alphabet size σ=128 for a key of length m. Time complexity?\nChoices:\na) Θ(1) average for all m\nb) Θ(m)\nc) Θ(m log σ)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS896918.",
        "target_text": "Question: Keys are integers in range [0..896918]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Counting sort\nc) Quick sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX708602756.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈708602756. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Sorts the array first\nc) Requires the array to be cyclic\nd) Uses hashing to index unknown segments\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T3_3_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^3, f3=n^3 (log n)^3, f4=n^9?\nChoices:\na) Θ((log n)^3)\nb) Θ(n^9)\nc) Θ(n^3)\nd) Θ(n^3 (log n)^3)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM79845.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=79845-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Scan linearly counting gaps\nc) Hash all present values then scan\nd) Use a heap of differences\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN371531.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 371531, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Traverse from head to find predecessor\nc) Copy next node’s data here and bypass next\nd) Impossible under any model\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE18889.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=18889. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Max-heap\nc) Queue\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA6569.",
        "target_text": "Question: Circular-array queue with capacity 6569: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Track count or keep one slot empty\nc) Head==Tail means full\nd) Require prime capacity\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM793_327834.",
        "target_text": "Question: Merge k=793 sorted streams totaling N=327834 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log k)\nc) Θ(k log N)\nd) Θ(N log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.2.",
        "target_text": "Question: In separate chaining with load factor α=0.2, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS602134.",
        "target_text": "Question: BST with parent pointers (id=602134): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Use level-order and pick next node\nd) Reverse postorder traversal entirely\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST594200.",
        "target_text": "Question: MST question id=594200: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) MST is always unique in connected graphs\nc) Prim requires the entire edge set to be sorted first\nd) MST minimizes number of edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z477699.",
        "target_text": "Question: For string S (id=477699), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Next index of S[i]\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of mismatches at i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS265.",
        "target_text": "Question: Array is nearly sorted with at most 265 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Heap sort\nc) Insertion sort\nd) Shell sort with fixed gaps\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI38_4497.",
        "target_text": "Question: Binary search over half-open range [38, 4497)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Keep inclusive bounds on both ends\nc) Increase both lo and hi to skip duplicates\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M3_4_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/4) + n^1 for n being a power of 4.\nChoices:\na) Θ(n^0.7925)\nb) Θ(n^1 log n)\nc) Θ(n^1)\nd) Θ(n^0.7925 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P632284.",
        "target_text": "Question: Answer 632284 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Recompute sums per query in Θ(n)\nc) Use a stack to store partial sums\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN316743_10191.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=316743, B=10191. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Advance pointers; when one ends, jump to the other head\nc) Reverse one list then compare\nd) Binary search on addresses\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Operator handling via stacks preserves associativity rules. Variant IP2_3.",
        "target_text": "Question: Evaluate an infix expression with 2–3 precedence levels and parentheses. Linear-time method?\nChoices:\na) Build a tree without any stack\nb) Sort tokens by precedence then scan\nc) Convert to postfix and evaluate with a stack\nd) Left-to-right without stacks\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA6812.",
        "target_text": "Question: Circular-array queue with capacity 6812: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Require power-of-two capacity\nc) Require prime capacity\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL238_498730.",
        "target_text": "Question: Find the k=238-th largest element among n=498730 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Deterministic selection (median-of-medians)\nc) Build max-heap and extract k times\nd) Binary search on value domain\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.79.",
        "target_text": "Question: In separate chaining with load factor α=0.79, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(α)\nd) Θ(1/α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS780097.",
        "target_text": "Question: BST with parent pointers (id=780097): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) Reverse postorder traversal entirely\nc) Use level-order and pick next node\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST150228.",
        "target_text": "Question: MST question id=150228: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) Prim requires the entire edge set to be sorted first\nc) Kruskal adds the smallest edge that doesn't create a cycle\nd) MST minimizes number of edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB35968.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=35968. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Queue of rolling hashes only\nc) Binary heap of substrings\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB41661308.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=41661308 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n^2)\nc) Ω(n)\nd) Ω(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS5754769.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=5754769 typically runs in?\nChoices:\na) O(1) worst-case\nb) Θ(log n) average\nc) Θ(n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T1_6_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^1, f3=n^1 (log n)^6, f4=n^4?\nChoices:\na) Θ(n^4)\nb) Θ(n^1 (log n)^6)\nc) Θ((log n)^6)\nd) Θ(n^1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP18089_2420.",
        "target_text": "Question: Sorted array length n=18089. Decide if any pair sums to 2420. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Hash set in Θ(n log n)\nc) Brute force in Θ(n^2)\nd) Two-pointer scan in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN153847.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 153847, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Copy next node’s data here and bypass next\nc) Reverse list then delete head\nd) Traverse from head to find predecessor\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS58.",
        "target_text": "Question: Compute stock span for 58 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Fenwick tree\nc) Monotonic stack\nd) Priority queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ325678.",
        "target_text": "Question: Schedule 325678 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Unordered array\nc) Stack\nd) Circular queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA12_47760441.",
        "target_text": "Question: In a d-ary heap with d=12 and n=47760441 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(log_12 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH8192.",
        "target_text": "Question: In open addressing with double hashing over table size m=8192, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) g(k) coprime with m for all keys\nc) Make both hash functions identical\nd) Use g(k)=0 for some keys\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS702017.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=702017-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(√n)\nc) Θ(k)\nd) Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS589635_5145786.",
        "target_text": "Question: A directed graph with V=589635, E≈5145786. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) Only if edges are unweighted\nc) When it is a DAG (no directed cycles)\nd) When all vertices have outdegree ≥ 1\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP91285.",
        "target_text": "Question: KMP matches a pattern of length m=91285 in linear time using which table?\nChoices:\na) Rolling hash table\nb) LPS (failure) function\nc) Suffix array\nd) Z-array exclusively\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS173408.",
        "target_text": "Question: Keys are integers in range [0..173408]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Shell sort\nc) Counting sort\nd) Heap sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU9092569.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=9092569. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Binary search with left/right bias\nc) Heap-based selection\nd) Hashing with chaining\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T5_1_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^5, f3=n^5 (log n)^1, f4=n^12?\nChoices:\na) Θ(n^12)\nb) Θ(n^5 (log n)^1)\nc) Θ((log n)^1)\nd) Θ(n^5)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S13636_146.",
        "target_text": "Question: Array length n=13636, find max-sum subarray of fixed length k=146. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN839706.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 839706, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Copy next node’s data here and bypass next\nc) Traverse from head to find predecessor\nd) Reverse list then delete head\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE15477.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=15477. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Decreasing stack\nc) Max-heap\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ998141.",
        "target_text": "Question: Schedule 998141 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Circular queue\nc) Stack\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH2631130.",
        "target_text": "Question: Build a binary heap from n=2631130 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(n^2)\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF7464316_0.5.",
        "target_text": "Question: Chaining hash table with n=7464316 keys at load factor α=0.5. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR813932.",
        "target_text": "Question: In a BST with distinct keys (id=813932), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Level-order\nc) Postorder\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST552256.",
        "target_text": "Question: MST question id=552256: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) MST minimizes number of edges\nd) Prim requires the entire edge set to be sorted first\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP77350.",
        "target_text": "Question: KMP matches a pattern of length m=77350 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Rolling hash table\nc) Suffix array\nd) Z-array exclusively\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS817462.",
        "target_text": "Question: Heapsort stability check id=817462: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort always beats merge sort\nc) Heapsort is not stable by default\nd) Heapsort is stable\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS1315880.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=1315880 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(1) expected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T5_1_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^5, f3=n^5 (log n)^1, f4=n^10?\nChoices:\na) Θ(n^10)\nb) Θ((log n)^1)\nc) Θ(n^5)\nd) Θ(n^5 (log n)^1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM218449.",
        "target_text": "Question: Find a majority element in an array of length n=218449 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Divide-and-conquer merges\nc) Counting sort\nd) Binary search on value domain\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN138796.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 138796, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Traverse from head to find predecessor\nc) Copy next node’s data here and bypass next\nd) Reverse list then delete head\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE15364.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=15364. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Decreasing stack\nc) Binary search tree\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA135.",
        "target_text": "Question: Circular-array queue with capacity 135: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Head==Tail means full\nc) Track count or keep one slot empty\nd) Require prime capacity\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH8981992.",
        "target_text": "Question: Build a binary heap from n=8981992 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF6945229_0.32.",
        "target_text": "Question: Chaining hash table with n=6945229 keys at load factor α=0.32. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA926190.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=926190 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Naive parent climbing O(n) per query\nc) Euler tour + RMQ yields O(1) per query\nd) DFS from root each time\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS811798_5015363.",
        "target_text": "Question: A directed graph with V=811798, E≈5015363. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When all vertices have outdegree ≥ 1\nc) When it is a DAG (no directed cycles)\nd) Only if edges are unweighted\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB16007.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=16007. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) BST over all substrings\nc) Suffix automaton or suffix array + LCP\nd) Queue of rolling hashes only\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS359741.",
        "target_text": "Question: Keys are integers in range [0..359741]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Quick sort\nc) Heap sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX26654830.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈26654830. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Requires the array to be cyclic\nc) Doubles the bound to bracket, then binary search\nd) Sorts the array first\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T3_1_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^3, f3=n^3 (log n)^1, f4=n^7?\nChoices:\na) Θ(n^3 (log n)^1)\nb) Θ(n^3)\nc) Θ((log n)^1)\nd) Θ(n^7)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S15932_90.",
        "target_text": "Question: Array length n=15932, find max-sum subarray of fixed length k=90. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(k log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL43090.",
        "target_text": "Question: Check if a singly linked list of length n=43090 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Use a hash set of seen values\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS3016.",
        "target_text": "Question: Compute stock span for 3016 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Monotonic stack\nc) Priority queue\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS324.",
        "target_text": "Question: A queue via two stacks handles a burst of 324 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH8291018.",
        "target_text": "Question: Build a binary heap from n=8291018 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH16384.",
        "target_text": "Question: In open addressing with double hashing over table size m=16384, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) Choose m even and g(k) even\nc) g(k) coprime with m for all keys\nd) Make both hash functions identical\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H953146275.",
        "target_text": "Question: For a balanced BST with n=953146275 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR799129.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=799129 edges. What algorithmic idea achieves linear time?\nChoices:\na) Kruskal’s algorithm\nb) Topological sorting\nc) Tarjan’s low-link DFS\nd) Dijkstra’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS95355.",
        "target_text": "Question: In KMP, what does LPS[95355] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Number of mismatches up to i\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Total distinct prefixes up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS373.",
        "target_text": "Question: Array is nearly sorted with at most 373 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Radix sort\nc) Insertion sort\nd) Heap sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS2175377.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=2175377 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(1) expected\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M4_4_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/4) + n^4 for n being a power of 4.\nChoices:\na) Θ(n^4)\nb) Θ(n^1.0)\nc) Θ(n^1.0 log n)\nd) Θ(n^4 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP1154_3148.",
        "target_text": "Question: Sorted array length n=1154. Decide if any pair sums to 3148. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Divide and conquer in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR10.",
        "target_text": "Question: Reverse a singly linked list in groups of k=10 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n log k)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS2765.",
        "target_text": "Question: Compute stock span for 2765 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Priority queue\nc) Hash table\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA991.",
        "target_text": "Question: Circular-array queue with capacity 991: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Track count or keep one slot empty\nc) Require power-of-two capacity\nd) Require prime capacity\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH4313619.",
        "target_text": "Question: Build a binary heap from n=4313619 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n^2)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF6333601_0.75.",
        "target_text": "Question: Chaining hash table with n=6333601 keys at load factor α=0.75. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(1 + α)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS387546.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=387546-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(k)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR715064.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=715064 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Dijkstra’s algorithm\nc) Tarjan’s low-link DFS\nd) Kruskal’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB34429.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=34429. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) BST over all substrings\nc) Suffix automaton or suffix array + LCP\nd) Binary heap of substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS857372.",
        "target_text": "Question: Heapsort stability check id=857372: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort always beats merge sort\nc) Heapsort is not stable by default\nd) Heapsort is stable\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS437559.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=437559 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n)\nc) Θ(log n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_1_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^4, f3=n^4 (log n)^1, f4=n^11?\nChoices:\na) Θ(n^11)\nb) Θ(n^4)\nc) Θ((log n)^1)\nd) Θ(n^4 (log n)^1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM658758.",
        "target_text": "Question: Find a majority element in an array of length n=658758 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Binary search on value domain\nc) Boyer–Moore voting with verification\nd) Counting sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL99425.",
        "target_text": "Question: Check if a singly linked list of length n=99425 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Sort and compare with original\nc) Find middle, reverse second half, compare\nd) Use a hash set of seen values\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS3020.",
        "target_text": "Question: Compute stock span for 3020 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Priority queue\nc) Fenwick tree\nd) Hash table\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW5895_528.",
        "target_text": "Question: Sliding window maximum for array length n=5895 and window w=528. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(nw)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL751_603154.",
        "target_text": "Question: Find the k=751-th largest element among n=603154 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Build max-heap and extract k times\nc) Heapsort then index\nd) Binary search on value domain\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF1690224_0.68.",
        "target_text": "Question: Chaining hash table with n=1690224 keys at load factor α=0.68. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(nα)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR640063.",
        "target_text": "Question: In a BST with distinct keys (id=640063), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Level-order\nc) Preorder\nd) Postorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D132179.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 132179]. Why?\nChoices:\na) Graph must be undirected\nb) Nonnegative weights ensure greedy optimality\nc) Self-loops must be absent\nd) Distinct weights are required\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN712490.",
        "target_text": "Question: Check anagrams for strings of length n=712490 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Count character frequencies in Θ(n)\nc) Use a stack\nd) Sort both in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB18972672.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=18972672 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n log n)\nc) Ω(n)\nd) Ω(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX574514236.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈574514236. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Sorts the array first\nc) Requires the array to be cyclic\nd) Uses hashing to index unknown segments\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_5_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^1, f3=n^1 (log n)^5, f4=n^7?\nChoices:\na) Θ(n^1)\nb) Θ(n^1 (log n)^5)\nc) Θ(n^7)\nd) Θ((log n)^5)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM863232.",
        "target_text": "Question: Find a majority element in an array of length n=863232 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Binary search on value domain\nc) Boyer–Moore voting with verification\nd) Divide-and-conquer merges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK73_9476.",
        "target_text": "Question: Merge k=73 sorted linked lists totaling n=9476 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n + k^2)\nc) Θ(k n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE72984.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=72984. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Queue\nc) Max-heap\nd) Binary search tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ751746.",
        "target_text": "Question: For 751746 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Queue\nc) Stack\nd) Binary heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC30013899.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=30013899?\nChoices:\na) Θ(log log n)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF645960_0.65.",
        "target_text": "Question: Chaining hash table with n=645960 keys at load factor α=0.65. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(α log α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS491526.",
        "target_text": "Question: BST with parent pointers (id=491526): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Reverse postorder traversal entirely\nd) Use level-order and pick next node\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST920033.",
        "target_text": "Question: MST question id=920033: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) MST minimizes number of edges\nc) Kruskal adds the smallest edge that doesn't create a cycle\nd) MST is always unique in connected graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB17880.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=17880. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Suffix automaton or suffix array + LCP\nc) Binary heap of substrings\nd) Queue of rolling hashes only\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB17733445.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=17733445 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n log n)\nc) Ω(n^2)\nd) Ω(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Geometric level distribution mirrors balanced trees. Variant SL0.25.",
        "target_text": "Question: Skip list with level promotion probability p=0.25: expected complexity of search/insert/delete?\nChoices:\na) Θ(1) for all three\nb) Θ(√n) for all three\nc) Θ(log n) for all three\nd) Θ(n) for all three\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M8_6_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/6) + n^3 for n being a power of 6.\nChoices:\na) Θ(n^3)\nb) Θ(n^1.1606)\nc) Θ(n^1.1606 log n)\nd) Θ(n^3 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R733747.",
        "target_text": "Question: Rotate an array right by r=733747 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Selection sort then shift\nc) Three-reversal method\nd) Heapify then extract\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN483393_121618.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=483393, B=121618. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Advance pointers; when one ends, jump to the other head\nc) Hash addresses of first list\nd) Binary search on addresses\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE24106.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=24106. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Max-heap\nc) Binary search tree\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS9434.",
        "target_text": "Question: A queue via two stacks handles a burst of 9434 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) Both Θ(log n)\nd) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH2448114.",
        "target_text": "Question: Build a binary heap from n=2448114 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.86.",
        "target_text": "Question: In separate chaining with load factor α=0.86, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA381795.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=381795 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Euler tour + RMQ yields O(1) per query\nc) Sort node labels then binary search\nd) Naive parent climbing O(n) per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC804041.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=804041 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(V log V)\nc) Θ(VE)\nd) Θ(E log V)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z847855.",
        "target_text": "Question: For string S (id=847855), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Number of mismatches at i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Next index of S[i]\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS456264.",
        "target_text": "Question: Heapsort stability check id=456264: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort is stable\nc) Heapsort always beats merge sort\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS2144935.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=2144935 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(1) expected\nc) Θ(n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M8_4_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/4) + n^3 for n being a power of 4.\nChoices:\na) Θ(n^1.5)\nb) Θ(n^3 log n)\nc) Θ(n^3)\nd) Θ(n^1.5 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P837666.",
        "target_text": "Question: Answer 837666 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Recompute sums per query in Θ(n)\nc) Sort once and binary search per query\nd) Use a stack to store partial sums\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK21_2496.",
        "target_text": "Question: Merge k=21 sorted linked lists totaling n=2496 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log n)\nc) Θ(n log k)\nd) Θ(k n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS2649.",
        "target_text": "Question: Compute stock span for 2649 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Hash table\nc) Priority queue\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW1692_502.",
        "target_text": "Question: Sliding window maximum for array length n=1692 and window w=502. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(nw)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL537_644662.",
        "target_text": "Question: Find the k=537-th largest element among n=644662 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Deterministic selection (median-of-medians)\nc) Binary search on value domain\nd) Build max-heap and extract k times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF535711_0.82.",
        "target_text": "Question: Chaining hash table with n=535711 keys at load factor α=0.82. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(α log α)\nc) Θ(log n)\nd) Θ(nα)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR263719.",
        "target_text": "Question: In a BST with distinct keys (id=263719), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Postorder\nc) Inorder\nd) Level-order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS248517_1291398.",
        "target_text": "Question: A directed graph with V=248517, E≈1291398. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) Only if the graph is connected\nc) When all vertices have outdegree ≥ 1\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB203.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=203. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Suffix automaton or suffix array + LCP\nc) Queue of rolling hashes only\nd) Binary heap of substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX3_32.",
        "target_text": "Question: Radix sort with d=3 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·n·log b)\nb) Θ(n log n)\nc) Θ(b^d)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI21_3862.",
        "target_text": "Question: Binary search over half-open range [21, 3862)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Increase both lo and hi to skip duplicates\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T4_4_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^4, f3=n^4 (log n)^4, f4=n^11?\nChoices:\na) Θ((log n)^4)\nb) Θ(n^4 (log n)^4)\nc) Θ(n^11)\nd) Θ(n^4)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM296076.",
        "target_text": "Question: Find a majority element in an array of length n=296076 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Counting sort\nc) Binary search on value domain\nd) Divide-and-conquer merges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN645851.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 645851, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Reverse list then delete head\nc) Impossible under any model\nd) Traverse from head to find predecessor\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1061.",
        "target_text": "Question: Verify whether a pop sequence of length n=1061 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Sort both sequences then compare\nc) Use a queue to mirror the stack\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA4324.",
        "target_text": "Question: Circular-array queue with capacity 4324: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Track count or keep one slot empty\nc) Require power-of-two capacity\nd) Head==Tail means full\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC64591448.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=64591448?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF2878565_0.31.",
        "target_text": "Question: Chaining hash table with n=2878565 keys at load factor α=0.31. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(nα)\nc) Θ(α log α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS455069.",
        "target_text": "Question: BST with parent pointers (id=455069): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Always climb to root then go right once\nc) Use level-order and pick next node\nd) Reverse postorder traversal entirely\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC922240.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=922240 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(VE)\nc) Θ(E log V)\nd) Θ(V log V)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP4151.",
        "target_text": "Question: KMP matches a pattern of length m=4151 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Suffix array\nc) Rolling hash table\nd) Z-array exclusively\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB1619500.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=1619500 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n^2)\nc) Ω(log n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU6107843.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=6107843. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Hashing with chaining\nc) Heap-based selection\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_6_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^1, f3=n^1 (log n)^6, f4=n^4?\nChoices:\na) Θ(n^4)\nb) Θ(n^1)\nc) Θ(n^1 (log n)^6)\nd) Θ((log n)^6)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R216823.",
        "target_text": "Question: Rotate an array right by r=216823 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Single-step rotate repeated r times\nc) Heapify then extract\nd) Selection sort then shift\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK84_11652.",
        "target_text": "Question: Merge k=84 sorted linked lists totaling n=11652 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n + k^2)\nc) Θ(n log k)\nd) Θ(k n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Per-node metadata preserves constant-time MIN. Variant MS1267.",
        "target_text": "Question: Support PUSH, POP, and MIN in worst-case Θ(1). What augmentation works?\nChoices:\na) Keep a global heap\nb) Store (value, currentMin) per node\nc) Periodically rebuild the stack\nd) Scan on demand for MIN\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ850967.",
        "target_text": "Question: For 850967 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Deque\nc) Stack\nd) Binary heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA8_29558900.",
        "target_text": "Question: In a d-ary heap with d=8 and n=29558900 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(log_8 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC1.09.",
        "target_text": "Question: In separate chaining with load factor α=1.09, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS654014.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=654014-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(k)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR900626.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=900626 edges. What algorithmic idea achieves linear time?\nChoices:\na) Tarjan’s low-link DFS\nb) Topological sorting\nc) Kruskal’s algorithm\nd) Dijkstra’s algorithm\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB4200.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=4200. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Queue of rolling hashes only\nc) Suffix automaton or suffix array + LCP\nd) Binary heap of substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST47550.",
        "target_text": "Question: Stability (id=47550): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Counting sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS4447142.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=4447142 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(1) expected\nc) Θ(n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_3_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^4, f3=n^4 (log n)^3, f4=n^6?\nChoices:\na) Θ(n^6)\nb) Θ((log n)^3)\nc) Θ(n^4)\nd) Θ(n^4 (log n)^3)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP17313_1895.",
        "target_text": "Question: Sorted array length n=17313. Decide if any pair sums to 1895. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Brute force in Θ(n^2)\nc) Hash set in Θ(n log n)\nd) Divide and conquer in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK41_3202.",
        "target_text": "Question: Merge k=41 sorted linked lists totaling n=3202 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(k n)\nc) Θ(n log k)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP295.",
        "target_text": "Question: Verify whether a pop sequence of length n=295 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Use a queue to mirror the stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ512146.",
        "target_text": "Question: For 512146 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Deque\nc) Binary heap\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK8.",
        "target_text": "Question: In a d-ary heap (d=8), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) No effect whatsoever\nb) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nc) It makes the operation constant time\nd) It increases height linearly\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF5885264_0.39.",
        "target_text": "Question: Chaining hash table with n=5885264 keys at load factor α=0.39. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS523838.",
        "target_text": "Question: BST with parent pointers (id=523838): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Use level-order and pick next node\nd) Always climb to root then go right once\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS682209_2759954.",
        "target_text": "Question: A directed graph with V=682209, E≈2759954. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) When it is a DAG (no directed cycles)\nc) When all vertices have outdegree ≥ 1\nd) Only if the graph is connected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN758942.",
        "target_text": "Question: Check anagrams for strings of length n=758942 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Sort both in Θ(n log n)\nc) Count character frequencies in Θ(n)\nd) Use a stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS914194.",
        "target_text": "Question: Keys are integers in range [0..914194]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Shell sort\nc) Heap sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX319551561.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈319551561. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Requires the array to be cyclic\nc) Sorts the array first\nd) Uses hashing to index unknown segments\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M3_2_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/2) + n^1 for n being a power of 2.\nChoices:\na) Θ(n^1)\nb) Θ(n^1.585 log n)\nc) Θ(n^1.585)\nd) Θ(n^1 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM73522.",
        "target_text": "Question: Find a majority element in an array of length n=73522 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Divide-and-conquer merges\nc) Boyer–Moore voting with verification\nd) Binary search on value domain\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN360758_878722.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=360758, B=878722. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Hash addresses of first list\nc) Reverse one list then compare\nd) Binary search on addresses\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS3925.",
        "target_text": "Question: Compute stock span for 3925 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Fenwick tree\nc) Monotonic stack\nd) Priority queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS1276.",
        "target_text": "Question: A queue via two stacks handles a burst of 1276 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM212_66250.",
        "target_text": "Question: Merge k=212 sorted streams totaling N=66250 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N + k^2)\nc) Θ(N log k)\nd) Θ(N log N)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF3249503_0.55.",
        "target_text": "Question: Chaining hash table with n=3249503 keys at load factor α=0.55. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(α log α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR649243.",
        "target_text": "Question: In a BST with distinct keys (id=649243), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Postorder\nc) Preorder\nd) Level-order\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF67858.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=67858 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Only acyclic graphs\nc) Equal runtime on all graphs\nd) Negative edge weights and negative cycles\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN883402.",
        "target_text": "Question: Check anagrams for strings of length n=883402 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Count character frequencies in Θ(n)\nc) Use a stack\nd) Sort both in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX6_2.",
        "target_text": "Question: Radix sort with d=6 digits and base b=2 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(d·n·log b)\nc) Θ(b^d)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS6355544.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=6355544 typically runs in?\nChoices:\na) Θ(n) average\nb) O(log log n) average\nc) O(1) worst-case\nd) Θ(log n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M6_5_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/5) + n^2 for n being a power of 5.\nChoices:\na) Θ(n^1.1133)\nb) Θ(n^2)\nc) Θ(n^2 log n)\nd) Θ(n^1.1133 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S3642_60.",
        "target_text": "Question: Array length n=3642, find max-sum subarray of fixed length k=60. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR3.",
        "target_text": "Question: Reverse a singly linked list in groups of k=3 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n log k)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1389.",
        "target_text": "Question: Verify whether a pop sequence of length n=1389 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Sort both sequences then compare\nc) Simulate using one stack in Θ(n)\nd) Backtrack with recursion in Θ(2^n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW8603_443.",
        "target_text": "Question: Sliding window maximum for array length n=8603 and window w=443. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(nw)\nc) Θ(w log n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC23010417.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=23010417?\nChoices:\na) Θ(1)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.77.",
        "target_text": "Question: In separate chaining with load factor α=0.77, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA673848.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=673848 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) DFS from root each time\nc) Sort node labels then binary search\nd) Naive parent climbing O(n) per query\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF22563.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=22563 can handle which case while detecting it?\nChoices:\na) Only acyclic graphs\nb) Faster runtime on sparse nonnegative graphs\nc) Equal runtime on all graphs\nd) Negative edge weights and negative cycles\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB45199.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=45199. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) BST over all substrings\nc) Suffix automaton or suffix array + LCP\nd) Queue of rolling hashes only\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS530088.",
        "target_text": "Question: Heapsort stability check id=530088: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is stable\nc) Heapsort is not stable by default\nd) Heapsort needs extra Θ(n) memory\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU3415357.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=3415357. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Linear scan with early exit\nc) Hashing with chaining\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M9_2_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/2) + n^4 for n being a power of 2.\nChoices:\na) Θ(n^4)\nb) Θ(n^3.1699 log n)\nc) Θ(n^3.1699)\nd) Θ(n^4 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM614826.",
        "target_text": "Question: Find a majority element in an array of length n=614826 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Boyer–Moore voting with verification\nc) Counting sort\nd) Binary search on value domain\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR3.",
        "target_text": "Question: Reverse a singly linked list in groups of k=3 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(k log n)\nb) Θ(n log k)\nc) Θ(nk)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE44847.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=44847. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Queue\nc) Max-heap\nd) Binary search tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ319638.",
        "target_text": "Question: For 319638 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Queue\nc) Stack\nd) Binary heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK8.",
        "target_text": "Question: In a d-ary heap (d=8), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) It makes the operation constant time\nc) It increases height linearly\nd) No effect whatsoever\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF3096966_0.55.",
        "target_text": "Question: Chaining hash table with n=3096966 keys at load factor α=0.55. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(α log α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS365501.",
        "target_text": "Question: BST with parent pointers (id=365501): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Use level-order and pick next node\nc) Reverse postorder traversal entirely\nd) Always climb to root then go right once\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP31167.",
        "target_text": "Question: Test bipartiteness (id=31167) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Compute an MST then inspect edges\nc) Sort vertices and deduplicate\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB41339.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=41339. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) Binary heap of substrings\nc) BST over all substrings\nd) Queue of rolling hashes only\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST715886.",
        "target_text": "Question: Stability (id=715886): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Counting sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS4008991.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=4008991 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(1) expected\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_2_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^4, f3=n^4 (log n)^2, f4=n^9?\nChoices:\na) Θ(n^4)\nb) Θ(n^9)\nc) Θ((log n)^2)\nd) Θ(n^4 (log n)^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R997306.",
        "target_text": "Question: Rotate an array right by r=997306 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Selection sort then shift\nc) Single-step rotate repeated r times\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL15223.",
        "target_text": "Question: Check if a singly linked list of length n=15223 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Find middle, reverse second half, compare\nc) Sort and compare with original\nd) Use a hash set of seen values\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP74.",
        "target_text": "Question: Verify whether a pop sequence of length n=74 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Sort both sequences then compare\nc) Use a queue to mirror the stack\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA733.",
        "target_text": "Question: Circular-array queue with capacity 733: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Require power-of-two capacity\nc) Require prime capacity\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM609_183124.",
        "target_text": "Question: Merge k=609 sorted streams totaling N=183124 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log N)\nc) Θ(N + k^2)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF4676174_0.32.",
        "target_text": "Question: Chaining hash table with n=4676174 keys at load factor α=0.32. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(α log α)\nd) Θ(nα)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA557663.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=557663 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) DFS from root each time\nc) Sort node labels then binary search\nd) Naive parent climbing O(n) per query\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D417498.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 417498]. Why?\nChoices:\na) Distinct weights are required\nb) Graph must be undirected\nc) Self-loops must be absent\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS49503.",
        "target_text": "Question: In KMP, what does LPS[49503] represent for a given pattern?\nChoices:\na) Length of longest proper prefix that is also a suffix for prefix ending at i\nb) Number of mismatches up to i\nc) Total distinct prefixes up to i\nd) Index of next occurrence\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST484139.",
        "target_text": "Question: Stability (id=484139): which pairing is correct?\nChoices:\na) Merge sort (stable), Heap sort (unstable)\nb) Quick sort (stable), Selection sort (unstable)\nc) Counting sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU6230717.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=6230717. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Hashing with chaining\nc) Binary search with left/right bias\nd) Heap-based selection\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M7_4_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/4) + n^2 for n being a power of 4.\nChoices:\na) Θ(n^1.4037 log n)\nb) Θ(n^2 log n)\nc) Θ(n^1.4037)\nd) Θ(n^2)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P778389.",
        "target_text": "Question: Answer 778389 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Use a stack to store partial sums\nb) Build prefix-sum array; O(1) per query\nc) Sort once and binary search per query\nd) Recompute sums per query in Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN408155.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 408155, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Impossible under any model\nc) Copy next node’s data here and bypass next\nd) Traverse from head to find predecessor\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1518.",
        "target_text": "Question: Verify whether a pop sequence of length n=1518 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Use a queue to mirror the stack\nc) Simulate using one stack in Θ(n)\nd) Sort both sequences then compare\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW9387_481.",
        "target_text": "Question: Sliding window maximum for array length n=9387 and window w=481. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(nw)\nc) Θ(n log n)\nd) Θ(w log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC89758012.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=89758012?\nChoices:\na) Θ(log n)\nb) Θ(log log n)\nc) Θ(n)\nd) Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF1052620_0.32.",
        "target_text": "Question: Chaining hash table with n=1052620 keys at load factor α=0.32. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(α log α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS331914.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=331914-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(k)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS836242_3254302.",
        "target_text": "Question: A directed graph with V=836242, E≈3254302. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) When all vertices have outdegree ≥ 1\nc) When it is a DAG (no directed cycles)\nd) Only if the graph is connected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z867025.",
        "target_text": "Question: For string S (id=867025), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Next index of S[i]\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of mismatches at i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS907.",
        "target_text": "Question: Array is nearly sorted with at most 907 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Heap sort\nc) Insertion sort\nd) Shell sort with fixed gaps\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU6469570.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=6469570. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Heap-based selection\nc) Hashing with chaining\nd) Linear scan with early exit\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M3_6_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/6) + n^3 for n being a power of 6.\nChoices:\na) Θ(n^3)\nb) Θ(n^0.6131)\nc) Θ(n^3 log n)\nd) Θ(n^0.6131 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM75082.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=75082-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Use a heap of differences\nc) Scan linearly counting gaps\nd) Hash all present values then scan\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN943226.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 943226, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Reverse list then delete head\nc) Traverse from head to find predecessor\nd) Impossible under any model\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS2743.",
        "target_text": "Question: Compute stock span for 2743 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Priority queue\nc) Hash table\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW3277_723.",
        "target_text": "Question: Sliding window maximum for array length n=3277 and window w=723. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(nw)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA11_19959826.",
        "target_text": "Question: In a d-ary heap with d=11 and n=19959826 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(log_11 n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH8192.",
        "target_text": "Question: In open addressing with double hashing over table size m=8192, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) g(k) coprime with m for all keys\nc) Choose m even and g(k) even\nd) Make both hash functions identical\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS393640.",
        "target_text": "Question: BST with parent pointers (id=393640): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Reverse postorder traversal entirely\nc) Use level-order and pick next node\nd) Always climb to root then go right once\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS244432_2326428.",
        "target_text": "Question: A directed graph with V=244432, E≈2326428. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if the graph is connected\nc) Only if edges are unweighted\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS20849.",
        "target_text": "Question: In KMP, what does LPS[20849] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Total distinct prefixes up to i\nd) Number of mismatches up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS921423.",
        "target_text": "Question: Heapsort stability check id=921423: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort is stable\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS1634739.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=1634739 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(1) expected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M6_3_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/3) + n^4 for n being a power of 3.\nChoices:\na) Θ(n^1.6309)\nb) Θ(n^4 log n)\nc) Θ(n^4)\nd) Θ(n^1.6309 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S2150_167.",
        "target_text": "Question: Array length n=2150, find max-sum subarray of fixed length k=167. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(nk)\nd) Θ(k log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL38867.",
        "target_text": "Question: Check if a singly linked list of length n=38867 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Use a hash set of seen values\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS5.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 5 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Use BFS on substring graph\nc) Greedy left-to-right without memory\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B661424.",
        "target_text": "Question: Run BFS on an unweighted graph with 661424 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Lexicographic vertex order\nc) Minimum memory footprint\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK6.",
        "target_text": "Question: In a d-ary heap (d=6), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It increases height linearly\nb) No effect whatsoever\nc) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nd) It makes the operation constant time\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF1165260_0.33.",
        "target_text": "Question: Chaining hash table with n=1165260 keys at load factor α=0.33. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(nα)\nc) Θ(α log α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H122848808.",
        "target_text": "Question: For a balanced BST with n=122848808 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Repeated edge relaxation tolerates negatives. Variant BF17779.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=17779 can handle which case while detecting it?\nChoices:\na) Only acyclic graphs\nb) Equal runtime on all graphs\nc) Faster runtime on sparse nonnegative graphs\nd) Negative edge weights and negative cycles\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z689259.",
        "target_text": "Question: For string S (id=689259), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Number of mismatches at i\nc) Next index of S[i]\nd) Number of distinct substrings up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB24407392.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=24407392 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(log n)\nc) Ω(n^2)\nd) Ω(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS6339498.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=6339498 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(log n)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M8_3_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/3) + n^0 for n being a power of 3.\nChoices:\na) Θ(n^0)\nb) Θ(n^1.8928 log n)\nc) Θ(n^1.8928)\nd) Θ(n^0 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S19065_131.",
        "target_text": "Question: Array length n=19065, find max-sum subarray of fixed length k=131. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN106150.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 106150, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Reverse list then delete head\nc) Traverse from head to find predecessor\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS3692.",
        "target_text": "Question: Compute stock span for 3692 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Priority queue\nc) Monotonic stack\nd) Fenwick tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B231689.",
        "target_text": "Question: Run BFS on an unweighted graph with 231689 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) Minimum memory footprint\nc) All simple paths before all edges\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM77_14463.",
        "target_text": "Question: Merge k=77 sorted streams totaling N=14463 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log N)\nc) Θ(N + k^2)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Threshold-based expansion preserves performance. Variant RS0.75.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.75?\nChoices:\na) To sort keys implicitly\nb) To keep expected O(1) operations\nc) To maintain key stability\nd) To reduce memory usage to exact size\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS424712.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=424712-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(k)\nc) Θ(√n)\nd) Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Repeated edge relaxation tolerates negatives. Variant BF87490.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=87490 can handle which case while detecting it?\nChoices:\na) Only acyclic graphs\nb) Faster runtime on sparse nonnegative graphs\nc) Negative edge weights and negative cycles\nd) Equal runtime on all graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP8478.",
        "target_text": "Question: KMP matches a pattern of length m=8478 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Suffix array\nc) LPS (failure) function\nd) Z-array exclusively\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST185204.",
        "target_text": "Question: Stability (id=185204): which pairing is correct?\nChoices:\na) Heap sort (stable), Merge sort (unstable)\nb) Quick sort (stable), Selection sort (unstable)\nc) Counting sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS1281631.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=1281631 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(n log n)\nc) Θ(1) expected\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T3_1_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^3, f3=n^3 (log n)^1, f4=n^6?\nChoices:\na) Θ(n^3 (log n)^1)\nb) Θ(n^3)\nc) Θ(n^6)\nd) Θ((log n)^1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP13271_4933.",
        "target_text": "Question: Sorted array length n=13271. Decide if any pair sums to 4933. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Divide and conquer in Θ(n log n)\nc) Hash set in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN365621_866732.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=365621, B=866732. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Hash addresses of first list\nc) Reverse one list then compare\nd) Binary search on addresses\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE55701.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=55701. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Queue\nc) Max-heap\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA449.",
        "target_text": "Question: Circular-array queue with capacity 449: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Track count or keep one slot empty\nc) Require prime capacity\nd) Head==Tail means full\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL108_919119.",
        "target_text": "Question: Find the k=108-th largest element among n=919119 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Binary search on value domain\nc) Heapsort then index\nd) Build max-heap and extract k times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.69.",
        "target_text": "Question: In separate chaining with load factor α=0.69, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS291199.",
        "target_text": "Question: BST with parent pointers (id=291199): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) Reverse postorder traversal entirely\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Use level-order and pick next node\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR915773.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=915773 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Kruskal’s algorithm\nc) Tarjan’s low-link DFS\nd) Dijkstra’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP10222.",
        "target_text": "Question: KMP matches a pattern of length m=10222 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Rolling hash table\nc) Suffix array\nd) Z-array exclusively\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS364178.",
        "target_text": "Question: Heapsort stability check id=364178: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort is not stable by default\nc) Heapsort is stable\nd) Heapsort always beats merge sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU5334492.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=5334492. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Linear scan with early exit\nc) Hashing with chaining\nd) Heap-based selection\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M7_6_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/6) + n^2 for n being a power of 6.\nChoices:\na) Θ(n^2)\nb) Θ(n^1.086 log n)\nc) Θ(n^2 log n)\nd) Θ(n^1.086)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P348494.",
        "target_text": "Question: Answer 348494 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Recompute sums per query in Θ(n)\nc) Use a stack to store partial sums\nd) Sort once and binary search per query\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL20488.",
        "target_text": "Question: Check if a singly linked list of length n=20488 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Find middle, reverse second half, compare\nc) Copy to array and two-pointer check\nd) Use a hash set of seen values\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS1673.",
        "target_text": "Question: Compute stock span for 1673 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Hash table\nc) Monotonic stack\nd) Priority queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ709047.",
        "target_text": "Question: For 709047 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Binary heap\nc) Deque\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL439_676130.",
        "target_text": "Question: Find the k=439-th largest element among n=676130 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Binary search on value domain\nc) Deterministic selection (median-of-medians)\nd) Heapsort then index\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH65536.",
        "target_text": "Question: In open addressing with double hashing over table size m=65536, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) Use g(k)=0 for some keys\nc) Choose m even and g(k) even\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS993625.",
        "target_text": "Question: BST with parent pointers (id=993625): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Always climb to root then go right once\nc) Use level-order and pick next node\nd) Reverse postorder traversal entirely\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP757737.",
        "target_text": "Question: Test bipartiteness (id=757737) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Compute an MST then inspect edges\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Sort vertices and deduplicate\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z933846.",
        "target_text": "Question: For string S (id=933846), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Length of the longest prefix starting at i matching S[0..]\nc) Number of distinct substrings up to i\nd) Number of mismatches at i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB60840899.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=60840899 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n)\nc) Ω(log n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX909590460.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈909590460. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Uses hashing to index unknown segments\nc) Requires the array to be cyclic\nd) Sorts the array first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M3_6_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/6) + n^2 for n being a power of 6.\nChoices:\na) Θ(n^2)\nb) Θ(n^0.6131)\nc) Θ(n^2 log n)\nd) Θ(n^0.6131 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P628355.",
        "target_text": "Question: Answer 628355 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Use a stack to store partial sums\nc) Build prefix-sum array; O(1) per query\nd) Recompute sums per query in Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK28_1580.",
        "target_text": "Question: Merge k=28 sorted linked lists totaling n=1580 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n log n)\nc) Θ(n + k^2)\nd) Θ(k n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS2.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 2 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Greedy left-to-right without memory\nb) Use two stacks for counts and fragments\nc) Use BFS on substring graph\nd) Sort segments then concatenate\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ38124.",
        "target_text": "Question: For 38124 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Queue\nc) Binary heap\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL809_271812.",
        "target_text": "Question: Find the k=809-th largest element among n=271812 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Deterministic selection (median-of-medians)\nc) Heapsort then index\nd) Build max-heap and extract k times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.3.",
        "target_text": "Question: In separate chaining with load factor α=1.3, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS692674.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=692674-th smallest?\nChoices:\na) Θ(k)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR291942.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=291942 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Tarjan’s low-link DFS\nc) Topological sorting\nd) Kruskal’s algorithm\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN560468.",
        "target_text": "Question: Check anagrams for strings of length n=560468 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) Count character frequencies in Θ(n)\nc) Use a stack\nd) DFS on character graph\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS571138.",
        "target_text": "Question: Keys are integers in range [0..571138]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Counting sort\nc) Heap sort\nd) Shell sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI75_619.",
        "target_text": "Question: Binary search over half-open range [75, 619)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Increase both lo and hi to skip duplicates\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Keep inclusive bounds on both ends\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M8_2_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/2) + n^4 for n being a power of 2.\nChoices:\na) Θ(n^4 log n)\nb) Θ(n^4)\nc) Θ(n^3.0 log n)\nd) Θ(n^3.0)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S13342_301.",
        "target_text": "Question: Array length n=13342, find max-sum subarray of fixed length k=301. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(k log n)\nc) Θ(n)\nd) Θ(nk)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN243099_679787.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=243099, B=679787. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Advance pointers; when one ends, jump to the other head\nc) Reverse one list then compare\nd) Binary search on addresses\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1572.",
        "target_text": "Question: Verify whether a pop sequence of length n=1572 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B515062.",
        "target_text": "Question: Run BFS on an unweighted graph with 515062 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Nondecreasing distance from source\nc) Lexicographic vertex order\nd) Minimum memory footprint\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC61043180.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=61043180?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.96.",
        "target_text": "Question: In separate chaining with load factor α=0.96, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(1/α)\nd) Θ(α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS869919.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=869919-th smallest?\nChoices:\na) Θ(1)\nb) Θ(k)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC344183.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=344183 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(V log V)\nc) Θ(V+E)\nd) Θ(VE)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z801171.",
        "target_text": "Question: For string S (id=801171), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Next index of S[i]\nc) Number of mismatches at i\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS922829.",
        "target_text": "Question: Heapsort stability check id=922829: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort always beats merge sort\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS1664808.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=1664808 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(1) expected\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M7_5_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/5) + n^2 for n being a power of 5.\nChoices:\na) Θ(n^2)\nb) Θ(n^2 log n)\nc) Θ(n^1.2091 log n)\nd) Θ(n^1.2091)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM35119.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=35119-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Scan linearly counting gaps\nc) Hash all present values then scan\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR5.",
        "target_text": "Question: Reverse a singly linked list in groups of k=5 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(k log n)\nc) Θ(n log k)\nd) Θ(nk)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS5.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 5 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Greedy left-to-right without memory\nb) Sort segments then concatenate\nc) Use two stacks for counts and fragments\nd) Use BFS on substring graph\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ516435.",
        "target_text": "Question: Schedule 516435 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Unordered array\nc) Circular queue\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC2535111.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=2535111?\nChoices:\na) Θ(n)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF4200412_0.3.",
        "target_text": "Question: Chaining hash table with n=4200412 keys at load factor α=0.3. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(log n)\nc) Θ(α log α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H876683811.",
        "target_text": "Question: For a balanced BST with n=876683811 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D740257.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 740257]. Why?\nChoices:\na) Self-loops must be absent\nb) Distinct weights are required\nc) Nonnegative weights ensure greedy optimality\nd) Graph must be undirected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z433881.",
        "target_text": "Question: For string S (id=433881), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Number of mismatches at i\nc) Next index of S[i]\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB18138435.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=18138435 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n)\nc) Ω(n^2)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS1381947.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=1381947 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(1) expected\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M3_6_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/6) + n^2 for n being a power of 6.\nChoices:\na) Θ(n^2 log n)\nb) Θ(n^2)\nc) Θ(n^0.6131)\nd) Θ(n^0.6131 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM99621.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=99621-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Scan linearly counting gaps\nc) Hash all present values then scan\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN486528.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 486528, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Reverse list then delete head\nc) Impossible under any model\nd) Traverse from head to find predecessor\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1376.",
        "target_text": "Question: Verify whether a pop sequence of length n=1376 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Backtrack with recursion in Θ(2^n)\nc) Simulate using one stack in Θ(n)\nd) Sort both sequences then compare\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW9972_209.",
        "target_text": "Question: Sliding window maximum for array length n=9972 and window w=209. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(nw)\nc) Θ(w log n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH134199.",
        "target_text": "Question: Build a binary heap from n=134199 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.31.",
        "target_text": "Question: In separate chaining with load factor α=0.31, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H713130387.",
        "target_text": "Question: For a balanced BST with n=713130387 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(√n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS615332_3771318.",
        "target_text": "Question: A directed graph with V=615332, E≈3771318. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) When it is a DAG (no directed cycles)\nc) Only if the graph is connected\nd) Only if edges are unweighted\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP65279.",
        "target_text": "Question: KMP matches a pattern of length m=65279 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) Rolling hash table\nc) Suffix array\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX9_8.",
        "target_text": "Question: Radix sort with d=9 digits and base b=8 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·n·log b)\nc) Θ(d·(n + b))\nd) Θ(b^d)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX644823129.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈644823129. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Requires the array to be cyclic\nc) Sorts the array first\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M2_5_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/5) + n^3 for n being a power of 5.\nChoices:\na) Θ(n^0.4307)\nb) Θ(n^0.4307 log n)\nc) Θ(n^3 log n)\nd) Θ(n^3)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S7591_362.",
        "target_text": "Question: Array length n=7591, find max-sum subarray of fixed length k=362. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(k log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR5.",
        "target_text": "Question: Reverse a singly linked list in groups of k=5 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(k log n)\nb) Θ(n)\nc) Θ(n log k)\nd) Θ(nk)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1250.",
        "target_text": "Question: Verify whether a pop sequence of length n=1250 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Simulate using one stack in Θ(n)\nc) Use a queue to mirror the stack\nd) Sort both sequences then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ143081.",
        "target_text": "Question: For 143081 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Queue\nc) Stack\nd) Binary heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL797_812163.",
        "target_text": "Question: Find the k=797-th largest element among n=812163 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Deterministic selection (median-of-medians)\nc) Heapsort then index\nd) Binary search on value domain\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Threshold-based expansion preserves performance. Variant RS0.5.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.5?\nChoices:\na) To maintain key stability\nb) To keep expected O(1) operations\nc) To sort keys implicitly\nd) To reduce memory usage to exact size\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H829962585.",
        "target_text": "Question: For a balanced BST with n=829962585 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS134371_317638.",
        "target_text": "Question: A directed graph with V=134371, E≈317638. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When all vertices have outdegree ≥ 1\nc) Only if edges are unweighted\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN328613.",
        "target_text": "Question: Check anagrams for strings of length n=328613 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) DFS on character graph\nc) Use a stack\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX8_8.",
        "target_text": "Question: Radix sort with d=8 digits and base b=8 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·n·log b)\nb) Θ(n log n)\nc) Θ(b^d)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU6476750.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=6476750. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Heap-based selection\nc) Hashing with chaining\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M6_5_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/5) + n^2 for n being a power of 5.\nChoices:\na) Θ(n^1.1133 log n)\nb) Θ(n^2 log n)\nc) Θ(n^2)\nd) Θ(n^1.1133)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM875806.",
        "target_text": "Question: Find a majority element in an array of length n=875806 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Binary search on value domain\nc) Divide-and-conquer merges\nd) Counting sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK56_684.",
        "target_text": "Question: Merge k=56 sorted linked lists totaling n=684 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n + k^2)\nc) Θ(n log k)\nd) Θ(k n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS7.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 7 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Greedy left-to-right without memory\nb) Use two stacks for counts and fragments\nc) Sort segments then concatenate\nd) Use BFS on substring graph\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ241320.",
        "target_text": "Question: For 241320 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Queue\nc) Binary heap\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK3.",
        "target_text": "Question: In a d-ary heap (d=3), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It increases height linearly\nb) It makes the operation constant time\nc) No effect whatsoever\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.02.",
        "target_text": "Question: In separate chaining with load factor α=1.02, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(1/α)\nd) Θ(α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS878197.",
        "target_text": "Question: BST with parent pointers (id=878197): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Always climb to root then go right once\nc) Use level-order and pick next node\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D495563.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 495563]. Why?\nChoices:\na) Graph must be undirected\nb) Nonnegative weights ensure greedy optimality\nc) Self-loops must be absent\nd) Distinct weights are required\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP83512.",
        "target_text": "Question: KMP matches a pattern of length m=83512 in linear time using which table?\nChoices:\na) Suffix array\nb) Z-array exclusively\nc) LPS (failure) function\nd) Rolling hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS729983.",
        "target_text": "Question: Keys are integers in range [0..729983]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Shell sort\nc) Heap sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU5492116.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=5492116. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Hashing with chaining\nc) Binary search with left/right bias\nd) Linear scan with early exit\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T2_1_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^2, f3=n^2 (log n)^1, f4=n^6?\nChoices:\na) Θ(n^2)\nb) Θ(n^2 (log n)^1)\nc) Θ(n^6)\nd) Θ((log n)^1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S8035_23.",
        "target_text": "Question: Array length n=8035, find max-sum subarray of fixed length k=23. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(k log n)\nd) Θ(nk)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL70713.",
        "target_text": "Question: Check if a singly linked list of length n=70713 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Sort and compare with original\nc) Find middle, reverse second half, compare\nd) Use a hash set of seen values\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS4473.",
        "target_text": "Question: Compute stock span for 4473 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Priority queue\nc) Hash table\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ711001.",
        "target_text": "Question: Schedule 711001 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Circular queue\nc) Binary heap\nd) Unordered array\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM176_21414.",
        "target_text": "Question: Merge k=176 sorted streams totaling N=21414 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(N + k^2)\nc) Θ(k log N)\nd) Θ(N log N)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH8192.",
        "target_text": "Question: In open addressing with double hashing over table size m=8192, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) Use g(k)=0 for some keys\nc) g(k) coprime with m for all keys\nd) Make both hash functions identical\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR531065.",
        "target_text": "Question: In a BST with distinct keys (id=531065), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Level-order\nc) Inorder\nd) Preorder\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR121710.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=121710 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Kruskal’s algorithm\nc) Tarjan’s low-link DFS\nd) Dijkstra’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE256.",
        "target_text": "Question: Search a trie over alphabet size σ=256 for a key of length m. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(m log σ)\nc) Θ(1) average for all m\nd) Θ(m)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB10905587.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=10905587 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n log n)\nc) Ω(n^2)\nd) Ω(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI58_4253.",
        "target_text": "Question: Binary search over half-open range [58, 4253)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Increase both lo and hi to skip duplicates\nd) Keep inclusive bounds on both ends\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T3_3_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^3, f3=n^3 (log n)^3, f4=n^7?\nChoices:\na) Θ((log n)^3)\nb) Θ(n^7)\nc) Θ(n^3 (log n)^3)\nd) Θ(n^3)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S10082_339.",
        "target_text": "Question: Array length n=10082, find max-sum subarray of fixed length k=339. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(k log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK68_7442.",
        "target_text": "Question: Merge k=68 sorted linked lists totaling n=7442 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n log n)\nc) Θ(k n)\nd) Θ(n + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1177.",
        "target_text": "Question: Verify whether a pop sequence of length n=1177 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Simulate using one stack in Θ(n)\nc) Use a queue to mirror the stack\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS287.",
        "target_text": "Question: A queue via two stacks handles a burst of 287 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA7_60233167.",
        "target_text": "Question: In a d-ary heap with d=7 and n=60233167 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(log_7 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.46.",
        "target_text": "Question: In separate chaining with load factor α=0.46, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS853033.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=853033-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(k)\nc) Θ(log n)\nd) Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D980751.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 980751]. Why?\nChoices:\na) Distinct weights are required\nb) Self-loops must be absent\nc) Graph must be undirected\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN524431.",
        "target_text": "Question: Check anagrams for strings of length n=524431 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) Sort both in Θ(n log n)\nc) Use a stack\nd) DFS on character graph\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS534702.",
        "target_text": "Question: Keys are integers in range [0..534702]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Heap sort\nc) Counting sort\nd) Shell sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX721621724.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈721621724. Why?\nChoices:\na) Sorts the array first\nb) Requires the array to be cyclic\nc) Doubles the bound to bracket, then binary search\nd) Uses hashing to index unknown segments\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A16.",
        "target_text": "Question: A dynamic array starts with capacity 16 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(√m)\nc) Θ(log m)\nd) Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP8418_3191.",
        "target_text": "Question: Sorted array length n=8418. Decide if any pair sums to 3191. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Divide and conquer in Θ(n log n)\nc) Hash set in Θ(n log n)\nd) Two-pointer scan in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C3.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 3× and 1×. Complexity?\nChoices:\na) Θ(log n) time, Θ(1) space\nb) Θ(n) time, Θ(1) space\nc) Θ(1) time, Θ(1) space\nd) Θ(n) time, Θ(n) space\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE27159.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=27159. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Decreasing stack\nc) Queue\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ895461.",
        "target_text": "Question: Schedule 895461 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Binary heap\nc) Circular queue\nd) Stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM724_80586.",
        "target_text": "Question: Merge k=724 sorted streams totaling N=80586 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log k)\nc) Θ(N log N)\nd) Θ(k log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF6458944_0.4.",
        "target_text": "Question: Chaining hash table with n=6458944 keys at load factor α=0.4. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(α log α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS150031.",
        "target_text": "Question: BST with parent pointers (id=150031): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) Reverse postorder traversal entirely\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Always climb to root then go right once\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC634442.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=634442 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V log V)\nb) Θ(VE)\nc) Θ(E log V)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS38474.",
        "target_text": "Question: In KMP, what does LPS[38474] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Number of mismatches up to i\nc) Total distinct prefixes up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS300140.",
        "target_text": "Question: Keys are integers in range [0..300140]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Quick sort\nc) Shell sort\nd) Heap sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI23_3663.",
        "target_text": "Question: Binary search over half-open range [23, 3663)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Keep inclusive bounds on both ends\nc) Increase both lo and hi to skip duplicates\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T1_4_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^1, f3=n^1 (log n)^4, f4=n^8?\nChoices:\na) Θ(n^1)\nb) Θ(n^8)\nc) Θ((log n)^4)\nd) Θ(n^1 (log n)^4)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S13332_15.",
        "target_text": "Question: Array length n=13332, find max-sum subarray of fixed length k=15. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN579450.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 579450, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Impossible under any model\nc) Traverse from head to find predecessor\nd) Reverse list then delete head\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP356.",
        "target_text": "Question: Verify whether a pop sequence of length n=356 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA236.",
        "target_text": "Question: Circular-array queue with capacity 236: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Head==Tail means full\nc) Require power-of-two capacity\nd) Require prime capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL114_734782.",
        "target_text": "Question: Find the k=114-th largest element among n=734782 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Deterministic selection (median-of-medians)\nc) Binary search on value domain\nd) Heapsort then index\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.09.",
        "target_text": "Question: In separate chaining with load factor α=1.09, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS681056.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=681056-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(k)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP636065.",
        "target_text": "Question: Test bipartiteness (id=636065) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Compute an MST then inspect edges\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Check all degrees even\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN881626.",
        "target_text": "Question: Check anagrams for strings of length n=881626 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) Use a stack\nc) DFS on character graph\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB54780132.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=54780132 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(log n)\nc) Ω(n log n)\nd) Ω(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU1957231.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=1957231. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Heap-based selection\nc) Binary search with left/right bias\nd) Hashing with chaining\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T5_1_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^5, f3=n^5 (log n)^1, f4=n^11?\nChoices:\na) Θ(n^5)\nb) Θ((log n)^1)\nc) Θ(n^5 (log n)^1)\nd) Θ(n^11)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P676294.",
        "target_text": "Question: Answer 676294 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Recompute sums per query in Θ(n)\nb) Use a stack to store partial sums\nc) Build prefix-sum array; O(1) per query\nd) Sort once and binary search per query\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL72093.",
        "target_text": "Question: Check if a singly linked list of length n=72093 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Copy to array and two-pointer check\nc) Find middle, reverse second half, compare\nd) Sort and compare with original\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS7.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 7 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Greedy left-to-right without memory\nc) Sort segments then concatenate\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ90365.",
        "target_text": "Question: For 90365 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Deque\nc) Binary heap\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA15_8988425.",
        "target_text": "Question: In a d-ary heap with d=15 and n=8988425 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(√n)\nd) Θ(log_15 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC1.12.",
        "target_text": "Question: In separate chaining with load factor α=1.12, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(1/α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA998423.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=998423 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Euler tour + RMQ yields O(1) per query\nc) DFS from root each time\nd) Naive parent climbing O(n) per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS710133_1380678.",
        "target_text": "Question: A directed graph with V=710133, E≈1380678. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if the graph is connected\nc) Only if edges are unweighted\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Randomized hashing makes spurious matches rare. Variant RK911382323_998244353.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=998244353 achieves expected linear time due to what?\nChoices:\na) Suffix tree guaranteeing O(1) per char\nb) Use of a min-heap\nc) Low collision probability of rolling hash\nd) Trie of all substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB95145755.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=95145755 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n)\nc) Ω(log n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS4208629.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=4208629 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(1) expected\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M2_3_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/3) + n^0 for n being a power of 3.\nChoices:\na) Θ(n^0)\nb) Θ(n^0 log n)\nc) Θ(n^0.6309 log n)\nd) Θ(n^0.6309)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM650248.",
        "target_text": "Question: Find a majority element in an array of length n=650248 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Divide-and-conquer merges\nc) Binary search on value domain\nd) Counting sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN106372.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 106372, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Reverse list then delete head\nc) Impossible under any model\nd) Traverse from head to find predecessor\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1771.",
        "target_text": "Question: Verify whether a pop sequence of length n=1771 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Backtrack with recursion in Θ(2^n)\nc) Use a queue to mirror the stack\nd) Sort both sequences then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ115316.",
        "target_text": "Question: For 115316 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Deque\nc) Binary heap\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH2484887.",
        "target_text": "Question: Build a binary heap from n=2484887 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF1689171_0.2.",
        "target_text": "Question: Chaining hash table with n=1689171 keys at load factor α=0.2. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(nα)\nc) Θ(α log α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS845206.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=845206-th smallest?\nChoices:\na) Θ(1)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D927058.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 927058]. Why?\nChoices:\na) Graph must be undirected\nb) Distinct weights are required\nc) Nonnegative weights ensure greedy optimality\nd) Self-loops must be absent\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN424483.",
        "target_text": "Question: Check anagrams for strings of length n=424483 over fixed alphabet. Optimal approach?\nChoices:\na) Use a stack\nb) DFS on character graph\nc) Sort both in Θ(n log n)\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS425163.",
        "target_text": "Question: Heapsort stability check id=425163: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort is stable\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI3_3321.",
        "target_text": "Question: Binary search over half-open range [3, 3321)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Increase both lo and hi to skip duplicates\nd) Keep inclusive bounds on both ends\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_3_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^4, f3=n^4 (log n)^3, f4=n^10?\nChoices:\na) Θ(n^4 (log n)^3)\nb) Θ(n^4)\nc) Θ((log n)^3)\nd) Θ(n^10)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P541310.",
        "target_text": "Question: Answer 541310 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Recompute sums per query in Θ(n)\nb) Use a stack to store partial sums\nc) Build prefix-sum array; O(1) per query\nd) Sort once and binary search per query\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK36_5621.",
        "target_text": "Question: Merge k=36 sorted linked lists totaling n=5621 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n + k^2)\nc) Θ(k n)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1205.",
        "target_text": "Question: Verify whether a pop sequence of length n=1205 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Backtrack with recursion in Θ(2^n)\nc) Sort both sequences then compare\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B747854.",
        "target_text": "Question: Run BFS on an unweighted graph with 747854 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) Lexicographic vertex order\nc) All simple paths before all edges\nd) Minimum memory footprint\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK6.",
        "target_text": "Question: In a d-ary heap (d=6), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It makes the operation constant time\nb) It increases height linearly\nc) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nd) No effect whatsoever\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF2490508_0.37.",
        "target_text": "Question: Chaining hash table with n=2490508 keys at load factor α=0.37. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(α log α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS403337.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=403337-th smallest?\nChoices:\na) Θ(k)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST496683.",
        "target_text": "Question: MST question id=496683: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) Prim requires the entire edge set to be sorted first\nc) Kruskal adds the smallest edge that doesn't create a cycle\nd) MST is always unique in connected graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP23674.",
        "target_text": "Question: KMP matches a pattern of length m=23674 in linear time using which table?\nChoices:\na) Suffix array\nb) Rolling hash table\nc) Z-array exclusively\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST389011.",
        "target_text": "Question: Stability (id=389011): which pairing is correct?\nChoices:\na) Heap sort (stable), Merge sort (unstable)\nb) Merge sort (stable), Heap sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Counting sort (unstable)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Geometric level distribution mirrors balanced trees. Variant SL0.25.",
        "target_text": "Question: Skip list with level promotion probability p=0.25: expected complexity of search/insert/delete?\nChoices:\na) Θ(1) for all three\nb) Θ(log n) for all three\nc) Θ(n) for all three\nd) Θ(√n) for all three\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T5_4_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^5, f3=n^5 (log n)^4, f4=n^12?\nChoices:\na) Θ((log n)^4)\nb) Θ(n^12)\nc) Θ(n^5)\nd) Θ(n^5 (log n)^4)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P888988.",
        "target_text": "Question: Answer 888988 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Use a stack to store partial sums\nc) Recompute sums per query in Θ(n)\nd) Sort once and binary search per query\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL29447.",
        "target_text": "Question: Check if a singly linked list of length n=29447 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Sort and compare with original\nc) Use a hash set of seen values\nd) Copy to array and two-pointer check\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS1941.",
        "target_text": "Question: Compute stock span for 1941 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Hash table\nc) Priority queue\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B342852.",
        "target_text": "Question: Run BFS on an unweighted graph with 342852 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) Nondecreasing distance from source\nc) All simple paths before all edges\nd) Lexicographic vertex order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC63142961.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=63142961?\nChoices:\na) Θ(n)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH131072.",
        "target_text": "Question: In open addressing with double hashing over table size m=131072, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Use g(k)=0 for some keys\nc) Make both hash functions identical\nd) Choose m even and g(k) even\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR164081.",
        "target_text": "Question: In a BST with distinct keys (id=164081), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Level-order\nc) Preorder\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC220098.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=220098 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(VE)\nc) Θ(V log V)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z308752.",
        "target_text": "Question: For string S (id=308752), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Number of mismatches at i\nc) Next index of S[i]\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS348580.",
        "target_text": "Question: Heapsort stability check id=348580: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort always beats merge sort\nd) Heapsort is stable\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI33_1529.",
        "target_text": "Question: Binary search over half-open range [33, 1529)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Increase both lo and hi to skip duplicates\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_6_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^3, f3=n^3 (log n)^6, f4=n^8?\nChoices:\na) Θ(n^3)\nb) Θ(n^3 (log n)^6)\nc) Θ(n^8)\nd) Θ((log n)^6)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S1234_335.",
        "target_text": "Question: Array length n=1234, find max-sum subarray of fixed length k=335. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL80504.",
        "target_text": "Question: Check if a singly linked list of length n=80504 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Find middle, reverse second half, compare\nc) Use a hash set of seen values\nd) Copy to array and two-pointer check\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE84708.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=84708. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Queue\nc) Binary search tree\nd) Max-heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B511001.",
        "target_text": "Question: Run BFS on an unweighted graph with 511001 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Nondecreasing distance from source\nc) Minimum memory footprint\nd) Lexicographic vertex order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH9991612.",
        "target_text": "Question: Build a binary heap from n=9991612 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(n log n)\nd) Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF170758_0.68.",
        "target_text": "Question: Chaining hash table with n=170758 keys at load factor α=0.68. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(α log α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H640916179.",
        "target_text": "Question: For a balanced BST with n=640916179 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR210646.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=210646 edges. What algorithmic idea achieves linear time?\nChoices:\na) Tarjan’s low-link DFS\nb) Dijkstra’s algorithm\nc) Kruskal’s algorithm\nd) Topological sorting\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN867056.",
        "target_text": "Question: Check anagrams for strings of length n=867056 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) Sort both in Θ(n log n)\nc) DFS on character graph\nd) Use a stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX10_16.",
        "target_text": "Question: Radix sort with d=10 digits and base b=16 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(d·(n + b))\nc) Θ(n log n)\nd) Θ(d·n·log b)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU8639576.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=8639576. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Linear scan with early exit\nc) Heap-based selection\nd) Hashing with chaining\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T2_4_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^2, f3=n^2 (log n)^4, f4=n^7?\nChoices:\na) Θ((log n)^4)\nb) Θ(n^7)\nc) Θ(n^2)\nd) Θ(n^2 (log n)^4)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R923490.",
        "target_text": "Question: Rotate an array right by r=923490 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Single-step rotate repeated r times\nc) Selection sort then shift\nd) Heapify then extract\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK78_3441.",
        "target_text": "Question: Merge k=78 sorted linked lists totaling n=3441 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n + k^2)\nc) Θ(n log k)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1084.",
        "target_text": "Question: Verify whether a pop sequence of length n=1084 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA7505.",
        "target_text": "Question: Circular-array queue with capacity 7505: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Require power-of-two capacity\nc) Require prime capacity\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM235_28084.",
        "target_text": "Question: Merge k=235 sorted streams totaling N=28084 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log k)\nc) Θ(N log N)\nd) Θ(k log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF9286911_0.84.",
        "target_text": "Question: Chaining hash table with n=9286911 keys at load factor α=0.84. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(nα)\nc) Θ(α log α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H367531377.",
        "target_text": "Question: For a balanced BST with n=367531377 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(log log n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC915765.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=915765 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V log V)\nb) Θ(VE)\nc) Θ(V+E)\nd) Θ(E log V)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z724786.",
        "target_text": "Question: For string S (id=724786), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Length of the longest prefix starting at i matching S[0..]\nc) Number of mismatches at i\nd) Number of distinct substrings up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB13894068.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=13894068 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n^2)\nc) Ω(n log n)\nd) Ω(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS4756517.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=4756517 typically runs in?\nChoices:\na) Θ(n) average\nb) O(1) worst-case\nc) Θ(log n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M9_3_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/3) + n^2 for n being a power of 3.\nChoices:\na) Θ(n^2 log n)\nb) Θ(n^2.0)\nc) Θ(n^2)\nd) Θ(n^2.0 log^2 n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S5829_364.",
        "target_text": "Question: Array length n=5829, find max-sum subarray of fixed length k=364. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Phase difference accumulates around the cycle. Variant C5.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 5× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(n) space\nb) Θ(log n) time, Θ(1) space\nc) Θ(1) time, Θ(1) space\nd) Θ(n) time, Θ(1) space\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP149.",
        "target_text": "Question: Verify whether a pop sequence of length n=149 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Simulate using one stack in Θ(n)\nc) Backtrack with recursion in Θ(2^n)\nd) Sort both sequences then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ715558.",
        "target_text": "Question: Schedule 715558 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Unordered array\nc) Stack\nd) Circular queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM174_55262.",
        "target_text": "Question: Merge k=174 sorted streams totaling N=55262 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(k log N)\nc) Θ(N log N)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF3471602_0.8.",
        "target_text": "Question: Chaining hash table with n=3471602 keys at load factor α=0.8. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(α log α)\nd) Θ(nα)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS628708.",
        "target_text": "Question: BST with parent pointers (id=628708): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Use level-order and pick next node\nd) Reverse postorder traversal entirely\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC123577.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=123577 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(V log V)\nc) Θ(E log V)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z134480.",
        "target_text": "Question: For string S (id=134480), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Number of mismatches at i\nc) Number of distinct substrings up to i\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB51431123.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=51431123 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n^2)\nc) Ω(n log n)\nd) Ω(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS9457971.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=9457971 typically runs in?\nChoices:\na) O(1) worst-case\nb) O(log log n) average\nc) Θ(log n) average\nd) Θ(n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T3_5_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^3, f3=n^3 (log n)^5, f4=n^6?\nChoices:\na) Θ(n^3)\nb) Θ((log n)^5)\nc) Θ(n^3 (log n)^5)\nd) Θ(n^6)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S4996_15.",
        "target_text": "Question: Array length n=4996, find max-sum subarray of fixed length k=15. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(k log n)\nb) Θ(nk)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN561120.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 561120, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Reverse list then delete head\nc) Traverse from head to find predecessor\nd) Impossible under any model\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1678.",
        "target_text": "Question: Verify whether a pop sequence of length n=1678 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Backtrack with recursion in Θ(2^n)\nc) Use a queue to mirror the stack\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ529743.",
        "target_text": "Question: For 529743 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Queue\nc) Deque\nd) Stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC30814717.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=30814717?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF2947359_0.9.",
        "target_text": "Question: Chaining hash table with n=2947359 keys at load factor α=0.9. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(nα)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS661872.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=661872-th smallest?\nChoices:\na) Θ(k)\nb) Θ(log n)\nc) Θ(1)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D442544.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 442544]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Graph must be undirected\nc) Self-loops must be absent\nd) Distinct weights are required\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z362655.",
        "target_text": "Question: For string S (id=362655), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Number of distinct substrings up to i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of mismatches at i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS214.",
        "target_text": "Question: Array is nearly sorted with at most 214 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Insertion sort\nc) Heap sort\nd) Radix sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS2712616.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=2712616 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(1) expected\nc) Θ(log n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M9_4_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/4) + n^1 for n being a power of 4.\nChoices:\na) Θ(n^1.585 log n)\nb) Θ(n^1 log n)\nc) Θ(n^1)\nd) Θ(n^1.585)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P613816.",
        "target_text": "Question: Answer 613816 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Recompute sums per query in Θ(n)\nc) Sort once and binary search per query\nd) Use a stack to store partial sums\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK68_12641.",
        "target_text": "Question: Merge k=68 sorted linked lists totaling n=12641 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n log k)\nc) Θ(n + k^2)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE14680.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=14680. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Max-heap\nc) Decreasing stack\nd) Binary search tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ613840.",
        "target_text": "Question: For 613840 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Stack\nc) Binary heap\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM473_112509.",
        "target_text": "Question: Merge k=473 sorted streams totaling N=112509 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(N + k^2)\nc) Θ(k log N)\nd) Θ(N log N)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF1805554_0.4.",
        "target_text": "Question: Chaining hash table with n=1805554 keys at load factor α=0.4. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS332630.",
        "target_text": "Question: BST with parent pointers (id=332630): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Always climb to root then go right once\nd) Use level-order and pick next node\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR916884.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=916884 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Tarjan’s low-link DFS\nc) Dijkstra’s algorithm\nd) Kruskal’s algorithm\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN405630.",
        "target_text": "Question: Check anagrams for strings of length n=405630 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) Use a stack\nc) DFS on character graph\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS428416.",
        "target_text": "Question: Heapsort stability check id=428416: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort always beats merge sort\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is stable\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU7523205.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=7523205. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Binary search with left/right bias\nc) Linear scan with early exit\nd) Hashing with chaining\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M7_4_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/4) + n^0 for n being a power of 4.\nChoices:\na) Θ(n^0 log n)\nb) Θ(n^0)\nc) Θ(n^1.4037)\nd) Θ(n^1.4037 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM3509.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=3509-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Hash all present values then scan\nc) Scan linearly counting gaps\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR9.",
        "target_text": "Question: Reverse a singly linked list in groups of k=9 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n log k)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS3074.",
        "target_text": "Question: Compute stock span for 3074 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Monotonic stack\nc) Hash table\nd) Fenwick tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA3088.",
        "target_text": "Question: Circular-array queue with capacity 3088: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require prime capacity\nc) Require power-of-two capacity\nd) Head==Tail means full\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH8639829.",
        "target_text": "Question: Build a binary heap from n=8639829 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF3257123_0.74.",
        "target_text": "Question: Chaining hash table with n=3257123 keys at load factor α=0.74. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(α log α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS951148.",
        "target_text": "Question: BST with parent pointers (id=951148): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Always climb to root then go right once\nc) Use level-order and pick next node\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR647401.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=647401 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Tarjan’s low-link DFS\nc) Kruskal’s algorithm\nd) Topological sorting\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Randomized hashing makes spurious matches rare. Variant RK911382323_998244353.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=998244353 achieves expected linear time due to what?\nChoices:\na) Trie of all substrings\nb) Use of a min-heap\nc) Low collision probability of rolling hash\nd) Suffix tree guaranteeing O(1) per char\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB90794073.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=90794073 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n log n)\nc) Ω(log n)\nd) Ω(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI7_4224.",
        "target_text": "Question: Binary search over half-open range [7, 4224)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Increase both lo and hi to skip duplicates\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A2.",
        "target_text": "Question: A dynamic array starts with capacity 2 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(1)\nb) Θ(√m)\nc) Θ(m)\nd) Θ(log m)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP11117_3499.",
        "target_text": "Question: Sorted array length n=11117. Decide if any pair sums to 3499. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Divide and conquer in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR5.",
        "target_text": "Question: Reverse a singly linked list in groups of k=5 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(k log n)\nb) Θ(nk)\nc) Θ(n)\nd) Θ(n log k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1961.",
        "target_text": "Question: Verify whether a pop sequence of length n=1961 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Sort both sequences then compare\nc) Use a queue to mirror the stack\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B447441.",
        "target_text": "Question: Run BFS on an unweighted graph with 447441 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Minimum memory footprint\nc) Nondecreasing distance from source\nd) Lexicographic vertex order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL345_352733.",
        "target_text": "Question: Find the k=345-th largest element among n=352733 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Heapsort then index\nc) Binary search on value domain\nd) Build max-heap and extract k times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.23.",
        "target_text": "Question: In separate chaining with load factor α=0.23, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1/α)\nc) Θ(α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA853622.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=853622 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) Sort node labels then binary search\nc) Euler tour + RMQ yields O(1) per query\nd) DFS from root each time\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS78805_526550.",
        "target_text": "Question: A directed graph with V=78805, E≈526550. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) When all vertices have outdegree ≥ 1\nc) When it is a DAG (no directed cycles)\nd) Only if the graph is connected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Randomized hashing makes spurious matches rare. Variant RK257_998244353.",
        "target_text": "Question: Rabin–Karp with base=257, mod=998244353 achieves expected linear time due to what?\nChoices:\na) Trie of all substrings\nb) Suffix tree guaranteeing O(1) per char\nc) Low collision probability of rolling hash\nd) Use of a min-heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS660.",
        "target_text": "Question: Array is nearly sorted with at most 660 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Insertion sort\nc) Radix sort\nd) Shell sort with fixed gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS3308699.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=3308699 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(1) expected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_1_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^1, f3=n^1 (log n)^1, f4=n^6?\nChoices:\na) Θ((log n)^1)\nb) Θ(n^1)\nc) Θ(n^6)\nd) Θ(n^1 (log n)^1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R504661.",
        "target_text": "Question: Rotate an array right by r=504661 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Heapify then extract\nc) Single-step rotate repeated r times\nd) Selection sort then shift\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL39242.",
        "target_text": "Question: Check if a singly linked list of length n=39242 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Find middle, reverse second half, compare\nc) Sort and compare with original\nd) Copy to array and two-pointer check\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS4719.",
        "target_text": "Question: Compute stock span for 4719 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Monotonic stack\nc) Fenwick tree\nd) Priority queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW3218_444.",
        "target_text": "Question: Sliding window maximum for array length n=3218 and window w=444. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n log n)\nc) Θ(nw)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC74538798.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=74538798?\nChoices:\na) Θ(1)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF5843987_0.6.",
        "target_text": "Question: Chaining hash table with n=5843987 keys at load factor α=0.6. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(α log α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR341997.",
        "target_text": "Question: In a BST with distinct keys (id=341997), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Level-order\nc) Preorder\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF21430.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=21430 can handle which case while detecting it?\nChoices:\na) Negative edge weights and negative cycles\nb) Equal runtime on all graphs\nc) Only acyclic graphs\nd) Faster runtime on sparse nonnegative graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB3207.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=3207. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) BST over all substrings\nc) Binary heap of substrings\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS519.",
        "target_text": "Question: Array is nearly sorted with at most 519 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Shell sort with fixed gaps\nc) Radix sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX595415909.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈595415909. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Doubles the bound to bracket, then binary search\nc) Sorts the array first\nd) Requires the array to be cyclic\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T5_6_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^5, f3=n^5 (log n)^6, f4=n^12?\nChoices:\na) Θ(n^5 (log n)^6)\nb) Θ((log n)^6)\nc) Θ(n^12)\nd) Θ(n^5)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S3931_292.",
        "target_text": "Question: Array length n=3931, find max-sum subarray of fixed length k=292. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n log n)\nc) Θ(k log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK86_16481.",
        "target_text": "Question: Merge k=86 sorted linked lists totaling n=16481 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(k n)\nc) Θ(n log k)\nd) Θ(n + k^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE20791.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=20791. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Queue\nc) Decreasing stack\nd) Binary search tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ682662.",
        "target_text": "Question: Schedule 682662 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Circular queue\nc) Stack\nd) Unordered array\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM306_64146.",
        "target_text": "Question: Merge k=306 sorted streams totaling N=64146 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(N log N)\nc) Θ(k log N)\nd) Θ(N + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Adversarial patterns are neutralized by random choice. Variant UH100000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=100000 slots yields what benefit?\nChoices:\na) Expected constant-time operations against adversaries\nb) Eliminates need for resizing\nc) Cryptographic security by default\nd) Zero collisions guaranteed\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR80001.",
        "target_text": "Question: In a BST with distinct keys (id=80001), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Inorder\nc) Postorder\nd) Preorder\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR841725.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=841725 edges. What algorithmic idea achieves linear time?\nChoices:\na) Tarjan’s low-link DFS\nb) Dijkstra’s algorithm\nc) Topological sorting\nd) Kruskal’s algorithm\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN150203.",
        "target_text": "Question: Check anagrams for strings of length n=150203 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Count character frequencies in Θ(n)\nc) Sort both in Θ(n log n)\nd) Use a stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS926404.",
        "target_text": "Question: Heapsort stability check id=926404: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort is stable\nc) Heapsort is not stable by default\nd) Heapsort always beats merge sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU6040613.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=6040613. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Heap-based selection\nc) Binary search with left/right bias\nd) Hashing with chaining\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T2_6_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^2, f3=n^2 (log n)^6, f4=n^5?\nChoices:\na) Θ((log n)^6)\nb) Θ(n^2 (log n)^6)\nc) Θ(n^2)\nd) Θ(n^5)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S19866_5.",
        "target_text": "Question: Array length n=19866, find max-sum subarray of fixed length k=5. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN746103.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 746103, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Traverse from head to find predecessor\nc) Impossible under any model\nd) Reverse list then delete head\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS2499.",
        "target_text": "Question: Compute stock span for 2499 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Monotonic stack\nc) Priority queue\nd) Fenwick tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW1734_132.",
        "target_text": "Question: Sliding window maximum for array length n=1734 and window w=132. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(w log n)\nd) Θ(nw)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL623_730230.",
        "target_text": "Question: Find the k=623-th largest element among n=730230 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Deterministic selection (median-of-medians)\nc) Build max-heap and extract k times\nd) Binary search on value domain\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.24.",
        "target_text": "Question: In separate chaining with load factor α=1.24, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS96038.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=96038-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(k)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP386990.",
        "target_text": "Question: Test bipartiteness (id=386990) of an undirected graph efficiently. Which method works?\nChoices:\na) Attempt 2-coloring via BFS; failure indicates odd cycle\nb) Check all degrees even\nc) Compute an MST then inspect edges\nd) Sort vertices and deduplicate\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP70468.",
        "target_text": "Question: KMP matches a pattern of length m=70468 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Suffix array\nc) Z-array exclusively\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB52513018.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=52513018 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n^2)\nc) Ω(n log n)\nd) Ω(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Geometric level distribution mirrors balanced trees. Variant SL0.5.",
        "target_text": "Question: Skip list with level promotion probability p=0.5: expected complexity of search/insert/delete?\nChoices:\na) Θ(√n) for all three\nb) Θ(log n) for all three\nc) Θ(n) for all three\nd) Θ(1) for all three\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T2_1_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^2, f3=n^2 (log n)^1, f4=n^5?\nChoices:\na) Θ(n^2)\nb) Θ(n^5)\nc) Θ((log n)^1)\nd) Θ(n^2 (log n)^1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM98680.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=98680-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Use a heap of differences\nc) Hash all present values then scan\nd) Scan linearly counting gaps\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN150209.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 150209, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Copy next node’s data here and bypass next\nc) Reverse list then delete head\nd) Impossible under any model\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS3.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 3 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Greedy left-to-right without memory\nc) Sort segments then concatenate\nd) Use BFS on substring graph\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ227638.",
        "target_text": "Question: For 227638 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Deque\nc) Stack\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM382_39447.",
        "target_text": "Question: Merge k=382 sorted streams totaling N=39447 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(k log N)\nc) Θ(N + k^2)\nd) Θ(N log N)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.27.",
        "target_text": "Question: In separate chaining with load factor α=0.27, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1 + α)\nc) Θ(1/α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H45114486.",
        "target_text": "Question: For a balanced BST with n=45114486 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(log log n)\nc) Θ(n)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D893238.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 893238]. Why?\nChoices:\na) Nonnegative weights ensure greedy optimality\nb) Self-loops must be absent\nc) Graph must be undirected\nd) Distinct weights are required\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN882283.",
        "target_text": "Question: Check anagrams for strings of length n=882283 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) Sort both in Θ(n log n)\nc) Use a stack\nd) DFS on character graph\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB77863922.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=77863922 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n^2)\nc) Ω(n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS5165713.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=5165713 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T1_6_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^1, f3=n^1 (log n)^6, f4=n^3?\nChoices:\na) Θ(n^3)\nb) Θ(n^1 (log n)^6)\nc) Θ((log n)^6)\nd) Θ(n^1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM9222.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=9222-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Binary search on index vs value gap\nc) Hash all present values then scan\nd) Use a heap of differences\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN955145_505541.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=955145, B=505541. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Advance pointers; when one ends, jump to the other head\nc) Hash addresses of first list\nd) Reverse one list then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS4676.",
        "target_text": "Question: Compute stock span for 4676 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Hash table\nc) Monotonic stack\nd) Priority queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ984948.",
        "target_text": "Question: Schedule 984948 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Stack\nc) Binary heap\nd) Circular queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK6.",
        "target_text": "Question: In a d-ary heap (d=6), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) No effect whatsoever\nb) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nc) It makes the operation constant time\nd) It increases height linearly\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.34.",
        "target_text": "Question: In separate chaining with load factor α=1.34, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR466902.",
        "target_text": "Question: In a BST with distinct keys (id=466902), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Level-order\nc) Preorder\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS251731_404169.",
        "target_text": "Question: A directed graph with V=251731, E≈404169. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) Only if edges are unweighted\nc) When all vertices have outdegree ≥ 1\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Character-by-character descent. Variant TRIE256.",
        "target_text": "Question: Search a trie over alphabet size σ=256 for a key of length m. Time complexity?\nChoices:\na) Θ(1) average for all m\nb) Θ(m)\nc) Θ(log n)\nd) Θ(m log σ)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB83194918.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=83194918 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n^2)\nc) Ω(n log n)\nd) Ω(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX728699173.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈728699173. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Sorts the array first\nc) Doubles the bound to bracket, then binary search\nd) Requires the array to be cyclic\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M3_3_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/3) + n^4 for n being a power of 3.\nChoices:\na) Θ(n^1.0)\nb) Θ(n^4 log n)\nc) Θ(n^1.0 log n)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP13452_2875.",
        "target_text": "Question: Sorted array length n=13452. Decide if any pair sums to 2875. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Divide and conquer in Θ(n log n)\nc) Brute force in Θ(n^2)\nd) Two-pointer scan in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL39485.",
        "target_text": "Question: Check if a singly linked list of length n=39485 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Sort and compare with original\nc) Find middle, reverse second half, compare\nd) Use a hash set of seen values\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS8.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 8 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Use two stacks for counts and fragments\nc) Greedy left-to-right without memory\nd) Sort segments then concatenate\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW2301_585.",
        "target_text": "Question: Sliding window maximum for array length n=2301 and window w=585. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(w log n)\nc) Θ(n log n)\nd) Θ(nw)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC14019885.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=14019885?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(n)\nd) Θ(log log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH2048.",
        "target_text": "Question: In open addressing with double hashing over table size m=2048, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) g(k) coprime with m for all keys\nc) Make both hash functions identical\nd) Use g(k)=0 for some keys\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS164143.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=164143-th smallest?\nChoices:\na) Θ(k)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST461672.",
        "target_text": "Question: MST question id=461672: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) Prim requires the entire edge set to be sorted first\nd) MST minimizes number of edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z340563.",
        "target_text": "Question: For string S (id=340563), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Next index of S[i]\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of distinct substrings up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST905900.",
        "target_text": "Question: Stability (id=905900): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Merge sort (stable), Heap sort (unstable)\nc) Heap sort (stable), Merge sort (unstable)\nd) Quick sort (stable), Selection sort (unstable)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU2513575.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=2513575. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Heap-based selection\nc) Hashing with chaining\nd) Linear scan with early exit\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T5_3_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^5, f3=n^5 (log n)^3, f4=n^10?\nChoices:\na) Θ((log n)^3)\nb) Θ(n^5)\nc) Θ(n^5 (log n)^3)\nd) Θ(n^10)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM783177.",
        "target_text": "Question: Find a majority element in an array of length n=783177 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Counting sort\nc) Divide-and-conquer merges\nd) Binary search on value domain\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL75408.",
        "target_text": "Question: Check if a singly linked list of length n=75408 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Use a hash set of seen values\nc) Sort and compare with original\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1642.",
        "target_text": "Question: Verify whether a pop sequence of length n=1642 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Simulate using one stack in Θ(n)\nc) Sort both sequences then compare\nd) Use a queue to mirror the stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B743257.",
        "target_text": "Question: Run BFS on an unweighted graph with 743257 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) Minimum memory footprint\nc) Lexicographic vertex order\nd) All simple paths before all edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL982_767031.",
        "target_text": "Question: Find the k=982-th largest element among n=767031 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Build max-heap and extract k times\nc) Binary search on value domain\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH2048.",
        "target_text": "Question: In open addressing with double hashing over table size m=2048, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) g(k) coprime with m for all keys\nc) Make both hash functions identical\nd) Choose m even and g(k) even\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS100043.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=100043-th smallest?\nChoices:\na) Θ(1)\nb) Θ(k)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST14327.",
        "target_text": "Question: MST question id=14327: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) Prim requires the entire edge set to be sorted first\nd) MST minimizes number of edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN470384.",
        "target_text": "Question: Check anagrams for strings of length n=470384 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) Use a stack\nc) DFS on character graph\nd) Sort both in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX2_4.",
        "target_text": "Question: Radix sort with d=2 digits and base b=4 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(n log n)\nc) Θ(b^d)\nd) Θ(d·n·log b)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS2480922.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=2480922 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(1) expected\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M7_3_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/3) + n^1 for n being a power of 3.\nChoices:\na) Θ(n^1 log n)\nb) Θ(n^1.7712 log n)\nc) Θ(n^1.7712)\nd) Θ(n^1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S16254_100.",
        "target_text": "Question: Array length n=16254, find max-sum subarray of fixed length k=100. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n log n)\nc) Θ(k log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK27_4180.",
        "target_text": "Question: Merge k=27 sorted linked lists totaling n=4180 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n + k^2)\nc) Θ(n log k)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE14726.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=14726. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Binary search tree\nc) Queue\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ513675.",
        "target_text": "Question: For 513675 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Stack\nc) Queue\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM11_2183.",
        "target_text": "Question: Merge k=11 sorted streams totaling N=2183 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(k log N)\nc) Θ(N log N)\nd) Θ(N + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.62.",
        "target_text": "Question: In separate chaining with load factor α=0.62, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA925081.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=925081 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) Naive parent climbing O(n) per query\nc) Sort node labels then binary search\nd) DFS from root each time\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS720617_5036909.",
        "target_text": "Question: A directed graph with V=720617, E≈5036909. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) When all vertices have outdegree ≥ 1\nc) Only if edges are unweighted\nd) Only if the graph is connected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000009.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Trie of all substrings\nb) Low collision probability of rolling hash\nc) Use of a min-heap\nd) Suffix tree guaranteeing O(1) per char\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS394473.",
        "target_text": "Question: Heapsort stability check id=394473: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is not stable by default\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is stable\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX235743261.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈235743261. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Sorts the array first\nc) Uses hashing to index unknown segments\nd) Requires the array to be cyclic\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_4_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^1, f3=n^1 (log n)^4, f4=n^6?\nChoices:\na) Θ((log n)^4)\nb) Θ(n^6)\nc) Θ(n^1)\nd) Θ(n^1 (log n)^4)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM93545.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=93545-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Use a heap of differences\nc) Scan linearly counting gaps\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Phase difference accumulates around the cycle. Variant C5.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 5× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(1) space\nb) Θ(1) time, Θ(1) space\nc) Θ(n) time, Θ(n) space\nd) Θ(log n) time, Θ(1) space\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP794.",
        "target_text": "Question: Verify whether a pop sequence of length n=794 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Simulate using one stack in Θ(n)\nc) Sort both sequences then compare\nd) Use a queue to mirror the stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ43700.",
        "target_text": "Question: Schedule 43700 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Binary heap\nc) Circular queue\nd) Stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM475_214653.",
        "target_text": "Question: Merge k=475 sorted streams totaling N=214653 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(N log k)\nc) Θ(k log N)\nd) Θ(N + k^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF771865_0.54.",
        "target_text": "Question: Chaining hash table with n=771865 keys at load factor α=0.54. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR348274.",
        "target_text": "Question: In a BST with distinct keys (id=348274), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Inorder\nc) Postorder\nd) Level-order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST755187.",
        "target_text": "Question: MST question id=755187: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) Prim requires the entire edge set to be sorted first\nc) MST is always unique in connected graphs\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB8160.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=8160. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Suffix automaton or suffix array + LCP\nc) Binary heap of substrings\nd) BST over all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB4932088.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=4932088 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n^2)\nc) Ω(n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI38_4009.",
        "target_text": "Question: Binary search over half-open range [38, 4009)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Increase both lo and hi to skip duplicates\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M8_6_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/6) + n^4 for n being a power of 6.\nChoices:\na) Θ(n^1.1606)\nb) Θ(n^4)\nc) Θ(n^1.1606 log n)\nd) Θ(n^4 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP13374_4310.",
        "target_text": "Question: Sorted array length n=13374. Decide if any pair sums to 4310. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Brute force in Θ(n^2)\nd) Hash set in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR10.",
        "target_text": "Question: Reverse a singly linked list in groups of k=10 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n)\nd) Θ(n log k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS1986.",
        "target_text": "Question: Compute stock span for 1986 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Fenwick tree\nc) Priority queue\nd) Hash table\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW2202_175.",
        "target_text": "Question: Sliding window maximum for array length n=2202 and window w=175. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(w log n)\nc) Θ(nw)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM158_28380.",
        "target_text": "Question: Merge k=158 sorted streams totaling N=28380 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log N)\nc) Θ(k log N)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF5190485_0.66.",
        "target_text": "Question: Chaining hash table with n=5190485 keys at load factor α=0.66. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(nα)\nc) Θ(1 + α)\nd) Θ(α log α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS432624.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=432624-th smallest?\nChoices:\na) Θ(1)\nb) Θ(√n)\nc) Θ(k)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS346331_1949971.",
        "target_text": "Question: A directed graph with V=346331, E≈1949971. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if the graph is connected\nc) Only if edges are unweighted\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN382327.",
        "target_text": "Question: Check anagrams for strings of length n=382327 over fixed alphabet. Optimal approach?\nChoices:\na) Use a stack\nb) Sort both in Θ(n log n)\nc) Count character frequencies in Θ(n)\nd) DFS on character graph\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB38685125.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=38685125 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n^2)\nc) Ω(log n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX167893228.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈167893228. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Uses hashing to index unknown segments\nc) Sorts the array first\nd) Requires the array to be cyclic\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M4_2_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/2) + n^1 for n being a power of 2.\nChoices:\na) Θ(n^2.0)\nb) Θ(n^1 log n)\nc) Θ(n^1)\nd) Θ(n^2.0 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM335129.",
        "target_text": "Question: Find a majority element in an array of length n=335129 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Boyer–Moore voting with verification\nc) Divide-and-conquer merges\nd) Binary search on value domain\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR6.",
        "target_text": "Question: Reverse a singly linked list in groups of k=6 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS3626.",
        "target_text": "Question: Compute stock span for 3626 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Monotonic stack\nc) Fenwick tree\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA1975.",
        "target_text": "Question: Circular-array queue with capacity 1975: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Head==Tail means full\nc) Require power-of-two capacity\nd) Require prime capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL16_59018.",
        "target_text": "Question: Find the k=16-th largest element among n=59018 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Binary search on value domain\nc) Build max-heap and extract k times\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF6033020_0.31.",
        "target_text": "Question: Chaining hash table with n=6033020 keys at load factor α=0.31. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(nα)\nc) Θ(1 + α)\nd) Θ(α log α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA828281.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=828281 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Euler tour + RMQ yields O(1) per query\nc) Naive parent climbing O(n) per query\nd) DFS from root each time\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS280495_2613591.",
        "target_text": "Question: A directed graph with V=280495, E≈2613591. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) When all vertices have outdegree ≥ 1\nc) Only if edges are unweighted\nd) Only if the graph is connected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN256228.",
        "target_text": "Question: Check anagrams for strings of length n=256228 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) DFS on character graph\nc) Use a stack\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST416802.",
        "target_text": "Question: Stability (id=416802): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Counting sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI76_2527.",
        "target_text": "Question: Binary search over half-open range [76, 2527)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Keep inclusive bounds on both ends\nc) Increase both lo and hi to skip duplicates\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M9_6_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/6) + n^2 for n being a power of 6.\nChoices:\na) Θ(n^1.2263)\nb) Θ(n^2)\nc) Θ(n^1.2263 log n)\nd) Θ(n^2 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM28530.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=28530-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Use a heap of differences\nc) Hash all present values then scan\nd) Scan linearly counting gaps\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN892845.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 892845, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Reverse list then delete head\nc) Impossible under any model\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS4434.",
        "target_text": "Question: Compute stock span for 4434 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Priority queue\nc) Hash table\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA628.",
        "target_text": "Question: Circular-array queue with capacity 628: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Require prime capacity\nc) Head==Tail means full\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM160_68558.",
        "target_text": "Question: Merge k=160 sorted streams totaling N=68558 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log k)\nc) Θ(N + k^2)\nd) Θ(N log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.27.",
        "target_text": "Question: In separate chaining with load factor α=0.27, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS460933.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=460933-th smallest?\nChoices:\na) Θ(k)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS719364_1529876.",
        "target_text": "Question: A directed graph with V=719364, E≈1529876. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When all vertices have outdegree ≥ 1\nc) When it is a DAG (no directed cycles)\nd) Only if edges are unweighted\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS61385.",
        "target_text": "Question: In KMP, what does LPS[61385] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Index of next occurrence\nc) Total distinct prefixes up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS927.",
        "target_text": "Question: Array is nearly sorted with at most 927 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Heap sort\nc) Radix sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI10_4040.",
        "target_text": "Question: Binary search over half-open range [10, 4040)—which invariant prevents infinite loops?\nChoices:\na) Increase both lo and hi to skip duplicates\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Keep inclusive bounds on both ends\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T1_4_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^1, f3=n^1 (log n)^4, f4=n^3?\nChoices:\na) Θ(n^3)\nb) Θ(n^1 (log n)^4)\nc) Θ((log n)^4)\nd) Θ(n^1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM548005.",
        "target_text": "Question: Find a majority element in an array of length n=548005 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Divide-and-conquer merges\nc) Boyer–Moore voting with verification\nd) Counting sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK17_1785.",
        "target_text": "Question: Merge k=17 sorted linked lists totaling n=1785 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n log k)\nc) Θ(k n)\nd) Θ(n + k^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE22956.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=22956. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Max-heap\nc) Binary search tree\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA1479.",
        "target_text": "Question: Circular-array queue with capacity 1479: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Track count or keep one slot empty\nc) Require prime capacity\nd) Head==Tail means full\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC94997458.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=94997458?\nChoices:\na) Θ(log log n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.49.",
        "target_text": "Question: In separate chaining with load factor α=0.49, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(α)\nd) Θ(1/α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR408503.",
        "target_text": "Question: In a BST with distinct keys (id=408503), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Postorder\nc) Preorder\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF13548.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=13548 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Only acyclic graphs\nc) Equal runtime on all graphs\nd) Negative edge weights and negative cycles\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP44945.",
        "target_text": "Question: KMP matches a pattern of length m=44945 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) Rolling hash table\nc) Suffix array\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB47370449.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=47370449 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n)\nc) Ω(n log n)\nd) Ω(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS5519305.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=5519305 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(log n) average\nc) O(1) worst-case\nd) Θ(n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T4_2_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^4, f3=n^4 (log n)^2, f4=n^7?\nChoices:\na) Θ(n^4 (log n)^2)\nb) Θ((log n)^2)\nc) Θ(n^4)\nd) Θ(n^7)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP19622_3641.",
        "target_text": "Question: Sorted array length n=19622. Decide if any pair sums to 3641. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Brute force in Θ(n^2)\nc) Two-pointer scan in Θ(n)\nd) Hash set in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR10.",
        "target_text": "Question: Reverse a singly linked list in groups of k=10 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP628.",
        "target_text": "Question: Verify whether a pop sequence of length n=628 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Simulate using one stack in Θ(n)\nc) Use a queue to mirror the stack\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ381379.",
        "target_text": "Question: Schedule 381379 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Stack\nc) Binary heap\nd) Circular queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH9894741.",
        "target_text": "Question: Build a binary heap from n=9894741 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n^2)\nc) Θ(log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.4.",
        "target_text": "Question: In separate chaining with load factor α=1.4, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(log n)\nc) Θ(1/α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H230838476.",
        "target_text": "Question: For a balanced BST with n=230838476 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC298610.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=298610 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(E log V)\nc) Θ(V log V)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z95419.",
        "target_text": "Question: For string S (id=95419), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Length of the longest prefix starting at i matching S[0..]\nc) Next index of S[i]\nd) Number of mismatches at i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS670776.",
        "target_text": "Question: Heapsort stability check id=670776: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort is stable\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort always beats merge sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU5718582.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=5718582. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Hashing with chaining\nc) Binary search with left/right bias\nd) Heap-based selection\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M6_4_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/4) + n^4 for n being a power of 4.\nChoices:\na) Θ(n^1.2925)\nb) Θ(n^4)\nc) Θ(n^4 log n)\nd) Θ(n^1.2925 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM158008.",
        "target_text": "Question: Find a majority element in an array of length n=158008 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Counting sort\nc) Binary search on value domain\nd) Divide-and-conquer merges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK98_12611.",
        "target_text": "Question: Merge k=98 sorted linked lists totaling n=12611 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(k n)\nc) Θ(n + k^2)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS7.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 7 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Greedy left-to-right without memory\nc) Use BFS on substring graph\nd) Sort segments then concatenate\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS4678.",
        "target_text": "Question: A queue via two stacks handles a burst of 4678 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) Both Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH4876701.",
        "target_text": "Question: Build a binary heap from n=4876701 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(n^2)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.29.",
        "target_text": "Question: In separate chaining with load factor α=1.29, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS874120.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=874120-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(k)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST489569.",
        "target_text": "Question: MST question id=489569: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) MST is always unique in connected graphs\nc) Kruskal adds the smallest edge that doesn't create a cycle\nd) Prim requires the entire edge set to be sorted first\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS93880.",
        "target_text": "Question: In KMP, what does LPS[93880] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Number of mismatches up to i\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Index of next occurrence\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB44404379.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=44404379 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n^2)\nc) Ω(log n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX90490665.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈90490665. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Requires the array to be cyclic\nc) Sorts the array first\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M3_4_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/4) + n^2 for n being a power of 4.\nChoices:\na) Θ(n^0.7925)\nb) Θ(n^2 log n)\nc) Θ(n^0.7925 log n)\nd) Θ(n^2)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM276452.",
        "target_text": "Question: Find a majority element in an array of length n=276452 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Counting sort\nc) Boyer–Moore voting with verification\nd) Binary search on value domain\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN608853_504105.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=608853, B=504105. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Hash addresses of first list\nc) Advance pointers; when one ends, jump to the other head\nd) Reverse one list then compare\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS1960.",
        "target_text": "Question: Compute stock span for 1960 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Priority queue\nc) Hash table\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ366656.",
        "target_text": "Question: For 366656 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Stack\nc) Binary heap\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC14748345.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=14748345?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.22.",
        "target_text": "Question: In separate chaining with load factor α=0.22, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA748299.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=748299 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) Sort node labels then binary search\nc) DFS from root each time\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC236042.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=236042 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V log V)\nb) Θ(VE)\nc) Θ(E log V)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP61123.",
        "target_text": "Question: KMP matches a pattern of length m=61123 in linear time using which table?\nChoices:\na) Suffix array\nb) LPS (failure) function\nc) Rolling hash table\nd) Z-array exclusively\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS913863.",
        "target_text": "Question: Heapsort stability check id=913863: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort always beats merge sort\nc) Heapsort is not stable by default\nd) Heapsort needs extra Θ(n) memory\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI20_4134.",
        "target_text": "Question: Binary search over half-open range [20, 4134)—which invariant prevents infinite loops?\nChoices:\na) Increase both lo and hi to skip duplicates\nb) Keep inclusive bounds on both ends\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A16.",
        "target_text": "Question: A dynamic array starts with capacity 16 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(log m)\nb) Θ(1)\nc) Θ(m)\nd) Θ(√m)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P421411.",
        "target_text": "Question: Answer 421411 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Recompute sums per query in Θ(n)\nc) Use a stack to store partial sums\nd) Sort once and binary search per query\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK42_5639.",
        "target_text": "Question: Merge k=42 sorted linked lists totaling n=5639 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n + k^2)\nc) Θ(n log n)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE44058.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=44058. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Decreasing stack\nc) Queue\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW1174_695.",
        "target_text": "Question: Sliding window maximum for array length n=1174 and window w=695. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(nw)\nc) Θ(w log n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM419_175246.",
        "target_text": "Question: Merge k=419 sorted streams totaling N=175246 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log k)\nc) Θ(N log N)\nd) Θ(k log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.52.",
        "target_text": "Question: In separate chaining with load factor α=0.52, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS815415.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=815415-th smallest?\nChoices:\na) Θ(1)\nb) Θ(k)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC719485.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=719485 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(E log V)\nc) Θ(V log V)\nd) Θ(VE)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP41064.",
        "target_text": "Question: KMP matches a pattern of length m=41064 in linear time using which table?\nChoices:\na) Suffix array\nb) Rolling hash table\nc) LPS (failure) function\nd) Z-array exclusively\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS429520.",
        "target_text": "Question: Heapsort stability check id=429520: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort always beats merge sort\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI41_2743.",
        "target_text": "Question: Binary search over half-open range [41, 2743)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Increase both lo and hi to skip duplicates\nc) Keep inclusive bounds on both ends\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T3_3_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^3, f3=n^3 (log n)^3, f4=n^8?\nChoices:\na) Θ(n^3 (log n)^3)\nb) Θ(n^3)\nc) Θ((log n)^3)\nd) Θ(n^8)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R593910.",
        "target_text": "Question: Rotate an array right by r=593910 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Three-reversal method\nc) Single-step rotate repeated r times\nd) Heapify then extract\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN827041.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 827041, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Copy next node’s data here and bypass next\nc) Reverse list then delete head\nd) Impossible under any model\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE99627.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=99627. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Decreasing stack\nc) Max-heap\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA6604.",
        "target_text": "Question: Circular-array queue with capacity 6604: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Head==Tail means full\nc) Require prime capacity\nd) Require power-of-two capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM496_73855.",
        "target_text": "Question: Merge k=496 sorted streams totaling N=73855 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log k)\nc) Θ(N + k^2)\nd) Θ(N log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF6113683_0.27.",
        "target_text": "Question: Chaining hash table with n=6113683 keys at load factor α=0.27. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(α log α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS377152.",
        "target_text": "Question: BST with parent pointers (id=377152): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Reverse postorder traversal entirely\nd) Always climb to root then go right once\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST280996.",
        "target_text": "Question: MST question id=280996: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) MST minimizes number of edges\nd) MST is always unique in connected graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS15267.",
        "target_text": "Question: In KMP, what does LPS[15267] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Number of mismatches up to i\nc) Total distinct prefixes up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS296.",
        "target_text": "Question: Array is nearly sorted with at most 296 inversions. Which algorithm excels?\nChoices:\na) Insertion sort\nb) Radix sort\nc) Heap sort\nd) Shell sort with fixed gaps\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX203869392.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈203869392. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Sorts the array first\nc) Uses hashing to index unknown segments\nd) Requires the array to be cyclic\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M9_4_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/4) + n^3 for n being a power of 4.\nChoices:\na) Θ(n^1.585)\nb) Θ(n^3)\nc) Θ(n^1.585 log n)\nd) Θ(n^3 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S2843_500.",
        "target_text": "Question: Array length n=2843, find max-sum subarray of fixed length k=500. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(k log n)\nb) Θ(nk)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL45679.",
        "target_text": "Question: Check if a singly linked list of length n=45679 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Find middle, reverse second half, compare\nc) Sort and compare with original\nd) Use a hash set of seen values\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE77526.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=77526. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Binary search tree\nc) Queue\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B475806.",
        "target_text": "Question: Run BFS on an unweighted graph with 475806 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) Lexicographic vertex order\nc) Nondecreasing distance from source\nd) All simple paths before all edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL871_562578.",
        "target_text": "Question: Find the k=871-th largest element among n=562578 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Deterministic selection (median-of-medians)\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA951430.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=951430 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Euler tour + RMQ yields O(1) per query\nc) Naive parent climbing O(n) per query\nd) DFS from root each time\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D6439.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 6439]. Why?\nChoices:\na) Graph must be undirected\nb) Distinct weights are required\nc) Nonnegative weights ensure greedy optimality\nd) Self-loops must be absent\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB53559.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=53559. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Queue of rolling hashes only\nc) Suffix automaton or suffix array + LCP\nd) Binary heap of substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX10_32.",
        "target_text": "Question: Radix sort with d=10 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(b^d)\nc) Θ(d·n·log b)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX504356089.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈504356089. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Doubles the bound to bracket, then binary search\nc) Requires the array to be cyclic\nd) Sorts the array first\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M9_2_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/2) + n^2 for n being a power of 2.\nChoices:\na) Θ(n^2 log n)\nb) Θ(n^3.1699)\nc) Θ(n^2)\nd) Θ(n^3.1699 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R470935.",
        "target_text": "Question: Rotate an array right by r=470935 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Single-step rotate repeated r times\nc) Heapify then extract\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN850548_232940.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=850548, B=232940. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Reverse one list then compare\nc) Hash addresses of first list\nd) Binary search on addresses\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1805.",
        "target_text": "Question: Verify whether a pop sequence of length n=1805 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Backtrack with recursion in Θ(2^n)\nc) Simulate using one stack in Θ(n)\nd) Sort both sequences then compare\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW2460_455.",
        "target_text": "Question: Sliding window maximum for array length n=2460 and window w=455. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(nw)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM51_11177.",
        "target_text": "Question: Merge k=51 sorted streams totaling N=11177 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(N log N)\nc) Θ(N + k^2)\nd) Θ(k log N)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Threshold-based expansion preserves performance. Variant RS0.8.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.8?\nChoices:\na) To sort keys implicitly\nb) To maintain key stability\nc) To reduce memory usage to exact size\nd) To keep expected O(1) operations\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR78564.",
        "target_text": "Question: In a BST with distinct keys (id=78564), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Postorder\nc) Preorder\nd) Level-order\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST285875.",
        "target_text": "Question: MST question id=285875: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) Prim requires the entire edge set to be sorted first\nc) MST minimizes number of edges\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS30905.",
        "target_text": "Question: In KMP, what does LPS[30905] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Total distinct prefixes up to i\nc) Number of mismatches up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB26394394.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=26394394 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n)\nc) Ω(log n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS1997815.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=1997815 typically runs in?\nChoices:\na) O(1) worst-case\nb) Θ(log n) average\nc) Θ(n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M8_4_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/4) + n^4 for n being a power of 4.\nChoices:\na) Θ(n^1.5 log n)\nb) Θ(n^1.5)\nc) Θ(n^4 log n)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP15921_224.",
        "target_text": "Question: Sorted array length n=15921. Decide if any pair sums to 224. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Hash set in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Divide and conquer in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Phase difference accumulates around the cycle. Variant C2.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 2× and 1×. Complexity?\nChoices:\na) Θ(log n) time, Θ(1) space\nb) Θ(1) time, Θ(1) space\nc) Θ(n) time, Θ(n) space\nd) Θ(n) time, Θ(1) space\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS1210.",
        "target_text": "Question: Compute stock span for 1210 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Priority queue\nc) Monotonic stack\nd) Hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ40524.",
        "target_text": "Question: For 40524 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Binary heap\nc) Deque\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC33479354.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=33479354?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF7372749_0.66.",
        "target_text": "Question: Chaining hash table with n=7372749 keys at load factor α=0.66. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(α log α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS931808.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=931808-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(k)\nc) Θ(√n)\nd) Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP351399.",
        "target_text": "Question: Test bipartiteness (id=351399) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Sort vertices and deduplicate\nd) Check all degrees even\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB13646.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=13646. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) BST over all substrings\nc) Queue of rolling hashes only\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX8_32.",
        "target_text": "Question: Radix sort with d=8 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(b^d)\nc) Θ(d·n·log b)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS6897383.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=6897383 typically runs in?\nChoices:\na) Θ(n) average\nb) O(log log n) average\nc) Θ(log n) average\nd) O(1) worst-case\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_5_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^3, f3=n^3 (log n)^5, f4=n^8?\nChoices:\na) Θ(n^3)\nb) Θ(n^3 (log n)^5)\nc) Θ(n^8)\nd) Θ((log n)^5)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM41548.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=41548-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Scan linearly counting gaps\nc) Binary search on index vs value gap\nd) Hash all present values then scan\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN780944_175969.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=780944, B=175969. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Advance pointers; when one ends, jump to the other head\nc) Hash addresses of first list\nd) Binary search on addresses\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1923.",
        "target_text": "Question: Verify whether a pop sequence of length n=1923 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Use a queue to mirror the stack\nc) Simulate using one stack in Θ(n)\nd) Backtrack with recursion in Θ(2^n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW1962_614.",
        "target_text": "Question: Sliding window maximum for array length n=1962 and window w=614. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(nw)\nc) Θ(w log n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK7.",
        "target_text": "Question: In a d-ary heap (d=7), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) No effect whatsoever\nc) It makes the operation constant time\nd) It increases height linearly\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.73.",
        "target_text": "Question: In separate chaining with load factor α=0.73, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(log n)\nc) Θ(1/α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS26187.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=26187-th smallest?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(k)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST842168.",
        "target_text": "Question: MST question id=842168: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) MST is always unique in connected graphs\nc) MST minimizes number of edges\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE128.",
        "target_text": "Question: Search a trie over alphabet size σ=128 for a key of length m. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(1) average for all m\nc) Θ(m log σ)\nd) Θ(m)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST862220.",
        "target_text": "Question: Stability (id=862220): which pairing is correct?\nChoices:\na) Heap sort (stable), Merge sort (unstable)\nb) Counting sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI19_481.",
        "target_text": "Question: Binary search over half-open range [19, 481)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Increase both lo and hi to skip duplicates\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M9_2_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/2) + n^2 for n being a power of 2.\nChoices:\na) Θ(n^2)\nb) Θ(n^3.1699 log n)\nc) Θ(n^3.1699)\nd) Θ(n^2 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S18407_96.",
        "target_text": "Question: Array length n=18407, find max-sum subarray of fixed length k=96. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK51_6741.",
        "target_text": "Question: Merge k=51 sorted linked lists totaling n=6741 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n log n)\nc) Θ(k n)\nd) Θ(n + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP218.",
        "target_text": "Question: Verify whether a pop sequence of length n=218 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Simulate using one stack in Θ(n)\nc) Use a queue to mirror the stack\nd) Sort both sequences then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA6969.",
        "target_text": "Question: Circular-array queue with capacity 6969: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Require prime capacity\nc) Track count or keep one slot empty\nd) Require power-of-two capacity\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH7015244.",
        "target_text": "Question: Build a binary heap from n=7015244 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(log n)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.63.",
        "target_text": "Question: In separate chaining with load factor α=0.63, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR2309.",
        "target_text": "Question: In a BST with distinct keys (id=2309), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Preorder\nc) Postorder\nd) Level-order\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D481931.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 481931]. Why?\nChoices:\na) Distinct weights are required\nb) Graph must be undirected\nc) Self-loops must be absent\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS21303.",
        "target_text": "Question: In KMP, what does LPS[21303] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Total distinct prefixes up to i\nc) Index of next occurrence\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS838742.",
        "target_text": "Question: Keys are integers in range [0..838742]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Shell sort\nc) Quick sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU8782460.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=8782460. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Hashing with chaining\nc) Linear scan with early exit\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_2_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^1, f3=n^1 (log n)^2, f4=n^8?\nChoices:\na) Θ(n^1)\nb) Θ((log n)^2)\nc) Θ(n^1 (log n)^2)\nd) Θ(n^8)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S7771_322.",
        "target_text": "Question: Array length n=7771, find max-sum subarray of fixed length k=322. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(k log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL59277.",
        "target_text": "Question: Check if a singly linked list of length n=59277 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Sort and compare with original\nc) Copy to array and two-pointer check\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE27271.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=27271. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Queue\nc) Binary search tree\nd) Max-heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B685112.",
        "target_text": "Question: Run BFS on an unweighted graph with 685112 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) All simple paths before all edges\nc) Nondecreasing distance from source\nd) Lexicographic vertex order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL130_934461.",
        "target_text": "Question: Find the k=130-th largest element among n=934461 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Binary search on value domain\nc) Heapsort then index\nd) Build max-heap and extract k times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH1024.",
        "target_text": "Question: In open addressing with double hashing over table size m=1024, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) g(k) coprime with m for all keys\nc) Use g(k)=0 for some keys\nd) Choose m even and g(k) even\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA669737.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=669737 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Euler tour + RMQ yields O(1) per query\nc) Naive parent climbing O(n) per query\nd) Sort node labels then binary search\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS667219_3579215.",
        "target_text": "Question: A directed graph with V=667219, E≈3579215. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) Only if the graph is connected\nc) When all vertices have outdegree ≥ 1\nd) Only if edges are unweighted\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z191756.",
        "target_text": "Question: For string S (id=191756), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Number of mismatches at i\nc) Next index of S[i]\nd) Number of distinct substrings up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB82265008.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=82265008 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(log n)\nc) Ω(n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU3502814.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=3502814. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Linear scan with early exit\nc) Heap-based selection\nd) Hashing with chaining\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M3_5_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/5) + n^0 for n being a power of 5.\nChoices:\na) Θ(n^0.6826 log n)\nb) Θ(n^0.6826)\nc) Θ(n^0)\nd) Θ(n^0 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP3988_1709.",
        "target_text": "Question: Sorted array length n=3988. Decide if any pair sums to 1709. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Hash set in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Divide and conquer in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL36296.",
        "target_text": "Question: Check if a singly linked list of length n=36296 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Find middle, reverse second half, compare\nc) Copy to array and two-pointer check\nd) Use a hash set of seen values\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS676.",
        "target_text": "Question: Compute stock span for 676 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Monotonic stack\nc) Hash table\nd) Priority queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ281663.",
        "target_text": "Question: For 281663 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Deque\nc) Queue\nd) Binary heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM606_187959.",
        "target_text": "Question: Merge k=606 sorted streams totaling N=187959 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(k log N)\nc) Θ(N log k)\nd) Θ(N log N)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.34.",
        "target_text": "Question: In separate chaining with load factor α=1.34, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(α)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA991317.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=991317 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Euler tour + RMQ yields O(1) per query\nc) Naive parent climbing O(n) per query\nd) DFS from root each time\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR831856.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=831856 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Tarjan’s low-link DFS\nc) Topological sorting\nd) Kruskal’s algorithm\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP52905.",
        "target_text": "Question: KMP matches a pattern of length m=52905 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Rolling hash table\nc) Z-array exclusively\nd) Suffix array\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB63963241.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=63963241 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n)\nc) Ω(n^2)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX468469301.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈468469301. Why?\nChoices:\na) Sorts the array first\nb) Requires the array to be cyclic\nc) Doubles the bound to bracket, then binary search\nd) Uses hashing to index unknown segments\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T4_4_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^4, f3=n^4 (log n)^4, f4=n^11?\nChoices:\na) Θ(n^11)\nb) Θ(n^4 (log n)^4)\nc) Θ(n^4)\nd) Θ((log n)^4)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP6208_1800.",
        "target_text": "Question: Sorted array length n=6208. Decide if any pair sums to 1800. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Divide and conquer in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Brute force in Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL18666.",
        "target_text": "Question: Check if a singly linked list of length n=18666 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Copy to array and two-pointer check\nc) Sort and compare with original\nd) Use a hash set of seen values\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS7.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 7 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Use BFS on substring graph\nc) Greedy left-to-right without memory\nd) Sort segments then concatenate\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ831155.",
        "target_text": "Question: For 831155 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Stack\nc) Queue\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC78981459.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=78981459?\nChoices:\na) Θ(log log n)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF983246_0.45.",
        "target_text": "Question: Chaining hash table with n=983246 keys at load factor α=0.45. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS266610.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=266610-th smallest?\nChoices:\na) Θ(1)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR47192.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=47192 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Kruskal’s algorithm\nc) Tarjan’s low-link DFS\nd) Topological sorting\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z358243.",
        "target_text": "Question: For string S (id=358243), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Number of mismatches at i\nc) Next index of S[i]\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB56430188.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=56430188 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n log n)\nc) Ω(n^2)\nd) Ω(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI94_3411.",
        "target_text": "Question: Binary search over half-open range [94, 3411)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Increase both lo and hi to skip duplicates\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Keep inclusive bounds on both ends\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T5_6_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^5, f3=n^5 (log n)^6, f4=n^9?\nChoices:\na) Θ(n^9)\nb) Θ(n^5 (log n)^6)\nc) Θ((log n)^6)\nd) Θ(n^5)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM34170.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=34170-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Use a heap of differences\nc) Hash all present values then scan\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN327005_462779.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=327005, B=462779. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Binary search on addresses\nc) Advance pointers; when one ends, jump to the other head\nd) Hash addresses of first list\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS8.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 8 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Greedy left-to-right without memory\nb) Use two stacks for counts and fragments\nc) Use BFS on substring graph\nd) Sort segments then concatenate\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B309636.",
        "target_text": "Question: Run BFS on an unweighted graph with 309636 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Minimum memory footprint\nc) Nondecreasing distance from source\nd) Lexicographic vertex order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC91951133.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=91951133?\nChoices:\na) Θ(n)\nb) Θ(1)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.37.",
        "target_text": "Question: In separate chaining with load factor α=1.37, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS755913.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=755913-th smallest?\nChoices:\na) Θ(1)\nb) Θ(k)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP710320.",
        "target_text": "Question: Test bipartiteness (id=710320) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Sort vertices and deduplicate\nc) Compute an MST then inspect edges\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z145465.",
        "target_text": "Question: For string S (id=145465), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Next index of S[i]\nc) Number of mismatches at i\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS836032.",
        "target_text": "Question: Heapsort stability check id=836032: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort is not stable by default\nc) Heapsort always beats merge sort\nd) Heapsort needs extra Θ(n) memory\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU9750574.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=9750574. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Heap-based selection\nc) Hashing with chaining\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M2_6_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/6) + n^0 for n being a power of 6.\nChoices:\na) Θ(n^0 log n)\nb) Θ(n^0)\nc) Θ(n^0.3869 log n)\nd) Θ(n^0.3869)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R432472.",
        "target_text": "Question: Rotate an array right by r=432472 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Three-reversal method\nc) Selection sort then shift\nd) Heapify then extract\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL78714.",
        "target_text": "Question: Check if a singly linked list of length n=78714 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Sort and compare with original\nc) Copy to array and two-pointer check\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1629.",
        "target_text": "Question: Verify whether a pop sequence of length n=1629 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Backtrack with recursion in Θ(2^n)\nd) Sort both sequences then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA3739.",
        "target_text": "Question: Circular-array queue with capacity 3739: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Track count or keep one slot empty\nc) Require power-of-two capacity\nd) Require prime capacity\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK4.",
        "target_text": "Question: In a d-ary heap (d=4), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) It increases height linearly\nc) No effect whatsoever\nd) It makes the operation constant time\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.44.",
        "target_text": "Question: In separate chaining with load factor α=0.44, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(log n)\nc) Θ(α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS733287.",
        "target_text": "Question: BST with parent pointers (id=733287): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) Always climb to root then go right once\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Reverse postorder traversal entirely\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST213213.",
        "target_text": "Question: MST question id=213213: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) Prim requires the entire edge set to be sorted first\nc) MST is always unique in connected graphs\nd) MST minimizes number of edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN942231.",
        "target_text": "Question: Check anagrams for strings of length n=942231 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Sort both in Θ(n log n)\nc) Count character frequencies in Θ(n)\nd) Use a stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX6_32.",
        "target_text": "Question: Radix sort with d=6 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(b^d)\nc) Θ(d·(n + b))\nd) Θ(d·n·log b)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS2567279.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=2567279 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(1) expected\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Geometric resizing spreads copying cost over many operations. Variant A2.",
        "target_text": "Question: A dynamic array starts with capacity 2 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(1)\nb) Θ(m)\nc) Θ(√m)\nd) Θ(log m)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM52963.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=52963-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Binary search on index vs value gap\nc) Hash all present values then scan\nd) Scan linearly counting gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL70419.",
        "target_text": "Question: Check if a singly linked list of length n=70419 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Use a hash set of seen values\nc) Copy to array and two-pointer check\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS3.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 3 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Greedy left-to-right without memory\nb) Use BFS on substring graph\nc) Use two stacks for counts and fragments\nd) Sort segments then concatenate\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW6500_256.",
        "target_text": "Question: Sliding window maximum for array length n=6500 and window w=256. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(w log n)\nc) Θ(nw)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH1868354.",
        "target_text": "Question: Build a binary heap from n=1868354 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(n^2)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.27.",
        "target_text": "Question: In separate chaining with load factor α=0.27, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA417786.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=417786 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) Sort node labels then binary search\nc) Euler tour + RMQ yields O(1) per query\nd) DFS from root each time\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF6034.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=6034 can handle which case while detecting it?\nChoices:\na) Equal runtime on all graphs\nb) Only acyclic graphs\nc) Negative edge weights and negative cycles\nd) Faster runtime on sparse nonnegative graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS16667.",
        "target_text": "Question: In KMP, what does LPS[16667] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Number of mismatches up to i\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Total distinct prefixes up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX9_2.",
        "target_text": "Question: Radix sort with d=9 digits and base b=2 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·n·log b)\nb) Θ(b^d)\nc) Θ(d·(n + b))\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX45604600.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈45604600. Why?\nChoices:\na) Sorts the array first\nb) Doubles the bound to bracket, then binary search\nc) Requires the array to be cyclic\nd) Uses hashing to index unknown segments\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M7_5_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/5) + n^0 for n being a power of 5.\nChoices:\na) Θ(n^0 log n)\nb) Θ(n^1.2091 log n)\nc) Θ(n^1.2091)\nd) Θ(n^0)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R922391.",
        "target_text": "Question: Rotate an array right by r=922391 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Heapify then extract\nc) Selection sort then shift\nd) Single-step rotate repeated r times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL73980.",
        "target_text": "Question: Check if a singly linked list of length n=73980 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Find middle, reverse second half, compare\nc) Use a hash set of seen values\nd) Sort and compare with original\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS7.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 7 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Use two stacks for counts and fragments\nc) Greedy left-to-right without memory\nd) Sort segments then concatenate\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ932901.",
        "target_text": "Question: Schedule 932901 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Stack\nc) Unordered array\nd) Circular queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH6369659.",
        "target_text": "Question: Build a binary heap from n=6369659 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.95.",
        "target_text": "Question: In separate chaining with load factor α=0.95, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(1/α)\nd) Θ(α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS783647.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=783647-th smallest?\nChoices:\na) Θ(k)\nb) Θ(log n)\nc) Θ(1)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D406210.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 406210]. Why?\nChoices:\na) Distinct weights are required\nb) Nonnegative weights ensure greedy optimality\nc) Graph must be undirected\nd) Self-loops must be absent\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP40206.",
        "target_text": "Question: KMP matches a pattern of length m=40206 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) Suffix array\nc) Rolling hash table\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST145193.",
        "target_text": "Question: Stability (id=145193): which pairing is correct?\nChoices:\na) Merge sort (stable), Heap sort (unstable)\nb) Counting sort (unstable)\nc) Heap sort (stable), Merge sort (unstable)\nd) Quick sort (stable), Selection sort (unstable)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI0_3458.",
        "target_text": "Question: Binary search over half-open range [0, 3458)—which invariant prevents infinite loops?\nChoices:\na) Increase both lo and hi to skip duplicates\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Keep inclusive bounds on both ends\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_6_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^4, f3=n^4 (log n)^6, f4=n^6?\nChoices:\na) Θ(n^6)\nb) Θ(n^4)\nc) Θ((log n)^6)\nd) Θ(n^4 (log n)^6)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM98560.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=98560-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Hash all present values then scan\nc) Use a heap of differences\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL91983.",
        "target_text": "Question: Check if a singly linked list of length n=91983 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Find middle, reverse second half, compare\nc) Sort and compare with original\nd) Copy to array and two-pointer check\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS8.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 8 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Sort segments then concatenate\nc) Greedy left-to-right without memory\nd) Use BFS on substring graph\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS4140.",
        "target_text": "Question: A queue via two stacks handles a burst of 4140 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) Both Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM774_331143.",
        "target_text": "Question: Merge k=774 sorted streams totaling N=331143 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log k)\nc) Θ(N log N)\nd) Θ(N + k^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS414409.",
        "target_text": "Question: BST with parent pointers (id=414409): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Reverse postorder traversal entirely\nc) Always climb to root then go right once\nd) Use level-order and pick next node\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC634666.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=634666 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(V log V)\nc) Θ(VE)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB1648.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=1648. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Suffix automaton or suffix array + LCP\nc) Binary heap of substrings\nd) BST over all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS340727.",
        "target_text": "Question: Keys are integers in range [0..340727]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Counting sort\nc) Shell sort\nd) Quick sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI39_5030.",
        "target_text": "Question: Binary search over half-open range [39, 5030)—which invariant prevents infinite loops?\nChoices:\na) Increase both lo and hi to skip duplicates\nb) Keep inclusive bounds on both ends\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T2_6_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^2, f3=n^2 (log n)^6, f4=n^5?\nChoices:\na) Θ(n^5)\nb) Θ(n^2 (log n)^6)\nc) Θ((log n)^6)\nd) Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S17893_355.",
        "target_text": "Question: Array length n=17893, find max-sum subarray of fixed length k=355. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(k log n)\nc) Θ(n log n)\nd) Θ(nk)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL47706.",
        "target_text": "Question: Check if a singly linked list of length n=47706 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Use a hash set of seen values\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE59252.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=59252. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Max-heap\nc) Binary search tree\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B619486.",
        "target_text": "Question: Run BFS on an unweighted graph with 619486 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Nondecreasing distance from source\nc) Minimum memory footprint\nd) Lexicographic vertex order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL966_449774.",
        "target_text": "Question: Find the k=966-th largest element among n=449774 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Binary search on value domain\nc) Build max-heap and extract k times\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH8192.",
        "target_text": "Question: In open addressing with double hashing over table size m=8192, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) Choose m even and g(k) even\nc) Use g(k)=0 for some keys\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA415278.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=415278 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) Naive parent climbing O(n) per query\nc) Sort node labels then binary search\nd) DFS from root each time\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS380825_1628862.",
        "target_text": "Question: A directed graph with V=380825, E≈1628862. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) Only if the graph is connected\nc) Only if edges are unweighted\nd) When all vertices have outdegree ≥ 1\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP49222.",
        "target_text": "Question: KMP matches a pattern of length m=49222 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) LPS (failure) function\nc) Suffix array\nd) Rolling hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS604064.",
        "target_text": "Question: Keys are integers in range [0..604064]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Shell sort\nc) Heap sort\nd) Quick sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS7668245.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=7668245 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(1) expected\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M3_6_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/6) + n^3 for n being a power of 6.\nChoices:\na) Θ(n^0.6131)\nb) Θ(n^0.6131 log n)\nc) Θ(n^3)\nd) Θ(n^3 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P804017.",
        "target_text": "Question: Answer 804017 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Recompute sums per query in Θ(n)\nc) Sort once and binary search per query\nd) Use a stack to store partial sums\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL17599.",
        "target_text": "Question: Check if a singly linked list of length n=17599 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Use a hash set of seen values\nc) Copy to array and two-pointer check\nd) Sort and compare with original\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE25181.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=25181. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Binary search tree\nc) Max-heap\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ201498.",
        "target_text": "Question: Schedule 201498 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Binary heap\nc) Circular queue\nd) Stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK3.",
        "target_text": "Question: In a d-ary heap (d=3), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It increases height linearly\nb) No effect whatsoever\nc) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nd) It makes the operation constant time\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS763901.",
        "target_text": "Question: BST with parent pointers (id=763901): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Always climb to root then go right once\nd) Use level-order and pick next node\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST728836.",
        "target_text": "Question: MST question id=728836: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) Prim requires the entire edge set to be sorted first\nc) MST minimizes number of edges\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN548441.",
        "target_text": "Question: Check anagrams for strings of length n=548441 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) Use a stack\nc) Count character frequencies in Θ(n)\nd) DFS on character graph\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB75516695.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=75516695 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n^2)\nc) Ω(n)\nd) Ω(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI28_1743.",
        "target_text": "Question: Binary search over half-open range [28, 1743)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Increase both lo and hi to skip duplicates\nc) Keep inclusive bounds on both ends\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T4_4_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^4, f3=n^4 (log n)^4, f4=n^10?\nChoices:\na) Θ(n^4)\nb) Θ((log n)^4)\nc) Θ(n^4 (log n)^4)\nd) Θ(n^10)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP16595_1463.",
        "target_text": "Question: Sorted array length n=16595. Decide if any pair sums to 1463. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Divide and conquer in Θ(n log n)\nc) Hash set in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN240823.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 240823, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Reverse list then delete head\nc) Copy next node’s data here and bypass next\nd) Impossible under any model\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE13406.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=13406. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Decreasing stack\nc) Queue\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS8256.",
        "target_text": "Question: A queue via two stacks handles a burst of 8256 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM640_236567.",
        "target_text": "Question: Merge k=640 sorted streams totaling N=236567 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(N + k^2)\nc) Θ(N log k)\nd) Θ(k log N)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH65536.",
        "target_text": "Question: In open addressing with double hashing over table size m=65536, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) g(k) coprime with m for all keys\nc) Make both hash functions identical\nd) Choose m even and g(k) even\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR177610.",
        "target_text": "Question: In a BST with distinct keys (id=177610), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Level-order\nc) Inorder\nd) Postorder\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC546207.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=546207 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V log V)\nb) Θ(V+E)\nc) Θ(E log V)\nd) Θ(VE)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Character-by-character descent. Variant TRIE128.",
        "target_text": "Question: Search a trie over alphabet size σ=128 for a key of length m. Time complexity?\nChoices:\na) Θ(m)\nb) Θ(1) average for all m\nc) Θ(log n)\nd) Θ(m log σ)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS353334.",
        "target_text": "Question: Keys are integers in range [0..353334]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Heap sort\nc) Counting sort\nd) Quick sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI20_3027.",
        "target_text": "Question: Binary search over half-open range [20, 3027)—which invariant prevents infinite loops?\nChoices:\na) Increase both lo and hi to skip duplicates\nb) Keep inclusive bounds on both ends\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M6_6_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/6) + n^0 for n being a power of 6.\nChoices:\na) Θ(n^0 log n)\nb) Θ(n^1.0 log n)\nc) Θ(n^1.0)\nd) Θ(n^0)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P356525.",
        "target_text": "Question: Answer 356525 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Use a stack to store partial sums\nb) Sort once and binary search per query\nc) Build prefix-sum array; O(1) per query\nd) Recompute sums per query in Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL95665.",
        "target_text": "Question: Check if a singly linked list of length n=95665 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Sort and compare with original\nc) Find middle, reverse second half, compare\nd) Use a hash set of seen values\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE64879.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=64879. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Max-heap\nc) Binary search tree\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ602436.",
        "target_text": "Question: For 602436 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Binary heap\nc) Stack\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM990_317688.",
        "target_text": "Question: Merge k=990 sorted streams totaling N=317688 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(k log N)\nc) Θ(N + k^2)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.98.",
        "target_text": "Question: In separate chaining with load factor α=0.98, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H566708111.",
        "target_text": "Question: For a balanced BST with n=566708111 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(log log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC890026.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=890026 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(VE)\nc) Θ(V log V)\nd) Θ(E log V)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN947704.",
        "target_text": "Question: Check anagrams for strings of length n=947704 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) DFS on character graph\nc) Count character frequencies in Θ(n)\nd) Use a stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS267091.",
        "target_text": "Question: Heapsort stability check id=267091: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort is not stable by default\nd) Heapsort is stable\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX80727460.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈80727460. Why?\nChoices:\na) Requires the array to be cyclic\nb) Uses hashing to index unknown segments\nc) Doubles the bound to bracket, then binary search\nd) Sorts the array first\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M9_6_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/6) + n^4 for n being a power of 6.\nChoices:\na) Θ(n^4 log n)\nb) Θ(n^4)\nc) Θ(n^1.2263 log n)\nd) Θ(n^1.2263)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM26676.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=26676-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Use a heap of differences\nc) Binary search on index vs value gap\nd) Scan linearly counting gaps\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN955503_643260.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=955503, B=643260. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Reverse one list then compare\nc) Hash addresses of first list\nd) Advance pointers; when one ends, jump to the other head\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP932.",
        "target_text": "Question: Verify whether a pop sequence of length n=932 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Sort both sequences then compare\nc) Use a queue to mirror the stack\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA7318.",
        "target_text": "Question: Circular-array queue with capacity 7318: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Require prime capacity\nc) Head==Tail means full\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH1828131.",
        "target_text": "Question: Build a binary heap from n=1828131 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH8192.",
        "target_text": "Question: In open addressing with double hashing over table size m=8192, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Use g(k)=0 for some keys\nc) Make both hash functions identical\nd) Choose m even and g(k) even\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR652652.",
        "target_text": "Question: In a BST with distinct keys (id=652652), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Inorder\nc) Preorder\nd) Level-order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST592125.",
        "target_text": "Question: MST question id=592125: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) Prim requires the entire edge set to be sorted first\nc) MST minimizes number of edges\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z54778.",
        "target_text": "Question: For string S (id=54778), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Length of the longest prefix starting at i matching S[0..]\nc) Number of distinct substrings up to i\nd) Next index of S[i]\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX9_256.",
        "target_text": "Question: Radix sort with d=9 digits and base b=256 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(d·n·log b)\nc) Θ(d·(n + b))\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI35_1693.",
        "target_text": "Question: Binary search over half-open range [35, 1693)—which invariant prevents infinite loops?\nChoices:\na) Increase both lo and hi to skip duplicates\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Keep inclusive bounds on both ends\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M5_4_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/4) + n^0 for n being a power of 4.\nChoices:\na) Θ(n^0)\nb) Θ(n^1.161 log n)\nc) Θ(n^1.161)\nd) Θ(n^0 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R962132.",
        "target_text": "Question: Rotate an array right by r=962132 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Three-reversal method\nc) Selection sort then shift\nd) Single-step rotate repeated r times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK64_9263.",
        "target_text": "Question: Merge k=64 sorted linked lists totaling n=9263 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log n)\nc) Θ(n log k)\nd) Θ(k n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS5.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 5 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Use two stacks for counts and fragments\nc) Greedy left-to-right without memory\nd) Use BFS on substring graph\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS9196.",
        "target_text": "Question: A queue via two stacks handles a burst of 9196 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM482_73167.",
        "target_text": "Question: Merge k=482 sorted streams totaling N=73167 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(k log N)\nc) Θ(N + k^2)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.22.",
        "target_text": "Question: In separate chaining with load factor α=0.22, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS247656.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=247656-th smallest?\nChoices:\na) Θ(k)\nb) Θ(log n)\nc) Θ(1)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC656154.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=656154 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V log V)\nb) Θ(V+E)\nc) Θ(E log V)\nd) Θ(VE)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN269345.",
        "target_text": "Question: Check anagrams for strings of length n=269345 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Count character frequencies in Θ(n)\nc) Use a stack\nd) Sort both in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX7_8.",
        "target_text": "Question: Radix sort with d=7 digits and base b=8 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·n·log b)\nb) Θ(b^d)\nc) Θ(n log n)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS3854548.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=3854548 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(1) expected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M2_4_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/4) + n^2 for n being a power of 4.\nChoices:\na) Θ(n^0.5)\nb) Θ(n^0.5 log n)\nc) Θ(n^2 log n)\nd) Θ(n^2)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM90348.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=90348-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Hash all present values then scan\nc) Binary search on index vs value gap\nd) Scan linearly counting gaps\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL36230.",
        "target_text": "Question: Check if a singly linked list of length n=36230 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Copy to array and two-pointer check\nc) Sort and compare with original\nd) Use a hash set of seen values\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS191.",
        "target_text": "Question: Compute stock span for 191 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Hash table\nc) Priority queue\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B550826.",
        "target_text": "Question: Run BFS on an unweighted graph with 550826 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) Nondecreasing distance from source\nc) Minimum memory footprint\nd) All simple paths before all edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK7.",
        "target_text": "Question: In a d-ary heap (d=7), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It makes the operation constant time\nb) It increases height linearly\nc) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nd) No effect whatsoever\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.5.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.5?\nChoices:\na) To maintain key stability\nb) To reduce memory usage to exact size\nc) To keep expected O(1) operations\nd) To sort keys implicitly\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR316454.",
        "target_text": "Question: In a BST with distinct keys (id=316454), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Level-order\nc) Preorder\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST868581.",
        "target_text": "Question: MST question id=868581: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) MST minimizes number of edges\nd) Prim requires the entire edge set to be sorted first\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS18884.",
        "target_text": "Question: In KMP, what does LPS[18884] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Total distinct prefixes up to i\nc) Index of next occurrence\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS52672.",
        "target_text": "Question: Keys are integers in range [0..52672]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Shell sort\nc) Heap sort\nd) Quick sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS8715423.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=8715423 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(n log n)\nd) Θ(1) expected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T2_6_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^2, f3=n^2 (log n)^6, f4=n^9?\nChoices:\na) Θ((log n)^6)\nb) Θ(n^2 (log n)^6)\nc) Θ(n^9)\nd) Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP3230_4571.",
        "target_text": "Question: Sorted array length n=3230. Decide if any pair sums to 4571. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Brute force in Θ(n^2)\nc) Two-pointer scan in Θ(n)\nd) Hash set in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR8.",
        "target_text": "Question: Reverse a singly linked list in groups of k=8 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(k log n)\nc) Θ(n log k)\nd) Θ(nk)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1052.",
        "target_text": "Question: Verify whether a pop sequence of length n=1052 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Simulate using one stack in Θ(n)\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ467458.",
        "target_text": "Question: Schedule 467458 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Binary heap\nc) Stack\nd) Circular queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK3.",
        "target_text": "Question: In a d-ary heap (d=3), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) No effect whatsoever\nb) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nc) It makes the operation constant time\nd) It increases height linearly\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.66.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.66?\nChoices:\na) To reduce memory usage to exact size\nb) To sort keys implicitly\nc) To keep expected O(1) operations\nd) To maintain key stability\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS852754.",
        "target_text": "Question: BST with parent pointers (id=852754): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Reverse postorder traversal entirely\nc) Use level-order and pick next node\nd) Always climb to root then go right once\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS4554_27582.",
        "target_text": "Question: A directed graph with V=4554, E≈27582. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if the graph is connected\nc) Only if edges are unweighted\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN454651.",
        "target_text": "Question: Check anagrams for strings of length n=454651 over fixed alphabet. Optimal approach?\nChoices:\na) Use a stack\nb) DFS on character graph\nc) Count character frequencies in Θ(n)\nd) Sort both in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS446671.",
        "target_text": "Question: Heapsort stability check id=446671: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort is not stable by default\nc) Heapsort always beats merge sort\nd) Heapsort needs extra Θ(n) memory\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS6410206.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=6410206 typically runs in?\nChoices:\na) Θ(n) average\nb) Θ(log n) average\nc) O(1) worst-case\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T2_6_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^2, f3=n^2 (log n)^6, f4=n^8?\nChoices:\na) Θ(n^2 (log n)^6)\nb) Θ(n^8)\nc) Θ((log n)^6)\nd) Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S294_72.",
        "target_text": "Question: Array length n=294, find max-sum subarray of fixed length k=72. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(k log n)\nc) Θ(n log n)\nd) Θ(nk)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN136060.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 136060, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Copy next node’s data here and bypass next\nc) Reverse list then delete head\nd) Traverse from head to find predecessor\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE68001.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=68001. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Queue\nc) Max-heap\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA1309.",
        "target_text": "Question: Circular-array queue with capacity 1309: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Require prime capacity\nc) Track count or keep one slot empty\nd) Head==Tail means full\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH1048685.",
        "target_text": "Question: Build a binary heap from n=1048685 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF6571539_0.67.",
        "target_text": "Question: Chaining hash table with n=6571539 keys at load factor α=0.67. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(α log α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H421208763.",
        "target_text": "Question: For a balanced BST with n=421208763 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(√n)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D519744.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 519744]. Why?\nChoices:\na) Distinct weights are required\nb) Self-loops must be absent\nc) Graph must be undirected\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS32879.",
        "target_text": "Question: In KMP, what does LPS[32879] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Index of next occurrence\nd) Number of mismatches up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS375414.",
        "target_text": "Question: Keys are integers in range [0..375414]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Heap sort\nc) Counting sort\nd) Shell sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI32_2668.",
        "target_text": "Question: Binary search over half-open range [32, 2668)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Keep inclusive bounds on both ends\nc) Increase both lo and hi to skip duplicates\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M9_2_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/2) + n^1 for n being a power of 2.\nChoices:\na) Θ(n^3.1699 log n)\nb) Θ(n^1 log n)\nc) Θ(n^3.1699)\nd) Θ(n^1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S12433_150.",
        "target_text": "Question: Array length n=12433, find max-sum subarray of fixed length k=150. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n)\nc) Θ(k log n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK50_7970.",
        "target_text": "Question: Merge k=50 sorted linked lists totaling n=7970 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n + k^2)\nc) Θ(n log k)\nd) Θ(k n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS4397.",
        "target_text": "Question: Compute stock span for 4397 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Monotonic stack\nc) Fenwick tree\nd) Priority queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA3006.",
        "target_text": "Question: Circular-array queue with capacity 3006: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Head==Tail means full\nc) Track count or keep one slot empty\nd) Require prime capacity\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA13_95178921.",
        "target_text": "Question: In a d-ary heap with d=13 and n=95178921 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log_13 n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.48.",
        "target_text": "Question: In separate chaining with load factor α=1.48, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA269501.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=269501 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Euler tour + RMQ yields O(1) per query\nc) Naive parent climbing O(n) per query\nd) DFS from root each time\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP552595.",
        "target_text": "Question: Test bipartiteness (id=552595) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Sort vertices and deduplicate\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Compute an MST then inspect edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN96485.",
        "target_text": "Question: Check anagrams for strings of length n=96485 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) Use a stack\nc) DFS on character graph\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST286205.",
        "target_text": "Question: Stability (id=286205): which pairing is correct?\nChoices:\na) Heap sort (stable), Merge sort (unstable)\nb) Counting sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS6756150.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=6756150 typically runs in?\nChoices:\na) O(1) worst-case\nb) Θ(n) average\nc) Θ(log n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M9_3_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/3) + n^0 for n being a power of 3.\nChoices:\na) Θ(n^0)\nb) Θ(n^2.0)\nc) Θ(n^2.0 log n)\nd) Θ(n^0 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP8919_4930.",
        "target_text": "Question: Sorted array length n=8919. Decide if any pair sums to 4930. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Divide and conquer in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Hash set in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK90_8961.",
        "target_text": "Question: Merge k=90 sorted linked lists totaling n=8961 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log n)\nc) Θ(n log k)\nd) Θ(k n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE77425.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=77425. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Binary search tree\nc) Queue\nd) Max-heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW10167_838.",
        "target_text": "Question: Sliding window maximum for array length n=10167 and window w=838. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(w log n)\nc) Θ(nw)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC37714471.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=37714471?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.42.",
        "target_text": "Question: In separate chaining with load factor α=1.42, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR646737.",
        "target_text": "Question: In a BST with distinct keys (id=646737), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Postorder\nc) Level-order\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR577378.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=577378 edges. What algorithmic idea achieves linear time?\nChoices:\na) Tarjan’s low-link DFS\nb) Kruskal’s algorithm\nc) Topological sorting\nd) Dijkstra’s algorithm\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN120607.",
        "target_text": "Question: Check anagrams for strings of length n=120607 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Use a stack\nc) Count character frequencies in Θ(n)\nd) Sort both in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX8_8.",
        "target_text": "Question: Radix sort with d=8 digits and base b=8 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(n log n)\nc) Θ(b^d)\nd) Θ(d·n·log b)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS2568264.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=2568264 typically runs in?\nChoices:\na) Θ(log n) average\nb) O(1) worst-case\nc) O(log log n) average\nd) Θ(n) average\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M7_2_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/2) + n^2 for n being a power of 2.\nChoices:\na) Θ(n^2.8074 log n)\nb) Θ(n^2)\nc) Θ(n^2.8074)\nd) Θ(n^2 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R821066.",
        "target_text": "Question: Rotate an array right by r=821066 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Heapify then extract\nc) Three-reversal method\nd) Selection sort then shift\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN379583.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 379583, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Reverse list then delete head\nc) Copy next node’s data here and bypass next\nd) Impossible under any model\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS2.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 2 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Use two stacks for counts and fragments\nc) Use BFS on substring graph\nd) Greedy left-to-right without memory\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS6427.",
        "target_text": "Question: A queue via two stacks handles a burst of 6427 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) Both Θ(log n)\nc) ENQUEUE and DEQUEUE both amortized Θ(1)\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH4727047.",
        "target_text": "Question: Build a binary heap from n=4727047 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.8.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.8?\nChoices:\na) To keep expected O(1) operations\nb) To reduce memory usage to exact size\nc) To maintain key stability\nd) To sort keys implicitly\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR721149.",
        "target_text": "Question: In a BST with distinct keys (id=721149), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Inorder\nc) Level-order\nd) Preorder\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS85336_781366.",
        "target_text": "Question: A directed graph with V=85336, E≈781366. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When it is a DAG (no directed cycles)\nc) When all vertices have outdegree ≥ 1\nd) Only if edges are unweighted\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z690288.",
        "target_text": "Question: For string S (id=690288), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Number of mismatches at i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of distinct substrings up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS776917.",
        "target_text": "Question: Keys are integers in range [0..776917]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Heap sort\nc) Shell sort\nd) Quick sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS50454.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=50454 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(n log n)\nd) Θ(1) expected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T5_5_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^5, f3=n^5 (log n)^5, f4=n^10?\nChoices:\na) Θ(n^10)\nb) Θ((log n)^5)\nc) Θ(n^5)\nd) Θ(n^5 (log n)^5)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM302746.",
        "target_text": "Question: Find a majority element in an array of length n=302746 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Divide-and-conquer merges\nc) Binary search on value domain\nd) Counting sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK87_9512.",
        "target_text": "Question: Merge k=87 sorted linked lists totaling n=9512 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log k)\nc) Θ(k n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP816.",
        "target_text": "Question: Verify whether a pop sequence of length n=816 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Backtrack with recursion in Θ(2^n)\nd) Sort both sequences then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ429155.",
        "target_text": "Question: For 429155 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Deque\nc) Stack\nd) Binary heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC92431531.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=92431531?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH1024.",
        "target_text": "Question: In open addressing with double hashing over table size m=1024, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) g(k) coprime with m for all keys\nc) Choose m even and g(k) even\nd) Make both hash functions identical\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA111258.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=111258 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Euler tour + RMQ yields O(1) per query\nc) DFS from root each time\nd) Naive parent climbing O(n) per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D215170.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 215170]. Why?\nChoices:\na) Graph must be undirected\nb) Self-loops must be absent\nc) Nonnegative weights ensure greedy optimality\nd) Distinct weights are required\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z47702.",
        "target_text": "Question: For string S (id=47702), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Next index of S[i]\nc) Number of distinct substrings up to i\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS584.",
        "target_text": "Question: Array is nearly sorted with at most 584 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Radix sort\nc) Insertion sort\nd) Heap sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS188176.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=188176 typically runs in?\nChoices:\na) O(log log n) average\nb) O(1) worst-case\nc) Θ(log n) average\nd) Θ(n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M2_6_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/6) + n^3 for n being a power of 6.\nChoices:\na) Θ(n^3 log n)\nb) Θ(n^0.3869 log n)\nc) Θ(n^3)\nd) Θ(n^0.3869)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P502690.",
        "target_text": "Question: Answer 502690 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Use a stack to store partial sums\nb) Build prefix-sum array; O(1) per query\nc) Sort once and binary search per query\nd) Recompute sums per query in Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR8.",
        "target_text": "Question: Reverse a singly linked list in groups of k=8 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(n log k)\nd) Θ(k log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS4.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 4 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Use two stacks for counts and fragments\nc) Greedy left-to-right without memory\nd) Use BFS on substring graph\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW424_202.",
        "target_text": "Question: Sliding window maximum for array length n=424 and window w=202. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(nw)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL695_337561.",
        "target_text": "Question: Find the k=695-th largest element among n=337561 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Deterministic selection (median-of-medians)\nc) Binary search on value domain\nd) Build max-heap and extract k times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH8192.",
        "target_text": "Question: In open addressing with double hashing over table size m=8192, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) g(k) coprime with m for all keys\nc) Make both hash functions identical\nd) Choose m even and g(k) even\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR422795.",
        "target_text": "Question: In a BST with distinct keys (id=422795), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Postorder\nc) Preorder\nd) Level-order\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP48516.",
        "target_text": "Question: Test bipartiteness (id=48516) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Compute an MST then inspect edges\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Sort vertices and deduplicate\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z801669.",
        "target_text": "Question: For string S (id=801669), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Length of the longest prefix starting at i matching S[0..]\nc) Number of distinct substrings up to i\nd) Next index of S[i]\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS896.",
        "target_text": "Question: Array is nearly sorted with at most 896 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Shell sort with fixed gaps\nc) Radix sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU6397395.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=6397395. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Linear scan with early exit\nc) Binary search with left/right bias\nd) Hashing with chaining\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_4_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^1, f3=n^1 (log n)^4, f4=n^6?\nChoices:\na) Θ(n^1 (log n)^4)\nb) Θ(n^6)\nc) Θ(n^1)\nd) Θ((log n)^4)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM28500.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=28500-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Scan linearly counting gaps\nc) Binary search on index vs value gap\nd) Use a heap of differences\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL17399.",
        "target_text": "Question: Check if a singly linked list of length n=17399 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Sort and compare with original\nc) Use a hash set of seen values\nd) Copy to array and two-pointer check\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS3866.",
        "target_text": "Question: Compute stock span for 3866 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Hash table\nc) Monotonic stack\nd) Fenwick tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW7373_860.",
        "target_text": "Question: Sliding window maximum for array length n=7373 and window w=860. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(w log n)\nc) Θ(n)\nd) Θ(nw)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL755_829705.",
        "target_text": "Question: Find the k=755-th largest element among n=829705 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Binary search on value domain\nc) Deterministic selection (median-of-medians)\nd) Build max-heap and extract k times\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.7.",
        "target_text": "Question: In separate chaining with load factor α=0.7, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS234315.",
        "target_text": "Question: BST with parent pointers (id=234315): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Always climb to root then go right once\nc) Use level-order and pick next node\nd) Reverse postorder traversal entirely\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D599853.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 599853]. Why?\nChoices:\na) Graph must be undirected\nb) Nonnegative weights ensure greedy optimality\nc) Distinct weights are required\nd) Self-loops must be absent\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS44648.",
        "target_text": "Question: In KMP, what does LPS[44648] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Total distinct prefixes up to i\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Number of mismatches up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS336.",
        "target_text": "Question: Array is nearly sorted with at most 336 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Heap sort\nc) Insertion sort\nd) Radix sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU4229974.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=4229974. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Binary search with left/right bias\nc) Hashing with chaining\nd) Linear scan with early exit\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_1_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^1, f3=n^1 (log n)^1, f4=n^5?\nChoices:\na) Θ(n^1 (log n)^1)\nb) Θ(n^5)\nc) Θ(n^1)\nd) Θ((log n)^1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM339153.",
        "target_text": "Question: Find a majority element in an array of length n=339153 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Divide-and-conquer merges\nc) Boyer–Moore voting with verification\nd) Counting sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN461652_491671.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=461652, B=491671. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Hash addresses of first list\nc) Reverse one list then compare\nd) Advance pointers; when one ends, jump to the other head\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS6.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 6 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Use BFS on substring graph\nc) Greedy left-to-right without memory\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS9996.",
        "target_text": "Question: A queue via two stacks handles a burst of 9996 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) Both Θ(log n)\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM7_936.",
        "target_text": "Question: Merge k=7 sorted streams totaling N=936 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log k)\nc) Θ(N + k^2)\nd) Θ(N log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.85.",
        "target_text": "Question: In separate chaining with load factor α=0.85, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(1/α)\nd) Θ(α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR252080.",
        "target_text": "Question: In a BST with distinct keys (id=252080), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Postorder\nc) Level-order\nd) Preorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF77057.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=77057 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Only acyclic graphs\nc) Negative edge weights and negative cycles\nd) Equal runtime on all graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB94099.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=94099. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) Binary heap of substrings\nc) Queue of rolling hashes only\nd) BST over all substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB74398159.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=74398159 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n)\nc) Ω(log n)\nd) Ω(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS5462923.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=5462923 typically runs in?\nChoices:\na) Θ(n) average\nb) Θ(log n) average\nc) O(log log n) average\nd) O(1) worst-case\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T5_2_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^5, f3=n^5 (log n)^2, f4=n^9?\nChoices:\na) Θ((log n)^2)\nb) Θ(n^5)\nc) Θ(n^5 (log n)^2)\nd) Θ(n^9)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM24598.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=24598-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Scan linearly counting gaps\nc) Use a heap of differences\nd) Hash all present values then scan\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN708866.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 708866, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Impossible under any model\nc) Copy next node’s data here and bypass next\nd) Reverse list then delete head\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS3197.",
        "target_text": "Question: Compute stock span for 3197 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Monotonic stack\nc) Priority queue\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA6595.",
        "target_text": "Question: Circular-array queue with capacity 6595: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Require prime capacity\nc) Head==Tail means full\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC52483920.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=52483920?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(1)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH4096.",
        "target_text": "Question: In open addressing with double hashing over table size m=4096, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Make both hash functions identical\nc) Choose m even and g(k) even\nd) Use g(k)=0 for some keys\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR147596.",
        "target_text": "Question: In a BST with distinct keys (id=147596), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Preorder\nc) Inorder\nd) Level-order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF34447.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=34447 can handle which case while detecting it?\nChoices:\na) Negative edge weights and negative cycles\nb) Faster runtime on sparse nonnegative graphs\nc) Equal runtime on all graphs\nd) Only acyclic graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP32292.",
        "target_text": "Question: KMP matches a pattern of length m=32292 in linear time using which table?\nChoices:\na) Suffix array\nb) Z-array exclusively\nc) LPS (failure) function\nd) Rolling hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX7_1024.",
        "target_text": "Question: Radix sort with d=7 digits and base b=1024 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·(n + b))\nc) Θ(b^d)\nd) Θ(d·n·log b)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX84139809.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈84139809. Why?\nChoices:\na) Sorts the array first\nb) Doubles the bound to bracket, then binary search\nc) Uses hashing to index unknown segments\nd) Requires the array to be cyclic\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T4_3_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^4, f3=n^4 (log n)^3, f4=n^7?\nChoices:\na) Θ((log n)^3)\nb) Θ(n^4)\nc) Θ(n^7)\nd) Θ(n^4 (log n)^3)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S16453_393.",
        "target_text": "Question: Array length n=16453, find max-sum subarray of fixed length k=393. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL78095.",
        "target_text": "Question: Check if a singly linked list of length n=78095 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Sort and compare with original\nc) Use a hash set of seen values\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP888.",
        "target_text": "Question: Verify whether a pop sequence of length n=888 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Backtrack with recursion in Θ(2^n)\nc) Sort both sequences then compare\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA7397.",
        "target_text": "Question: Circular-array queue with capacity 7397: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require power-of-two capacity\nc) Head==Tail means full\nd) Require prime capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL879_744896.",
        "target_text": "Question: Find the k=879-th largest element among n=744896 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Deterministic selection (median-of-medians)\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH8192.",
        "target_text": "Question: In open addressing with double hashing over table size m=8192, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) Make both hash functions identical\nc) Choose m even and g(k) even\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA584502.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=584502 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) Euler tour + RMQ yields O(1) per query\nc) Sort node labels then binary search\nd) DFS from root each time\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D290672.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 290672]. Why?\nChoices:\na) Distinct weights are required\nb) Nonnegative weights ensure greedy optimality\nc) Graph must be undirected\nd) Self-loops must be absent\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z498070.",
        "target_text": "Question: For string S (id=498070), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Number of mismatches at i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Next index of S[i]\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB14665016.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=14665016 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n log n)\nc) Ω(log n)\nd) Ω(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI85_2716.",
        "target_text": "Question: Binary search over half-open range [85, 2716)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Increase both lo and hi to skip duplicates\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Keep inclusive bounds on both ends\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T5_4_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^5, f3=n^5 (log n)^4, f4=n^7?\nChoices:\na) Θ(n^7)\nb) Θ(n^5 (log n)^4)\nc) Θ((log n)^4)\nd) Θ(n^5)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM64346.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=64346-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Binary search on index vs value gap\nc) Hash all present values then scan\nd) Scan linearly counting gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN526108_471974.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=526108, B=471974. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Hash addresses of first list\nc) Reverse one list then compare\nd) Binary search on addresses\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE78150.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=78150. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Queue\nc) Max-heap\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ693186.",
        "target_text": "Question: For 693186 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Deque\nc) Queue\nd) Binary heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC62884991.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=62884991?\nChoices:\na) Θ(n)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.69.",
        "target_text": "Question: In separate chaining with load factor α=0.69, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(log n)\nc) Θ(1/α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H795492282.",
        "target_text": "Question: For a balanced BST with n=795492282 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR656401.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=656401 edges. What algorithmic idea achieves linear time?\nChoices:\na) Kruskal’s algorithm\nb) Dijkstra’s algorithm\nc) Tarjan’s low-link DFS\nd) Topological sorting\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN374780.",
        "target_text": "Question: Check anagrams for strings of length n=374780 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) Sort both in Θ(n log n)\nc) Use a stack\nd) DFS on character graph\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX10_1024.",
        "target_text": "Question: Radix sort with d=10 digits and base b=1024 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·n·log b)\nb) Θ(n log n)\nc) Θ(b^d)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS9049379.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=9049379 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(1) expected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M4_2_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/2) + n^0 for n being a power of 2.\nChoices:\na) Θ(n^2.0)\nb) Θ(n^0 log n)\nc) Θ(n^0)\nd) Θ(n^2.0 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P589301.",
        "target_text": "Question: Answer 589301 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Build prefix-sum array; O(1) per query\nc) Recompute sums per query in Θ(n)\nd) Use a stack to store partial sums\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK86_10701.",
        "target_text": "Question: Merge k=86 sorted linked lists totaling n=10701 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n log n)\nc) Θ(n + k^2)\nd) Θ(k n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1523.",
        "target_text": "Question: Verify whether a pop sequence of length n=1523 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS5727.",
        "target_text": "Question: A queue via two stacks handles a burst of 5727 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL429_108729.",
        "target_text": "Question: Find the k=429-th largest element among n=108729 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Heapsort then index\nc) Binary search on value domain\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH1024.",
        "target_text": "Question: In open addressing with double hashing over table size m=1024, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) Use g(k)=0 for some keys\nc) Make both hash functions identical\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H585649468.",
        "target_text": "Question: For a balanced BST with n=585649468 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP75350.",
        "target_text": "Question: Test bipartiteness (id=75350) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Compute an MST then inspect edges\nd) Sort vertices and deduplicate\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN927359.",
        "target_text": "Question: Check anagrams for strings of length n=927359 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) DFS on character graph\nc) Sort both in Θ(n log n)\nd) Use a stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST922479.",
        "target_text": "Question: Stability (id=922479): which pairing is correct?\nChoices:\na) Merge sort (stable), Heap sort (unstable)\nb) Quick sort (stable), Selection sort (unstable)\nc) Heap sort (stable), Merge sort (unstable)\nd) Counting sort (unstable)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS2372007.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=2372007 typically runs in?\nChoices:\na) O(log log n) average\nb) O(1) worst-case\nc) Θ(log n) average\nd) Θ(n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T3_4_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^3, f3=n^3 (log n)^4, f4=n^5?\nChoices:\na) Θ(n^3)\nb) Θ(n^3 (log n)^4)\nc) Θ(n^5)\nd) Θ((log n)^4)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM81879.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=81879-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Use a heap of differences\nc) Binary search on index vs value gap\nd) Scan linearly counting gaps\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK54_8110.",
        "target_text": "Question: Merge k=54 sorted linked lists totaling n=8110 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(k n)\nc) Θ(n log n)\nd) Θ(n + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS3433.",
        "target_text": "Question: Compute stock span for 3433 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Monotonic stack\nc) Priority queue\nd) Fenwick tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B162463.",
        "target_text": "Question: Run BFS on an unweighted graph with 162463 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Nondecreasing distance from source\nc) Minimum memory footprint\nd) Lexicographic vertex order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM244_32400.",
        "target_text": "Question: Merge k=244 sorted streams totaling N=32400 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log k)\nc) Θ(N log N)\nd) Θ(N + k^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Adversarial patterns are neutralized by random choice. Variant UH10000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=10000 slots yields what benefit?\nChoices:\na) Expected constant-time operations against adversaries\nb) Zero collisions guaranteed\nc) Cryptographic security by default\nd) Eliminates need for resizing\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS913041.",
        "target_text": "Question: BST with parent pointers (id=913041): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) Always climb to root then go right once\nc) Reverse postorder traversal entirely\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP788896.",
        "target_text": "Question: Test bipartiteness (id=788896) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Compute an MST then inspect edges\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Check all degrees even\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z64089.",
        "target_text": "Question: For string S (id=64089), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Number of distinct substrings up to i\nc) Number of mismatches at i\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST754112.",
        "target_text": "Question: Stability (id=754112): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Quick sort (stable), Selection sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI57_3751.",
        "target_text": "Question: Binary search over half-open range [57, 3751)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Increase both lo and hi to skip duplicates\nd) Keep inclusive bounds on both ends\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M7_6_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/6) + n^0 for n being a power of 6.\nChoices:\na) Θ(n^0)\nb) Θ(n^1.086)\nc) Θ(n^0 log n)\nd) Θ(n^1.086 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R517506.",
        "target_text": "Question: Rotate an array right by r=517506 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Single-step rotate repeated r times\nc) Selection sort then shift\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN254027.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 254027, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Reverse list then delete head\nc) Traverse from head to find predecessor\nd) Impossible under any model\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE62316.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=62316. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Decreasing stack\nc) Queue\nd) Max-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW4672_962.",
        "target_text": "Question: Sliding window maximum for array length n=4672 and window w=962. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(w log n)\nd) Θ(nw)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM601_79705.",
        "target_text": "Question: Merge k=601 sorted streams totaling N=79705 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(N log N)\nc) Θ(N + k^2)\nd) Θ(k log N)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.81.",
        "target_text": "Question: In separate chaining with load factor α=0.81, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(α)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR879327.",
        "target_text": "Question: In a BST with distinct keys (id=879327), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Preorder\nc) Inorder\nd) Level-order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Repeated edge relaxation tolerates negatives. Variant BF45701.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=45701 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Negative edge weights and negative cycles\nc) Only acyclic graphs\nd) Equal runtime on all graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN184859.",
        "target_text": "Question: Check anagrams for strings of length n=184859 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Sort both in Θ(n log n)\nc) Count character frequencies in Θ(n)\nd) Use a stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS705.",
        "target_text": "Question: Array is nearly sorted with at most 705 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Heap sort\nc) Shell sort with fixed gaps\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX790201654.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈790201654. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Doubles the bound to bracket, then binary search\nc) Sorts the array first\nd) Requires the array to be cyclic\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T5_2_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^5, f3=n^5 (log n)^2, f4=n^12?\nChoices:\na) Θ(n^5 (log n)^2)\nb) Θ(n^5)\nc) Θ((log n)^2)\nd) Θ(n^12)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R736489.",
        "target_text": "Question: Rotate an array right by r=736489 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Selection sort then shift\nc) Single-step rotate repeated r times\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR6.",
        "target_text": "Question: Reverse a singly linked list in groups of k=6 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n)\nd) Θ(n log k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS4864.",
        "target_text": "Question: Compute stock span for 4864 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Fenwick tree\nc) Hash table\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ319282.",
        "target_text": "Question: For 319282 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Queue\nc) Deque\nd) Binary heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL335_323070.",
        "target_text": "Question: Find the k=335-th largest element among n=323070 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Heapsort then index\nc) Binary search on value domain\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC1.46.",
        "target_text": "Question: In separate chaining with load factor α=1.46, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS255279.",
        "target_text": "Question: BST with parent pointers (id=255279): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Use level-order and pick next node\nc) Always climb to root then go right once\nd) Reverse postorder traversal entirely\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP672139.",
        "target_text": "Question: Test bipartiteness (id=672139) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Compute an MST then inspect edges\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Check all degrees even\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z60727.",
        "target_text": "Question: For string S (id=60727), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Next index of S[i]\nc) Number of mismatches at i\nd) Number of distinct substrings up to i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX9_8.",
        "target_text": "Question: Radix sort with d=9 digits and base b=8 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(n log n)\nc) Θ(d·(n + b))\nd) Θ(d·n·log b)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS4851686.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=4851686 typically runs in?\nChoices:\na) O(1) worst-case\nb) O(log log n) average\nc) Θ(n) average\nd) Θ(log n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M9_2_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/2) + n^4 for n being a power of 2.\nChoices:\na) Θ(n^3.1699)\nb) Θ(n^4)\nc) Θ(n^4 log n)\nd) Θ(n^3.1699 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM3009.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=3009-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Use a heap of differences\nc) Hash all present values then scan\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN738776_940853.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=738776, B=940853. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Reverse one list then compare\nc) Binary search on addresses\nd) Hash addresses of first list\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Operator handling via stacks preserves associativity rules. Variant IP2_3.",
        "target_text": "Question: Evaluate an infix expression with 2–3 precedence levels and parentheses. Linear-time method?\nChoices:\na) Sort tokens by precedence then scan\nb) Build a tree without any stack\nc) Convert to postfix and evaluate with a stack\nd) Left-to-right without stacks\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS1039.",
        "target_text": "Question: A queue via two stacks handles a burst of 1039 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) Both Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL855_362276.",
        "target_text": "Question: Find the k=855-th largest element among n=362276 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Heapsort then index\nc) Binary search on value domain\nd) Build max-heap and extract k times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.54.",
        "target_text": "Question: In separate chaining with load factor α=0.54, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS879528.",
        "target_text": "Question: BST with parent pointers (id=879528): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) Use level-order and pick next node\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Reverse postorder traversal entirely\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR860793.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=860793 edges. What algorithmic idea achieves linear time?\nChoices:\na) Tarjan’s low-link DFS\nb) Kruskal’s algorithm\nc) Topological sorting\nd) Dijkstra’s algorithm\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB6710.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=6710. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) BST over all substrings\nc) Suffix automaton or suffix array + LCP\nd) Queue of rolling hashes only\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS434241.",
        "target_text": "Question: Keys are integers in range [0..434241]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Quick sort\nc) Heap sort\nd) Shell sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Geometric level distribution mirrors balanced trees. Variant SL0.25.",
        "target_text": "Question: Skip list with level promotion probability p=0.25: expected complexity of search/insert/delete?\nChoices:\na) Θ(log n) for all three\nb) Θ(n) for all three\nc) Θ(1) for all three\nd) Θ(√n) for all three\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M6_5_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/5) + n^3 for n being a power of 5.\nChoices:\na) Θ(n^1.1133)\nb) Θ(n^3 log n)\nc) Θ(n^3)\nd) Θ(n^1.1133 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP2098_415.",
        "target_text": "Question: Sorted array length n=2098. Decide if any pair sums to 415. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Two-pointer scan in Θ(n)\nc) Divide and conquer in Θ(n log n)\nd) Hash set in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK84_15138.",
        "target_text": "Question: Merge k=84 sorted linked lists totaling n=15138 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log n)\nc) Θ(k n)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1789.",
        "target_text": "Question: Verify whether a pop sequence of length n=1789 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Backtrack with recursion in Θ(2^n)\nc) Sort both sequences then compare\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS6575.",
        "target_text": "Question: A queue via two stacks handles a burst of 6575 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) Both Θ(log n)\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC78483014.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=78483014?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.62.",
        "target_text": "Question: In separate chaining with load factor α=0.62, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS98037.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=98037-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(k)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST440998.",
        "target_text": "Question: MST question id=440998: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) MST minimizes number of edges\nc) MST is always unique in connected graphs\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z859950.",
        "target_text": "Question: For string S (id=859950), what does Z[i] measure?\nChoices:\na) Length of the longest prefix starting at i matching S[0..]\nb) Number of distinct substrings up to i\nc) Next index of S[i]\nd) Number of mismatches at i\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX2_32.",
        "target_text": "Question: Radix sort with d=2 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·n·log b)\nb) Θ(d·(n + b))\nc) Θ(b^d)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI5_1333.",
        "target_text": "Question: Binary search over half-open range [5, 1333)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Increase both lo and hi to skip duplicates\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M9_3_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/3) + n^3 for n being a power of 3.\nChoices:\na) Θ(n^3 log n)\nb) Θ(n^2.0)\nc) Θ(n^2.0 log n)\nd) Θ(n^3)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM781764.",
        "target_text": "Question: Find a majority element in an array of length n=781764 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Boyer–Moore voting with verification\nc) Counting sort\nd) Divide-and-conquer merges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN635771.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 635771, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Copy next node’s data here and bypass next\nc) Impossible under any model\nd) Traverse from head to find predecessor\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS4.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 4 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Greedy left-to-right without memory\nc) Use BFS on substring graph\nd) Sort segments then concatenate\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA2830.",
        "target_text": "Question: Circular-array queue with capacity 2830: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Require prime capacity\nc) Track count or keep one slot empty\nd) Head==Tail means full\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA8_67511570.",
        "target_text": "Question: In a d-ary heap with d=8 and n=67511570 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(log_8 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.6.",
        "target_text": "Question: In separate chaining with load factor α=0.6, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(α)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR338243.",
        "target_text": "Question: In a BST with distinct keys (id=338243), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Level-order\nc) Preorder\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST670682.",
        "target_text": "Question: MST question id=670682: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) MST is always unique in connected graphs\nc) Kruskal adds the smallest edge that doesn't create a cycle\nd) Prim requires the entire edge set to be sorted first\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS55244.",
        "target_text": "Question: In KMP, what does LPS[55244] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Number of mismatches up to i\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Index of next occurrence\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB88979499.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=88979499 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n)\nc) Ω(n log n)\nd) Ω(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX636890355.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈636890355. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Requires the array to be cyclic\nc) Sorts the array first\nd) Uses hashing to index unknown segments\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T2_6_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^2, f3=n^2 (log n)^6, f4=n^9?\nChoices:\na) Θ(n^2 (log n)^6)\nb) Θ(n^9)\nc) Θ(n^2)\nd) Θ((log n)^6)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P308220.",
        "target_text": "Question: Answer 308220 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Recompute sums per query in Θ(n)\nc) Sort once and binary search per query\nd) Use a stack to store partial sums\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C3.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 3× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(1) space\nb) Θ(log n) time, Θ(1) space\nc) Θ(1) time, Θ(1) space\nd) Θ(n) time, Θ(n) space\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE47205.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=47205. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Decreasing stack\nc) Queue\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS3939.",
        "target_text": "Question: A queue via two stacks handles a burst of 3939 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) Both Θ(log n)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH2927793.",
        "target_text": "Question: Build a binary heap from n=2927793 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.24.",
        "target_text": "Question: In separate chaining with load factor α=0.24, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(1/α)\nd) Θ(α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS168294.",
        "target_text": "Question: BST with parent pointers (id=168294): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Use level-order and pick next node\nc) Always climb to root then go right once\nd) Reverse postorder traversal entirely\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR270172.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=270172 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Kruskal’s algorithm\nc) Tarjan’s low-link DFS\nd) Topological sorting\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS51835.",
        "target_text": "Question: In KMP, what does LPS[51835] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Number of mismatches up to i\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Total distinct prefixes up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS416.",
        "target_text": "Question: Array is nearly sorted with at most 416 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Insertion sort\nc) Radix sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS3186849.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=3186849 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(1) expected\nc) Θ(log n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T4_3_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^4, f3=n^4 (log n)^3, f4=n^6?\nChoices:\na) Θ((log n)^3)\nb) Θ(n^4)\nc) Θ(n^4 (log n)^3)\nd) Θ(n^6)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP17329_4175.",
        "target_text": "Question: Sorted array length n=17329. Decide if any pair sums to 4175. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Brute force in Θ(n^2)\nc) Divide and conquer in Θ(n log n)\nd) Hash set in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK72_4272.",
        "target_text": "Question: Merge k=72 sorted linked lists totaling n=4272 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log k)\nc) Θ(n log n)\nd) Θ(k n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP183.",
        "target_text": "Question: Verify whether a pop sequence of length n=183 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Use a queue to mirror the stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA4589.",
        "target_text": "Question: Circular-array queue with capacity 4589: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Track count or keep one slot empty\nc) Require prime capacity\nd) Require power-of-two capacity\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK6.",
        "target_text": "Question: In a d-ary heap (d=6), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It increases height linearly\nb) It makes the operation constant time\nc) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nd) No effect whatsoever\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.67.",
        "target_text": "Question: In separate chaining with load factor α=0.67, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(log n)\nc) Θ(1/α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR772538.",
        "target_text": "Question: In a BST with distinct keys (id=772538), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Preorder\nc) Inorder\nd) Postorder\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Repeated edge relaxation tolerates negatives. Variant BF83870.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=83870 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Negative edge weights and negative cycles\nc) Equal runtime on all graphs\nd) Only acyclic graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP64597.",
        "target_text": "Question: KMP matches a pattern of length m=64597 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) LPS (failure) function\nc) Suffix array\nd) Rolling hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST343580.",
        "target_text": "Question: Stability (id=343580): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Merge sort (stable), Heap sort (unstable)\nc) Counting sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI55_1584.",
        "target_text": "Question: Binary search over half-open range [55, 1584)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Increase both lo and hi to skip duplicates\nc) Keep inclusive bounds on both ends\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M2_3_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/3) + n^4 for n being a power of 3.\nChoices:\na) Θ(n^0.6309 log n)\nb) Θ(n^0.6309)\nc) Θ(n^4 log n)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM23548.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=23548-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Hash all present values then scan\nc) Scan linearly counting gaps\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN424182_278549.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=424182, B=278549. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Binary search on addresses\nc) Hash addresses of first list\nd) Reverse one list then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS2231.",
        "target_text": "Question: Compute stock span for 2231 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Monotonic stack\nc) Fenwick tree\nd) Priority queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS9482.",
        "target_text": "Question: A queue via two stacks handles a burst of 9482 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH3522055.",
        "target_text": "Question: Build a binary heap from n=3522055 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(log n)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.2.",
        "target_text": "Question: In separate chaining with load factor α=1.2, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS927699.",
        "target_text": "Question: BST with parent pointers (id=927699): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) Use level-order and pick next node\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Reverse postorder traversal entirely\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP551560.",
        "target_text": "Question: Test bipartiteness (id=551560) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Compute an MST then inspect edges\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Sort vertices and deduplicate\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP66467.",
        "target_text": "Question: KMP matches a pattern of length m=66467 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Z-array exclusively\nc) Suffix array\nd) Rolling hash table\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB36721918.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=36721918 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n log n)\nc) Ω(log n)\nd) Ω(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI52_4574.",
        "target_text": "Question: Binary search over half-open range [52, 4574)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Increase both lo and hi to skip duplicates\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Keep inclusive bounds on both ends\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T1_1_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^1, f3=n^1 (log n)^1, f4=n^3?\nChoices:\na) Θ(n^1)\nb) Θ(n^1 (log n)^1)\nc) Θ(n^3)\nd) Θ((log n)^1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R606824.",
        "target_text": "Question: Rotate an array right by r=606824 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Single-step rotate repeated r times\nc) Three-reversal method\nd) Selection sort then shift\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL56544.",
        "target_text": "Question: Check if a singly linked list of length n=56544 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Copy to array and two-pointer check\nc) Sort and compare with original\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP354.",
        "target_text": "Question: Verify whether a pop sequence of length n=354 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Sort both sequences then compare\nc) Use a queue to mirror the stack\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS2581.",
        "target_text": "Question: A queue via two stacks handles a burst of 2581 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) Both Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM199_56802.",
        "target_text": "Question: Merge k=199 sorted streams totaling N=56802 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log N)\nc) Θ(N + k^2)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH4096.",
        "target_text": "Question: In open addressing with double hashing over table size m=4096, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) Choose m even and g(k) even\nc) Use g(k)=0 for some keys\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS418981.",
        "target_text": "Question: BST with parent pointers (id=418981): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) Reverse postorder traversal entirely\nc) Always climb to root then go right once\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF30348.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=30348 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Negative edge weights and negative cycles\nc) Only acyclic graphs\nd) Equal runtime on all graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN13519.",
        "target_text": "Question: Check anagrams for strings of length n=13519 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) Use a stack\nc) DFS on character graph\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS464748.",
        "target_text": "Question: Heapsort stability check id=464748: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort is not stable by default\nc) Heapsort is stable\nd) Heapsort always beats merge sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS7039094.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=7039094 typically runs in?\nChoices:\na) Θ(log n) average\nb) O(log log n) average\nc) O(1) worst-case\nd) Θ(n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_2_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^1, f3=n^1 (log n)^2, f4=n^4?\nChoices:\na) Θ(n^1)\nb) Θ(n^4)\nc) Θ((log n)^2)\nd) Θ(n^1 (log n)^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP1682_2803.",
        "target_text": "Question: Sorted array length n=1682. Decide if any pair sums to 2803. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Divide and conquer in Θ(n log n)\nc) Brute force in Θ(n^2)\nd) Hash set in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR4.",
        "target_text": "Question: Reverse a singly linked list in groups of k=4 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(n)\nc) Θ(nk)\nd) Θ(k log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE82590.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=82590. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Decreasing stack\nc) Binary search tree\nd) Max-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B507472.",
        "target_text": "Question: Run BFS on an unweighted graph with 507472 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) Minimum memory footprint\nc) Nondecreasing distance from source\nd) All simple paths before all edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA16_44227935.",
        "target_text": "Question: In a d-ary heap with d=16 and n=44227935 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(√n)\nc) Θ(log_16 n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.36.",
        "target_text": "Question: In separate chaining with load factor α=0.36, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR394881.",
        "target_text": "Question: In a BST with distinct keys (id=394881), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Inorder\nc) Level-order\nd) Preorder\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP194848.",
        "target_text": "Question: Test bipartiteness (id=194848) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Sort vertices and deduplicate\nc) Compute an MST then inspect edges\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN688948.",
        "target_text": "Question: Check anagrams for strings of length n=688948 over fixed alphabet. Optimal approach?\nChoices:\na) Use a stack\nb) Count character frequencies in Θ(n)\nc) DFS on character graph\nd) Sort both in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS978850.",
        "target_text": "Question: Keys are integers in range [0..978850]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Heap sort\nc) Counting sort\nd) Shell sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS9828362.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=9828362 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(1) expected\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M9_6_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/6) + n^4 for n being a power of 6.\nChoices:\na) Θ(n^4)\nb) Θ(n^4 log n)\nc) Θ(n^1.2263 log n)\nd) Θ(n^1.2263)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP16615_4667.",
        "target_text": "Question: Sorted array length n=16615. Decide if any pair sums to 4667. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Divide and conquer in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK98_14052.",
        "target_text": "Question: Merge k=98 sorted linked lists totaling n=14052 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n log k)\nc) Θ(n log n)\nd) Θ(n + k^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS4049.",
        "target_text": "Question: Compute stock span for 4049 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Priority queue\nc) Hash table\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B992282.",
        "target_text": "Question: Run BFS on an unweighted graph with 992282 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Lexicographic vertex order\nc) Minimum memory footprint\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM804_222486.",
        "target_text": "Question: Merge k=804 sorted streams totaling N=222486 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(N log k)\nc) Θ(N + k^2)\nd) Θ(k log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF5153467_0.59.",
        "target_text": "Question: Chaining hash table with n=5153467 keys at load factor α=0.59. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(α log α)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA265668.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=265668 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) Naive parent climbing O(n) per query\nc) DFS from root each time\nd) Sort node labels then binary search\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS433002_3572064.",
        "target_text": "Question: A directed graph with V=433002, E≈3572064. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When all vertices have outdegree ≥ 1\nc) When it is a DAG (no directed cycles)\nd) Only if edges are unweighted\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN799616.",
        "target_text": "Question: Check anagrams for strings of length n=799616 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Sort both in Θ(n log n)\nc) Use a stack\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB5991498.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=5991498 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n^2)\nc) Ω(log n)\nd) Ω(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI49_4570.",
        "target_text": "Question: Binary search over half-open range [49, 4570)—which invariant prevents infinite loops?\nChoices:\na) Increase both lo and hi to skip duplicates\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Keep inclusive bounds on both ends\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M3_5_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/5) + n^3 for n being a power of 5.\nChoices:\na) Θ(n^0.6826 log n)\nb) Θ(n^3 log n)\nc) Θ(n^0.6826)\nd) Θ(n^3)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP10625_2433.",
        "target_text": "Question: Sorted array length n=10625. Decide if any pair sums to 2433. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Divide and conquer in Θ(n log n)\nc) Hash set in Θ(n log n)\nd) Two-pointer scan in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL41860.",
        "target_text": "Question: Check if a singly linked list of length n=41860 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Sort and compare with original\nc) Copy to array and two-pointer check\nd) Use a hash set of seen values\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS1933.",
        "target_text": "Question: Compute stock span for 1933 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Priority queue\nc) Hash table\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW9822_58.",
        "target_text": "Question: Sliding window maximum for array length n=9822 and window w=58. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n)\nc) Θ(nw)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH4737047.",
        "target_text": "Question: Build a binary heap from n=4737047 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF9409819_0.61.",
        "target_text": "Question: Chaining hash table with n=9409819 keys at load factor α=0.61. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(α log α)\nc) Θ(1 + α)\nd) Θ(nα)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS602351.",
        "target_text": "Question: BST with parent pointers (id=602351): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Always climb to root then go right once\nc) Use level-order and pick next node\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS985002_1684006.",
        "target_text": "Question: A directed graph with V=985002, E≈1684006. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When it is a DAG (no directed cycles)\nc) Only if edges are unweighted\nd) When all vertices have outdegree ≥ 1\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Character-by-character descent. Variant TRIE2.",
        "target_text": "Question: Search a trie over alphabet size σ=2 for a key of length m. Time complexity?\nChoices:\na) Θ(m)\nb) Θ(log n)\nc) Θ(1) average for all m\nd) Θ(m log σ)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS311.",
        "target_text": "Question: Array is nearly sorted with at most 311 inversions. Which algorithm excels?\nChoices:\na) Insertion sort\nb) Radix sort\nc) Shell sort with fixed gaps\nd) Heap sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS526529.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=526529 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(n) average\nc) Θ(log n) average\nd) O(1) worst-case\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_1_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^1, f3=n^1 (log n)^1, f4=n^6?\nChoices:\na) Θ(n^1 (log n)^1)\nb) Θ((log n)^1)\nc) Θ(n^6)\nd) Θ(n^1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP5867_2889.",
        "target_text": "Question: Sorted array length n=5867. Decide if any pair sums to 2889. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Hash set in Θ(n log n)\nc) Divide and conquer in Θ(n log n)\nd) Two-pointer scan in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR10.",
        "target_text": "Question: Reverse a singly linked list in groups of k=10 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(k log n)\nc) Θ(n)\nd) Θ(nk)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP8.",
        "target_text": "Question: Verify whether a pop sequence of length n=8 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Use a queue to mirror the stack\nc) Simulate using one stack in Θ(n)\nd) Backtrack with recursion in Θ(2^n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA3822.",
        "target_text": "Question: Circular-array queue with capacity 3822: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Track count or keep one slot empty\nc) Head==Tail means full\nd) Require prime capacity\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK7.",
        "target_text": "Question: In a d-ary heap (d=7), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It makes the operation constant time\nb) No effect whatsoever\nc) It increases height linearly\nd) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.23.",
        "target_text": "Question: In separate chaining with load factor α=0.23, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H379690313.",
        "target_text": "Question: For a balanced BST with n=379690313 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST310023.",
        "target_text": "Question: MST question id=310023: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) MST is always unique in connected graphs\nc) MST minimizes number of edges\nd) Prim requires the entire edge set to be sorted first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB16500.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=16500. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) BST over all substrings\nc) Suffix automaton or suffix array + LCP\nd) Queue of rolling hashes only\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB87535177.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=87535177 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n log n)\nc) Ω(n)\nd) Ω(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS2466660.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=2466660 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(1) expected\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T2_3_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^2, f3=n^2 (log n)^3, f4=n^7?\nChoices:\na) Θ((log n)^3)\nb) Θ(n^2)\nc) Θ(n^2 (log n)^3)\nd) Θ(n^7)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP6362_1765.",
        "target_text": "Question: Sorted array length n=6362. Decide if any pair sums to 1765. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Divide and conquer in Θ(n log n)\nc) Hash set in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN88131.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 88131, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Impossible under any model\nc) Reverse list then delete head\nd) Traverse from head to find predecessor\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE11009.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=11009. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Decreasing stack\nc) Queue\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA7387.",
        "target_text": "Question: Circular-array queue with capacity 7387: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Head==Tail means full\nc) Track count or keep one slot empty\nd) Require power-of-two capacity\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC38473701.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=38473701?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.66.",
        "target_text": "Question: In separate chaining with load factor α=0.66, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR955947.",
        "target_text": "Question: In a BST with distinct keys (id=955947), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Inorder\nc) Postorder\nd) Preorder\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D919284.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 919284]. Why?\nChoices:\na) Graph must be undirected\nb) Self-loops must be absent\nc) Distinct weights are required\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN24908.",
        "target_text": "Question: Check anagrams for strings of length n=24908 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) Count character frequencies in Θ(n)\nc) DFS on character graph\nd) Use a stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS179.",
        "target_text": "Question: Array is nearly sorted with at most 179 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Shell sort with fixed gaps\nc) Radix sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU9894828.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=9894828. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Binary search with left/right bias\nc) Linear scan with early exit\nd) Hashing with chaining\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M6_2_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/2) + n^4 for n being a power of 2.\nChoices:\na) Θ(n^4 log n)\nb) Θ(n^4)\nc) Θ(n^2.585 log n)\nd) Θ(n^2.585)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P265577.",
        "target_text": "Question: Answer 265577 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Use a stack to store partial sums\nc) Recompute sums per query in Θ(n)\nd) Sort once and binary search per query\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL59084.",
        "target_text": "Question: Check if a singly linked list of length n=59084 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Sort and compare with original\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE25547.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=25547. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Binary search tree\nc) Decreasing stack\nd) Max-heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B986867.",
        "target_text": "Question: Run BFS on an unweighted graph with 986867 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) Nondecreasing distance from source\nc) Lexicographic vertex order\nd) All simple paths before all edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Tradeoff between branching factor and height. Variant DK8.",
        "target_text": "Question: In a d-ary heap (d=8), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) It makes the operation constant time\nc) No effect whatsoever\nd) It increases height linearly\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF717100_0.5.",
        "target_text": "Question: Chaining hash table with n=717100 keys at load factor α=0.5. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS115343.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=115343-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(√n)\nd) Θ(k)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D944600.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 944600]. Why?\nChoices:\na) Distinct weights are required\nb) Nonnegative weights ensure greedy optimality\nc) Self-loops must be absent\nd) Graph must be undirected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Randomized hashing makes spurious matches rare. Variant RK911382323_998244353.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=998244353 achieves expected linear time due to what?\nChoices:\na) Trie of all substrings\nb) Suffix tree guaranteeing O(1) per char\nc) Use of a min-heap\nd) Low collision probability of rolling hash\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB73097711.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=73097711 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n^2)\nc) Ω(n)\nd) Ω(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU8788716.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=8788716. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Hashing with chaining\nc) Binary search with left/right bias\nd) Heap-based selection\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M2_5_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/5) + n^1 for n being a power of 5.\nChoices:\na) Θ(n^0.4307)\nb) Θ(n^1)\nc) Θ(n^1 log n)\nd) Θ(n^0.4307 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM456264.",
        "target_text": "Question: Find a majority element in an array of length n=456264 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Binary search on value domain\nc) Divide-and-conquer merges\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR5.",
        "target_text": "Question: Reverse a singly linked list in groups of k=5 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(k log n)\nb) Θ(n log k)\nc) Θ(nk)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1350.",
        "target_text": "Question: Verify whether a pop sequence of length n=1350 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Use a queue to mirror the stack\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS5327.",
        "target_text": "Question: A queue via two stacks handles a burst of 5327 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) Both Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK5.",
        "target_text": "Question: In a d-ary heap (d=5), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nb) It makes the operation constant time\nc) It increases height linearly\nd) No effect whatsoever\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF4934046_0.84.",
        "target_text": "Question: Chaining hash table with n=4934046 keys at load factor α=0.84. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR475775.",
        "target_text": "Question: In a BST with distinct keys (id=475775), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Preorder\nc) Level-order\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS338512_991248.",
        "target_text": "Question: A directed graph with V=338512, E≈991248. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if edges are unweighted\nc) Only if the graph is connected\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z28239.",
        "target_text": "Question: For string S (id=28239), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Next index of S[i]\nc) Number of distinct substrings up to i\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST73722.",
        "target_text": "Question: Stability (id=73722): which pairing is correct?\nChoices:\na) Heap sort (stable), Merge sort (unstable)\nb) Quick sort (stable), Selection sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Counting sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX897518736.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈897518736. Why?\nChoices:\na) Requires the array to be cyclic\nb) Uses hashing to index unknown segments\nc) Sorts the array first\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M7_4_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/4) + n^0 for n being a power of 4.\nChoices:\na) Θ(n^1.4037)\nb) Θ(n^0)\nc) Θ(n^0 log n)\nd) Θ(n^1.4037 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Reversal approach avoids auxiliary arrays. Variant R605177.",
        "target_text": "Question: Rotate an array right by r=605177 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Single-step rotate repeated r times\nc) Heapify then extract\nd) Selection sort then shift\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR9.",
        "target_text": "Question: Reverse a singly linked list in groups of k=9 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(n)\nc) Θ(n log k)\nd) Θ(k log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP142.",
        "target_text": "Question: Verify whether a pop sequence of length n=142 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B184738.",
        "target_text": "Question: Run BFS on an unweighted graph with 184738 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) Minimum memory footprint\nc) All simple paths before all edges\nd) Lexicographic vertex order\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC19143501.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=19143501?\nChoices:\na) Θ(log n)\nb) Θ(log log n)\nc) Θ(n)\nd) Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH16384.",
        "target_text": "Question: In open addressing with double hashing over table size m=16384, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) Make both hash functions identical\nc) Use g(k)=0 for some keys\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS261674.",
        "target_text": "Question: BST with parent pointers (id=261674): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Always climb to root then go right once\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Use level-order and pick next node\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS106540_525396.",
        "target_text": "Question: A directed graph with V=106540, E≈525396. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) Only if the graph is connected\nc) When all vertices have outdegree ≥ 1\nd) Only if edges are unweighted\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Character-by-character descent. Variant TRIE26.",
        "target_text": "Question: Search a trie over alphabet size σ=26 for a key of length m. Time complexity?\nChoices:\na) Θ(1) average for all m\nb) Θ(log n)\nc) Θ(m log σ)\nd) Θ(m)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS109924.",
        "target_text": "Question: Keys are integers in range [0..109924]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Heap sort\nc) Shell sort\nd) Quick sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI21_708.",
        "target_text": "Question: Binary search over half-open range [21, 708)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Increase both lo and hi to skip duplicates\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Keep inclusive bounds on both ends\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T3_1_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^3, f3=n^3 (log n)^1, f4=n^9?\nChoices:\na) Θ(n^3)\nb) Θ(n^3 (log n)^1)\nc) Θ((log n)^1)\nd) Θ(n^9)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P602153.",
        "target_text": "Question: Answer 602153 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Use a stack to store partial sums\nb) Build prefix-sum array; O(1) per query\nc) Sort once and binary search per query\nd) Recompute sums per query in Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN982885.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 982885, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Copy next node’s data here and bypass next\nc) Reverse list then delete head\nd) Traverse from head to find predecessor\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP140.",
        "target_text": "Question: Verify whether a pop sequence of length n=140 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Backtrack with recursion in Θ(2^n)\nc) Simulate using one stack in Θ(n)\nd) Use a queue to mirror the stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ897044.",
        "target_text": "Question: For 897044 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Stack\nc) Binary heap\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL536_657748.",
        "target_text": "Question: Find the k=536-th largest element among n=657748 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Deterministic selection (median-of-medians)\nc) Heapsort then index\nd) Binary search on value domain\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH65536.",
        "target_text": "Question: In open addressing with double hashing over table size m=65536, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Make both hash functions identical\nc) Choose m even and g(k) even\nd) Use g(k)=0 for some keys\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR172649.",
        "target_text": "Question: In a BST with distinct keys (id=172649), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Inorder\nc) Postorder\nd) Level-order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF65393.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=65393 can handle which case while detecting it?\nChoices:\na) Only acyclic graphs\nb) Faster runtime on sparse nonnegative graphs\nc) Negative edge weights and negative cycles\nd) Equal runtime on all graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB42105.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=42105. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) Queue of rolling hashes only\nc) Binary heap of substrings\nd) BST over all substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB96110079.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=96110079 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n^2)\nc) Ω(n log n)\nd) Ω(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS5095762.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=5095762 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(log n)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M4_5_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/5) + n^2 for n being a power of 5.\nChoices:\na) Θ(n^2)\nb) Θ(n^0.8614 log n)\nc) Θ(n^0.8614)\nd) Θ(n^2 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P261351.",
        "target_text": "Question: Answer 261351 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Recompute sums per query in Θ(n)\nc) Use a stack to store partial sums\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN186942.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 186942, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Impossible under any model\nc) Reverse list then delete head\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE12350.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=12350. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Queue\nc) Decreasing stack\nd) Binary search tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ1880.",
        "target_text": "Question: Schedule 1880 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Circular queue\nc) Unordered array\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH1063703.",
        "target_text": "Question: Build a binary heap from n=1063703 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n^2)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH131072.",
        "target_text": "Question: In open addressing with double hashing over table size m=131072, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) g(k) coprime with m for all keys\nc) Choose m even and g(k) even\nd) Use g(k)=0 for some keys\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS378788.",
        "target_text": "Question: BST with parent pointers (id=378788): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Reverse postorder traversal entirely\nc) Always climb to root then go right once\nd) Use level-order and pick next node\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST397253.",
        "target_text": "Question: MST question id=397253: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) MST minimizes number of edges\nc) MST is always unique in connected graphs\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS14474.",
        "target_text": "Question: In KMP, what does LPS[14474] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Index of next occurrence\nc) Total distinct prefixes up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS478756.",
        "target_text": "Question: Heapsort stability check id=478756: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is stable\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX234962116.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈234962116. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Sorts the array first\nc) Uses hashing to index unknown segments\nd) Requires the array to be cyclic\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M4_6_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/6) + n^4 for n being a power of 6.\nChoices:\na) Θ(n^4)\nb) Θ(n^0.7737)\nc) Θ(n^0.7737 log n)\nd) Θ(n^4 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM126423.",
        "target_text": "Question: Find a majority element in an array of length n=126423 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Divide-and-conquer merges\nc) Counting sort\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN405929.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 405929, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Impossible under any model\nc) Copy next node’s data here and bypass next\nd) Reverse list then delete head\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE43064.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=43064. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Decreasing stack\nc) Max-heap\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA4642.",
        "target_text": "Question: Circular-array queue with capacity 4642: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Head==Tail means full\nc) Require prime capacity\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM186_85562.",
        "target_text": "Question: Merge k=186 sorted streams totaling N=85562 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log k)\nc) Θ(k log N)\nd) Θ(N log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.17.",
        "target_text": "Question: In separate chaining with load factor α=1.17, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(log n)\nc) Θ(1/α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS965474.",
        "target_text": "Question: BST with parent pointers (id=965474): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Reverse postorder traversal entirely\nd) Always climb to root then go right once\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS833190_4668016.",
        "target_text": "Question: A directed graph with V=833190, E≈4668016. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if edges are unweighted\nc) When it is a DAG (no directed cycles)\nd) Only if the graph is connected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP25484.",
        "target_text": "Question: KMP matches a pattern of length m=25484 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) Suffix array\nc) Rolling hash table\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX7_2.",
        "target_text": "Question: Radix sort with d=7 digits and base b=2 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(n log n)\nc) Θ(d·(n + b))\nd) Θ(d·n·log b)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI14_3848.",
        "target_text": "Question: Binary search over half-open range [14, 3848)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Increase both lo and hi to skip duplicates\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M3_2_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/2) + n^0 for n being a power of 2.\nChoices:\na) Θ(n^1.585 log n)\nb) Θ(n^0)\nc) Θ(n^1.585)\nd) Θ(n^0 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM89416.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=89416-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Hash all present values then scan\nc) Binary search on index vs value gap\nd) Scan linearly counting gaps\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN522260_625242.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=522260, B=625242. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Advance pointers; when one ends, jump to the other head\nc) Reverse one list then compare\nd) Hash addresses of first list\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE39760.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=39760. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Binary search tree\nc) Decreasing stack\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA6470.",
        "target_text": "Question: Circular-array queue with capacity 6470: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require prime capacity\nc) Head==Tail means full\nd) Require power-of-two capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH1779137.",
        "target_text": "Question: Build a binary heap from n=1779137 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n^2)\nc) Θ(n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF8901353_0.94.",
        "target_text": "Question: Chaining hash table with n=8901353 keys at load factor α=0.94. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(α log α)\nd) Θ(nα)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H606053571.",
        "target_text": "Question: For a balanced BST with n=606053571 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(log log n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR480070.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=480070 edges. What algorithmic idea achieves linear time?\nChoices:\na) Tarjan’s low-link DFS\nb) Topological sorting\nc) Kruskal’s algorithm\nd) Dijkstra’s algorithm\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP50516.",
        "target_text": "Question: KMP matches a pattern of length m=50516 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Suffix array\nc) Z-array exclusively\nd) Rolling hash table\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST757269.",
        "target_text": "Question: Stability (id=757269): which pairing is correct?\nChoices:\na) Heap sort (stable), Merge sort (unstable)\nb) Counting sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Quick sort (stable), Selection sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU3473935.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=3473935. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Heap-based selection\nc) Hashing with chaining\nd) Linear scan with early exit\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T1_3_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^1, f3=n^1 (log n)^3, f4=n^5?\nChoices:\na) Θ((log n)^3)\nb) Θ(n^1 (log n)^3)\nc) Θ(n^5)\nd) Θ(n^1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S3628_15.",
        "target_text": "Question: Array length n=3628, find max-sum subarray of fixed length k=15. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(k log n)\nd) Θ(nk)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN334541.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 334541, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Reverse list then delete head\nc) Copy next node’s data here and bypass next\nd) Impossible under any model\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE5339.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=5339. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Max-heap\nc) Queue\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW6416_804.",
        "target_text": "Question: Sliding window maximum for array length n=6416 and window w=804. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(n)\nc) Θ(w log n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC69193135.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=69193135?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF8894164_0.55.",
        "target_text": "Question: Chaining hash table with n=8894164 keys at load factor α=0.55. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(α log α)\nd) Θ(nα)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H643437502.",
        "target_text": "Question: For a balanced BST with n=643437502 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST795823.",
        "target_text": "Question: MST question id=795823: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) MST is always unique in connected graphs\nc) MST minimizes number of edges\nd) Prim requires the entire edge set to be sorted first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN871810.",
        "target_text": "Question: Check anagrams for strings of length n=871810 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) Count character frequencies in Θ(n)\nc) DFS on character graph\nd) Use a stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS386251.",
        "target_text": "Question: Keys are integers in range [0..386251]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Quick sort\nc) Heap sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU2299542.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=2299542. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Linear scan with early exit\nc) Binary search with left/right bias\nd) Heap-based selection\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M4_5_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/5) + n^3 for n being a power of 5.\nChoices:\na) Θ(n^3)\nb) Θ(n^0.8614 log n)\nc) Θ(n^3 log n)\nd) Θ(n^0.8614)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP12921_2618.",
        "target_text": "Question: Sorted array length n=12921. Decide if any pair sums to 2618. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Divide and conquer in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL82052.",
        "target_text": "Question: Check if a singly linked list of length n=82052 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Sort and compare with original\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS189.",
        "target_text": "Question: Compute stock span for 189 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Priority queue\nc) Monotonic stack\nd) Fenwick tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ73078.",
        "target_text": "Question: Schedule 73078 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Unordered array\nc) Stack\nd) Circular queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH3610725.",
        "target_text": "Question: Build a binary heap from n=3610725 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.35.",
        "target_text": "Question: In separate chaining with load factor α=1.35, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR569973.",
        "target_text": "Question: In a BST with distinct keys (id=569973), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Postorder\nc) Inorder\nd) Level-order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR800934.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=800934 edges. What algorithmic idea achieves linear time?\nChoices:\na) Kruskal’s algorithm\nb) Dijkstra’s algorithm\nc) Topological sorting\nd) Tarjan’s low-link DFS\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE52.",
        "target_text": "Question: Search a trie over alphabet size σ=52 for a key of length m. Time complexity?\nChoices:\na) Θ(m log σ)\nb) Θ(1) average for all m\nc) Θ(m)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST306007.",
        "target_text": "Question: Stability (id=306007): which pairing is correct?\nChoices:\na) Merge sort (stable), Heap sort (unstable)\nb) Counting sort (unstable)\nc) Heap sort (stable), Merge sort (unstable)\nd) Quick sort (stable), Selection sort (unstable)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Geometric level distribution mirrors balanced trees. Variant SL0.75.",
        "target_text": "Question: Skip list with level promotion probability p=0.75: expected complexity of search/insert/delete?\nChoices:\na) Θ(log n) for all three\nb) Θ(n) for all three\nc) Θ(1) for all three\nd) Θ(√n) for all three\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_6_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^3, f3=n^3 (log n)^6, f4=n^7?\nChoices:\na) Θ((log n)^6)\nb) Θ(n^7)\nc) Θ(n^3 (log n)^6)\nd) Θ(n^3)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S278_86.",
        "target_text": "Question: Array length n=278, find max-sum subarray of fixed length k=86. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(nk)\nd) Θ(k log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK75_2509.",
        "target_text": "Question: Merge k=75 sorted linked lists totaling n=2509 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n log n)\nc) Θ(k n)\nd) Θ(n + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS1998.",
        "target_text": "Question: Compute stock span for 1998 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Fenwick tree\nc) Priority queue\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ985725.",
        "target_text": "Question: Schedule 985725 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Stack\nc) Unordered array\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK3.",
        "target_text": "Question: In a d-ary heap (d=3), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It increases height linearly\nb) It makes the operation constant time\nc) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nd) No effect whatsoever\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF8932574_0.4.",
        "target_text": "Question: Chaining hash table with n=8932574 keys at load factor α=0.4. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(α log α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR766809.",
        "target_text": "Question: In a BST with distinct keys (id=766809), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Inorder\nc) Preorder\nd) Level-order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST84235.",
        "target_text": "Question: MST question id=84235: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) MST minimizes number of edges\nc) MST is always unique in connected graphs\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Character-by-character descent. Variant TRIE256.",
        "target_text": "Question: Search a trie over alphabet size σ=256 for a key of length m. Time complexity?\nChoices:\na) Θ(m)\nb) Θ(log n)\nc) Θ(m log σ)\nd) Θ(1) average for all m\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB73415468.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=73415468 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n^2)\nc) Ω(log n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU9823887.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=9823887. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Binary search with left/right bias\nc) Heap-based selection\nd) Hashing with chaining\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_5_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^4, f3=n^4 (log n)^5, f4=n^11?\nChoices:\na) Θ(n^4)\nb) Θ((log n)^5)\nc) Θ(n^4 (log n)^5)\nd) Θ(n^11)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP7942_570.",
        "target_text": "Question: Sorted array length n=7942. Decide if any pair sums to 570. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Hash set in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK48_3464.",
        "target_text": "Question: Merge k=48 sorted linked lists totaling n=3464 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n log n)\nc) Θ(n log k)\nd) Θ(n + k^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS4984.",
        "target_text": "Question: Compute stock span for 4984 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Fenwick tree\nc) Hash table\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B271094.",
        "target_text": "Question: Run BFS on an unweighted graph with 271094 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Lexicographic vertex order\nc) Minimum memory footprint\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC5241875.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=5241875?\nChoices:\na) Θ(1)\nb) Θ(log log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF4565753_0.43.",
        "target_text": "Question: Chaining hash table with n=4565753 keys at load factor α=0.43. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(α log α)\nc) Θ(log n)\nd) Θ(nα)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H604045366.",
        "target_text": "Question: For a balanced BST with n=604045366 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D641736.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 641736]. Why?\nChoices:\na) Self-loops must be absent\nb) Distinct weights are required\nc) Nonnegative weights ensure greedy optimality\nd) Graph must be undirected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP89305.",
        "target_text": "Question: KMP matches a pattern of length m=89305 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) LPS (failure) function\nc) Suffix array\nd) Rolling hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB58201529.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=58201529 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n^2)\nc) Ω(log n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS572239.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=572239 typically runs in?\nChoices:\na) Θ(n) average\nb) O(log log n) average\nc) O(1) worst-case\nd) Θ(log n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T2_5_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^2, f3=n^2 (log n)^5, f4=n^6?\nChoices:\na) Θ(n^2)\nb) Θ(n^2 (log n)^5)\nc) Θ((log n)^5)\nd) Θ(n^6)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP4056_182.",
        "target_text": "Question: Sorted array length n=4056. Decide if any pair sums to 182. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Brute force in Θ(n^2)\nc) Two-pointer scan in Θ(n)\nd) Divide and conquer in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN687136_42711.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=687136, B=42711. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Advance pointers; when one ends, jump to the other head\nc) Hash addresses of first list\nd) Reverse one list then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE35456.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=35456. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Binary search tree\nc) Max-heap\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW4777_168.",
        "target_text": "Question: Sliding window maximum for array length n=4777 and window w=168. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n log n)\nc) Θ(nw)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL977_659949.",
        "target_text": "Question: Find the k=977-th largest element among n=659949 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Deterministic selection (median-of-medians)\nc) Binary search on value domain\nd) Heapsort then index\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF6187780_0.42.",
        "target_text": "Question: Chaining hash table with n=6187780 keys at load factor α=0.42. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(1 + α)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS629942.",
        "target_text": "Question: BST with parent pointers (id=629942): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) Use level-order and pick next node\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Reverse postorder traversal entirely\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC90381.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=90381 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(VE)\nc) Θ(V log V)\nd) Θ(E log V)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z546146.",
        "target_text": "Question: For string S (id=546146), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Next index of S[i]\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of distinct substrings up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS507730.",
        "target_text": "Question: Keys are integers in range [0..507730]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Quick sort\nc) Shell sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX169049705.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈169049705. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Requires the array to be cyclic\nc) Sorts the array first\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M2_5_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/5) + n^0 for n being a power of 5.\nChoices:\na) Θ(n^0)\nb) Θ(n^0 log n)\nc) Θ(n^0.4307)\nd) Θ(n^0.4307 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S11570_163.",
        "target_text": "Question: Array length n=11570, find max-sum subarray of fixed length k=163. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK48_5331.",
        "target_text": "Question: Merge k=48 sorted linked lists totaling n=5331 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n + k^2)\nc) Θ(n log k)\nd) Θ(k n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE19275.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=19275. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Max-heap\nc) Queue\nd) Binary search tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B975927.",
        "target_text": "Question: Run BFS on an unweighted graph with 975927 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) All simple paths before all edges\nc) Lexicographic vertex order\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH8060079.",
        "target_text": "Question: Build a binary heap from n=8060079 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(n^2)\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.66.",
        "target_text": "Question: In separate chaining with load factor α=0.66, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H885046307.",
        "target_text": "Question: For a balanced BST with n=885046307 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(log log n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS316718_2928891.",
        "target_text": "Question: A directed graph with V=316718, E≈2928891. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When it is a DAG (no directed cycles)\nc) When all vertices have outdegree ≥ 1\nd) Only if edges are unweighted\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS56969.",
        "target_text": "Question: In KMP, what does LPS[56969] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Total distinct prefixes up to i\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Number of mismatches up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST966643.",
        "target_text": "Question: Stability (id=966643): which pairing is correct?\nChoices:\na) Heap sort (stable), Merge sort (unstable)\nb) Counting sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU5848901.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=5848901. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Linear scan with early exit\nc) Heap-based selection\nd) Hashing with chaining\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T2_3_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^2, f3=n^2 (log n)^3, f4=n^4?\nChoices:\na) Θ(n^4)\nb) Θ(n^2)\nc) Θ((log n)^3)\nd) Θ(n^2 (log n)^3)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM24294.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=24294-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Binary search on index vs value gap\nc) Hash all present values then scan\nd) Scan linearly counting gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK42_615.",
        "target_text": "Question: Merge k=42 sorted linked lists totaling n=615 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log k)\nc) Θ(k n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1864.",
        "target_text": "Question: Verify whether a pop sequence of length n=1864 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Use a queue to mirror the stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B761511.",
        "target_text": "Question: Run BFS on an unweighted graph with 761511 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) Lexicographic vertex order\nc) All simple paths before all edges\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM28_5693.",
        "target_text": "Question: Merge k=28 sorted streams totaling N=5693 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log N)\nc) Θ(N log k)\nd) Θ(N + k^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF5608183_0.75.",
        "target_text": "Question: Chaining hash table with n=5608183 keys at load factor α=0.75. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(α log α)\nd) Θ(nα)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H181977582.",
        "target_text": "Question: For a balanced BST with n=181977582 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF81268.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=81268 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Equal runtime on all graphs\nc) Negative edge weights and negative cycles\nd) Only acyclic graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN254868.",
        "target_text": "Question: Check anagrams for strings of length n=254868 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Count character frequencies in Θ(n)\nc) Sort both in Θ(n log n)\nd) Use a stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS830102.",
        "target_text": "Question: Heapsort stability check id=830102: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort is not stable by default\nc) Heapsort is stable\nd) Heapsort always beats merge sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS9932394.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=9932394 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(1) expected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_4_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^4, f3=n^4 (log n)^4, f4=n^8?\nChoices:\na) Θ(n^4)\nb) Θ(n^8)\nc) Θ((log n)^4)\nd) Θ(n^4 (log n)^4)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S18886_295.",
        "target_text": "Question: Array length n=18886, find max-sum subarray of fixed length k=295. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(n log n)\nd) Θ(k log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN492523.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 492523, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Impossible under any model\nc) Traverse from head to find predecessor\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS2118.",
        "target_text": "Question: Compute stock span for 2118 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Hash table\nc) Priority queue\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B86308.",
        "target_text": "Question: Run BFS on an unweighted graph with 86308 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Lexicographic vertex order\nc) Nondecreasing distance from source\nd) Minimum memory footprint\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH9909544.",
        "target_text": "Question: Build a binary heap from n=9909544 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF1888111_0.56.",
        "target_text": "Question: Chaining hash table with n=1888111 keys at load factor α=0.56. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(nα)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS89623.",
        "target_text": "Question: BST with parent pointers (id=89623): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) Reverse postorder traversal entirely\nc) Always climb to root then go right once\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR913955.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=913955 edges. What algorithmic idea achieves linear time?\nChoices:\na) Tarjan’s low-link DFS\nb) Topological sorting\nc) Dijkstra’s algorithm\nd) Kruskal’s algorithm\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z12528.",
        "target_text": "Question: For string S (id=12528), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Number of distinct substrings up to i\nc) Next index of S[i]\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB61149837.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=61149837 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n log n)\nc) Ω(n^2)\nd) Ω(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX352088427.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈352088427. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Requires the array to be cyclic\nc) Sorts the array first\nd) Uses hashing to index unknown segments\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T3_2_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^3, f3=n^3 (log n)^2, f4=n^10?\nChoices:\na) Θ((log n)^2)\nb) Θ(n^10)\nc) Θ(n^3)\nd) Θ(n^3 (log n)^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM65766.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=65766-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Hash all present values then scan\nc) Use a heap of differences\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN808980.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 808980, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Traverse from head to find predecessor\nc) Copy next node’s data here and bypass next\nd) Reverse list then delete head\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE96106.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=96106. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Binary search tree\nc) Max-heap\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ190852.",
        "target_text": "Question: Schedule 190852 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Circular queue\nc) Unordered array\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC45378094.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=45378094?\nChoices:\na) Θ(log log n)\nb) Θ(1)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF3276649_0.85.",
        "target_text": "Question: Chaining hash table with n=3276649 keys at load factor α=0.85. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(nα)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS397175.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=397175-th smallest?\nChoices:\na) Θ(k)\nb) Θ(log n)\nc) Θ(1)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS560462_1497122.",
        "target_text": "Question: A directed graph with V=560462, E≈1497122. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) Only if the graph is connected\nc) Only if edges are unweighted\nd) When all vertices have outdegree ≥ 1\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z643230.",
        "target_text": "Question: For string S (id=643230), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Number of mismatches at i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of distinct substrings up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX6_32.",
        "target_text": "Question: Radix sort with d=6 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(d·(n + b))\nc) Θ(n log n)\nd) Θ(d·n·log b)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU4309767.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=4309767. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Linear scan with early exit\nc) Hashing with chaining\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M6_3_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/3) + n^4 for n being a power of 3.\nChoices:\na) Θ(n^4)\nb) Θ(n^1.6309)\nc) Θ(n^4 log n)\nd) Θ(n^1.6309 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM67250.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=67250-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Binary search on index vs value gap\nc) Hash all present values then scan\nd) Use a heap of differences\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN124189_593496.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=124189, B=593496. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Binary search on addresses\nc) Hash addresses of first list\nd) Reverse one list then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS3352.",
        "target_text": "Question: Compute stock span for 3352 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Monotonic stack\nc) Fenwick tree\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA7814.",
        "target_text": "Question: Circular-array queue with capacity 7814: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require power-of-two capacity\nc) Head==Tail means full\nd) Require prime capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA7_31336809.",
        "target_text": "Question: In a d-ary heap with d=7 and n=31336809 nodes, what is the height?\nChoices:\na) Θ(log_7 n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.77.",
        "target_text": "Question: In separate chaining with load factor α=0.77, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(α)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS723596.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=723596-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(k)\nc) Θ(1)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS226221_757557.",
        "target_text": "Question: A directed graph with V=226221, E≈757557. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) When it is a DAG (no directed cycles)\nc) Only if the graph is connected\nd) Only if edges are unweighted\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z12523.",
        "target_text": "Question: For string S (id=12523), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Length of the longest prefix starting at i matching S[0..]\nc) Number of mismatches at i\nd) Next index of S[i]\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS524909.",
        "target_text": "Question: Heapsort stability check id=524909: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort always beats merge sort\nc) Heapsort is stable\nd) Heapsort needs extra Θ(n) memory\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS9499093.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=9499093 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(1) expected\nc) Θ(n)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_3_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^4, f3=n^4 (log n)^3, f4=n^8?\nChoices:\na) Θ((log n)^3)\nb) Θ(n^4 (log n)^3)\nc) Θ(n^8)\nd) Θ(n^4)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP13979_2705.",
        "target_text": "Question: Sorted array length n=13979. Decide if any pair sums to 2705. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Hash set in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Divide and conquer in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL77872.",
        "target_text": "Question: Check if a singly linked list of length n=77872 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Sort and compare with original\nc) Copy to array and two-pointer check\nd) Use a hash set of seen values\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE9524.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=9524. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Decreasing stack\nc) Max-heap\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ955501.",
        "target_text": "Question: Schedule 955501 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Binary heap\nc) Unordered array\nd) Stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL416_781068.",
        "target_text": "Question: Find the k=416-th largest element among n=781068 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Deterministic selection (median-of-medians)\nc) Heapsort then index\nd) Build max-heap and extract k times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF3047871_0.39.",
        "target_text": "Question: Chaining hash table with n=3047871 keys at load factor α=0.39. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H915946382.",
        "target_text": "Question: For a balanced BST with n=915946382 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF76112.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=76112 can handle which case while detecting it?\nChoices:\na) Negative edge weights and negative cycles\nb) Only acyclic graphs\nc) Faster runtime on sparse nonnegative graphs\nd) Equal runtime on all graphs\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z729202.",
        "target_text": "Question: For string S (id=729202), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Length of the longest prefix starting at i matching S[0..]\nc) Number of distinct substrings up to i\nd) Next index of S[i]\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB48010479.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=48010479 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n log n)\nc) Ω(n^2)\nd) Ω(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU8462872.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=8462872. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Heap-based selection\nc) Linear scan with early exit\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M6_3_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/3) + n^0 for n being a power of 3.\nChoices:\na) Θ(n^0)\nb) Θ(n^1.6309 log n)\nc) Θ(n^1.6309)\nd) Θ(n^0 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S4896_41.",
        "target_text": "Question: Array length n=4896, find max-sum subarray of fixed length k=41. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(k log n)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(nk)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Phase difference accumulates around the cycle. Variant C2.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 2× and 1×. Complexity?\nChoices:\na) Θ(n) time, Θ(1) space\nb) Θ(1) time, Θ(1) space\nc) Θ(log n) time, Θ(1) space\nd) Θ(n) time, Θ(n) space\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS2791.",
        "target_text": "Question: Compute stock span for 2791 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Monotonic stack\nc) Fenwick tree\nd) Priority queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ44959.",
        "target_text": "Question: For 44959 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Stack\nb) Deque\nc) Binary heap\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM140_45036.",
        "target_text": "Question: Merge k=140 sorted streams totaling N=45036 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N + k^2)\nb) Θ(N log N)\nc) Θ(N log k)\nd) Θ(k log N)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF4471245_0.64.",
        "target_text": "Question: Chaining hash table with n=4471245 keys at load factor α=0.64. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(α log α)\nd) Θ(nα)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS475810.",
        "target_text": "Question: BST with parent pointers (id=475810): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) Reverse postorder traversal entirely\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Always climb to root then go right once\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS953498_3735110.",
        "target_text": "Question: A directed graph with V=953498, E≈3735110. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) Only if the graph is connected\nc) When all vertices have outdegree ≥ 1\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z841181.",
        "target_text": "Question: For string S (id=841181), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Length of the longest prefix starting at i matching S[0..]\nc) Number of distinct substrings up to i\nd) Next index of S[i]\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX6_256.",
        "target_text": "Question: Radix sort with d=6 digits and base b=256 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(d·(n + b))\nc) Θ(n log n)\nd) Θ(d·n·log b)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI28_1678.",
        "target_text": "Question: Binary search over half-open range [28, 1678)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Keep inclusive bounds on both ends\nd) Increase both lo and hi to skip duplicates\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M3_6_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/6) + n^0 for n being a power of 6.\nChoices:\na) Θ(n^0.6131 log n)\nb) Θ(n^0 log n)\nc) Θ(n^0.6131)\nd) Θ(n^0)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM7888.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=7888-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Use a heap of differences\nc) Binary search on index vs value gap\nd) Hash all present values then scan\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN931745_936122.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=931745, B=936122. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Hash addresses of first list\nc) Reverse one list then compare\nd) Advance pointers; when one ends, jump to the other head\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE82716.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=82716. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Binary search tree\nc) Max-heap\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ444185.",
        "target_text": "Question: For 444185 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Queue\nc) Binary heap\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH7075423.",
        "target_text": "Question: Build a binary heap from n=7075423 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(n^2)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF5758145_0.93.",
        "target_text": "Question: Chaining hash table with n=5758145 keys at load factor α=0.93. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS311164.",
        "target_text": "Question: BST with parent pointers (id=311164): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Always climb to root then go right once\nd) Use level-order and pick next node\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP161180.",
        "target_text": "Question: Test bipartiteness (id=161180) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Sort vertices and deduplicate\nc) Compute an MST then inspect edges\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP87987.",
        "target_text": "Question: KMP matches a pattern of length m=87987 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Rolling hash table\nc) Suffix array\nd) Z-array exclusively\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS400770.",
        "target_text": "Question: Keys are integers in range [0..400770]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Shell sort\nc) Quick sort\nd) Heap sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS7009390.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=7009390 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(1) expected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M2_4_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/4) + n^2 for n being a power of 4.\nChoices:\na) Θ(n^0.5)\nb) Θ(n^2)\nc) Θ(n^2 log n)\nd) Θ(n^0.5 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM53568.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=53568-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Scan linearly counting gaps\nc) Use a heap of differences\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK23_3133.",
        "target_text": "Question: Merge k=23 sorted linked lists totaling n=3133 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(n log n)\nc) Θ(k n)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE3886.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=3886. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Binary search tree\nc) Decreasing stack\nd) Max-heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ619772.",
        "target_text": "Question: For 619772 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Deque\nc) Stack\nd) Binary heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC15151823.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=15151823?\nChoices:\na) Θ(log log n)\nb) Θ(1)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH65536.",
        "target_text": "Question: In open addressing with double hashing over table size m=65536, which condition helps avoid cycles?\nChoices:\na) Use g(k)=0 for some keys\nb) Make both hash functions identical\nc) Choose m even and g(k) even\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA902232.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=902232 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) Sort node labels then binary search\nc) Euler tour + RMQ yields O(1) per query\nd) DFS from root each time\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST979354.",
        "target_text": "Question: MST question id=979354: which statement is true?\nChoices:\na) MST minimizes number of edges\nb) Prim requires the entire edge set to be sorted first\nc) MST is always unique in connected graphs\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS30500.",
        "target_text": "Question: In KMP, what does LPS[30500] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Index of next occurrence\nd) Total distinct prefixes up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX7_2.",
        "target_text": "Question: Radix sort with d=7 digits and base b=2 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·n·log b)\nc) Θ(b^d)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI88_1659.",
        "target_text": "Question: Binary search over half-open range [88, 1659)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Increase both lo and hi to skip duplicates\nc) Keep inclusive bounds on both ends\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M7_4_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/4) + n^2 for n being a power of 4.\nChoices:\na) Θ(n^2 log n)\nb) Θ(n^1.4037)\nc) Θ(n^1.4037 log n)\nd) Θ(n^2)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP3024_401.",
        "target_text": "Question: Sorted array length n=3024. Decide if any pair sums to 401. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Brute force in Θ(n^2)\nc) Two-pointer scan in Θ(n)\nd) Hash set in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN751547_740448.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=751547, B=740448. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Hash addresses of first list\nc) Advance pointers; when one ends, jump to the other head\nd) Binary search on addresses\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS2.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 2 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Use BFS on substring graph\nc) Sort segments then concatenate\nd) Greedy left-to-right without memory\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS822.",
        "target_text": "Question: A queue via two stacks handles a burst of 822 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) Both Θ(log n)\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH4460171.",
        "target_text": "Question: Build a binary heap from n=4460171 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n log n)\nc) Θ(n^2)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF9521512_0.68.",
        "target_text": "Question: Chaining hash table with n=9521512 keys at load factor α=0.68. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(nα)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR491387.",
        "target_text": "Question: In a BST with distinct keys (id=491387), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Postorder\nc) Inorder\nd) Level-order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC700727.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=700727 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(V+E)\nc) Θ(E log V)\nd) Θ(V log V)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS59159.",
        "target_text": "Question: In KMP, what does LPS[59159] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Total distinct prefixes up to i\nc) Index of next occurrence\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST83561.",
        "target_text": "Question: Stability (id=83561): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX485991102.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈485991102. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Uses hashing to index unknown segments\nc) Sorts the array first\nd) Requires the array to be cyclic\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_4_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^1, f3=n^1 (log n)^4, f4=n^4?\nChoices:\na) Θ(n^1)\nb) Θ((log n)^4)\nc) Θ(n^1 (log n)^4)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S13311_419.",
        "target_text": "Question: Array length n=13311, find max-sum subarray of fixed length k=419. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(k log n)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(nk)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL77962.",
        "target_text": "Question: Check if a singly linked list of length n=77962 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Sort and compare with original\nc) Use a hash set of seen values\nd) Copy to array and two-pointer check\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS936.",
        "target_text": "Question: Compute stock span for 936 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Fenwick tree\nc) Hash table\nd) Priority queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ370755.",
        "target_text": "Question: For 370755 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Stack\nc) Deque\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA10_2897804.",
        "target_text": "Question: In a d-ary heap with d=10 and n=2897804 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log_10 n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.77.",
        "target_text": "Question: In separate chaining with load factor α=0.77, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1 + α)\nc) Θ(1/α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H841631247.",
        "target_text": "Question: For a balanced BST with n=841631247 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D951702.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 951702]. Why?\nChoices:\na) Self-loops must be absent\nb) Nonnegative weights ensure greedy optimality\nc) Distinct weights are required\nd) Graph must be undirected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Randomized hashing makes spurious matches rare. Variant RK257_1000000009.",
        "target_text": "Question: Rabin–Karp with base=257, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Trie of all substrings\nb) Suffix tree guaranteeing O(1) per char\nc) Use of a min-heap\nd) Low collision probability of rolling hash\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS914901.",
        "target_text": "Question: Heapsort stability check id=914901: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort is stable\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort always beats merge sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS6553021.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=6553021 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(1) expected\nc) Θ(log n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M3_6_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/6) + n^1 for n being a power of 6.\nChoices:\na) Θ(n^1 log n)\nb) Θ(n^0.6131)\nc) Θ(n^0.6131 log n)\nd) Θ(n^1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S13256_220.",
        "target_text": "Question: Array length n=13256, find max-sum subarray of fixed length k=220. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(k log n)\nc) Θ(n log n)\nd) Θ(nk)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR9.",
        "target_text": "Question: Reverse a singly linked list in groups of k=9 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(nk)\nc) Θ(n)\nd) Θ(k log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS4.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 4 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Use BFS on substring graph\nc) Sort segments then concatenate\nd) Greedy left-to-right without memory\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ937275.",
        "target_text": "Question: For 937275 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Stack\nc) Binary heap\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC74536275.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=74536275?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(log log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF1231355_0.38.",
        "target_text": "Question: Chaining hash table with n=1231355 keys at load factor α=0.38. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(α log α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS664852.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=664852-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(k)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D521415.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 521415]. Why?\nChoices:\na) Self-loops must be absent\nb) Graph must be undirected\nc) Distinct weights are required\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP51570.",
        "target_text": "Question: KMP matches a pattern of length m=51570 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Suffix array\nc) Z-array exclusively\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST366571.",
        "target_text": "Question: Stability (id=366571): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Quick sort (stable), Selection sort (unstable)\nc) Heap sort (stable), Merge sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS169590.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=169590 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(1) expected\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M6_3_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/3) + n^1 for n being a power of 3.\nChoices:\na) Θ(n^1.6309)\nb) Θ(n^1 log n)\nc) Θ(n^1)\nd) Θ(n^1.6309 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM58623.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=58623-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Scan linearly counting gaps\nc) Use a heap of differences\nd) Hash all present values then scan\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL93951.",
        "target_text": "Question: Check if a singly linked list of length n=93951 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Find middle, reverse second half, compare\nc) Copy to array and two-pointer check\nd) Use a hash set of seen values\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1830.",
        "target_text": "Question: Verify whether a pop sequence of length n=1830 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Backtrack with recursion in Θ(2^n)\nd) Sort both sequences then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ921220.",
        "target_text": "Question: Schedule 921220 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Circular queue\nc) Binary heap\nd) Stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH4150452.",
        "target_text": "Question: Build a binary heap from n=4150452 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH32768.",
        "target_text": "Question: In open addressing with double hashing over table size m=32768, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Choose m even and g(k) even\nc) Use g(k)=0 for some keys\nd) Make both hash functions identical\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS218472.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=218472-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(1)\nc) Θ(k)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST476662.",
        "target_text": "Question: MST question id=476662: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) MST is always unique in connected graphs\nd) MST minimizes number of edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP66151.",
        "target_text": "Question: KMP matches a pattern of length m=66151 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Rolling hash table\nc) Z-array exclusively\nd) Suffix array\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST279390.",
        "target_text": "Question: Stability (id=279390): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Quick sort (stable), Selection sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI98_219.",
        "target_text": "Question: Binary search over half-open range [98, 219)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Increase both lo and hi to skip duplicates\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_4_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^1, f3=n^1 (log n)^4, f4=n^8?\nChoices:\na) Θ((log n)^4)\nb) Θ(n^1 (log n)^4)\nc) Θ(n^1)\nd) Θ(n^8)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S10083_375.",
        "target_text": "Question: Array length n=10083, find max-sum subarray of fixed length k=375. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(k log n)\nc) Θ(n log n)\nd) Θ(nk)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR2.",
        "target_text": "Question: Reverse a singly linked list in groups of k=2 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n log k)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE83431.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=83431. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Max-heap\nc) Decreasing stack\nd) Binary search tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ59680.",
        "target_text": "Question: Schedule 59680 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Unordered array\nc) Binary heap\nd) Circular queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Tradeoff between branching factor and height. Variant DK3.",
        "target_text": "Question: In a d-ary heap (d=3), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) It makes the operation constant time\nb) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nc) No effect whatsoever\nd) It increases height linearly\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH2048.",
        "target_text": "Question: In open addressing with double hashing over table size m=2048, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) Make both hash functions identical\nc) Use g(k)=0 for some keys\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS673189.",
        "target_text": "Question: BST with parent pointers (id=673189): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) Use level-order and pick next node\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Reverse postorder traversal entirely\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST73557.",
        "target_text": "Question: MST question id=73557: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) MST minimizes number of edges\nc) MST is always unique in connected graphs\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP96365.",
        "target_text": "Question: KMP matches a pattern of length m=96365 in linear time using which table?\nChoices:\na) Suffix array\nb) Rolling hash table\nc) Z-array exclusively\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS519730.",
        "target_text": "Question: Heapsort stability check id=519730: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort always beats merge sort\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is stable\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU1263892.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=1263892. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Hashing with chaining\nc) Linear scan with early exit\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M9_3_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/3) + n^3 for n being a power of 3.\nChoices:\na) Θ(n^2.0 log n)\nb) Θ(n^3)\nc) Θ(n^3 log n)\nd) Θ(n^2.0)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S14466_142.",
        "target_text": "Question: Array length n=14466, find max-sum subarray of fixed length k=142. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(nk)\nd) Θ(k log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR10.",
        "target_text": "Question: Reverse a singly linked list in groups of k=10 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(k log n)\nb) Θ(nk)\nc) Θ(n log k)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS1431.",
        "target_text": "Question: Compute stock span for 1431 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Priority queue\nc) Hash table\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW10048_581.",
        "target_text": "Question: Sliding window maximum for array length n=10048 and window w=581. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(nw)\nd) Θ(w log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA5_86113316.",
        "target_text": "Question: In a d-ary heap with d=5 and n=86113316 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(log_5 n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF8698552_0.94.",
        "target_text": "Question: Chaining hash table with n=8698552 keys at load factor α=0.94. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS274891.",
        "target_text": "Question: BST with parent pointers (id=274891): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Use level-order and pick next node\nd) Reverse postorder traversal entirely\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR102334.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=102334 edges. What algorithmic idea achieves linear time?\nChoices:\na) Kruskal’s algorithm\nb) Dijkstra’s algorithm\nc) Tarjan’s low-link DFS\nd) Topological sorting\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB36873.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=36873. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Suffix automaton or suffix array + LCP\nc) Binary heap of substrings\nd) BST over all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST929589.",
        "target_text": "Question: Stability (id=929589): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Counting sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Geometric level distribution mirrors balanced trees. Variant SL0.25.",
        "target_text": "Question: Skip list with level promotion probability p=0.25: expected complexity of search/insert/delete?\nChoices:\na) Θ(1) for all three\nb) Θ(n) for all three\nc) Θ(√n) for all three\nd) Θ(log n) for all three\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M5_2_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/2) + n^2 for n being a power of 2.\nChoices:\na) Θ(n^2)\nb) Θ(n^2.3219)\nc) Θ(n^2 log n)\nd) Θ(n^2.3219 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R797020.",
        "target_text": "Question: Rotate an array right by r=797020 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Three-reversal method\nc) Heapify then extract\nd) Single-step rotate repeated r times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN78083_644485.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=78083, B=644485. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Advance pointers; when one ends, jump to the other head\nc) Reverse one list then compare\nd) Hash addresses of first list\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE28607.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=28607. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Decreasing stack\nc) Binary search tree\nd) Max-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA5708.",
        "target_text": "Question: Circular-array queue with capacity 5708: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require power-of-two capacity\nc) Require prime capacity\nd) Head==Tail means full\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA16_27299407.",
        "target_text": "Question: In a d-ary heap with d=16 and n=27299407 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(log_16 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF3669059_0.58.",
        "target_text": "Question: Chaining hash table with n=3669059 keys at load factor α=0.58. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(α log α)\nc) Θ(1 + α)\nd) Θ(nα)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR810137.",
        "target_text": "Question: In a BST with distinct keys (id=810137), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Level-order\nc) Postorder\nd) Preorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS889122_3733040.",
        "target_text": "Question: A directed graph with V=889122, E≈3733040. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When all vertices have outdegree ≥ 1\nc) Only if edges are unweighted\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB6230.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=6230. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Binary heap of substrings\nc) BST over all substrings\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS745390.",
        "target_text": "Question: Keys are integers in range [0..745390]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Quick sort\nc) Heap sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS4796606.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=4796606 typically runs in?\nChoices:\na) Θ(n) average\nb) O(log log n) average\nc) O(1) worst-case\nd) Θ(log n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T5_6_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^5, f3=n^5 (log n)^6, f4=n^9?\nChoices:\na) Θ(n^5)\nb) Θ((log n)^6)\nc) Θ(n^9)\nd) Θ(n^5 (log n)^6)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM730982.",
        "target_text": "Question: Find a majority element in an array of length n=730982 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Divide-and-conquer merges\nc) Counting sort\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR6.",
        "target_text": "Question: Reverse a singly linked list in groups of k=6 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(n)\nc) Θ(nk)\nd) Θ(k log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1086.",
        "target_text": "Question: Verify whether a pop sequence of length n=1086 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Backtrack with recursion in Θ(2^n)\nc) Use a queue to mirror the stack\nd) Sort both sequences then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW3744_906.",
        "target_text": "Question: Sliding window maximum for array length n=3744 and window w=906. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(w log n)\nc) Θ(nw)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL104_685491.",
        "target_text": "Question: Find the k=104-th largest element among n=685491 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Binary search on value domain\nc) Heapsort then index\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.26.",
        "target_text": "Question: In separate chaining with load factor α=0.26, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H493671015.",
        "target_text": "Question: For a balanced BST with n=493671015 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC601325.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=601325 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V log V)\nb) Θ(V+E)\nc) Θ(VE)\nd) Θ(E log V)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS83698.",
        "target_text": "Question: In KMP, what does LPS[83698] represent for a given pattern?\nChoices:\na) Total distinct prefixes up to i\nb) Number of mismatches up to i\nc) Index of next occurrence\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS628406.",
        "target_text": "Question: Keys are integers in range [0..628406]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Quick sort\nc) Counting sort\nd) Shell sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI23_4441.",
        "target_text": "Question: Binary search over half-open range [23, 4441)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Increase both lo and hi to skip duplicates\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Keep inclusive bounds on both ends\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M4_6_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/6) + n^3 for n being a power of 6.\nChoices:\na) Θ(n^3)\nb) Θ(n^0.7737)\nc) Θ(n^3 log n)\nd) Θ(n^0.7737 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S2910_457.",
        "target_text": "Question: Array length n=2910, find max-sum subarray of fixed length k=457. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n log n)\nc) Θ(k log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR3.",
        "target_text": "Question: Reverse a singly linked list in groups of k=3 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(nk)\nc) Θ(n)\nd) Θ(k log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1785.",
        "target_text": "Question: Verify whether a pop sequence of length n=1785 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Simulate using one stack in Θ(n)\nc) Backtrack with recursion in Θ(2^n)\nd) Use a queue to mirror the stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA367.",
        "target_text": "Question: Circular-array queue with capacity 367: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Head==Tail means full\nc) Require power-of-two capacity\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC4273956.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=4273956?\nChoices:\na) Θ(log n)\nb) Θ(log log n)\nc) Θ(n)\nd) Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.55.",
        "target_text": "Question: In separate chaining with load factor α=0.55, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR32227.",
        "target_text": "Question: In a BST with distinct keys (id=32227), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Preorder\nc) Level-order\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF21749.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=21749 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Equal runtime on all graphs\nc) Negative edge weights and negative cycles\nd) Only acyclic graphs\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB68474.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=68474. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) BST over all substrings\nc) Binary heap of substrings\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX7_256.",
        "target_text": "Question: Radix sort with d=7 digits and base b=256 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(b^d)\nc) Θ(d·n·log b)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU6259581.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=6259581. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Hashing with chaining\nc) Heap-based selection\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T5_6_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^5, f3=n^5 (log n)^6, f4=n^8?\nChoices:\na) Θ((log n)^6)\nb) Θ(n^8)\nc) Θ(n^5 (log n)^6)\nd) Θ(n^5)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R355311.",
        "target_text": "Question: Rotate an array right by r=355311 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Single-step rotate repeated r times\nc) Selection sort then shift\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR9.",
        "target_text": "Question: Reverse a singly linked list in groups of k=9 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(n)\nc) Θ(k log n)\nd) Θ(n log k)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE63460.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=63460. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Decreasing stack\nc) Max-heap\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS3608.",
        "target_text": "Question: A queue via two stacks handles a burst of 3608 operations. Amortized costs?\nChoices:\na) ENQUEUE and DEQUEUE both amortized Θ(1)\nb) Both Θ(log n)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL303_449859.",
        "target_text": "Question: Find the k=303-th largest element among n=449859 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Binary search on value domain\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.14.",
        "target_text": "Question: In separate chaining with load factor α=1.14, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(1/α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H708523843.",
        "target_text": "Question: For a balanced BST with n=708523843 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS531042_1971692.",
        "target_text": "Question: A directed graph with V=531042, E≈1971692. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) Only if the graph is connected\nc) When all vertices have outdegree ≥ 1\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB61939.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=61939. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) Queue of rolling hashes only\nc) Suffix automaton or suffix array + LCP\nd) BST over all substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS70.",
        "target_text": "Question: Array is nearly sorted with at most 70 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Insertion sort\nc) Heap sort\nd) Shell sort with fixed gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS8637751.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=8637751 typically runs in?\nChoices:\na) O(1) worst-case\nb) Θ(n) average\nc) O(log log n) average\nd) Θ(log n) average\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M7_5_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/5) + n^1 for n being a power of 5.\nChoices:\na) Θ(n^1)\nb) Θ(n^1.2091 log n)\nc) Θ(n^1.2091)\nd) Θ(n^1 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM400828.",
        "target_text": "Question: Find a majority element in an array of length n=400828 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Counting sort\nc) Divide-and-conquer merges\nd) Binary search on value domain\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL67732.",
        "target_text": "Question: Check if a singly linked list of length n=67732 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Use a hash set of seen values\nc) Copy to array and two-pointer check\nd) Sort and compare with original\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE88139.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=88139. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Queue\nc) Binary search tree\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA2865.",
        "target_text": "Question: Circular-array queue with capacity 2865: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Track count or keep one slot empty\nc) Head==Tail means full\nd) Require prime capacity\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL731_911073.",
        "target_text": "Question: Find the k=731-th largest element among n=911073 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Deterministic selection (median-of-medians)\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.89.",
        "target_text": "Question: In separate chaining with load factor α=0.89, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(α)\nd) Θ(1/α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR154565.",
        "target_text": "Question: In a BST with distinct keys (id=154565), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Postorder\nc) Level-order\nd) Preorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR490781.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=490781 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Kruskal’s algorithm\nc) Topological sorting\nd) Tarjan’s low-link DFS\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS83583.",
        "target_text": "Question: In KMP, what does LPS[83583] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Index of next occurrence\nc) Total distinct prefixes up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS331.",
        "target_text": "Question: Array is nearly sorted with at most 331 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Insertion sort\nc) Heap sort\nd) Radix sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX271900070.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈271900070. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Uses hashing to index unknown segments\nc) Requires the array to be cyclic\nd) Sorts the array first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M8_2_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/2) + n^0 for n being a power of 2.\nChoices:\na) Θ(n^3.0 log n)\nb) Θ(n^0 log n)\nc) Θ(n^0)\nd) Θ(n^3.0)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM810730.",
        "target_text": "Question: Find a majority element in an array of length n=810730 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Boyer–Moore voting with verification\nc) Binary search on value domain\nd) Counting sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR8.",
        "target_text": "Question: Reverse a singly linked list in groups of k=8 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(n)\nc) Θ(k log n)\nd) Θ(n log k)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP786.",
        "target_text": "Question: Verify whether a pop sequence of length n=786 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Sort both sequences then compare\nc) Simulate using one stack in Θ(n)\nd) Backtrack with recursion in Θ(2^n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ199591.",
        "target_text": "Question: Schedule 199591 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Unordered array\nc) Stack\nd) Circular queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL517_317350.",
        "target_text": "Question: Find the k=517-th largest element among n=317350 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Build max-heap and extract k times\nc) Heapsort then index\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH8192.",
        "target_text": "Question: In open addressing with double hashing over table size m=8192, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) Use g(k)=0 for some keys\nc) Choose m even and g(k) even\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H591566602.",
        "target_text": "Question: For a balanced BST with n=591566602 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC257346.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=257346 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V log V)\nb) Θ(VE)\nc) Θ(V+E)\nd) Θ(E log V)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP16427.",
        "target_text": "Question: KMP matches a pattern of length m=16427 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Z-array exclusively\nc) Suffix array\nd) Rolling hash table\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB5792332.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=5792332 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(log n)\nc) Ω(n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI73_2053.",
        "target_text": "Question: Binary search over half-open range [73, 2053)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Increase both lo and hi to skip duplicates\nc) Keep inclusive bounds on both ends\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_2_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^4, f3=n^4 (log n)^2, f4=n^11?\nChoices:\na) Θ(n^4 (log n)^2)\nb) Θ(n^4)\nc) Θ(n^11)\nd) Θ((log n)^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM72836.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=72836-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Use a heap of differences\nc) Scan linearly counting gaps\nd) Binary search on index vs value gap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL19362.",
        "target_text": "Question: Check if a singly linked list of length n=19362 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Sort and compare with original\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1530.",
        "target_text": "Question: Verify whether a pop sequence of length n=1530 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW5545_228.",
        "target_text": "Question: Sliding window maximum for array length n=5545 and window w=228. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(nw)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA10_99811393.",
        "target_text": "Question: In a d-ary heap with d=10 and n=99811393 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(log_10 n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF7735042_0.48.",
        "target_text": "Question: Chaining hash table with n=7735042 keys at load factor α=0.48. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS745274.",
        "target_text": "Question: BST with parent pointers (id=745274): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Use level-order and pick next node\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Always climb to root then go right once\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS394634_809517.",
        "target_text": "Question: A directed graph with V=394634, E≈809517. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) Only if edges are unweighted\nc) When all vertices have outdegree ≥ 1\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS87785.",
        "target_text": "Question: In KMP, what does LPS[87785] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Index of next occurrence\nc) Total distinct prefixes up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST677183.",
        "target_text": "Question: Stability (id=677183): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Counting sort (unstable)\nd) Merge sort (stable), Heap sort (unstable)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX438828949.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈438828949. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Sorts the array first\nc) Uses hashing to index unknown segments\nd) Requires the array to be cyclic\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T1_4_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^1, f3=n^1 (log n)^4, f4=n^8?\nChoices:\na) Θ(n^1 (log n)^4)\nb) Θ((log n)^4)\nc) Θ(n^8)\nd) Θ(n^1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S4228_387.",
        "target_text": "Question: Array length n=4228, find max-sum subarray of fixed length k=387. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN383953_651309.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=383953, B=651309. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Advance pointers; when one ends, jump to the other head\nc) Hash addresses of first list\nd) Reverse one list then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP664.",
        "target_text": "Question: Verify whether a pop sequence of length n=664 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Use a queue to mirror the stack\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ766742.",
        "target_text": "Question: Schedule 766742 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Stack\nc) Circular queue\nd) Unordered array\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM331_119075.",
        "target_text": "Question: Merge k=331 sorted streams totaling N=119075 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(k log N)\nc) Θ(N log N)\nd) Θ(N + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.62.",
        "target_text": "Question: In separate chaining with load factor α=0.62, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(α)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS237987.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=237987-th smallest?\nChoices:\na) Θ(log n)\nb) Θ(k)\nc) Θ(√n)\nd) Θ(1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST808572.",
        "target_text": "Question: MST question id=808572: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) MST minimizes number of edges\nc) Prim requires the entire edge set to be sorted first\nd) Kruskal adds the smallest edge that doesn't create a cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP25821.",
        "target_text": "Question: KMP matches a pattern of length m=25821 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) LPS (failure) function\nc) Suffix array\nd) Rolling hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS671529.",
        "target_text": "Question: Keys are integers in range [0..671529]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Quick sort\nc) Shell sort\nd) Heap sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS441745.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=441745 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(1) expected\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M3_3_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/3) + n^3 for n being a power of 3.\nChoices:\na) Θ(n^1.0)\nb) Θ(n^3 log n)\nc) Θ(n^1.0 log n)\nd) Θ(n^3)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM676796.",
        "target_text": "Question: Find a majority element in an array of length n=676796 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Counting sort\nc) Boyer–Moore voting with verification\nd) Divide-and-conquer merges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL67468.",
        "target_text": "Question: Check if a singly linked list of length n=67468 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Find middle, reverse second half, compare\nc) Copy to array and two-pointer check\nd) Sort and compare with original\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE64958.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=64958. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Decreasing stack\nc) Binary search tree\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW5729_447.",
        "target_text": "Question: Sliding window maximum for array length n=5729 and window w=447. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(nw)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL932_878744.",
        "target_text": "Question: Find the k=932-th largest element among n=878744 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Build max-heap and extract k times\nc) Heapsort then index\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.36.",
        "target_text": "Question: In separate chaining with load factor α=0.36, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS668562.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=668562-th smallest?\nChoices:\na) Θ(1)\nb) Θ(k)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP264767.",
        "target_text": "Question: Test bipartiteness (id=264767) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Check all degrees even\nc) Sort vertices and deduplicate\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS36290.",
        "target_text": "Question: In KMP, what does LPS[36290] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Total distinct prefixes up to i\nc) Index of next occurrence\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB21884740.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=21884740 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n log n)\nc) Ω(n^2)\nd) Ω(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI91_3833.",
        "target_text": "Question: Binary search over half-open range [91, 3833)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Increase both lo and hi to skip duplicates\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M6_6_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/6) + n^4 for n being a power of 6.\nChoices:\na) Θ(n^4 log n)\nb) Θ(n^4)\nc) Θ(n^1.0)\nd) Θ(n^1.0 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM17557.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=17557-th missing positive. What approach attains logarithmic time?\nChoices:\na) Use a heap of differences\nb) Binary search on index vs value gap\nc) Hash all present values then scan\nd) Scan linearly counting gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR5.",
        "target_text": "Question: Reverse a singly linked list in groups of k=5 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(n log k)\nd) Θ(k log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP139.",
        "target_text": "Question: Verify whether a pop sequence of length n=139 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Backtrack with recursion in Θ(2^n)\nc) Simulate using one stack in Θ(n)\nd) Use a queue to mirror the stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ635080.",
        "target_text": "Question: Schedule 635080 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Stack\nc) Binary heap\nd) Circular queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC26212382.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=26212382?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.34.",
        "target_text": "Question: In separate chaining with load factor α=1.34, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR507651.",
        "target_text": "Question: In a BST with distinct keys (id=507651), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Postorder\nc) Level-order\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP468685.",
        "target_text": "Question: Test bipartiteness (id=468685) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Check all degrees even\nd) Compute an MST then inspect edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP56934.",
        "target_text": "Question: KMP matches a pattern of length m=56934 in linear time using which table?\nChoices:\na) Suffix array\nb) Rolling hash table\nc) LPS (failure) function\nd) Z-array exclusively\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS797383.",
        "target_text": "Question: Keys are integers in range [0..797383]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Quick sort\nc) Counting sort\nd) Shell sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX806652189.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈806652189. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Sorts the array first\nc) Doubles the bound to bracket, then binary search\nd) Requires the array to be cyclic\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_3_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^4, f3=n^4 (log n)^3, f4=n^6?\nChoices:\na) Θ(n^4 (log n)^3)\nb) Θ(n^4)\nc) Θ((log n)^3)\nd) Θ(n^6)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP3532_2592.",
        "target_text": "Question: Sorted array length n=3532. Decide if any pair sums to 2592. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Brute force in Θ(n^2)\nc) Divide and conquer in Θ(n log n)\nd) Two-pointer scan in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN764434_454068.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=764434, B=454068. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Binary search on addresses\nc) Hash addresses of first list\nd) Reverse one list then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS3363.",
        "target_text": "Question: Compute stock span for 3363 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Priority queue\nc) Hash table\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ315810.",
        "target_text": "Question: For 315810 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Stack\nc) Queue\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL441_864886.",
        "target_text": "Question: Find the k=441-th largest element among n=864886 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Binary search on value domain\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.88.",
        "target_text": "Question: In separate chaining with load factor α=0.88, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H493697969.",
        "target_text": "Question: For a balanced BST with n=493697969 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS223808_2172198.",
        "target_text": "Question: A directed graph with V=223808, E≈2172198. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if edges are unweighted\nc) When it is a DAG (no directed cycles)\nd) Only if the graph is connected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP14673.",
        "target_text": "Question: KMP matches a pattern of length m=14673 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Rolling hash table\nc) Suffix array\nd) Z-array exclusively\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS930666.",
        "target_text": "Question: Heapsort stability check id=930666: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is not stable by default\nc) Heapsort is stable\nd) Heapsort needs extra Θ(n) memory\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS3409911.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=3409911 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(1) expected\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M8_3_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/3) + n^2 for n being a power of 3.\nChoices:\na) Θ(n^1.8928)\nb) Θ(n^1.8928 log n)\nc) Θ(n^2)\nd) Θ(n^2 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP11040_1440.",
        "target_text": "Question: Sorted array length n=11040. Decide if any pair sums to 1440. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Hash set in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN537002.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 537002, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Traverse from head to find predecessor\nc) Reverse list then delete head\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE30443.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=30443. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Queue\nc) Decreasing stack\nd) Binary search tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA5197.",
        "target_text": "Question: Circular-array queue with capacity 5197: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require prime capacity\nc) Require power-of-two capacity\nd) Head==Tail means full\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA12_75173766.",
        "target_text": "Question: In a d-ary heap with d=12 and n=75173766 nodes, what is the height?\nChoices:\na) Θ(log_12 n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Threshold-based expansion preserves performance. Variant RS0.5.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.5?\nChoices:\na) To reduce memory usage to exact size\nb) To sort keys implicitly\nc) To maintain key stability\nd) To keep expected O(1) operations\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR752330.",
        "target_text": "Question: In a BST with distinct keys (id=752330), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Inorder\nc) Preorder\nd) Level-order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP705639.",
        "target_text": "Question: Test bipartiteness (id=705639) of an undirected graph efficiently. Which method works?\nChoices:\na) Attempt 2-coloring via BFS; failure indicates odd cycle\nb) Check all degrees even\nc) Sort vertices and deduplicate\nd) Compute an MST then inspect edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB45954.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=45954. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Suffix automaton or suffix array + LCP\nc) Binary heap of substrings\nd) BST over all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS692431.",
        "target_text": "Question: Keys are integers in range [0..692431]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Shell sort\nc) Quick sort\nd) Heap sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU8136001.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=8136001. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Linear scan with early exit\nc) Hashing with chaining\nd) Heap-based selection\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M2_4_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/4) + n^1 for n being a power of 4.\nChoices:\na) Θ(n^1 log n)\nb) Θ(n^0.5)\nc) Θ(n^0.5 log n)\nd) Θ(n^1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R428216.",
        "target_text": "Question: Rotate an array right by r=428216 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Three-reversal method\nc) Heapify then extract\nd) Single-step rotate repeated r times\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK67_8231.",
        "target_text": "Question: Merge k=67 sorted linked lists totaling n=8231 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n + k^2)\nc) Θ(n log k)\nd) Θ(k n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS1290.",
        "target_text": "Question: Compute stock span for 1290 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Hash table\nc) Priority queue\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW6052_62.",
        "target_text": "Question: Sliding window maximum for array length n=6052 and window w=62. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(w log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC66578969.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=66578969?\nChoices:\na) Θ(log log n)\nb) Θ(1)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.8.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.8?\nChoices:\na) To maintain key stability\nb) To sort keys implicitly\nc) To keep expected O(1) operations\nd) To reduce memory usage to exact size\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H28168719.",
        "target_text": "Question: For a balanced BST with n=28168719 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP896846.",
        "target_text": "Question: Test bipartiteness (id=896846) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Sort vertices and deduplicate\nc) Check all degrees even\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB73199.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=73199. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) BST over all substrings\nc) Binary heap of substrings\nd) Queue of rolling hashes only\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS540.",
        "target_text": "Question: Array is nearly sorted with at most 540 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Insertion sort\nc) Shell sort with fixed gaps\nd) Radix sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI23_1929.",
        "target_text": "Question: Binary search over half-open range [23, 1929)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Increase both lo and hi to skip duplicates\nc) Maintain lo < hi; set lo = mid + 1 or hi = mid\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M9_4_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 9·T(n/4) + n^1 for n being a power of 4.\nChoices:\na) Θ(n^1.585)\nb) Θ(n^1)\nc) Θ(n^1 log n)\nd) Θ(n^1.585 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM358167.",
        "target_text": "Question: Find a majority element in an array of length n=358167 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Divide-and-conquer merges\nc) Counting sort\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN767804.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 767804, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Traverse from head to find predecessor\nc) Impossible under any model\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP345.",
        "target_text": "Question: Verify whether a pop sequence of length n=345 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Simulate using one stack in Θ(n)\nc) Backtrack with recursion in Θ(2^n)\nd) Sort both sequences then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ684425.",
        "target_text": "Question: Schedule 684425 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Stack\nc) Unordered array\nd) Circular queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA12_58822203.",
        "target_text": "Question: In a d-ary heap with d=12 and n=58822203 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(log_12 n)\nc) Θ(n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Adversarial patterns are neutralized by random choice. Variant UH10000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=10000 slots yields what benefit?\nChoices:\na) Cryptographic security by default\nb) Eliminates need for resizing\nc) Zero collisions guaranteed\nd) Expected constant-time operations against adversaries\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H13975692.",
        "target_text": "Question: For a balanced BST with n=13975692 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC2886.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=2886 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(V log V)\nc) Θ(VE)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP93513.",
        "target_text": "Question: KMP matches a pattern of length m=93513 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Suffix array\nc) Rolling hash table\nd) Z-array exclusively\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB9176130.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=9176130 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n)\nc) Ω(n log n)\nd) Ω(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX837197665.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈837197665. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Sorts the array first\nc) Requires the array to be cyclic\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M7_4_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/4) + n^0 for n being a power of 4.\nChoices:\na) Θ(n^1.4037)\nb) Θ(n^0)\nc) Θ(n^1.4037 log n)\nd) Θ(n^0 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P220225.",
        "target_text": "Question: Answer 220225 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Recompute sums per query in Θ(n)\nb) Use a stack to store partial sums\nc) Build prefix-sum array; O(1) per query\nd) Sort once and binary search per query\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN857705_544983.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=857705, B=544983. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Binary search on addresses\nc) Advance pointers; when one ends, jump to the other head\nd) Hash addresses of first list\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE40848.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=40848. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Binary search tree\nc) Queue\nd) Max-heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B34623.",
        "target_text": "Question: Run BFS on an unweighted graph with 34623 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) Minimum memory footprint\nc) Nondecreasing distance from source\nd) All simple paths before all edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH4820397.",
        "target_text": "Question: Build a binary heap from n=4820397 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(n^2)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR218174.",
        "target_text": "Question: In a BST with distinct keys (id=218174), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Inorder\nc) Level-order\nd) Postorder\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST922827.",
        "target_text": "Question: MST question id=922827: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) MST is always unique in connected graphs\nc) Prim requires the entire edge set to be sorted first\nd) MST minimizes number of edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z447753.",
        "target_text": "Question: For string S (id=447753), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Next index of S[i]\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of distinct substrings up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB80627791.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=80627791 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n)\nc) Ω(log n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX435747453.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈435747453. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Sorts the array first\nc) Requires the array to be cyclic\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M3_3_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/3) + n^4 for n being a power of 3.\nChoices:\na) Θ(n^1.0 log n)\nb) Θ(n^4 log n)\nc) Θ(n^1.0)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP12982_2834.",
        "target_text": "Question: Sorted array length n=12982. Decide if any pair sums to 2834. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Divide and conquer in Θ(n log n)\nc) Hash set in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL65442.",
        "target_text": "Question: Check if a singly linked list of length n=65442 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Use a hash set of seen values\nc) Find middle, reverse second half, compare\nd) Sort and compare with original\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE66827.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=66827. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Decreasing stack\nc) Queue\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS3043.",
        "target_text": "Question: A queue via two stacks handles a burst of 3043 operations. Amortized costs?\nChoices:\na) ENQUEUE and DEQUEUE both amortized Θ(1)\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) Both Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL92_732315.",
        "target_text": "Question: Find the k=92-th largest element among n=732315 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Build max-heap and extract k times\nc) Heapsort then index\nd) Binary search on value domain\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.92.",
        "target_text": "Question: In separate chaining with load factor α=0.92, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(α)\nc) Θ(1/α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H771501203.",
        "target_text": "Question: For a balanced BST with n=771501203 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(log log n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF36363.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=36363 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Equal runtime on all graphs\nc) Only acyclic graphs\nd) Negative edge weights and negative cycles\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z932852.",
        "target_text": "Question: For string S (id=932852), what does Z[i] measure?\nChoices:\na) Number of distinct substrings up to i\nb) Length of the longest prefix starting at i matching S[0..]\nc) Next index of S[i]\nd) Number of mismatches at i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS919884.",
        "target_text": "Question: Heapsort stability check id=919884: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort always beats merge sort\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is stable\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS1950338.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=1950338 typically runs in?\nChoices:\na) O(1) worst-case\nb) Θ(n) average\nc) Θ(log n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M7_3_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/3) + n^0 for n being a power of 3.\nChoices:\na) Θ(n^0 log n)\nb) Θ(n^1.7712 log n)\nc) Θ(n^1.7712)\nd) Θ(n^0)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S9212_155.",
        "target_text": "Question: Array length n=9212, find max-sum subarray of fixed length k=155. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(n log n)\nd) Θ(k log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK9_531.",
        "target_text": "Question: Merge k=9 sorted linked lists totaling n=531 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n log k)\nc) Θ(n log n)\nd) Θ(n + k^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE9347.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=9347. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Queue\nc) Max-heap\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ952602.",
        "target_text": "Question: For 952602 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Stack\nc) Deque\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC15611571.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=15611571?\nChoices:\na) Θ(log log n)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF4611379_0.32.",
        "target_text": "Question: Chaining hash table with n=4611379 keys at load factor α=0.32. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(nα)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA653995.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=653995 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Euler tour + RMQ yields O(1) per query\nc) Sort node labels then binary search\nd) Naive parent climbing O(n) per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC881296.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=881296 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(VE)\nc) Θ(V log V)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z694723.",
        "target_text": "Question: For string S (id=694723), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Number of distinct substrings up to i\nc) Next index of S[i]\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS448779.",
        "target_text": "Question: Heapsort stability check id=448779: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is stable\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS6358346.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=6358346 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(n log n)\nc) Θ(1) expected\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T2_4_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^2, f3=n^2 (log n)^4, f4=n^4?\nChoices:\na) Θ(n^4)\nb) Θ(n^2 (log n)^4)\nc) Θ(n^2)\nd) Θ((log n)^4)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R658780.",
        "target_text": "Question: Rotate an array right by r=658780 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Single-step rotate repeated r times\nc) Selection sort then shift\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR3.",
        "target_text": "Question: Reverse a singly linked list in groups of k=3 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(n log k)\nd) Θ(k log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS648.",
        "target_text": "Question: Compute stock span for 648 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Priority queue\nc) Hash table\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ892919.",
        "target_text": "Question: Schedule 892919 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Circular queue\nc) Binary heap\nd) Stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH7441114.",
        "target_text": "Question: Build a binary heap from n=7441114 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(log n)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.97.",
        "target_text": "Question: In separate chaining with load factor α=0.97, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(1/α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS815778.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=815778-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(k)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS145536_976490.",
        "target_text": "Question: A directed graph with V=145536, E≈976490. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When it is a DAG (no directed cycles)\nc) When all vertices have outdegree ≥ 1\nd) Only if edges are unweighted\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN666879.",
        "target_text": "Question: Check anagrams for strings of length n=666879 over fixed alphabet. Optimal approach?\nChoices:\na) Use a stack\nb) DFS on character graph\nc) Count character frequencies in Θ(n)\nd) Sort both in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX8_2.",
        "target_text": "Question: Radix sort with d=8 digits and base b=2 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(d·(n + b))\nc) Θ(n log n)\nd) Θ(d·n·log b)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU1692727.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=1692727. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Linear scan with early exit\nc) Heap-based selection\nd) Hashing with chaining\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_6_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^4, f3=n^4 (log n)^6, f4=n^7?\nChoices:\na) Θ(n^4)\nb) Θ(n^7)\nc) Θ(n^4 (log n)^6)\nd) Θ((log n)^6)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM312279.",
        "target_text": "Question: Find a majority element in an array of length n=312279 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Boyer–Moore voting with verification\nc) Counting sort\nd) Divide-and-conquer merges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL35103.",
        "target_text": "Question: Check if a singly linked list of length n=35103 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Sort and compare with original\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1452.",
        "target_text": "Question: Verify whether a pop sequence of length n=1452 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Use a queue to mirror the stack\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA5029.",
        "target_text": "Question: Circular-array queue with capacity 5029: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Head==Tail means full\nc) Require prime capacity\nd) Require power-of-two capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM461_108820.",
        "target_text": "Question: Merge k=461 sorted streams totaling N=108820 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(k log N)\nc) Θ(N + k^2)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH4096.",
        "target_text": "Question: In open addressing with double hashing over table size m=4096, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) Use g(k)=0 for some keys\nc) Choose m even and g(k) even\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR290427.",
        "target_text": "Question: In a BST with distinct keys (id=290427), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Postorder\nc) Level-order\nd) Preorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP104644.",
        "target_text": "Question: Test bipartiteness (id=104644) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Sort vertices and deduplicate\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Compute an MST then inspect edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Randomized hashing makes spurious matches rare. Variant RK257_1000000009.",
        "target_text": "Question: Rabin–Karp with base=257, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Suffix tree guaranteeing O(1) per char\nb) Use of a min-heap\nc) Low collision probability of rolling hash\nd) Trie of all substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS540495.",
        "target_text": "Question: Heapsort stability check id=540495: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort is stable\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort always beats merge sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI92_1963.",
        "target_text": "Question: Binary search over half-open range [92, 1963)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Keep inclusive bounds on both ends\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Increase both lo and hi to skip duplicates\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T4_2_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^4, f3=n^4 (log n)^2, f4=n^11?\nChoices:\na) Θ(n^11)\nb) Θ((log n)^2)\nc) Θ(n^4 (log n)^2)\nd) Θ(n^4)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P748268.",
        "target_text": "Question: Answer 748268 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Use a stack to store partial sums\nb) Recompute sums per query in Θ(n)\nc) Sort once and binary search per query\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK16_2998.",
        "target_text": "Question: Merge k=16 sorted linked lists totaling n=2998 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n log n)\nc) Θ(n + k^2)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP567.",
        "target_text": "Question: Verify whether a pop sequence of length n=567 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA7354.",
        "target_text": "Question: Circular-array queue with capacity 7354: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Require prime capacity\nc) Track count or keep one slot empty\nd) Head==Tail means full\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL620_950207.",
        "target_text": "Question: Find the k=620-th largest element among n=950207 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Deterministic selection (median-of-medians)\nc) Binary search on value domain\nd) Heapsort then index\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF695579_0.27.",
        "target_text": "Question: Chaining hash table with n=695579 keys at load factor α=0.27. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(nα)\nc) Θ(1 + α)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA648904.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=648904 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) Euler tour + RMQ yields O(1) per query\nc) DFS from root each time\nd) Sort node labels then binary search\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR994715.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=994715 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Kruskal’s algorithm\nc) Tarjan’s low-link DFS\nd) Dijkstra’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP41670.",
        "target_text": "Question: KMP matches a pattern of length m=41670 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Suffix array\nc) Z-array exclusively\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB6287039.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=6287039 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n^2)\nc) Ω(n)\nd) Ω(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS7927379.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=7927379 typically runs in?\nChoices:\na) Θ(log n) average\nb) O(1) worst-case\nc) Θ(n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M8_4_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/4) + n^0 for n being a power of 4.\nChoices:\na) Θ(n^0)\nb) Θ(n^1.5)\nc) Θ(n^0 log n)\nd) Θ(n^1.5 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S10535_218.",
        "target_text": "Question: Array length n=10535, find max-sum subarray of fixed length k=218. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR6.",
        "target_text": "Question: Reverse a singly linked list in groups of k=6 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(n log k)\nc) Θ(n)\nd) Θ(k log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE56063.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=56063. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Decreasing stack\nc) Binary search tree\nd) Max-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW2508_28.",
        "target_text": "Question: Sliding window maximum for array length n=2508 and window w=28. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(nw)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC91685875.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=91685875?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF8101616_0.24.",
        "target_text": "Question: Chaining hash table with n=8101616 keys at load factor α=0.24. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(α log α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR465474.",
        "target_text": "Question: In a BST with distinct keys (id=465474), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Inorder\nc) Level-order\nd) Postorder\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP760893.",
        "target_text": "Question: Test bipartiteness (id=760893) of an undirected graph efficiently. Which method works?\nChoices:\na) Attempt 2-coloring via BFS; failure indicates odd cycle\nb) Check all degrees even\nc) Compute an MST then inspect edges\nd) Sort vertices and deduplicate\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP34844.",
        "target_text": "Question: KMP matches a pattern of length m=34844 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) Rolling hash table\nc) Suffix array\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB29128551.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=29128551 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n log n)\nc) Ω(n)\nd) Ω(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI59_1704.",
        "target_text": "Question: Binary search over half-open range [59, 1704)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Keep inclusive bounds on both ends\nc) Increase both lo and hi to skip duplicates\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T5_3_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^5, f3=n^5 (log n)^3, f4=n^12?\nChoices:\na) Θ(n^12)\nb) Θ(n^5)\nc) Θ(n^5 (log n)^3)\nd) Θ((log n)^3)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM13336.",
        "target_text": "Question: Find a majority element in an array of length n=13336 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Binary search on value domain\nc) Counting sort\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN364668_863351.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=364668, B=863351. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Advance pointers; when one ends, jump to the other head\nc) Binary search on addresses\nd) Reverse one list then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS5.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 5 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use BFS on substring graph\nb) Use two stacks for counts and fragments\nc) Sort segments then concatenate\nd) Greedy left-to-right without memory\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ874180.",
        "target_text": "Question: Schedule 874180 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Stack\nc) Circular queue\nd) Unordered array\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH8377443.",
        "target_text": "Question: Build a binary heap from n=8377443 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF3549864_0.27.",
        "target_text": "Question: Chaining hash table with n=3549864 keys at load factor α=0.27. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(α log α)\nc) Θ(log n)\nd) Θ(nα)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS814747.",
        "target_text": "Question: BST with parent pointers (id=814747): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Use level-order and pick next node\nd) Always climb to root then go right once\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR120158.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=120158 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Dijkstra’s algorithm\nc) Kruskal’s algorithm\nd) Tarjan’s low-link DFS\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP63696.",
        "target_text": "Question: KMP matches a pattern of length m=63696 in linear time using which table?\nChoices:\na) Suffix array\nb) LPS (failure) function\nc) Rolling hash table\nd) Z-array exclusively\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST926609.",
        "target_text": "Question: Stability (id=926609): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Quick sort (stable), Selection sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU6106278.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=6106278. What guarantees O(log n)?\nChoices:\na) Heap-based selection\nb) Binary search with left/right bias\nc) Linear scan with early exit\nd) Hashing with chaining\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M4_6_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/6) + n^4 for n being a power of 6.\nChoices:\na) Θ(n^0.7737)\nb) Θ(n^4 log n)\nc) Θ(n^0.7737 log n)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S4250_34.",
        "target_text": "Question: Array length n=4250, find max-sum subarray of fixed length k=34. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN400819_788166.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=400819, B=788166. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Binary search on addresses\nc) Reverse one list then compare\nd) Advance pointers; when one ends, jump to the other head\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS3894.",
        "target_text": "Question: Compute stock span for 3894 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Fenwick tree\nc) Monotonic stack\nd) Hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS5357.",
        "target_text": "Question: A queue via two stacks handles a burst of 5357 operations. Amortized costs?\nChoices:\na) ENQUEUE and DEQUEUE both amortized Θ(1)\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) Both Θ(log n)\nd) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH1847296.",
        "target_text": "Question: Build a binary heap from n=1847296 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(n^2)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.58.",
        "target_text": "Question: In separate chaining with load factor α=0.58, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(1/α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR795965.",
        "target_text": "Question: In a BST with distinct keys (id=795965), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Postorder\nc) Preorder\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR149925.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=149925 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Kruskal’s algorithm\nc) Tarjan’s low-link DFS\nd) Dijkstra’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP64021.",
        "target_text": "Question: KMP matches a pattern of length m=64021 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Z-array exclusively\nc) Rolling hash table\nd) Suffix array\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS290519.",
        "target_text": "Question: Keys are integers in range [0..290519]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Heap sort\nc) Counting sort\nd) Quick sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI68_1407.",
        "target_text": "Question: Binary search over half-open range [68, 1407)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Keep inclusive bounds on both ends\nc) Increase both lo and hi to skip duplicates\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M6_3_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/3) + n^0 for n being a power of 3.\nChoices:\na) Θ(n^0)\nb) Θ(n^0 log n)\nc) Θ(n^1.6309 log n)\nd) Θ(n^1.6309)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Window maintenance preserves O(1) updates per shift. Variant S2850_236.",
        "target_text": "Question: Array length n=2850, find max-sum subarray of fixed length k=236. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(n log n)\nd) Θ(k log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR2.",
        "target_text": "Question: Reverse a singly linked list in groups of k=2 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(n log k)\nc) Θ(nk)\nd) Θ(k log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS5.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 5 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Greedy left-to-right without memory\nb) Use BFS on substring graph\nc) Use two stacks for counts and fragments\nd) Sort segments then concatenate\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW5762_828.",
        "target_text": "Question: Sliding window maximum for array length n=5762 and window w=828. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(nw)\nc) Θ(n log n)\nd) Θ(w log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC57998418.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=57998418?\nChoices:\na) Θ(n)\nb) Θ(1)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.14.",
        "target_text": "Question: In separate chaining with load factor α=1.14, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H654446101.",
        "target_text": "Question: For a balanced BST with n=654446101 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(√n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST993141.",
        "target_text": "Question: MST question id=993141: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) MST is always unique in connected graphs\nc) Prim requires the entire edge set to be sorted first\nd) MST minimizes number of edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB78715.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=78715. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) BST over all substrings\nc) Queue of rolling hashes only\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS195.",
        "target_text": "Question: Array is nearly sorted with at most 195 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Insertion sort\nc) Heap sort\nd) Radix sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI78_2723.",
        "target_text": "Question: Binary search over half-open range [78, 2723)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Use mid=(lo+hi)/2 without overflow checks\nc) Increase both lo and hi to skip duplicates\nd) Keep inclusive bounds on both ends\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T2_6_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^2, f3=n^2 (log n)^6, f4=n^6?\nChoices:\na) Θ((log n)^6)\nb) Θ(n^2 (log n)^6)\nc) Θ(n^2)\nd) Θ(n^6)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R552857.",
        "target_text": "Question: Rotate an array right by r=552857 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Heapify then extract\nc) Selection sort then shift\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN308851_469029.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=308851, B=469029. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Advance pointers; when one ends, jump to the other head\nc) Reverse one list then compare\nd) Binary search on addresses\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS4541.",
        "target_text": "Question: Compute stock span for 4541 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Monotonic stack\nc) Fenwick tree\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW6659_654.",
        "target_text": "Question: Sliding window maximum for array length n=6659 and window w=654. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(n)\nc) Θ(w log n)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC39254428.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=39254428?\nChoices:\na) Θ(log log n)\nb) Θ(1)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.66.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.66?\nChoices:\na) To sort keys implicitly\nb) To reduce memory usage to exact size\nc) To maintain key stability\nd) To keep expected O(1) operations\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR218546.",
        "target_text": "Question: In a BST with distinct keys (id=218546), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Level-order\nc) Postorder\nd) Preorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS396110_1816394.",
        "target_text": "Question: A directed graph with V=396110, E≈1816394. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) Only if the graph is connected\nc) Only if edges are unweighted\nd) When all vertices have outdegree ≥ 1\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB62266.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=62266. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) Binary heap of substrings\nc) Queue of rolling hashes only\nd) BST over all substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS753768.",
        "target_text": "Question: Keys are integers in range [0..753768]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Shell sort\nc) Quick sort\nd) Heap sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX1978782.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈1978782. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Requires the array to be cyclic\nc) Uses hashing to index unknown segments\nd) Sorts the array first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M3_4_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/4) + n^3 for n being a power of 4.\nChoices:\na) Θ(n^3 log n)\nb) Θ(n^0.7925 log n)\nc) Θ(n^3)\nd) Θ(n^0.7925)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP5126_2724.",
        "target_text": "Question: Sorted array length n=5126. Decide if any pair sums to 2724. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Divide and conquer in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Brute force in Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN147006_954802.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=147006, B=954802. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Binary search on addresses\nc) Reverse one list then compare\nd) Hash addresses of first list\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS3678.",
        "target_text": "Question: Compute stock span for 3678 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Priority queue\nc) Fenwick tree\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ246491.",
        "target_text": "Question: Schedule 246491 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Stack\nc) Binary heap\nd) Circular queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH9915348.",
        "target_text": "Question: Build a binary heap from n=9915348 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n^2)\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH1024.",
        "target_text": "Question: In open addressing with double hashing over table size m=1024, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Make both hash functions identical\nc) Use g(k)=0 for some keys\nd) Choose m even and g(k) even\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR713400.",
        "target_text": "Question: In a BST with distinct keys (id=713400), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Preorder\nc) Inorder\nd) Postorder\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS615138_4146227.",
        "target_text": "Question: A directed graph with V=615138, E≈4146227. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) Only if the graph is connected\nc) When it is a DAG (no directed cycles)\nd) When all vertices have outdegree ≥ 1\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB23229.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=23229. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Binary heap of substrings\nc) Suffix automaton or suffix array + LCP\nd) BST over all substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB68125487.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=68125487 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n^2)\nc) Ω(n log n)\nd) Ω(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU8034033.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=8034033. What guarantees O(log n)?\nChoices:\na) Linear scan with early exit\nb) Hashing with chaining\nc) Heap-based selection\nd) Binary search with left/right bias\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M7_4_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/4) + n^4 for n being a power of 4.\nChoices:\na) Θ(n^4 log n)\nb) Θ(n^4)\nc) Θ(n^1.4037 log n)\nd) Θ(n^1.4037)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP5275_1452.",
        "target_text": "Question: Sorted array length n=5275. Decide if any pair sums to 1452. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Brute force in Θ(n^2)\nc) Divide and conquer in Θ(n log n)\nd) Two-pointer scan in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK34_3556.",
        "target_text": "Question: Merge k=34 sorted linked lists totaling n=3556 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(k n)\nc) Θ(n log n)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS3451.",
        "target_text": "Question: Compute stock span for 3451 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Monotonic stack\nc) Priority queue\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS545.",
        "target_text": "Question: A queue via two stacks handles a burst of 545 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) Both Θ(log n)\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM2_551.",
        "target_text": "Question: Merge k=2 sorted streams totaling N=551 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log N)\nc) Θ(N + k^2)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.33.",
        "target_text": "Question: In separate chaining with load factor α=0.33, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(1/α)\nd) Θ(α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR761364.",
        "target_text": "Question: In a BST with distinct keys (id=761364), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Postorder\nc) Inorder\nd) Preorder\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS2006_16348.",
        "target_text": "Question: A directed graph with V=2006, E≈16348. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) When it is a DAG (no directed cycles)\nc) Only if the graph is connected\nd) When all vertices have outdegree ≥ 1\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Suffix-based structures compactly represent all substrings. Variant DSUB78557.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=78557. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Binary heap of substrings\nc) BST over all substrings\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Heap operations ignore original order of equals. Variant HS774567.",
        "target_text": "Question: Heapsort stability check id=774567: which statement is correct?\nChoices:\na) Heapsort is not stable by default\nb) Heapsort always beats merge sort\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is stable\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Biasing mid updates finds first/last position. Variant LU794289.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=794289. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Binary search with left/right bias\nc) Linear scan with early exit\nd) Heap-based selection\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T4_4_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^4, f3=n^4 (log n)^4, f4=n^11?\nChoices:\na) Θ(n^4)\nb) Θ(n^4 (log n)^4)\nc) Θ((log n)^4)\nd) Θ(n^11)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP15489_3562.",
        "target_text": "Question: Sorted array length n=15489. Decide if any pair sums to 3562. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Divide and conquer in Θ(n log n)\nc) Two-pointer scan in Θ(n)\nd) Brute force in Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR5.",
        "target_text": "Question: Reverse a singly linked list in groups of k=5 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n log k)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE17499.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=17499. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Max-heap\nc) Binary search tree\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA2316.",
        "target_text": "Question: Circular-array queue with capacity 2316: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Require prime capacity\nc) Head==Tail means full\nd) Require power-of-two capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM622_193871.",
        "target_text": "Question: Merge k=622 sorted streams totaling N=193871 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log k)\nc) Θ(N + k^2)\nd) Θ(N log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.49.",
        "target_text": "Question: In separate chaining with load factor α=0.49, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(log n)\nc) Θ(1/α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS719192.",
        "target_text": "Question: BST with parent pointers (id=719192): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) Always climb to root then go right once\nc) Reverse postorder traversal entirely\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR217277.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=217277 edges. What algorithmic idea achieves linear time?\nChoices:\na) Tarjan’s low-link DFS\nb) Dijkstra’s algorithm\nc) Topological sorting\nd) Kruskal’s algorithm\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z136783.",
        "target_text": "Question: For string S (id=136783), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Number of distinct substrings up to i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Next index of S[i]\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS828497.",
        "target_text": "Question: Keys are integers in range [0..828497]. Which algorithm sorts in linear time?\nChoices:\na) Counting sort\nb) Shell sort\nc) Heap sort\nd) Quick sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS7900475.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=7900475 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(1) expected\nc) Θ(log n)\nd) Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M6_3_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/3) + n^4 for n being a power of 3.\nChoices:\na) Θ(n^1.6309 log n)\nb) Θ(n^4)\nc) Θ(n^4 log n)\nd) Θ(n^1.6309)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R116328.",
        "target_text": "Question: Rotate an array right by r=116328 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Heapify then extract\nc) Three-reversal method\nd) Selection sort then shift\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK62_10652.",
        "target_text": "Question: Merge k=62 sorted linked lists totaling n=10652 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n + k^2)\nc) Θ(n log n)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP701.",
        "target_text": "Question: Verify whether a pop sequence of length n=701 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Sort both sequences then compare\nc) Simulate using one stack in Θ(n)\nd) Backtrack with recursion in Θ(2^n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW2184_899.",
        "target_text": "Question: Sliding window maximum for array length n=2184 and window w=899. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(w log n)\nd) Θ(nw)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL857_377740.",
        "target_text": "Question: Find the k=857-th largest element among n=377740 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Deterministic selection (median-of-medians)\nc) Build max-heap and extract k times\nd) Binary search on value domain\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF510425_0.69.",
        "target_text": "Question: Chaining hash table with n=510425 keys at load factor α=0.69. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(α log α)\nc) Θ(1 + α)\nd) Θ(nα)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS741978.",
        "target_text": "Question: BST with parent pointers (id=741978): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Use level-order and pick next node\nc) Reverse postorder traversal entirely\nd) Always climb to root then go right once\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP487247.",
        "target_text": "Question: Test bipartiteness (id=487247) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Check all degrees even\nd) Sort vertices and deduplicate\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z13676.",
        "target_text": "Question: For string S (id=13676), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Length of the longest prefix starting at i matching S[0..]\nc) Number of mismatches at i\nd) Number of distinct substrings up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB96124392.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=96124392 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(n log n)\nc) Ω(log n)\nd) Ω(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS9041416.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=9041416 typically runs in?\nChoices:\na) O(1) worst-case\nb) Θ(log n) average\nc) Θ(n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T1_2_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^1, f3=n^1 (log n)^2, f4=n^8?\nChoices:\na) Θ(n^8)\nb) Θ(n^1)\nc) Θ((log n)^2)\nd) Θ(n^1 (log n)^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP3843_3933.",
        "target_text": "Question: Sorted array length n=3843. Decide if any pair sums to 3933. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Hash set in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN66205.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 66205, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Copy next node’s data here and bypass next\nc) Impossible under any model\nd) Traverse from head to find predecessor\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE54390.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=54390. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Decreasing stack\nc) Binary search tree\nd) Max-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ848502.",
        "target_text": "Question: Schedule 848502 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Stack\nc) Binary heap\nd) Circular queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL258_903310.",
        "target_text": "Question: Find the k=258-th largest element among n=903310 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Binary search on value domain\nc) Build max-heap and extract k times\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF2924490_0.21.",
        "target_text": "Question: Chaining hash table with n=2924490 keys at load factor α=0.21. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(α log α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS271376.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=271376-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(k)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS969236_3071011.",
        "target_text": "Question: A directed graph with V=969236, E≈3071011. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if the graph is connected\nc) When it is a DAG (no directed cycles)\nd) Only if edges are unweighted\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Randomized hashing makes spurious matches rare. Variant RK257_1000000009.",
        "target_text": "Question: Rabin–Karp with base=257, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Trie of all substrings\nb) Low collision probability of rolling hash\nc) Use of a min-heap\nd) Suffix tree guaranteeing O(1) per char\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS224097.",
        "target_text": "Question: Keys are integers in range [0..224097]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Heap sort\nc) Counting sort\nd) Shell sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Biasing mid updates finds first/last position. Variant LU2670872.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=2670872. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Heap-based selection\nc) Hashing with chaining\nd) Linear scan with early exit\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M4_4_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/4) + n^2 for n being a power of 4.\nChoices:\na) Θ(n^2 log n)\nb) Θ(n^2)\nc) Θ(n^1.0)\nd) Θ(n^1.0 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP12586_4968.",
        "target_text": "Question: Sorted array length n=12586. Decide if any pair sums to 4968. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Divide and conquer in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR10.",
        "target_text": "Question: Reverse a singly linked list in groups of k=10 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(n)\nc) Θ(k log n)\nd) Θ(nk)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE43804.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=43804. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Decreasing stack\nc) Queue\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Aggregate analysis over infrequent transfers. Variant TS3663.",
        "target_text": "Question: A queue via two stacks handles a burst of 3663 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) Both Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM750_244298.",
        "target_text": "Question: Merge k=750 sorted streams totaling N=244298 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log k)\nc) Θ(N + k^2)\nd) Θ(N log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF8146351_0.35.",
        "target_text": "Question: Chaining hash table with n=8146351 keys at load factor α=0.35. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(α log α)\nc) Θ(1 + α)\nd) Θ(nα)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS198779.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=198779-th smallest?\nChoices:\na) Θ(k)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Safe edges are chosen via cut/cycle properties. Variant MST994763.",
        "target_text": "Question: MST question id=994763: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) Prim requires the entire edge set to be sorted first\nc) MST is always unique in connected graphs\nd) MST minimizes number of edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP90313.",
        "target_text": "Question: KMP matches a pattern of length m=90313 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) Suffix array\nc) LPS (failure) function\nd) Rolling hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX4_1024.",
        "target_text": "Question: Radix sort with d=4 digits and base b=1024 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·n·log b)\nc) Θ(d·(n + b))\nd) Θ(b^d)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS1867319.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=1867319 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(1) expected\nc) Θ(n log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T5_2_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^5, f3=n^5 (log n)^2, f4=n^10?\nChoices:\na) Θ((log n)^2)\nb) Θ(n^10)\nc) Θ(n^5 (log n)^2)\nd) Θ(n^5)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP16277_2190.",
        "target_text": "Question: Sorted array length n=16277. Decide if any pair sums to 2190. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Divide and conquer in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL83114.",
        "target_text": "Question: Check if a singly linked list of length n=83114 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Sort and compare with original\nc) Copy to array and two-pointer check\nd) Use a hash set of seen values\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1695.",
        "target_text": "Question: Verify whether a pop sequence of length n=1695 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B249054.",
        "target_text": "Question: Run BFS on an unweighted graph with 249054 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) Lexicographic vertex order\nc) Minimum memory footprint\nd) All simple paths before all edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC69148997.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=69148997?\nChoices:\na) Θ(log log n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H383855933.",
        "target_text": "Question: For a balanced BST with n=383855933 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(√n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS365128_2868357.",
        "target_text": "Question: A directed graph with V=365128, E≈2868357. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) Only if edges are unweighted\nc) Only if the graph is connected\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Counting avoids comparisons for fixed alphabets. Variant AN474524.",
        "target_text": "Question: Check anagrams for strings of length n=474524 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Count character frequencies in Θ(n)\nc) Use a stack\nd) Sort both in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS249.",
        "target_text": "Question: Array is nearly sorted with at most 249 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Insertion sort\nc) Shell sort with fixed gaps\nd) Radix sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Geometric level distribution mirrors balanced trees. Variant SL0.5.",
        "target_text": "Question: Skip list with level promotion probability p=0.5: expected complexity of search/insert/delete?\nChoices:\na) Θ(log n) for all three\nb) Θ(n) for all three\nc) Θ(1) for all three\nd) Θ(√n) for all three\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M3_6_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/6) + n^3 for n being a power of 6.\nChoices:\na) Θ(n^3 log n)\nb) Θ(n^0.6131)\nc) Θ(n^0.6131 log n)\nd) Θ(n^3)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP14437_1262.",
        "target_text": "Question: Sorted array length n=14437. Decide if any pair sums to 1262. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Divide and conquer in Θ(n log n)\nc) Hash set in Θ(n log n)\nd) Two-pointer scan in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK48_3901.",
        "target_text": "Question: Merge k=48 sorted linked lists totaling n=3901 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n + k^2)\nc) Θ(n log n)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP891.",
        "target_text": "Question: Verify whether a pop sequence of length n=891 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Backtrack with recursion in Θ(2^n)\nd) Sort both sequences then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA7615.",
        "target_text": "Question: Circular-array queue with capacity 7615: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Track count or keep one slot empty\nc) Head==Tail means full\nd) Require power-of-two capacity\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA10_15930707.",
        "target_text": "Question: In a d-ary heap with d=10 and n=15930707 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(log_10 n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH2048.",
        "target_text": "Question: In open addressing with double hashing over table size m=2048, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) Use g(k)=0 for some keys\nc) Choose m even and g(k) even\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS401946.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=401946-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(k)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP811000.",
        "target_text": "Question: Test bipartiteness (id=811000) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Sort vertices and deduplicate\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Check all degrees even\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN511614.",
        "target_text": "Question: Check anagrams for strings of length n=511614 over fixed alphabet. Optimal approach?\nChoices:\na) Use a stack\nb) DFS on character graph\nc) Count character frequencies in Θ(n)\nd) Sort both in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS966.",
        "target_text": "Question: Array is nearly sorted with at most 966 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Insertion sort\nc) Heap sort\nd) Shell sort with fixed gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI92_4089.",
        "target_text": "Question: Binary search over half-open range [92, 4089)—which invariant prevents infinite loops?\nChoices:\na) Use mid=(lo+hi)/2 without overflow checks\nb) Increase both lo and hi to skip duplicates\nc) Keep inclusive bounds on both ends\nd) Maintain lo < hi; set lo = mid + 1 or hi = mid\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M2_3_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/3) + n^3 for n being a power of 3.\nChoices:\na) Θ(n^0.6309 log n)\nb) Θ(n^3)\nc) Θ(n^0.6309)\nd) Θ(n^3 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP15448_1938.",
        "target_text": "Question: Sorted array length n=15448. Decide if any pair sums to 1938. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Brute force in Θ(n^2)\nd) Hash set in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C5.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 5× and 1×. Complexity?\nChoices:\na) Θ(log n) time, Θ(1) space\nb) Θ(n) time, Θ(n) space\nc) Θ(n) time, Θ(1) space\nd) Θ(1) time, Θ(1) space\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1753.",
        "target_text": "Question: Verify whether a pop sequence of length n=1753 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Simulate using one stack in Θ(n)\nc) Sort both sequences then compare\nd) Use a queue to mirror the stack\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA2069.",
        "target_text": "Question: Circular-array queue with capacity 2069: how to distinguish full vs empty?\nChoices:\na) Require power-of-two capacity\nb) Head==Tail means full\nc) Require prime capacity\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM428_168328.",
        "target_text": "Question: Merge k=428 sorted streams totaling N=168328 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N + k^2)\nc) Θ(N log k)\nd) Θ(N log N)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.24.",
        "target_text": "Question: In separate chaining with load factor α=1.24, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H267858298.",
        "target_text": "Question: For a balanced BST with n=267858298 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR289903.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=289903 edges. What algorithmic idea achieves linear time?\nChoices:\na) Tarjan’s low-link DFS\nb) Kruskal’s algorithm\nc) Topological sorting\nd) Dijkstra’s algorithm\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS98007.",
        "target_text": "Question: In KMP, what does LPS[98007] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Total distinct prefixes up to i\nc) Index of next occurrence\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS50.",
        "target_text": "Question: Array is nearly sorted with at most 50 inversions. Which algorithm excels?\nChoices:\na) Insertion sort\nb) Radix sort\nc) Shell sort with fixed gaps\nd) Heap sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS7174242.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=7174242 typically runs in?\nChoices:\na) Θ(log n) average\nb) Θ(n) average\nc) O(1) worst-case\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T2_2_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^2, f3=n^2 (log n)^2, f4=n^7?\nChoices:\na) Θ((log n)^2)\nb) Θ(n^7)\nc) Θ(n^2)\nd) Θ(n^2 (log n)^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP10902_687.",
        "target_text": "Question: Sorted array length n=10902. Decide if any pair sums to 687. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Brute force in Θ(n^2)\nc) Divide and conquer in Θ(n log n)\nd) Two-pointer scan in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK64_5982.",
        "target_text": "Question: Merge k=64 sorted linked lists totaling n=5982 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n log n)\nc) Θ(k n)\nd) Θ(n + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS2785.",
        "target_text": "Question: Compute stock span for 2785 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Fenwick tree\nc) Monotonic stack\nd) Priority queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ63470.",
        "target_text": "Question: Schedule 63470 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Stack\nb) Circular queue\nc) Unordered array\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH5709207.",
        "target_text": "Question: Build a binary heap from n=5709207 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n^2)\nc) Θ(n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF8175610_0.64.",
        "target_text": "Question: Chaining hash table with n=8175610 keys at load factor α=0.64. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(α log α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR89107.",
        "target_text": "Question: In a BST with distinct keys (id=89107), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Postorder\nc) Level-order\nd) Preorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP143840.",
        "target_text": "Question: Test bipartiteness (id=143840) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Sort vertices and deduplicate\nc) Check all degrees even\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB44622.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=44622. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) Queue of rolling hashes only\nc) Suffix automaton or suffix array + LCP\nd) BST over all substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS126.",
        "target_text": "Question: Array is nearly sorted with at most 126 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Insertion sort\nc) Radix sort\nd) Shell sort with fixed gaps\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS6429320.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=6429320 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(log n) average\nc) Θ(n) average\nd) O(1) worst-case\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M4_6_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/6) + n^1 for n being a power of 6.\nChoices:\na) Θ(n^0.7737)\nb) Θ(n^1)\nc) Θ(n^1 log n)\nd) Θ(n^0.7737 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Candidate extraction without extra arrays. Variant BM887142.",
        "target_text": "Question: Find a majority element in an array of length n=887142 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Boyer–Moore voting with verification\nc) Divide-and-conquer merges\nd) Binary search on value domain\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN880196.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 880196, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Impossible under any model\nc) Reverse list then delete head\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE57573.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=57573. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Decreasing stack\nc) Queue\nd) Max-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ508643.",
        "target_text": "Question: Schedule 508643 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Binary heap\nc) Stack\nd) Unordered array\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH5176314.",
        "target_text": "Question: Build a binary heap from n=5176314 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(n log n)\nd) Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.08.",
        "target_text": "Question: In separate chaining with load factor α=1.08, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(1/α)\nd) Θ(α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR66893.",
        "target_text": "Question: In a BST with distinct keys (id=66893), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Preorder\nc) Inorder\nd) Level-order\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS570895_1306331.",
        "target_text": "Question: A directed graph with V=570895, E≈1306331. When does a topological order exist?\nChoices:\na) When all vertices have outdegree ≥ 1\nb) When it is a DAG (no directed cycles)\nc) Only if the graph is connected\nd) Only if edges are unweighted\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB11410.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=11410. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Queue of rolling hashes only\nc) Suffix automaton or suffix array + LCP\nd) Binary heap of substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS415272.",
        "target_text": "Question: Keys are integers in range [0..415272]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Quick sort\nc) Heap sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU65510.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=65510. What guarantees O(log n)?\nChoices:\na) Binary search with left/right bias\nb) Linear scan with early exit\nc) Hashing with chaining\nd) Heap-based selection\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T3_5_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^3, f3=n^3 (log n)^5, f4=n^7?\nChoices:\na) Θ((log n)^5)\nb) Θ(n^3 (log n)^5)\nc) Θ(n^7)\nd) Θ(n^3)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM172448.",
        "target_text": "Question: Find a majority element in an array of length n=172448 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Divide-and-conquer merges\nc) Boyer–Moore voting with verification\nd) Binary search on value domain\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR3.",
        "target_text": "Question: Reverse a singly linked list in groups of k=3 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(n log k)\nc) Θ(k log n)\nd) Θ(nk)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS162.",
        "target_text": "Question: Compute stock span for 162 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Hash table\nc) Priority queue\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA4453.",
        "target_text": "Question: Circular-array queue with capacity 4453: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Track count or keep one slot empty\nc) Require prime capacity\nd) Require power-of-two capacity\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Pivot quality bounds recursion depth. Variant KL883_502904.",
        "target_text": "Question: Find the k=883-th largest element among n=502904 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Deterministic selection (median-of-medians)\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.26.",
        "target_text": "Question: In separate chaining with load factor α=1.26, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS638233.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=638233-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR40624.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=40624 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Tarjan’s low-link DFS\nc) Kruskal’s algorithm\nd) Topological sorting\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP20705.",
        "target_text": "Question: KMP matches a pattern of length m=20705 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Z-array exclusively\nc) LPS (failure) function\nd) Suffix array\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX8_8.",
        "target_text": "Question: Radix sort with d=8 digits and base b=8 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·(n + b))\nc) Θ(b^d)\nd) Θ(d·n·log b)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX695606447.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈695606447. Why?\nChoices:\na) Requires the array to be cyclic\nb) Uses hashing to index unknown segments\nc) Sorts the array first\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M5_6_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/6) + n^0 for n being a power of 6.\nChoices:\na) Θ(n^0)\nb) Θ(n^0.8982 log n)\nc) Θ(n^0 log n)\nd) Θ(n^0.8982)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM792880.",
        "target_text": "Question: Find a majority element in an array of length n=792880 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Boyer–Moore voting with verification\nb) Counting sort\nc) Divide-and-conquer merges\nd) Binary search on value domain\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN145924_862857.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=145924, B=862857. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Binary search on addresses\nc) Advance pointers; when one ends, jump to the other head\nd) Reverse one list then compare\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP806.",
        "target_text": "Question: Verify whether a pop sequence of length n=806 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Simulate using one stack in Θ(n)\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS7447.",
        "target_text": "Question: A queue via two stacks handles a burst of 7447 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA11_97636272.",
        "target_text": "Question: In a d-ary heap with d=11 and n=97636272 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log_11 n)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF5453047_0.71.",
        "target_text": "Question: Chaining hash table with n=5453047 keys at load factor α=0.71. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(1 + α)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Left–root–right sequence yields sorted order. Variant TR586868.",
        "target_text": "Question: In a BST with distinct keys (id=586868), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Level-order\nc) Postorder\nd) Preorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC804755.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=804755 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(VE)\nc) Θ(E log V)\nd) Θ(V log V)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS1032.",
        "target_text": "Question: In KMP, what does LPS[1032] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Number of mismatches up to i\nc) Total distinct prefixes up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST11393.",
        "target_text": "Question: Stability (id=11393): which pairing is correct?\nChoices:\na) Merge sort (stable), Heap sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Counting sort (unstable)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX792703535.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈792703535. Why?\nChoices:\na) Requires the array to be cyclic\nb) Doubles the bound to bracket, then binary search\nc) Sorts the array first\nd) Uses hashing to index unknown segments\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M5_6_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/6) + n^4 for n being a power of 6.\nChoices:\na) Θ(n^0.8982 log n)\nb) Θ(n^4)\nc) Θ(n^0.8982)\nd) Θ(n^4 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R933018.",
        "target_text": "Question: Rotate an array right by r=933018 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Single-step rotate repeated r times\nc) Heapify then extract\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN30412_738225.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=30412, B=738225. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Reverse one list then compare\nc) Hash addresses of first list\nd) Binary search on addresses\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1860.",
        "target_text": "Question: Verify whether a pop sequence of length n=1860 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Backtrack with recursion in Θ(2^n)\nc) Simulate using one stack in Θ(n)\nd) Sort both sequences then compare\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ810938.",
        "target_text": "Question: For 810938 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Stack\nc) Binary heap\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM317_44966.",
        "target_text": "Question: Merge k=317 sorted streams totaling N=44966 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(N log k)\nc) Θ(N + k^2)\nd) Θ(k log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF3641953_0.34.",
        "target_text": "Question: Chaining hash table with n=3641953 keys at load factor α=0.34. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(α log α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA622545.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=622545 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Euler tour + RMQ yields O(1) per query\nc) DFS from root each time\nd) Naive parent climbing O(n) per query\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR925984.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=925984 edges. What algorithmic idea achieves linear time?\nChoices:\na) Tarjan’s low-link DFS\nb) Kruskal’s algorithm\nc) Topological sorting\nd) Dijkstra’s algorithm\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP5452.",
        "target_text": "Question: KMP matches a pattern of length m=5452 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) LPS (failure) function\nc) Suffix array\nd) Rolling hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX2_4.",
        "target_text": "Question: Radix sort with d=2 digits and base b=4 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·(n + b))\nc) Θ(d·n·log b)\nd) Θ(b^d)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX503600839.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈503600839. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Requires the array to be cyclic\nc) Uses hashing to index unknown segments\nd) Sorts the array first\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T5_6_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^5, f3=n^5 (log n)^6, f4=n^11?\nChoices:\na) Θ(n^11)\nb) Θ(n^5)\nc) Θ((log n)^6)\nd) Θ(n^5 (log n)^6)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S19777_403.",
        "target_text": "Question: Array length n=19777, find max-sum subarray of fixed length k=403. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(n log n)\nb) Θ(k log n)\nc) Θ(nk)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK53_2652.",
        "target_text": "Question: Merge k=53 sorted linked lists totaling n=2652 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n + k^2)\nc) Θ(k n)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE90465.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=90465. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Queue\nc) Binary search tree\nd) Max-heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ254419.",
        "target_text": "Question: For 254419 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Deque\nc) Stack\nd) Binary heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL443_363214.",
        "target_text": "Question: Find the k=443-th largest element among n=363214 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Binary search on value domain\nc) Deterministic selection (median-of-medians)\nd) Heapsort then index\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF4510651_0.84.",
        "target_text": "Question: Chaining hash table with n=4510651 keys at load factor α=0.84. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(α log α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H827376156.",
        "target_text": "Question: For a balanced BST with n=827376156 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP170169.",
        "target_text": "Question: Test bipartiteness (id=170169) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Sort vertices and deduplicate\nd) Compute an MST then inspect edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Z-values compare substrings with the global prefix. Variant Z157426.",
        "target_text": "Question: For string S (id=157426), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Number of distinct substrings up to i\nc) Number of mismatches at i\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Digit-wise stable passes accumulate linearly. Variant RX2_16.",
        "target_text": "Question: Radix sort with d=2 digits and base b=16 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(d·(n + b))\nc) Θ(b^d)\nd) Θ(d·n·log b)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX109386634.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈109386634. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Sorts the array first\nc) Requires the array to be cyclic\nd) Doubles the bound to bracket, then binary search\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T4_1_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^4, f3=n^4 (log n)^1, f4=n^7?\nChoices:\na) Θ((log n)^1)\nb) Θ(n^4)\nc) Θ(n^7)\nd) Θ(n^4 (log n)^1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP12331_513.",
        "target_text": "Question: Sorted array length n=12331. Decide if any pair sums to 513. Best approach/time?\nChoices:\na) Hash set in Θ(n log n)\nb) Brute force in Θ(n^2)\nc) Two-pointer scan in Θ(n)\nd) Divide and conquer in Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN333557_106576.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=333557, B=106576. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Hash addresses of first list\nb) Advance pointers; when one ends, jump to the other head\nc) Binary search on addresses\nd) Reverse one list then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE65104.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=65104. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Max-heap\nc) Binary search tree\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA1671.",
        "target_text": "Question: Circular-array queue with capacity 1671: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Track count or keep one slot empty\nc) Require power-of-two capacity\nd) Require prime capacity\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH1530546.",
        "target_text": "Question: Build a binary heap from n=1530546 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(n^2)\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC1.05.",
        "target_text": "Question: In separate chaining with load factor α=1.05, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS609263.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=609263-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(k)\nd) Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP399251.",
        "target_text": "Question: Test bipartiteness (id=399251) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Compute an MST then inspect edges\nd) Check all degrees even\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS99131.",
        "target_text": "Question: In KMP, what does LPS[99131] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Index of next occurrence\nc) Total distinct prefixes up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS384948.",
        "target_text": "Question: Heapsort stability check id=384948: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is stable\nc) Heapsort needs extra Θ(n) memory\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX693126746.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈693126746. Why?\nChoices:\na) Sorts the array first\nb) Doubles the bound to bracket, then binary search\nc) Requires the array to be cyclic\nd) Uses hashing to index unknown segments\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T5_1_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^5, f3=n^5 (log n)^1, f4=n^11?\nChoices:\na) Θ(n^5 (log n)^1)\nb) Θ(n^5)\nc) Θ(n^11)\nd) Θ((log n)^1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM240202.",
        "target_text": "Question: Find a majority element in an array of length n=240202 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Boyer–Moore voting with verification\nc) Divide-and-conquer merges\nd) Counting sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Block-wise reversal touches each node a constant number of times. Variant KR3.",
        "target_text": "Question: Reverse a singly linked list in groups of k=3 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(n)\nc) Θ(k log n)\nd) Θ(n log k)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP242.",
        "target_text": "Question: Verify whether a pop sequence of length n=242 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ300049.",
        "target_text": "Question: Schedule 300049 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Stack\nc) Unordered array\nd) Circular queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH7910119.",
        "target_text": "Question: Build a binary heap from n=7910119 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n^2)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.29.",
        "target_text": "Question: In separate chaining with load factor α=1.29, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA142020.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=142020 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) DFS from root each time\nc) Euler tour + RMQ yields O(1) per query\nd) Sort node labels then binary search\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC724831.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=724831 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(VE)\nb) Θ(E log V)\nc) Θ(V log V)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS58332.",
        "target_text": "Question: In KMP, what does LPS[58332] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Index of next occurrence\nc) Length of longest proper prefix that is also a suffix for prefix ending at i\nd) Total distinct prefixes up to i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS996.",
        "target_text": "Question: Array is nearly sorted with at most 996 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Shell sort with fixed gaps\nc) Insertion sort\nd) Radix sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Half-open intervals simplify updates. Variant BI55_4409.",
        "target_text": "Question: Binary search over half-open range [55, 4409)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Increase both lo and hi to skip duplicates\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M4_5_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/5) + n^3 for n being a power of 5.\nChoices:\na) Θ(n^0.8614 log n)\nb) Θ(n^3 log n)\nc) Θ(n^0.8614)\nd) Θ(n^3)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone predicate enables bisection on positions. Variant KM29620.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=29620-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Hash all present values then scan\nc) Scan linearly counting gaps\nd) Use a heap of differences\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN369142.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 369142, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Reverse list then delete head\nc) Traverse from head to find predecessor\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP517.",
        "target_text": "Question: Verify whether a pop sequence of length n=517 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Sort both sequences then compare\nc) Backtrack with recursion in Θ(2^n)\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS8359.",
        "target_text": "Question: A queue via two stacks handles a burst of 8359 operations. Amortized costs?\nChoices:\na) ENQUEUE and DEQUEUE both amortized Θ(1)\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) Both Θ(log n)\nd) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL841_794375.",
        "target_text": "Question: Find the k=841-th largest element among n=794375 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Build max-heap and extract k times\nb) Heapsort then index\nc) Binary search on value domain\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF916392_0.21.",
        "target_text": "Question: Chaining hash table with n=916392 keys at load factor α=0.21. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(α log α)\nc) Θ(log n)\nd) Θ(nα)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR712955.",
        "target_text": "Question: In a BST with distinct keys (id=712955), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Level-order\nc) Inorder\nd) Postorder\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS832411_3868514.",
        "target_text": "Question: A directed graph with V=832411, E≈3868514. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) Only if the graph is connected\nc) Only if edges are unweighted\nd) When all vertices have outdegree ≥ 1\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB37784.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=37784. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Binary heap of substrings\nc) BST over all substrings\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Key-indexed counting avoids comparisons. Variant CS536086.",
        "target_text": "Question: Keys are integers in range [0..536086]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Counting sort\nc) Shell sort\nd) Quick sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU5796238.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=5796238. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Linear scan with early exit\nc) Binary search with left/right bias\nd) Heap-based selection\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M3_2_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/2) + n^1 for n being a power of 2.\nChoices:\na) Θ(n^1)\nb) Θ(n^1 log n)\nc) Θ(n^1.585)\nd) Θ(n^1.585 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM829846.",
        "target_text": "Question: Find a majority element in an array of length n=829846 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Boyer–Moore voting with verification\nc) Divide-and-conquer merges\nd) Counting sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR5.",
        "target_text": "Question: Reverse a singly linked list in groups of k=5 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n)\nd) Θ(n log k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE78303.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=78303. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Decreasing stack\nc) Max-heap\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ137625.",
        "target_text": "Question: Schedule 137625 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Stack\nc) Unordered array\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA6_57588339.",
        "target_text": "Question: In a d-ary heap with d=6 and n=57588339 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log_6 n)\nd) Θ(log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.59.",
        "target_text": "Question: In separate chaining with load factor α=0.59, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS543067.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=543067-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(k)\nc) Θ(1)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS114206_821721.",
        "target_text": "Question: A directed graph with V=114206, E≈821721. When does a topological order exist?\nChoices:\na) Only if edges are unweighted\nb) Only if the graph is connected\nc) When it is a DAG (no directed cycles)\nd) When all vertices have outdegree ≥ 1\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE128.",
        "target_text": "Question: Search a trie over alphabet size σ=128 for a key of length m. Time complexity?\nChoices:\na) Θ(m log σ)\nb) Θ(log n)\nc) Θ(m)\nd) Θ(1) average for all m\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS497.",
        "target_text": "Question: Array is nearly sorted with at most 497 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Heap sort\nc) Radix sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX411637917.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈411637917. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Sorts the array first\nc) Requires the array to be cyclic\nd) Uses hashing to index unknown segments\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M7_3_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/3) + n^4 for n being a power of 3.\nChoices:\na) Θ(n^4)\nb) Θ(n^1.7712 log n)\nc) Θ(n^4 log n)\nd) Θ(n^1.7712)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P183452.",
        "target_text": "Question: Answer 183452 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Recompute sums per query in Θ(n)\nb) Use a stack to store partial sums\nc) Build prefix-sum array; O(1) per query\nd) Sort once and binary search per query\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK65_7975.",
        "target_text": "Question: Merge k=65 sorted linked lists totaling n=7975 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(k n)\nc) Θ(n log n)\nd) Θ(n + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS637.",
        "target_text": "Question: Compute stock span for 637 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Hash table\nc) Priority queue\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Key-ordered retrieval differs from FIFO. Variant PQ975589.",
        "target_text": "Question: Schedule 975589 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Circular queue\nb) Unordered array\nc) Binary heap\nd) Stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA4_36749919.",
        "target_text": "Question: In a d-ary heap with d=4 and n=36749919 nodes, what is the height?\nChoices:\na) Θ(log_4 n)\nb) Θ(√n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Threshold-based expansion preserves performance. Variant RS0.8.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.8?\nChoices:\na) To sort keys implicitly\nb) To reduce memory usage to exact size\nc) To keep expected O(1) operations\nd) To maintain key stability\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR21183.",
        "target_text": "Question: In a BST with distinct keys (id=21183), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Preorder\nc) Level-order\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D70925.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 70925]. Why?\nChoices:\na) Distinct weights are required\nb) Graph must be undirected\nc) Self-loops must be absent\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS80426.",
        "target_text": "Question: In KMP, what does LPS[80426] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Total distinct prefixes up to i\nd) Index of next occurrence\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX7_32.",
        "target_text": "Question: Radix sort with d=7 digits and base b=32 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(b^d)\nb) Θ(d·n·log b)\nc) Θ(n log n)\nd) Θ(d·(n + b))\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX2848015.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈2848015. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Sorts the array first\nc) Doubles the bound to bracket, then binary search\nd) Requires the array to be cyclic\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Geometric resizing spreads copying cost over many operations. Variant A16.",
        "target_text": "Question: A dynamic array starts with capacity 16 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(1)\nc) Θ(log m)\nd) Θ(√m)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S3627_358.",
        "target_text": "Question: Array length n=3627, find max-sum subarray of fixed length k=358. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(k log n)\nb) Θ(nk)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL42275.",
        "target_text": "Question: Check if a singly linked list of length n=42275 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Use a hash set of seen values\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS1975.",
        "target_text": "Question: Compute stock span for 1975 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Monotonic stack\nc) Hash table\nd) Fenwick tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ346960.",
        "target_text": "Question: Schedule 346960 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Circular queue\nc) Stack\nd) Unordered array\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM409_114607.",
        "target_text": "Question: Merge k=409 sorted streams totaling N=114607 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(k log N)\nc) Θ(N log N)\nd) Θ(N + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH32768.",
        "target_text": "Question: In open addressing with double hashing over table size m=32768, which condition helps avoid cycles?\nChoices:\na) Choose m even and g(k) even\nb) Use g(k)=0 for some keys\nc) Make both hash functions identical\nd) g(k) coprime with m for all keys\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Rank-guided descent mirrors search path length. Variant OS790166.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=790166-th smallest?\nChoices:\na) Θ(k)\nb) Θ(1)\nc) Θ(√n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP28872.",
        "target_text": "Question: Test bipartiteness (id=28872) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Compute an MST then inspect edges\nd) Sort vertices and deduplicate\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Randomized hashing makes spurious matches rare. Variant RK257_1000000007.",
        "target_text": "Question: Rabin–Karp with base=257, mod=1000000007 achieves expected linear time due to what?\nChoices:\na) Use of a min-heap\nb) Low collision probability of rolling hash\nc) Suffix tree guaranteeing O(1) per char\nd) Trie of all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS817066.",
        "target_text": "Question: Heapsort stability check id=817066: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort is stable\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS6543499.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=6543499 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(1) expected\nc) Θ(n log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T3_6_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^3, f3=n^3 (log n)^6, f4=n^7?\nChoices:\na) Θ(n^3 (log n)^6)\nb) Θ(n^3)\nc) Θ(n^7)\nd) Θ((log n)^6)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM809145.",
        "target_text": "Question: Find a majority element in an array of length n=809145 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Counting sort\nc) Boyer–Moore voting with verification\nd) Divide-and-conquer merges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK32_3887.",
        "target_text": "Question: Merge k=32 sorted linked lists totaling n=3887 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(k n)\nc) Θ(n log n)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1930.",
        "target_text": "Question: Verify whether a pop sequence of length n=1930 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Backtrack with recursion in Θ(2^n)\nc) Simulate using one stack in Θ(n)\nd) Sort both sequences then compare\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW6368_589.",
        "target_text": "Question: Sliding window maximum for array length n=6368 and window w=589. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(nw)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM274_111189.",
        "target_text": "Question: Merge k=274 sorted streams totaling N=111189 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(k log N)\nc) Θ(N log N)\nd) Θ(N + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF143617_0.88.",
        "target_text": "Question: Chaining hash table with n=143617 keys at load factor α=0.88. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA560103.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=560103 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Euler tour + RMQ yields O(1) per query\nc) Naive parent climbing O(n) per query\nd) Sort node labels then binary search\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS822630_4818214.",
        "target_text": "Question: A directed graph with V=822630, E≈4818214. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) Only if edges are unweighted\nc) When all vertices have outdegree ≥ 1\nd) When it is a DAG (no directed cycles)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP32930.",
        "target_text": "Question: KMP matches a pattern of length m=32930 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) LPS (failure) function\nc) Suffix array\nd) Rolling hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX4_256.",
        "target_text": "Question: Radix sort with d=4 digits and base b=256 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(n log n)\nb) Θ(b^d)\nc) Θ(d·(n + b))\nd) Θ(d·n·log b)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU9191204.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=9191204. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Heap-based selection\nc) Binary search with left/right bias\nd) Linear scan with early exit\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T5_2_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^5, f3=n^5 (log n)^2, f4=n^11?\nChoices:\na) Θ((log n)^2)\nb) Θ(n^5)\nc) Θ(n^5 (log n)^2)\nd) Θ(n^11)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R819034.",
        "target_text": "Question: Rotate an array right by r=819034 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Single-step rotate repeated r times\nc) Heapify then extract\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK71_6159.",
        "target_text": "Question: Merge k=71 sorted linked lists totaling n=6159 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(k n)\nc) Θ(n log k)\nd) Θ(n + k^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP223.",
        "target_text": "Question: Verify whether a pop sequence of length n=223 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Backtrack with recursion in Θ(2^n)\nc) Sort both sequences then compare\nd) Use a queue to mirror the stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B660080.",
        "target_text": "Question: Run BFS on an unweighted graph with 660080 edges. What property does the queue enforce?\nChoices:\na) Lexicographic vertex order\nb) All simple paths before all edges\nc) Minimum memory footprint\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL103_32848.",
        "target_text": "Question: Find the k=103-th largest element among n=32848 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Deterministic selection (median-of-medians)\nb) Binary search on value domain\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF8797814_0.81.",
        "target_text": "Question: Chaining hash table with n=8797814 keys at load factor α=0.81. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(α log α)\nc) Θ(nα)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS802270.",
        "target_text": "Question: BST with parent pointers (id=802270): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) Reverse postorder traversal entirely\nc) Use level-order and pick next node\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Safe edges are chosen via cut/cycle properties. Variant MST55597.",
        "target_text": "Question: MST question id=55597: which statement is true?\nChoices:\na) Prim requires the entire edge set to be sorted first\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) MST minimizes number of edges\nd) MST is always unique in connected graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Prefix-function encodes fallback lengths. Variant LPS40984.",
        "target_text": "Question: In KMP, what does LPS[40984] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Total distinct prefixes up to i\nc) Index of next occurrence\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Key-indexed counting avoids comparisons. Variant CS935200.",
        "target_text": "Question: Keys are integers in range [0..935200]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Counting sort\nc) Shell sort\nd) Quick sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI0_4957.",
        "target_text": "Question: Binary search over half-open range [0, 4957)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Keep inclusive bounds on both ends\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Increase both lo and hi to skip duplicates\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T5_3_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^5, f3=n^5 (log n)^3, f4=n^8?\nChoices:\na) Θ(n^8)\nb) Θ(n^5)\nc) Θ(n^5 (log n)^3)\nd) Θ((log n)^3)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Window maintenance preserves O(1) updates per shift. Variant S7405_485.",
        "target_text": "Question: Array length n=7405, find max-sum subarray of fixed length k=485. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK100_16048.",
        "target_text": "Question: Merge k=100 sorted linked lists totaling n=16048 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(k n)\nc) Θ(n log k)\nd) Θ(n + k^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP710.",
        "target_text": "Question: Verify whether a pop sequence of length n=710 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ39879.",
        "target_text": "Question: For 39879 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Stack\nc) Queue\nd) Binary heap\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL712_918683.",
        "target_text": "Question: Find the k=712-th largest element among n=918683 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Binary search on value domain\nb) Deterministic selection (median-of-medians)\nc) Build max-heap and extract k times\nd) Heapsort then index\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.08.",
        "target_text": "Question: In separate chaining with load factor α=1.08, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA272894.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=272894 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Euler tour + RMQ yields O(1) per query\nb) DFS from root each time\nc) Sort node labels then binary search\nd) Naive parent climbing O(n) per query\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Repeated edge relaxation tolerates negatives. Variant BF85810.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=85810 can handle which case while detecting it?\nChoices:\na) Equal runtime on all graphs\nb) Negative edge weights and negative cycles\nc) Faster runtime on sparse nonnegative graphs\nd) Only acyclic graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z517220.",
        "target_text": "Question: For string S (id=517220), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Number of distinct substrings up to i\nc) Number of mismatches at i\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB31403349.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=31403349 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(log n)\nc) Ω(n^2)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI82_4049.",
        "target_text": "Question: Binary search over half-open range [82, 4049)—which invariant prevents infinite loops?\nChoices:\na) Keep inclusive bounds on both ends\nb) Maintain lo < hi; set lo = mid + 1 or hi = mid\nc) Increase both lo and hi to skip duplicates\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M7_4_3.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/4) + n^3 for n being a power of 4.\nChoices:\na) Θ(n^3 log n)\nb) Θ(n^1.4037 log n)\nc) Θ(n^3)\nd) Θ(n^1.4037)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R142905.",
        "target_text": "Question: Rotate an array right by r=142905 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Heapify then extract\nc) Selection sort then shift\nd) Single-step rotate repeated r times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR6.",
        "target_text": "Question: Reverse a singly linked list in groups of k=6 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(k log n)\nb) Θ(n log k)\nc) Θ(nk)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS1856.",
        "target_text": "Question: Compute stock span for 1856 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Hash table\nc) Monotonic stack\nd) Priority queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW9788_837.",
        "target_text": "Question: Sliding window maximum for array length n=9788 and window w=837. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(w log n)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM41_10146.",
        "target_text": "Question: Merge k=41 sorted streams totaling N=10146 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log N)\nc) Θ(N log k)\nd) Θ(N + k^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF8486377_0.3.",
        "target_text": "Question: Chaining hash table with n=8486377 keys at load factor α=0.3. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(log n)\nc) Θ(α log α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA787443.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=787443 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) Euler tour + RMQ yields O(1) per query\nc) Sort node labels then binary search\nd) DFS from root each time\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR771325.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=771325 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Kruskal’s algorithm\nc) Topological sorting\nd) Tarjan’s low-link DFS\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB74403.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=74403. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) Binary heap of substrings\nc) Queue of rolling hashes only\nd) BST over all substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB32935675.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=32935675 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n log n)\nc) Ω(n)\nd) Ω(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS9765267.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=9765267 with distinct values. Complexity?\nChoices:\na) Θ(1) expected\nb) Θ(n log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T5_6_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^5, f3=n^5 (log n)^6, f4=n^10?\nChoices:\na) Θ(n^10)\nb) Θ(n^5)\nc) Θ((log n)^6)\nd) Θ(n^5 (log n)^6)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P44659.",
        "target_text": "Question: Answer 44659 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Use a stack to store partial sums\nb) Build prefix-sum array; O(1) per query\nc) Sort once and binary search per query\nd) Recompute sums per query in Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN29799.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 29799, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Impossible under any model\nc) Reverse list then delete head\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE20998.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=20998. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Max-heap\nc) Decreasing stack\nd) Queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW8156_702.",
        "target_text": "Question: Sliding window maximum for array length n=8156 and window w=702. Optimal complexity?\nChoices:\na) Θ(nw)\nb) Θ(n log n)\nc) Θ(w log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA7_49674303.",
        "target_text": "Question: In a d-ary heap with d=7 and n=49674303 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(log_7 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Full-period probes require step sizes spanning residues. Variant DH4096.",
        "target_text": "Question: In open addressing with double hashing over table size m=4096, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Make both hash functions identical\nc) Use g(k)=0 for some keys\nd) Choose m even and g(k) even\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR665067.",
        "target_text": "Question: In a BST with distinct keys (id=665067), which traversal lists keys in nondecreasing order?\nChoices:\na) Preorder\nb) Inorder\nc) Postorder\nd) Level-order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC35679.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=35679 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(V log V)\nc) Θ(E log V)\nd) Θ(VE)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP84397.",
        "target_text": "Question: KMP matches a pattern of length m=84397 in linear time using which table?\nChoices:\na) Rolling hash table\nb) LPS (failure) function\nc) Suffix array\nd) Z-array exclusively\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS598.",
        "target_text": "Question: Array is nearly sorted with at most 598 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Heap sort\nc) Shell sort with fixed gaps\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS5360377.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=5360377 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(n) average\nc) O(1) worst-case\nd) Θ(log n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T2_5_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^2, f3=n^2 (log n)^5, f4=n^8?\nChoices:\na) Θ(n^2)\nb) Θ(n^2 (log n)^5)\nc) Θ(n^8)\nd) Θ((log n)^5)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S10533_272.",
        "target_text": "Question: Array length n=10533, find max-sum subarray of fixed length k=272. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Two-run traversal aligns positions at the meeting node. Variant IN4235_159512.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=4235, B=159512. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Reverse one list then compare\nb) Advance pointers; when one ends, jump to the other head\nc) Hash addresses of first list\nd) Binary search on addresses\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1195.",
        "target_text": "Question: Verify whether a pop sequence of length n=1195 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Backtrack with recursion in Θ(2^n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B860243.",
        "target_text": "Question: Run BFS on an unweighted graph with 860243 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Lexicographic vertex order\nc) Minimum memory footprint\nd) Nondecreasing distance from source\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM805_261051.",
        "target_text": "Question: Merge k=805 sorted streams totaling N=261051 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log N)\nc) Θ(N log k)\nd) Θ(N + k^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Adversarial patterns are neutralized by random choice. Variant UH100000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=100000 slots yields what benefit?\nChoices:\na) Eliminates need for resizing\nb) Cryptographic security by default\nc) Zero collisions guaranteed\nd) Expected constant-time operations against adversaries\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR227203.",
        "target_text": "Question: In a BST with distinct keys (id=227203), which traversal lists keys in nondecreasing order?\nChoices:\na) Level-order\nb) Preorder\nc) Postorder\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP772374.",
        "target_text": "Question: Test bipartiteness (id=772374) of an undirected graph efficiently. Which method works?\nChoices:\na) Sort vertices and deduplicate\nb) Check all degrees even\nc) Attempt 2-coloring via BFS; failure indicates odd cycle\nd) Compute an MST then inspect edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP91565.",
        "target_text": "Question: KMP matches a pattern of length m=91565 in linear time using which table?\nChoices:\na) Suffix array\nb) LPS (failure) function\nc) Rolling hash table\nd) Z-array exclusively\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Digit-wise stable passes accumulate linearly. Variant RX8_1024.",
        "target_text": "Question: Radix sort with d=8 digits and base b=1024 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·(n + b))\nb) Θ(b^d)\nc) Θ(n log n)\nd) Θ(d·n·log b)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU3902305.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=3902305. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Heap-based selection\nc) Binary search with left/right bias\nd) Linear scan with early exit\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M8_6_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/6) + n^1 for n being a power of 6.\nChoices:\na) Θ(n^1.1606)\nb) Θ(n^1 log n)\nc) Θ(n^1.1606 log n)\nd) Θ(n^1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Window maintenance preserves O(1) updates per shift. Variant S1698_309.",
        "target_text": "Question: Array length n=1698, find max-sum subarray of fixed length k=309. What is the optimal time ignoring integer overflow checks?\nChoices:\na) Θ(nk)\nb) Θ(n log n)\nc) Θ(k log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK61_5323.",
        "target_text": "Question: Merge k=61 sorted linked lists totaling n=5323 nodes optimally. Complexity?\nChoices:\na) Θ(n log k)\nb) Θ(n + k^2)\nc) Θ(n log n)\nd) Θ(k n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Operator handling via stacks preserves associativity rules. Variant IP4_5.",
        "target_text": "Question: Evaluate an infix expression with 4–5 precedence levels and parentheses. Linear-time method?\nChoices:\na) Convert to postfix and evaluate with a stack\nb) Sort tokens by precedence then scan\nc) Left-to-right without stacks\nd) Build a tree without any stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS3272.",
        "target_text": "Question: A queue via two stacks handles a burst of 3272 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC60767377.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=60767377?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(n)\nd) Θ(log log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Threshold-based expansion preserves performance. Variant RS0.5.",
        "target_text": "Question: Why resize a hash table when load factor exceeds 0.5?\nChoices:\na) To maintain key stability\nb) To reduce memory usage to exact size\nc) To sort keys implicitly\nd) To keep expected O(1) operations\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H572616424.",
        "target_text": "Question: For a balanced BST with n=572616424 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Back-edge tracking reveals critical edges. Variant BR594451.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=594451 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Kruskal’s algorithm\nc) Tarjan’s low-link DFS\nd) Dijkstra’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Randomized hashing makes spurious matches rare. Variant RK911382323_998244353.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=998244353 achieves expected linear time due to what?\nChoices:\na) Suffix tree guaranteeing O(1) per char\nb) Low collision probability of rolling hash\nc) Trie of all substrings\nd) Use of a min-heap\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS330151.",
        "target_text": "Question: Heapsort stability check id=330151: which statement is correct?\nChoices:\na) Heapsort is stable\nb) Heapsort needs extra Θ(n) memory\nc) Heapsort always beats merge sort\nd) Heapsort is not stable by default\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS9546811.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=9546811 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(1) expected\nc) Θ(n log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M5_4_1.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/4) + n^1 for n being a power of 4.\nChoices:\na) Θ(n^1)\nb) Θ(n^1 log n)\nc) Θ(n^1.161 log n)\nd) Θ(n^1.161)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP1915_162.",
        "target_text": "Question: Sorted array length n=1915. Decide if any pair sums to 162. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Divide and conquer in Θ(n log n)\nc) Hash set in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN171382.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 171382, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Traverse from head to find predecessor\nc) Copy next node’s data here and bypass next\nd) Reverse list then delete head\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS2246.",
        "target_text": "Question: Compute stock span for 2246 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Fenwick tree\nc) Monotonic stack\nd) Hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Avoid ambiguity between head and tail indices. Variant CA6705.",
        "target_text": "Question: Circular-array queue with capacity 6705: how to distinguish full vs empty?\nChoices:\na) Require prime capacity\nb) Track count or keep one slot empty\nc) Require power-of-two capacity\nd) Head==Tail means full\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH7440509.",
        "target_text": "Question: Build a binary heap from n=7440509 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS503251.",
        "target_text": "Question: BST with parent pointers (id=503251): how to find inorder successor of node x efficiently?\nChoices:\na) Always climb to root then go right once\nb) Reverse postorder traversal entirely\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Use level-order and pick next node\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR138919.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=138919 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Tarjan’s low-link DFS\nc) Topological sorting\nd) Kruskal’s algorithm\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP20379.",
        "target_text": "Question: KMP matches a pattern of length m=20379 in linear time using which table?\nChoices:\na) Suffix array\nb) LPS (failure) function\nc) Rolling hash table\nd) Z-array exclusively\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Stable algorithms preserve equal-key order. Variant ST472857.",
        "target_text": "Question: Stability (id=472857): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Counting sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS6385751.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=6385751 typically runs in?\nChoices:\na) O(1) worst-case\nb) O(log log n) average\nc) Θ(n) average\nd) Θ(log n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M5_4_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/4) + n^2 for n being a power of 4.\nChoices:\na) Θ(n^2 log n)\nb) Θ(n^2)\nc) Θ(n^1.161 log n)\nd) Θ(n^1.161)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM566555.",
        "target_text": "Question: Find a majority element in an array of length n=566555 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Divide-and-conquer merges\nc) Counting sort\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL72252.",
        "target_text": "Question: Check if a singly linked list of length n=72252 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Use a hash set of seen values\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE36336.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=36336. Which structure gives Θ(n) time?\nChoices:\na) Max-heap\nb) Decreasing stack\nc) Binary search tree\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B697316.",
        "target_text": "Question: Run BFS on an unweighted graph with 697316 edges. What property does the queue enforce?\nChoices:\na) All simple paths before all edges\nb) Nondecreasing distance from source\nc) Lexicographic vertex order\nd) Minimum memory footprint\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC15509291.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=15509291?\nChoices:\na) Θ(1)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.97.",
        "target_text": "Question: In separate chaining with load factor α=0.97, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(log n)\nc) Θ(α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR932798.",
        "target_text": "Question: In a BST with distinct keys (id=932798), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Preorder\nc) Level-order\nd) Postorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Relaxation order depends on nonnegativity. Variant D599010.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 599010]. Why?\nChoices:\na) Self-loops must be absent\nb) Distinct weights are required\nc) Graph must be undirected\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN506361.",
        "target_text": "Question: Check anagrams for strings of length n=506361 over fixed alphabet. Optimal approach?\nChoices:\na) DFS on character graph\nb) Sort both in Θ(n log n)\nc) Use a stack\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS326.",
        "target_text": "Question: Array is nearly sorted with at most 326 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Shell sort with fixed gaps\nc) Heap sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX261508824.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈261508824. Why?\nChoices:\na) Requires the array to be cyclic\nb) Sorts the array first\nc) Doubles the bound to bracket, then binary search\nd) Uses hashing to index unknown segments\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T2_6_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^2, f3=n^2 (log n)^6, f4=n^6?\nChoices:\na) Θ(n^2 (log n)^6)\nb) Θ((log n)^6)\nc) Θ(n^6)\nd) Θ(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P191228.",
        "target_text": "Question: Answer 191228 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Sort once and binary search per query\nc) Recompute sums per query in Θ(n)\nd) Use a stack to store partial sums\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN220010.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 220010, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Reverse list then delete head\nc) Impossible under any model\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS978.",
        "target_text": "Question: Compute stock span for 978 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Hash table\nc) Priority queue\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B753221.",
        "target_text": "Question: Run BFS on an unweighted graph with 753221 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) Lexicographic vertex order\nc) Nondecreasing distance from source\nd) All simple paths before all edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM50_22486.",
        "target_text": "Question: Merge k=50 sorted streams totaling N=22486 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(N + k^2)\nc) Θ(N log N)\nd) Θ(k log N)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.27.",
        "target_text": "Question: In separate chaining with load factor α=1.27, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1/α)\nc) Θ(α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR76364.",
        "target_text": "Question: In a BST with distinct keys (id=76364), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Inorder\nc) Preorder\nd) Level-order\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC639572.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=639572 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(VE)\nc) Θ(V+E)\nd) Θ(V log V)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP73660.",
        "target_text": "Question: KMP matches a pattern of length m=73660 in linear time using which table?\nChoices:\na) Suffix array\nb) LPS (failure) function\nc) Z-array exclusively\nd) Rolling hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB43875128.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=43875128 distinct keys?\nChoices:\na) Ω(n)\nb) Ω(log n)\nc) Ω(n^2)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS4516969.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=4516969 typically runs in?\nChoices:\na) Θ(log n) average\nb) O(log log n) average\nc) O(1) worst-case\nd) Θ(n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T1_3_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^1, f3=n^1 (log n)^3, f4=n^4?\nChoices:\na) Θ((log n)^3)\nb) Θ(n^1)\nc) Θ(n^4)\nd) Θ(n^1 (log n)^3)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone predicate enables bisection on positions. Variant KM38912.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=38912-th missing positive. What approach attains logarithmic time?\nChoices:\na) Binary search on index vs value gap\nb) Hash all present values then scan\nc) Scan linearly counting gaps\nd) Use a heap of differences\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL93730.",
        "target_text": "Question: Check if a singly linked list of length n=93730 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Sort and compare with original\nc) Find middle, reverse second half, compare\nd) Copy to array and two-pointer check\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS3189.",
        "target_text": "Question: Compute stock span for 3189 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Monotonic stack\nc) Hash table\nd) Fenwick tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Key-ordered retrieval differs from FIFO. Variant PQ641638.",
        "target_text": "Question: Schedule 641638 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Circular queue\nc) Unordered array\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM453_59288.",
        "target_text": "Question: Merge k=453 sorted streams totaling N=59288 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log k)\nc) Θ(N + k^2)\nd) Θ(N log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.5.",
        "target_text": "Question: In separate chaining with load factor α=0.5, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(log n)\nc) Θ(α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA466798.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=466798 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Naive parent climbing O(n) per query\nc) Euler tour + RMQ yields O(1) per query\nd) DFS from root each time\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP750423.",
        "target_text": "Question: Test bipartiteness (id=750423) of an undirected graph efficiently. Which method works?\nChoices:\na) Attempt 2-coloring via BFS; failure indicates odd cycle\nb) Compute an MST then inspect edges\nc) Check all degrees even\nd) Sort vertices and deduplicate\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Z-values compare substrings with the global prefix. Variant Z428514.",
        "target_text": "Question: For string S (id=428514), what does Z[i] measure?\nChoices:\na) Number of mismatches at i\nb) Next index of S[i]\nc) Number of distinct substrings up to i\nd) Length of the longest prefix starting at i matching S[0..]\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB3670760.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=3670760 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n^2)\nc) Ω(n)\nd) Ω(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI75_4373.",
        "target_text": "Question: Binary search over half-open range [75, 4373)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Keep inclusive bounds on both ends\nc) Increase both lo and hi to skip duplicates\nd) Use mid=(lo+hi)/2 without overflow checks\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T4_4_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^4, f3=n^4 (log n)^4, f4=n^9?\nChoices:\na) Θ(n^4)\nb) Θ((log n)^4)\nc) Θ(n^4 (log n)^4)\nd) Θ(n^9)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP15923_4684.",
        "target_text": "Question: Sorted array length n=15923. Decide if any pair sums to 4684. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Hash set in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN631434.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 631434, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Impossible under any model\nc) Traverse from head to find predecessor\nd) Reverse list then delete head\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP87.",
        "target_text": "Question: Verify whether a pop sequence of length n=87 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Backtrack with recursion in Θ(2^n)\nd) Sort both sequences then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA7690.",
        "target_text": "Question: Circular-array queue with capacity 7690: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Require power-of-two capacity\nc) Require prime capacity\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA9_99056172.",
        "target_text": "Question: In a d-ary heap with d=9 and n=99056172 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(log_9 n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH8192.",
        "target_text": "Question: In open addressing with double hashing over table size m=8192, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) Choose m even and g(k) even\nc) g(k) coprime with m for all keys\nd) Use g(k)=0 for some keys\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA313295.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=313295 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) DFS from root each time\nc) Sort node labels then binary search\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR703051.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=703051 edges. What algorithmic idea achieves linear time?\nChoices:\na) Topological sorting\nb) Kruskal’s algorithm\nc) Tarjan’s low-link DFS\nd) Dijkstra’s algorithm\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN801135.",
        "target_text": "Question: Check anagrams for strings of length n=801135 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) DFS on character graph\nc) Use a stack\nd) Sort both in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB63388287.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=63388287 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n)\nc) Ω(n^2)\nd) Ω(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS8341680.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=8341680 typically runs in?\nChoices:\na) Θ(n) average\nb) Θ(log n) average\nc) O(1) worst-case\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M8_5_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/5) + n^0 for n being a power of 5.\nChoices:\na) Θ(n^1.292)\nb) Θ(n^0)\nc) Θ(n^1.292 log n)\nd) Θ(n^0 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P742068.",
        "target_text": "Question: Answer 742068 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Use a stack to store partial sums\nc) Build prefix-sum array; O(1) per query\nd) Recompute sums per query in Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN655391.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 655391, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Traverse from head to find predecessor\nc) Impossible under any model\nd) Reverse list then delete head\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS2730.",
        "target_text": "Question: Compute stock span for 2730 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Fenwick tree\nc) Hash table\nd) Priority queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ202598.",
        "target_text": "Question: For 202598 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Binary heap\nc) Queue\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM834_135735.",
        "target_text": "Question: Merge k=834 sorted streams totaling N=135735 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(N log k)\nc) Θ(N + k^2)\nd) Θ(k log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.25.",
        "target_text": "Question: In separate chaining with load factor α=0.25, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H742650194.",
        "target_text": "Question: For a balanced BST with n=742650194 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(log log n)\nc) Θ(n)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC690697.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=690697 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V log V)\nb) Θ(E log V)\nc) Θ(V+E)\nd) Θ(VE)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP43510.",
        "target_text": "Question: KMP matches a pattern of length m=43510 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) Suffix array\nc) Rolling hash table\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS310081.",
        "target_text": "Question: Keys are integers in range [0..310081]. Which algorithm sorts in linear time?\nChoices:\na) Quick sort\nb) Heap sort\nc) Counting sort\nd) Shell sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX52470051.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈52470051. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Uses hashing to index unknown segments\nc) Sorts the array first\nd) Requires the array to be cyclic\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M3_3_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/3) + n^2 for n being a power of 3.\nChoices:\na) Θ(n^1.0)\nb) Θ(n^2 log n)\nc) Θ(n^1.0 log n)\nd) Θ(n^2)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM672216.",
        "target_text": "Question: Find a majority element in an array of length n=672216 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Divide-and-conquer merges\nc) Boyer–Moore voting with verification\nd) Counting sort\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN95828.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 95828, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Copy next node’s data here and bypass next\nc) Reverse list then delete head\nd) Traverse from head to find predecessor\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS894.",
        "target_text": "Question: Compute stock span for 894 days of prices. Which approach is linear time?\nChoices:\na) Fenwick tree\nb) Hash table\nc) Monotonic stack\nd) Priority queue\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS4678.",
        "target_text": "Question: A queue via two stacks handles a burst of 4678 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC49999177.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=49999177?\nChoices:\na) Θ(1)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(log log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.97.",
        "target_text": "Question: In separate chaining with load factor α=0.97, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H50600801.",
        "target_text": "Question: For a balanced BST with n=50600801 nodes, what is the worst-case height?\nChoices:\na) Θ(log log n)\nb) Θ(log n)\nc) Θ(√n)\nd) Θ(n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST18064.",
        "target_text": "Question: MST question id=18064: which statement is true?\nChoices:\na) MST is always unique in connected graphs\nb) Kruskal adds the smallest edge that doesn't create a cycle\nc) Prim requires the entire edge set to be sorted first\nd) MST minimizes number of edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP42456.",
        "target_text": "Question: KMP matches a pattern of length m=42456 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) Suffix array\nc) LPS (failure) function\nd) Rolling hash table\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS337.",
        "target_text": "Question: Array is nearly sorted with at most 337 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Radix sort\nc) Heap sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS2150358.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=2150358 typically runs in?\nChoices:\na) Θ(log n) average\nb) O(log log n) average\nc) O(1) worst-case\nd) Θ(n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T2_1_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^2, f3=n^2 (log n)^1, f4=n^6?\nChoices:\na) Θ(n^2 (log n)^1)\nb) Θ(n^2)\nc) Θ((log n)^1)\nd) Θ(n^6)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R47908.",
        "target_text": "Question: Rotate an array right by r=47908 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Three-reversal method\nc) Selection sort then shift\nd) Heapify then extract\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR4.",
        "target_text": "Question: Reverse a singly linked list in groups of k=4 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(n)\nc) Θ(n log k)\nd) Θ(k log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1379.",
        "target_text": "Question: Verify whether a pop sequence of length n=1379 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Aggregate analysis over infrequent transfers. Variant TS3675.",
        "target_text": "Question: A queue via two stacks handles a burst of 3675 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Increasing arity shrinks height. Variant DA3_70632911.",
        "target_text": "Question: In a d-ary heap with d=3 and n=70632911 nodes, what is the height?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(√n)\nd) Θ(log_3 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.88.",
        "target_text": "Question: In separate chaining with load factor α=0.88, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(1/α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS808057.",
        "target_text": "Question: BST with parent pointers (id=808057): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Use level-order and pick next node\nc) Always climb to root then go right once\nd) Reverse postorder traversal entirely\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC341614.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=341614 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(VE)\nc) Θ(V log V)\nd) Θ(V+E)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Counting avoids comparisons for fixed alphabets. Variant AN610823.",
        "target_text": "Question: Check anagrams for strings of length n=610823 over fixed alphabet. Optimal approach?\nChoices:\na) Count character frequencies in Θ(n)\nb) Use a stack\nc) DFS on character graph\nd) Sort both in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS132.",
        "target_text": "Question: Array is nearly sorted with at most 132 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Heap sort\nc) Radix sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS1054355.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=1054355 typically runs in?\nChoices:\na) Θ(n) average\nb) Θ(log n) average\nc) O(1) worst-case\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M4_5_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/5) + n^4 for n being a power of 5.\nChoices:\na) Θ(n^4 log n)\nb) Θ(n^4)\nc) Θ(n^0.8614)\nd) Θ(n^0.8614 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P218919.",
        "target_text": "Question: Answer 218919 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Use a stack to store partial sums\nb) Recompute sums per query in Θ(n)\nc) Sort once and binary search per query\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN529151_429540.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=529151, B=429540. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Binary search on addresses\nc) Hash addresses of first list\nd) Reverse one list then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1456.",
        "target_text": "Question: Verify whether a pop sequence of length n=1456 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Backtrack with recursion in Θ(2^n)\nc) Simulate using one stack in Θ(n)\nd) Sort both sequences then compare\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Avoid ambiguity between head and tail indices. Variant CA6833.",
        "target_text": "Question: Circular-array queue with capacity 6833: how to distinguish full vs empty?\nChoices:\na) Head==Tail means full\nb) Require power-of-two capacity\nc) Require prime capacity\nd) Track count or keep one slot empty\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Level aggregation yields linear build time. Variant BH1341746.",
        "target_text": "Question: Build a binary heap from n=1341746 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(n log n)\nd) Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC1.46.",
        "target_text": "Question: In separate chaining with load factor α=1.46, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS445650.",
        "target_text": "Question: BST with parent pointers (id=445650): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) Reverse postorder traversal entirely\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Always climb to root then go right once\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Two colors suffice iff no odd cycle. Variant BP923286.",
        "target_text": "Question: Test bipartiteness (id=923286) of an undirected graph efficiently. Which method works?\nChoices:\na) Check all degrees even\nb) Sort vertices and deduplicate\nc) Compute an MST then inspect edges\nd) Attempt 2-coloring via BFS; failure indicates odd cycle\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS39008.",
        "target_text": "Question: In KMP, what does LPS[39008] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Number of mismatches up to i\nc) Total distinct prefixes up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Heap operations ignore original order of equals. Variant HS569135.",
        "target_text": "Question: Heapsort stability check id=569135: which statement is correct?\nChoices:\na) Heapsort needs extra Θ(n) memory\nb) Heapsort always beats merge sort\nc) Heapsort is not stable by default\nd) Heapsort is stable\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS6811479.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=6811479 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(log n)\nd) Θ(1) expected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T5_6_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^5, f3=n^5 (log n)^6, f4=n^9?\nChoices:\na) Θ(n^5)\nb) Θ(n^9)\nc) Θ((log n)^6)\nd) Θ(n^5 (log n)^6)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P168777.",
        "target_text": "Question: Answer 168777 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Recompute sums per query in Θ(n)\nc) Use a stack to store partial sums\nd) Build prefix-sum array; O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Midpoint split plus reversal enables in-place comparison. Variant PL19172.",
        "target_text": "Question: Check if a singly linked list of length n=19172 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Find middle, reverse second half, compare\nb) Copy to array and two-pointer check\nc) Sort and compare with original\nd) Use a hash set of seen values\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP268.",
        "target_text": "Question: Verify whether a pop sequence of length n=268 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Sort both sequences then compare\nc) Use a queue to mirror the stack\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B827586.",
        "target_text": "Question: Run BFS on an unweighted graph with 827586 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) Minimum memory footprint\nc) Lexicographic vertex order\nd) All simple paths before all edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Increasing arity shrinks height. Variant DA7_77976291.",
        "target_text": "Question: In a d-ary heap with d=7 and n=77976291 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(log_7 n)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.56.",
        "target_text": "Question: In separate chaining with load factor α=0.56, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H411498820.",
        "target_text": "Question: For a balanced BST with n=411498820 nodes, what is the worst-case height?\nChoices:\na) Θ(log n)\nb) Θ(log log n)\nc) Θ(n)\nd) Θ(√n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D727067.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 727067]. Why?\nChoices:\na) Distinct weights are required\nb) Self-loops must be absent\nc) Nonnegative weights ensure greedy optimality\nd) Graph must be undirected\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP31847.",
        "target_text": "Question: KMP matches a pattern of length m=31847 in linear time using which table?\nChoices:\na) Z-array exclusively\nb) LPS (failure) function\nc) Suffix array\nd) Rolling hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB95433626.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=95433626 distinct keys?\nChoices:\na) Ω(n^2)\nb) Ω(n)\nc) Ω(log n)\nd) Ω(n log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Half-open intervals simplify updates. Variant BI35_2351.",
        "target_text": "Question: Binary search over half-open range [35, 2351)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Increase both lo and hi to skip duplicates\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Keep inclusive bounds on both ends\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M8_6_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/6) + n^0 for n being a power of 6.\nChoices:\na) Θ(n^0)\nb) Θ(n^0 log n)\nc) Θ(n^1.1606)\nd) Θ(n^1.1606 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P89827.",
        "target_text": "Question: Answer 89827 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Use a stack to store partial sums\nc) Build prefix-sum array; O(1) per query\nd) Recompute sums per query in Θ(n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Two-run traversal aligns positions at the meeting node. Variant IN844689_610617.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=844689, B=610617. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Hash addresses of first list\nc) Advance pointers; when one ends, jump to the other head\nd) Reverse one list then compare\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS4455.",
        "target_text": "Question: Compute stock span for 4455 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Hash table\nc) Fenwick tree\nd) Monotonic stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ600032.",
        "target_text": "Question: For 600032 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Binary heap\nb) Deque\nc) Stack\nd) Queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC75393438.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=75393438?\nChoices:\na) Θ(log n)\nb) Θ(log log n)\nc) Θ(1)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.32.",
        "target_text": "Question: In separate chaining with load factor α=1.32, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA865646.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=865646 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) DFS from root each time\nc) Euler tour + RMQ yields O(1) per query\nd) Sort node labels then binary search\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC344994.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=344994 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(V log V)\nc) Θ(E log V)\nd) Θ(VE)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Character-by-character descent. Variant TRIE256.",
        "target_text": "Question: Search a trie over alphabet size σ=256 for a key of length m. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(m)\nc) Θ(1) average for all m\nd) Θ(m log σ)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS106267.",
        "target_text": "Question: Keys are integers in range [0..106267]. Which algorithm sorts in linear time?\nChoices:\na) Heap sort\nb) Shell sort\nc) Quick sort\nd) Counting sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Order in one half preserves logarithmic progress. Variant RS3470304.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=3470304 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(1) expected\nd) Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_6_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^3, f3=n^3 (log n)^6, f4=n^8?\nChoices:\na) Θ((log n)^6)\nb) Θ(n^3)\nc) Θ(n^8)\nd) Θ(n^3 (log n)^6)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP12878_672.",
        "target_text": "Question: Sorted array length n=12878. Decide if any pair sums to 672. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Divide and conquer in Θ(n log n)\nc) Hash set in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Local overwrite avoids predecessor search. Variant DN981535.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 981535, delete it in Θ(1) time. How?\nChoices:\na) Traverse from head to find predecessor\nb) Copy next node’s data here and bypass next\nc) Reverse list then delete head\nd) Impossible under any model\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP581.",
        "target_text": "Question: Verify whether a pop sequence of length n=581 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Simulate using one stack in Θ(n)\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ924691.",
        "target_text": "Question: For 924691 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Binary heap\nc) Deque\nd) Stack\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC85330867.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=85330867?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA487822.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=487822 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) Sort node labels then binary search\nc) DFS from root each time\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Back-edge tracking reveals critical edges. Variant BR546647.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=546647 edges. What algorithmic idea achieves linear time?\nChoices:\na) Tarjan’s low-link DFS\nb) Topological sorting\nc) Kruskal’s algorithm\nd) Dijkstra’s algorithm\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Character-by-character descent. Variant TRIE52.",
        "target_text": "Question: Search a trie over alphabet size σ=52 for a key of length m. Time complexity?\nChoices:\na) Θ(m log σ)\nb) Θ(log n)\nc) Θ(m)\nd) Θ(1) average for all m\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST453526.",
        "target_text": "Question: Stability (id=453526): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Merge sort (stable), Heap sort (unstable)\nc) Counting sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS6571479.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=6571479 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(log n)\nc) Θ(n)\nd) Θ(1) expected\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T3_1_3.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^3, f3=n^3 (log n)^1, f4=n^6?\nChoices:\na) Θ(n^6)\nb) Θ(n^3 (log n)^1)\nc) Θ(n^3)\nd) Θ((log n)^1)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone movement shrinks search space without hashing. Variant TP3438_2452.",
        "target_text": "Question: Sorted array length n=3438. Decide if any pair sums to 2452. Best approach/time?\nChoices:\na) Brute force in Θ(n^2)\nb) Two-pointer scan in Θ(n)\nc) Divide and conquer in Θ(n log n)\nd) Hash set in Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN989466.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 989466, delete it in Θ(1) time. How?\nChoices:\na) Reverse list then delete head\nb) Traverse from head to find predecessor\nc) Impossible under any model\nd) Copy next node’s data here and bypass next\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Nested structures map naturally to LIFO handling. Variant DS6.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 6 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Use two stacks for counts and fragments\nb) Use BFS on substring graph\nc) Greedy left-to-right without memory\nd) Sort segments then concatenate\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. FIFO order realizes layer expansion. Variant B653047.",
        "target_text": "Question: Run BFS on an unweighted graph with 653047 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) Lexicographic vertex order\nc) Nondecreasing distance from source\nd) All simple paths before all edges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM378_117984.",
        "target_text": "Question: Merge k=378 sorted streams totaling N=117984 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(N log N)\nc) Θ(N + k^2)\nd) Θ(k log N)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH32768.",
        "target_text": "Question: In open addressing with double hashing over table size m=32768, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Use g(k)=0 for some keys\nc) Make both hash functions identical\nd) Choose m even and g(k) even\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Height bound drives all operation complexities. Variant H826877349.",
        "target_text": "Question: For a balanced BST with n=826877349 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Safe edges are chosen via cut/cycle properties. Variant MST300672.",
        "target_text": "Question: MST question id=300672: which statement is true?\nChoices:\na) Kruskal adds the smallest edge that doesn't create a cycle\nb) MST is always unique in connected graphs\nc) Prim requires the entire edge set to be sorted first\nd) MST minimizes number of edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Counting avoids comparisons for fixed alphabets. Variant AN345351.",
        "target_text": "Question: Check anagrams for strings of length n=345351 over fixed alphabet. Optimal approach?\nChoices:\na) Sort both in Θ(n log n)\nb) DFS on character graph\nc) Use a stack\nd) Count character frequencies in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS492.",
        "target_text": "Question: Array is nearly sorted with at most 492 inversions. Which algorithm excels?\nChoices:\na) Radix sort\nb) Shell sort with fixed gaps\nc) Heap sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Unknown bounds can be discovered geometrically. Variant EX11305692.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈11305692. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Sorts the array first\nc) Uses hashing to index unknown segments\nd) Requires the array to be cyclic\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M2_5_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/5) + n^2 for n being a power of 5.\nChoices:\na) Θ(n^2 log n)\nb) Θ(n^0.4307 log n)\nc) Θ(n^2)\nd) Θ(n^0.4307)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Monotone movement shrinks search space without hashing. Variant TP15409_4206.",
        "target_text": "Question: Sorted array length n=15409. Decide if any pair sums to 4206. Best approach/time?\nChoices:\na) Divide and conquer in Θ(n log n)\nb) Two-pointer scan in Θ(n)\nc) Hash set in Θ(n log n)\nd) Brute force in Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN887836_447808.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=887836, B=447808. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Binary search on addresses\nb) Reverse one list then compare\nc) Advance pointers; when one ends, jump to the other head\nd) Hash addresses of first list\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS4295.",
        "target_text": "Question: Compute stock span for 4295 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Hash table\nc) Priority queue\nd) Fenwick tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Bidirectional constant-time end operations. Variant DQ858113.",
        "target_text": "Question: For 858113 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Binary heap\nc) Stack\nd) Queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Frontier size k controls the log factor. Variant KM892_160882.",
        "target_text": "Question: Merge k=892 sorted streams totaling N=160882 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log N)\nb) Θ(k log N)\nc) Θ(N log k)\nd) Θ(N + k^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF2452142_0.37.",
        "target_text": "Question: Chaining hash table with n=2452142 keys at load factor α=0.37. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(1 + α)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Height bound drives all operation complexities. Variant H912300898.",
        "target_text": "Question: For a balanced BST with n=912300898 nodes, what is the worst-case height?\nChoices:\na) Θ(√n)\nb) Θ(log log n)\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Relaxation order depends on nonnegativity. Variant D959836.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 959836]. Why?\nChoices:\na) Self-loops must be absent\nb) Graph must be undirected\nc) Nonnegative weights ensure greedy optimality\nd) Distinct weights are required\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Randomized hashing makes spurious matches rare. Variant RK911382323_1000000009.",
        "target_text": "Question: Rabin–Karp with base=911382323, mod=1000000009 achieves expected linear time due to what?\nChoices:\na) Suffix tree guaranteeing O(1) per char\nb) Trie of all substrings\nc) Low collision probability of rolling hash\nd) Use of a min-heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB45400311.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=45400311 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(n^2)\nc) Ω(n)\nd) Ω(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS8069106.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=8069106 typically runs in?\nChoices:\na) Θ(log n) average\nb) Θ(n) average\nc) O(log log n) average\nd) O(1) worst-case\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T2_5_4.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^2, f3=n^2 (log n)^5, f4=n^6?\nChoices:\na) Θ((log n)^5)\nb) Θ(n^6)\nc) Θ(n^2)\nd) Θ(n^2 (log n)^5)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P869970.",
        "target_text": "Question: Answer 869970 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Sort once and binary search per query\nb) Build prefix-sum array; O(1) per query\nc) Recompute sums per query in Θ(n)\nd) Use a stack to store partial sums\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. External multiway merge with heap frontier. Variant MK49_3601.",
        "target_text": "Question: Merge k=49 sorted linked lists totaling n=3601 nodes optimally. Complexity?\nChoices:\na) Θ(n + k^2)\nb) Θ(k n)\nc) Θ(n log k)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP1995.",
        "target_text": "Question: Verify whether a pop sequence of length n=1995 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Backtrack with recursion in Θ(2^n)\nc) Use a queue to mirror the stack\nd) Sort both sequences then compare\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ736081.",
        "target_text": "Question: For 736081 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Queue\nb) Binary heap\nc) Stack\nd) Deque\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM624_78476.",
        "target_text": "Question: Merge k=624 sorted streams totaling N=78476 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log k)\nc) Θ(N + k^2)\nd) Θ(N log N)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Adversarial patterns are neutralized by random choice. Variant UH100000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=100000 slots yields what benefit?\nChoices:\na) Cryptographic security by default\nb) Zero collisions guaranteed\nc) Expected constant-time operations against adversaries\nd) Eliminates need for resizing\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Left–root–right sequence yields sorted order. Variant TR72204.",
        "target_text": "Question: In a BST with distinct keys (id=72204), which traversal lists keys in nondecreasing order?\nChoices:\na) Inorder\nb) Level-order\nc) Postorder\nd) Preorder\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Acyclicity is necessary and sufficient. Variant TS317405_2872363.",
        "target_text": "Question: A directed graph with V=317405, E≈2872363. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) Only if edges are unweighted\nc) Only if the graph is connected\nd) When all vertices have outdegree ≥ 1\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Prefix-function encodes fallback lengths. Variant LPS10378.",
        "target_text": "Question: In KMP, what does LPS[10378] represent for a given pattern?\nChoices:\na) Index of next occurrence\nb) Length of longest proper prefix that is also a suffix for prefix ending at i\nc) Total distinct prefixes up to i\nd) Number of mismatches up to i\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Key-indexed counting avoids comparisons. Variant CS474180.",
        "target_text": "Question: Keys are integers in range [0..474180]. Which algorithm sorts in linear time?\nChoices:\na) Shell sort\nb) Counting sort\nc) Quick sort\nd) Heap sort\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Distribution assumptions change complexity. Variant IS6329688.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=6329688 typically runs in?\nChoices:\na) O(log log n) average\nb) Θ(n) average\nc) O(1) worst-case\nd) Θ(log n) average\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T3_6_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^6, f2=n^3, f3=n^3 (log n)^6, f4=n^5?\nChoices:\na) Θ((log n)^6)\nb) Θ(n^5)\nc) Θ(n^3)\nd) Θ(n^3 (log n)^6)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Precompute cumulative totals once, then answer instantly. Variant P263070.",
        "target_text": "Question: Answer 263070 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Build prefix-sum array; O(1) per query\nb) Sort once and binary search per query\nc) Recompute sums per query in Θ(n)\nd) Use a stack to store partial sums\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. External multiway merge with heap frontier. Variant MK87_7245.",
        "target_text": "Question: Merge k=87 sorted linked lists totaling n=7245 nodes optimally. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n + k^2)\nc) Θ(k n)\nd) Θ(n log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1820.",
        "target_text": "Question: Verify whether a pop sequence of length n=1820 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Backtrack with recursion in Θ(2^n)\nc) Simulate using one stack in Θ(n)\nd) Sort both sequences then compare\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ957781.",
        "target_text": "Question: Schedule 957781 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Unordered array\nb) Stack\nc) Circular queue\nd) Binary heap\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Pivot quality bounds recursion depth. Variant KL353_618147.",
        "target_text": "Question: Find the k=353-th largest element among n=618147 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Build max-heap and extract k times\nc) Binary search on value domain\nd) Deterministic selection (median-of-medians)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF5450015_0.49.",
        "target_text": "Question: Chaining hash table with n=5450015 keys at load factor α=0.49. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(α log α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS926750.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=926750-th smallest?\nChoices:\na) Θ(1)\nb) Θ(√n)\nc) Θ(k)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. DFS-based schemes run in linear time. Variant SCC906554.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=906554 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(V+E)\nc) Θ(VE)\nd) Θ(V log V)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Failure links skip redundant comparisons. Variant KMP8350.",
        "target_text": "Question: KMP matches a pattern of length m=8350 in linear time using which table?\nChoices:\na) Suffix array\nb) LPS (failure) function\nc) Rolling hash table\nd) Z-array exclusively\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Adaptive to presortedness. Variant NS803.",
        "target_text": "Question: Array is nearly sorted with at most 803 inversions. Which algorithm excels?\nChoices:\na) Insertion sort\nb) Radix sort\nc) Shell sort with fixed gaps\nd) Heap sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS9701823.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=9701823 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(log n)\nc) Θ(1) expected\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M3_2_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/2) + n^0 for n being a power of 2.\nChoices:\na) Θ(n^0)\nb) Θ(n^0 log n)\nc) Θ(n^1.585)\nd) Θ(n^1.585 log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Precompute cumulative totals once, then answer instantly. Variant P327672.",
        "target_text": "Question: Answer 327672 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Recompute sums per query in Θ(n)\nb) Sort once and binary search per query\nc) Build prefix-sum array; O(1) per query\nd) Use a stack to store partial sums\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Phase difference accumulates around the cycle. Variant C3.",
        "target_text": "Question: Detect a cycle in a singly linked list using two pointers moving 3× and 1×. Complexity?\nChoices:\na) Θ(log n) time, Θ(1) space\nb) Θ(1) time, Θ(1) space\nc) Θ(n) time, Θ(1) space\nd) Θ(n) time, Θ(n) space\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP129.",
        "target_text": "Question: Verify whether a pop sequence of length n=129 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Simulate using one stack in Θ(n)\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS8051.",
        "target_text": "Question: A queue via two stacks handles a burst of 8051 operations. Amortized costs?\nChoices:\na) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nb) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nc) Both Θ(log n)\nd) ENQUEUE and DEQUEUE both amortized Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL149_641968.",
        "target_text": "Question: Find the k=149-th largest element among n=641968 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Build max-heap and extract k times\nc) Deterministic selection (median-of-medians)\nd) Binary search on value domain\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF2420785_0.59.",
        "target_text": "Question: Chaining hash table with n=2420785 keys at load factor α=0.59. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS228299.",
        "target_text": "Question: BST with parent pointers (id=228299): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Use level-order and pick next node\nc) Always climb to root then go right once\nd) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Two colors suffice iff no odd cycle. Variant BP865919.",
        "target_text": "Question: Test bipartiteness (id=865919) of an undirected graph efficiently. Which method works?\nChoices:\na) Attempt 2-coloring via BFS; failure indicates odd cycle\nb) Check all degrees even\nc) Sort vertices and deduplicate\nd) Compute an MST then inspect edges\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP96039.",
        "target_text": "Question: KMP matches a pattern of length m=96039 in linear time using which table?\nChoices:\na) Suffix array\nb) LPS (failure) function\nc) Z-array exclusively\nd) Rolling hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB50622356.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=50622356 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n)\nc) Ω(n log n)\nd) Ω(n^2)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS5909236.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=5909236 typically runs in?\nChoices:\na) Θ(n) average\nb) O(log log n) average\nc) Θ(log n) average\nd) O(1) worst-case\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M4_3_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 4·T(n/3) + n^2 for n being a power of 3.\nChoices:\na) Θ(n^1.2619 log n)\nb) Θ(n^2 log n)\nc) Θ(n^2)\nd) Θ(n^1.2619)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Candidate extraction without extra arrays. Variant BM566026.",
        "target_text": "Question: Find a majority element in an array of length n=566026 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Binary search on value domain\nb) Divide-and-conquer merges\nc) Counting sort\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR4.",
        "target_text": "Question: Reverse a singly linked list in groups of k=4 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(n log k)\nc) Θ(k log n)\nd) Θ(nk)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Decreasing stack collapses contiguous blocks. Variant SS3323.",
        "target_text": "Question: Compute stock span for 3323 days of prices. Which approach is linear time?\nChoices:\na) Hash table\nb) Monotonic stack\nc) Fenwick tree\nd) Priority queue\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Index deque drops obsolete or dominated elements. Variant SW1130_167.",
        "target_text": "Question: Sliding window maximum for array length n=1130 and window w=167. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(nw)\nd) Θ(w log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC77714846.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=77714846?\nChoices:\na) Θ(log log n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(1)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF8435235_0.56.",
        "target_text": "Question: Chaining hash table with n=8435235 keys at load factor α=0.56. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(α log α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Rank-guided descent mirrors search path length. Variant OS98179.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=98179-th smallest?\nChoices:\na) Θ(1)\nb) Θ(√n)\nc) Θ(k)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR166753.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=166753 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Kruskal’s algorithm\nc) Tarjan’s low-link DFS\nd) Topological sorting\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Failure links skip redundant comparisons. Variant KMP26735.",
        "target_text": "Question: KMP matches a pattern of length m=26735 in linear time using which table?\nChoices:\na) LPS (failure) function\nb) Rolling hash table\nc) Suffix array\nd) Z-array exclusively\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Information-theoretic lower bounds apply. Variant LB75806856.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=75806856 distinct keys?\nChoices:\na) Ω(n log n)\nb) Ω(log n)\nc) Ω(n^2)\nd) Ω(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX298122651.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈298122651. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Requires the array to be cyclic\nc) Doubles the bound to bracket, then binary search\nd) Sorts the array first\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M7_5_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 7·T(n/5) + n^2 for n being a power of 5.\nChoices:\na) Θ(n^1.2091)\nb) Θ(n^2 log n)\nc) Θ(n^1.2091 log n)\nd) Θ(n^2)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM55572.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=55572-th missing positive. What approach attains logarithmic time?\nChoices:\na) Hash all present values then scan\nb) Binary search on index vs value gap\nc) Scan linearly counting gaps\nd) Use a heap of differences\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Two-run traversal aligns positions at the meeting node. Variant IN565398_149601.",
        "target_text": "Question: Two singly linked lists may intersect. Lengths are A=565398, B=149601. Which O(n) time, O(1) space method finds intersection?\nChoices:\na) Advance pointers; when one ends, jump to the other head\nb) Binary search on addresses\nc) Reverse one list then compare\nd) Hash addresses of first list\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Monotonicity prunes candidates aggressively. Variant NGE28333.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=28333. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Decreasing stack\nc) Max-heap\nd) Binary search tree\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS2404.",
        "target_text": "Question: A queue via two stacks handles a burst of 2404 operations. Amortized costs?\nChoices:\na) ENQUEUE and DEQUEUE both amortized Θ(1)\nb) Both Θ(log n)\nc) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nd) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Level aggregation yields linear build time. Variant BH1385080.",
        "target_text": "Question: Build a binary heap from n=1385080 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(n log n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.88.",
        "target_text": "Question: In separate chaining with load factor α=0.88, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA444825.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=444825 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) Euler tour + RMQ yields O(1) per query\nc) Sort node labels then binary search\nd) DFS from root each time\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF15271.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=15271 can handle which case while detecting it?\nChoices:\na) Faster runtime on sparse nonnegative graphs\nb) Negative edge weights and negative cycles\nc) Only acyclic graphs\nd) Equal runtime on all graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB79774.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=79774. Which structure gives linear or near-linear time?\nChoices:\na) Suffix automaton or suffix array + LCP\nb) Queue of rolling hashes only\nc) Binary heap of substrings\nd) BST over all substrings\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS71.",
        "target_text": "Question: Array is nearly sorted with at most 71 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Radix sort\nc) Insertion sort\nd) Shell sort with fixed gaps\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX322645892.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈322645892. Why?\nChoices:\na) Sorts the array first\nb) Doubles the bound to bracket, then binary search\nc) Requires the array to be cyclic\nd) Uses hashing to index unknown segments\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M2_4_0.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 2·T(n/4) + n^0 for n being a power of 4.\nChoices:\na) Θ(n^0)\nb) Θ(n^0.5)\nc) Θ(n^0.5 log n)\nd) Θ(n^0 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R36974.",
        "target_text": "Question: Rotate an array right by r=36974 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Heapify then extract\nc) Selection sort then shift\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. Local overwrite avoids predecessor search. Variant DN95429.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 95429, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Traverse from head to find predecessor\nc) Impossible under any model\nd) Reverse list then delete head\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS2330.",
        "target_text": "Question: Compute stock span for 2330 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Hash table\nc) Monotonic stack\nd) Fenwick tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Key-ordered retrieval differs from FIFO. Variant PQ920349.",
        "target_text": "Question: Schedule 920349 tasks by deadlines and priorities. Which structure selects next task efficiently?\nChoices:\na) Binary heap\nb) Stack\nc) Circular queue\nd) Unordered array\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Tradeoff between branching factor and height. Variant DK4.",
        "target_text": "Question: In a d-ary heap (d=4), how does increasing d affect DECREASE-KEY's time?\nChoices:\na) No effect whatsoever\nb) It increases height linearly\nc) It decreases the height (fewer levels), but each step has up to d−1 comparisons\nd) It makes the operation constant time\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF5093898_0.45.",
        "target_text": "Question: Chaining hash table with n=5093898 keys at load factor α=0.45. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(nα)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS453212.",
        "target_text": "Question: BST with parent pointers (id=453212): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) Always climb to root then go right once\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Reverse postorder traversal entirely\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Repeated edge relaxation tolerates negatives. Variant BF74737.",
        "target_text": "Question: Compared to Dijkstra, Bellman–Ford on V=74737 can handle which case while detecting it?\nChoices:\na) Equal runtime on all graphs\nb) Negative edge weights and negative cycles\nc) Only acyclic graphs\nd) Faster runtime on sparse nonnegative graphs\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Z-values compare substrings with the global prefix. Variant Z7082.",
        "target_text": "Question: For string S (id=7082), what does Z[i] measure?\nChoices:\na) Next index of S[i]\nb) Number of distinct substrings up to i\nc) Length of the longest prefix starting at i matching S[0..]\nd) Number of mismatches at i\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS240.",
        "target_text": "Question: Array is nearly sorted with at most 240 inversions. Which algorithm excels?\nChoices:\na) Heap sort\nb) Radix sort\nc) Insertion sort\nd) Shell sort with fixed gaps\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS1080212.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=1080212 typically runs in?\nChoices:\na) Θ(log n) average\nb) O(log log n) average\nc) O(1) worst-case\nd) Θ(n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_3_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^3, f2=n^1, f3=n^1 (log n)^3, f4=n^7?\nChoices:\na) Θ((log n)^3)\nb) Θ(n^1)\nc) Θ(n^7)\nd) Θ(n^1 (log n)^3)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Monotone predicate enables bisection on positions. Variant KM47363.",
        "target_text": "Question: In a strictly increasing sorted array of positive integers, find the k=47363-th missing positive. What approach attains logarithmic time?\nChoices:\na) Scan linearly counting gaps\nb) Use a heap of differences\nc) Binary search on index vs value gap\nd) Hash all present values then scan\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR3.",
        "target_text": "Question: Reverse a singly linked list in groups of k=3 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n log k)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE31536.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=31536. Which structure gives Θ(n) time?\nChoices:\na) Decreasing stack\nb) Queue\nc) Max-heap\nd) Binary search tree\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Aggregate analysis over infrequent transfers. Variant TS4763.",
        "target_text": "Question: A queue via two stacks handles a burst of 4763 operations. Amortized costs?\nChoices:\na) Both Θ(log n)\nb) ENQUEUE and DEQUEUE both amortized Θ(1)\nc) ENQUEUE Θ(1), DEQUEUE Θ(n) amortized\nd) ENQUEUE Θ(log n), DEQUEUE Θ(1)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Level aggregation yields linear build time. Variant BH7553573.",
        "target_text": "Question: Build a binary heap from n=7553573 keys using bottom-up heapify. Time complexity?\nChoices:\na) Θ(log n)\nb) Θ(n^2)\nc) Θ(n log n)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF379082_0.33.",
        "target_text": "Question: Chaining hash table with n=379082 keys at load factor α=0.33. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(nα)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Range-min queries on depth indices answer LCAs quickly. Variant LCA474904.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=474904 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Naive parent climbing O(n) per query\nb) Sort node labels then binary search\nc) DFS from root each time\nd) Euler tour + RMQ yields O(1) per query\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D44446.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 44446]. Why?\nChoices:\na) Self-loops must be absent\nb) Graph must be undirected\nc) Distinct weights are required\nd) Nonnegative weights ensure greedy optimality\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB98427.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=98427. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) Suffix automaton or suffix array + LCP\nc) Queue of rolling hashes only\nd) BST over all substrings\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Heap operations ignore original order of equals. Variant HS314498.",
        "target_text": "Question: Heapsort stability check id=314498: which statement is correct?\nChoices:\na) Heapsort always beats merge sort\nb) Heapsort is not stable by default\nc) Heapsort is stable\nd) Heapsort needs extra Θ(n) memory\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Biasing mid updates finds first/last position. Variant LU4835637.",
        "target_text": "Question: Find lower_bound and upper_bound of a key in a sorted array of size n=4835637. What guarantees O(log n)?\nChoices:\na) Hashing with chaining\nb) Heap-based selection\nc) Binary search with left/right bias\nd) Linear scan with early exit\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T3_2_6.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^2, f2=n^3, f3=n^3 (log n)^2, f4=n^9?\nChoices:\na) Θ(n^3 (log n)^2)\nb) Θ(n^3)\nc) Θ((log n)^2)\nd) Θ(n^9)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R410910.",
        "target_text": "Question: Rotate an array right by r=410910 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Heapify then extract\nc) Single-step rotate repeated r times\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR8.",
        "target_text": "Question: Reverse a singly linked list in groups of k=8 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(nk)\nb) Θ(k log n)\nc) Θ(n)\nd) Θ(n log k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Decreasing stack collapses contiguous blocks. Variant SS3292.",
        "target_text": "Question: Compute stock span for 3292 days of prices. Which approach is linear time?\nChoices:\na) Monotonic stack\nb) Fenwick tree\nc) Hash table\nd) Priority queue\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. FIFO order realizes layer expansion. Variant B337355.",
        "target_text": "Question: Run BFS on an unweighted graph with 337355 edges. What property does the queue enforce?\nChoices:\na) Minimum memory footprint\nb) Nondecreasing distance from source\nc) Lexicographic vertex order\nd) All simple paths before all edges\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Frontier size k controls the log factor. Variant KM570_99724.",
        "target_text": "Question: Merge k=570 sorted streams totaling N=99724 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(k log N)\nb) Θ(N log N)\nc) Θ(N + k^2)\nd) Θ(N log k)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.25.",
        "target_text": "Question: In separate chaining with load factor α=1.25, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Left–root–right sequence yields sorted order. Variant TR333746.",
        "target_text": "Question: In a BST with distinct keys (id=333746), which traversal lists keys in nondecreasing order?\nChoices:\na) Postorder\nb) Level-order\nc) Preorder\nd) Inorder\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. Relaxation order depends on nonnegativity. Variant D905704.",
        "target_text": "Question: Dijkstra’s algorithm is correct if all edge weights are in [0, 905704]. Why?\nChoices:\na) Graph must be undirected\nb) Nonnegative weights ensure greedy optimality\nc) Distinct weights are required\nd) Self-loops must be absent\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Rolling hashes enable fast window shifts but must manage collision risks. Suffix-based structures compactly represent all substrings. Variant DSUB83194.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=83194. Which structure gives linear or near-linear time?\nChoices:\na) Queue of rolling hashes only\nb) Binary heap of substrings\nc) BST over all substrings\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Input presortedness allows adaptive algorithms to run near-linearly. Adaptive to presortedness. Variant NS560.",
        "target_text": "Question: Array is nearly sorted with at most 560 inversions. Which algorithm excels?\nChoices:\na) Insertion sort\nb) Radix sort\nc) Shell sort with fixed gaps\nd) Heap sort\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Half-open intervals simplify updates. Variant BI40_2573.",
        "target_text": "Question: Binary search over half-open range [40, 2573)—which invariant prevents infinite loops?\nChoices:\na) Maintain lo < hi; set lo = mid + 1 or hi = mid\nb) Increase both lo and hi to skip duplicates\nc) Use mid=(lo+hi)/2 without overflow checks\nd) Keep inclusive bounds on both ends\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Subproblem count vs. combine cost balance. Variant M6_2_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 6·T(n/2) + n^4 for n being a power of 2.\nChoices:\na) Θ(n^4)\nb) Θ(n^2.585)\nc) Θ(n^2.585 log n)\nd) Θ(n^4 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM255529.",
        "target_text": "Question: Find a majority element in an array of length n=255529 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Counting sort\nb) Binary search on value domain\nc) Boyer–Moore voting with verification\nd) Divide-and-conquer merges\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL59498.",
        "target_text": "Question: Check if a singly linked list of length n=59498 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Sort and compare with original\nb) Find middle, reverse second half, compare\nc) Copy to array and two-pointer check\nd) Use a hash set of seen values\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Monotonicity prunes candidates aggressively. Variant NGE91691.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=91691. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Max-heap\nc) Decreasing stack\nd) Binary search tree\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW1082_172.",
        "target_text": "Question: Sliding window maximum for array length n=1082 and window w=172. Optimal complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(nw)\nd) Θ(w log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Pivot quality bounds recursion depth. Variant KL433_92896.",
        "target_text": "Question: Find the k=433-th largest element among n=92896 numbers in worst-case linear time. Which algorithm?\nChoices:\na) Heapsort then index\nb) Binary search on value domain\nc) Deterministic selection (median-of-medians)\nd) Build max-heap and extract k times\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Full-period probes require step sizes spanning residues. Variant DH32768.",
        "target_text": "Question: In open addressing with double hashing over table size m=32768, which condition helps avoid cycles?\nChoices:\na) g(k) coprime with m for all keys\nb) Use g(k)=0 for some keys\nc) Choose m even and g(k) even\nd) Make both hash functions identical\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Range-min queries on depth indices answer LCAs quickly. Variant LCA359097.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=359097 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) Sort node labels then binary search\nb) Naive parent climbing O(n) per query\nc) Euler tour + RMQ yields O(1) per query\nd) DFS from root each time\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Back-edge tracking reveals critical edges. Variant BR314220.",
        "target_text": "Question: Identify all bridges in an undirected graph with E=314220 edges. What algorithmic idea achieves linear time?\nChoices:\na) Dijkstra’s algorithm\nb) Kruskal’s algorithm\nc) Topological sorting\nd) Tarjan’s low-link DFS\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB10875.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=10875. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Suffix automaton or suffix array + LCP\nc) Binary heap of substrings\nd) Queue of rolling hashes only\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Adaptive to presortedness. Variant NS402.",
        "target_text": "Question: Array is nearly sorted with at most 402 inversions. Which algorithm excels?\nChoices:\na) Shell sort with fixed gaps\nb) Heap sort\nc) Radix sort\nd) Insertion sort\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Unknown bounds can be discovered geometrically. Variant EX265638414.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈265638414. Why?\nChoices:\na) Uses hashing to index unknown segments\nb) Doubles the bound to bracket, then binary search\nc) Requires the array to be cyclic\nd) Sorts the array first\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Exponent gaps dominate asymptotics over polylog factors. Variant T3_5_7.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^5, f2=n^3, f3=n^3 (log n)^5, f4=n^10?\nChoices:\na) Θ(n^10)\nb) Θ(n^3 (log n)^5)\nc) Θ(n^3)\nd) Θ((log n)^5)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Reversal approach avoids auxiliary arrays. Variant R671231.",
        "target_text": "Question: Rotate an array right by r=671231 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Heapify then extract\nb) Single-step rotate repeated r times\nc) Selection sort then shift\nd) Three-reversal method\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Block-wise reversal touches each node a constant number of times. Variant KR6.",
        "target_text": "Question: Reverse a singly linked list in groups of k=6 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n log k)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Single-pass simulation suffices for validation. Variant VP174.",
        "target_text": "Question: Verify whether a pop sequence of length n=174 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Sort both sequences then compare\nb) Backtrack with recursion in Θ(2^n)\nc) Use a queue to mirror the stack\nd) Simulate using one stack in Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW9676_135.",
        "target_text": "Question: Sliding window maximum for array length n=9676 and window w=135. Optimal complexity?\nChoices:\na) Θ(w log n)\nb) Θ(n)\nc) Θ(nw)\nd) Θ(n log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Per operation bound equals heap height. Variant HC35882497.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=35882497?\nChoices:\na) Θ(n)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(log log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.33.",
        "target_text": "Question: In separate chaining with load factor α=0.33, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1/α)\nc) Θ(1 + α)\nd) Θ(α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Rank-guided descent mirrors search path length. Variant OS35008.",
        "target_text": "Question: An order-statistics tree tracks subtree sizes. What is the time to select the k=35008-th smallest?\nChoices:\na) Θ(√n)\nb) Θ(1)\nc) Θ(log n)\nd) Θ(k)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC982302.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=982302 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(V+E)\nb) Θ(E log V)\nc) Θ(VE)\nd) Θ(V log V)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Prefix-function encodes fallback lengths. Variant LPS34153.",
        "target_text": "Question: In KMP, what does LPS[34153] represent for a given pattern?\nChoices:\na) Number of mismatches up to i\nb) Index of next occurrence\nc) Total distinct prefixes up to i\nd) Length of longest proper prefix that is also a suffix for prefix ending at i\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Information-theoretic lower bounds apply. Variant LB89174287.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=89174287 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n log n)\nc) Ω(n)\nd) Ω(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS1125275.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=1125275 with distinct values. Complexity?\nChoices:\na) Θ(log n)\nb) Θ(n)\nc) Θ(n log n)\nd) Θ(1) expected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Subproblem count vs. combine cost balance. Variant M8_4_2.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 8·T(n/4) + n^2 for n being a power of 4.\nChoices:\na) Θ(n^1.5)\nb) Θ(n^2)\nc) Θ(n^2 log n)\nd) Θ(n^1.5 log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R956678.",
        "target_text": "Question: Rotate an array right by r=956678 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Three-reversal method\nb) Heapify then extract\nc) Selection sort then shift\nd) Single-step rotate repeated r times\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Midpoint split plus reversal enables in-place comparison. Variant PL72235.",
        "target_text": "Question: Check if a singly linked list of length n=72235 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Use a hash set of seen values\nb) Find middle, reverse second half, compare\nc) Copy to array and two-pointer check\nd) Sort and compare with original\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Single-pass simulation suffices for validation. Variant VP1707.",
        "target_text": "Question: Verify whether a pop sequence of length n=1707 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Simulate using one stack in Θ(n)\nb) Use a queue to mirror the stack\nc) Sort both sequences then compare\nd) Backtrack with recursion in Θ(2^n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Bidirectional constant-time end operations. Variant DQ334183.",
        "target_text": "Question: For 334183 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Binary heap\nc) Queue\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA16_90864621.",
        "target_text": "Question: In a d-ary heap with d=16 and n=90864621 nodes, what is the height?\nChoices:\na) Θ(√n)\nb) Θ(n)\nc) Θ(log n)\nd) Θ(log_16 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF9211692_0.64.",
        "target_text": "Question: Chaining hash table with n=9211692 keys at load factor α=0.64. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(α log α)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Balance constraints cap height, bounding search paths to logarithmic lengths. Successor logic depends on right subtree existence. Variant PS464089.",
        "target_text": "Question: BST with parent pointers (id=464089): how to find inorder successor of node x efficiently?\nChoices:\na) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nb) Use level-order and pick next node\nc) Always climb to root then go right once\nd) Reverse postorder traversal entirely\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Two colors suffice iff no odd cycle. Variant BP401883.",
        "target_text": "Question: Test bipartiteness (id=401883) of an undirected graph efficiently. Which method works?\nChoices:\na) Compute an MST then inspect edges\nb) Attempt 2-coloring via BFS; failure indicates odd cycle\nc) Sort vertices and deduplicate\nd) Check all degrees even\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB89601.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=89601. Which structure gives linear or near-linear time?\nChoices:\na) Binary heap of substrings\nb) BST over all substrings\nc) Suffix automaton or suffix array + LCP\nd) Queue of rolling hashes only\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB97381340.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=97381340 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n log n)\nc) Ω(n)\nd) Ω(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Distribution assumptions change complexity. Variant IS2439112.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=2439112 typically runs in?\nChoices:\na) O(1) worst-case\nb) Θ(n) average\nc) Θ(log n) average\nd) O(log log n) average\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Geometric resizing spreads copying cost over many operations. Variant A16.",
        "target_text": "Question: A dynamic array starts with capacity 16 and doubles on overflow. After m APPENDs with occasional reallocation, what is the amortized cost per append?\nChoices:\na) Θ(m)\nb) Θ(log m)\nc) Θ(√m)\nd) Θ(1)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: On static datasets, precomputation can trade space for speed when answering many range queries. Monotone movement shrinks search space without hashing. Variant TP6132_4811.",
        "target_text": "Question: Sorted array length n=6132. Decide if any pair sums to 4811. Best approach/time?\nChoices:\na) Two-pointer scan in Θ(n)\nb) Brute force in Θ(n^2)\nc) Hash set in Θ(n log n)\nd) Divide and conquer in Θ(n log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN733287.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 733287, delete it in Θ(1) time. How?\nChoices:\na) Impossible under any model\nb) Traverse from head to find predecessor\nc) Copy next node’s data here and bypass next\nd) Reverse list then delete head\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE22899.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=22899. Which structure gives Θ(n) time?\nChoices:\na) Queue\nb) Binary search tree\nc) Decreasing stack\nd) Max-heap\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: FIFO scheduling preserves arrival order, which aligns with layer-by-layer graph exploration. Index deque drops obsolete or dominated elements. Variant SW1986_732.",
        "target_text": "Question: Sliding window maximum for array length n=1986 and window w=732. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(nw)\nc) Θ(n)\nd) Θ(w log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Bottom-up heap construction aggregates costs across levels to achieve linear build time. Frontier size k controls the log factor. Variant KM591_283301.",
        "target_text": "Question: Merge k=591 sorted streams totaling N=283301 items via a min-heap frontier. Runtime?\nChoices:\na) Θ(N log k)\nb) Θ(k log N)\nc) Θ(N log N)\nd) Θ(N + k^2)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Full-period probes require step sizes spanning residues. Variant DH32768.",
        "target_text": "Question: In open addressing with double hashing over table size m=32768, which condition helps avoid cycles?\nChoices:\na) Make both hash functions identical\nb) g(k) coprime with m for all keys\nc) Use g(k)=0 for some keys\nd) Choose m even and g(k) even\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Successor logic depends on right subtree existence. Variant PS204882.",
        "target_text": "Question: BST with parent pointers (id=204882): how to find inorder successor of node x efficiently?\nChoices:\na) Use level-order and pick next node\nb) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nc) Reverse postorder traversal entirely\nd) Always climb to root then go right once\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. DFS-based schemes run in linear time. Variant SCC662127.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=662127 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(V log V)\nc) Θ(V+E)\nd) Θ(VE)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB85421.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=85421. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Binary heap of substrings\nc) Queue of rolling hashes only\nd) Suffix automaton or suffix array + LCP\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Decision-tree arguments bound comparisons, while key-indexed methods exploit structure. Stable algorithms preserve equal-key order. Variant ST73727.",
        "target_text": "Question: Stability (id=73727): which pairing is correct?\nChoices:\na) Counting sort (unstable)\nb) Merge sort (stable), Heap sort (unstable)\nc) Quick sort (stable), Selection sort (unstable)\nd) Heap sort (stable), Merge sort (unstable)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Unknown bounds can be discovered geometrically. Variant EX155655863.",
        "target_text": "Question: Exponential search is suitable for arrays of unknown size up to n≈155655863. Why?\nChoices:\na) Doubles the bound to bracket, then binary search\nb) Uses hashing to index unknown segments\nc) Sorts the array first\nd) Requires the array to be cyclic\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Amortized analysis explains how occasional expensive steps average out. Exponent gaps dominate asymptotics over polylog factors. Variant T3_4_5.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^4, f2=n^3, f3=n^3 (log n)^4, f4=n^8?\nChoices:\na) Θ(n^8)\nb) Θ((log n)^4)\nc) Θ(n^3 (log n)^4)\nd) Θ(n^3)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: When memory is contiguous, constant-time indexing enables patterns like prefix-sums and fixed-size window scans. Candidate extraction without extra arrays. Variant BM228256.",
        "target_text": "Question: Find a majority element in an array of length n=228256 (if one exists). Which runs Θ(n) time, Θ(1) space?\nChoices:\na) Divide-and-conquer merges\nb) Binary search on value domain\nc) Counting sort\nd) Boyer–Moore voting with verification\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Sentinel nodes help simplify boundary cases while preserving asymptotic behavior. External multiway merge with heap frontier. Variant MK13_2532.",
        "target_text": "Question: Merge k=13 sorted linked lists totaling n=2532 nodes optimally. Complexity?\nChoices:\na) Θ(k n)\nb) Θ(n + k^2)\nc) Θ(n log k)\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Nested structures map naturally to LIFO handling. Variant DS5.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 5 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Greedy left-to-right without memory\nb) Sort segments then concatenate\nc) Use BFS on substring graph\nd) Use two stacks for counts and fragments\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Bidirectional constant-time end operations. Variant DQ91983.",
        "target_text": "Question: For 91983 operations requiring push/pop at both ends, which structure supports Θ(1) worst-case per op?\nChoices:\na) Deque\nb) Queue\nc) Binary heap\nd) Stack\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Increasing arity shrinks height. Variant DA15_83553307.",
        "target_text": "Question: In a d-ary heap with d=15 and n=83553307 nodes, what is the height?\nChoices:\na) Θ(n)\nb) Θ(√n)\nc) Θ(log n)\nd) Θ(log_15 n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF9871924_0.63.",
        "target_text": "Question: Chaining hash table with n=9871924 keys at load factor α=0.63. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(nα)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Height bound drives all operation complexities. Variant H77344069.",
        "target_text": "Question: For a balanced BST with n=77344069 nodes, what is the worst-case height?\nChoices:\na) Θ(n)\nb) Θ(log log n)\nc) Θ(log n)\nd) Θ(√n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Substructure like SCCs or tree-likeness simplifies global reasoning. Acyclicity is necessary and sufficient. Variant TS307574_1513051.",
        "target_text": "Question: A directed graph with V=307574, E≈1513051. When does a topological order exist?\nChoices:\na) When it is a DAG (no directed cycles)\nb) When all vertices have outdegree ≥ 1\nc) Only if edges are unweighted\nd) Only if the graph is connected\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Failure links skip redundant comparisons. Variant KMP35108.",
        "target_text": "Question: KMP matches a pattern of length m=35108 in linear time using which table?\nChoices:\na) Rolling hash table\nb) Suffix array\nc) Z-array exclusively\nd) LPS (failure) function\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Stable algorithms preserve equal-key order. Variant ST686604.",
        "target_text": "Question: Stability (id=686604): which pairing is correct?\nChoices:\na) Quick sort (stable), Selection sort (unstable)\nb) Heap sort (stable), Merge sort (unstable)\nc) Merge sort (stable), Heap sort (unstable)\nd) Counting sort (unstable)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Randomization often matches balanced-tree guarantees in expectation. Order in one half preserves logarithmic progress. Variant RS1108969.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=1108969 with distinct values. Complexity?\nChoices:\na) Θ(n)\nb) Θ(n log n)\nc) Θ(1) expected\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M3_4_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 3·T(n/4) + n^4 for n being a power of 4.\nChoices:\na) Θ(n^4 log n)\nb) Θ(n^0.7925)\nc) Θ(n^0.7925 log n)\nd) Θ(n^4)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Precompute cumulative totals once, then answer instantly. Variant P241434.",
        "target_text": "Question: Answer 241434 static range-sum queries on an immutable array; which strategy minimizes total time?\nChoices:\na) Recompute sums per query in Θ(n)\nb) Build prefix-sum array; O(1) per query\nc) Sort once and binary search per query\nd) Use a stack to store partial sums\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Midpoint split plus reversal enables in-place comparison. Variant PL69877.",
        "target_text": "Question: Check if a singly linked list of length n=69877 is a palindrome using O(1) extra space. Which approach?\nChoices:\na) Copy to array and two-pointer check\nb) Sort and compare with original\nc) Use a hash set of seen values\nd) Find middle, reverse second half, compare\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Single-pass simulation suffices for validation. Variant VP1096.",
        "target_text": "Question: Verify whether a pop sequence of length n=1096 is stack-generable from pushes 1..n. Best method?\nChoices:\na) Use a queue to mirror the stack\nb) Simulate using one stack in Θ(n)\nc) Backtrack with recursion in Θ(2^n)\nd) Sort both sequences then compare\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. FIFO order realizes layer expansion. Variant B812863.",
        "target_text": "Question: Run BFS on an unweighted graph with 812863 edges. What property does the queue enforce?\nChoices:\na) Nondecreasing distance from source\nb) All simple paths before all edges\nc) Minimum memory footprint\nd) Lexicographic vertex order\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Priority queues select extreme keys quickly, enabling scheduling and multiway merging. Per operation bound equals heap height. Variant HC63789488.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=63789488?\nChoices:\na) Θ(1)\nb) Θ(n)\nc) Θ(log log n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF2668137_0.5.",
        "target_text": "Question: Chaining hash table with n=2668137 keys at load factor α=0.5. Expected time of unsuccessful search?\nChoices:\na) Θ(α log α)\nb) Θ(log n)\nc) Θ(nα)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Traversal orders expose structure and guide dynamic-programming decompositions. Successor logic depends on right subtree existence. Variant PS876374.",
        "target_text": "Question: BST with parent pointers (id=876374): how to find inorder successor of node x efficiently?\nChoices:\na) Reverse postorder traversal entirely\nb) Use level-order and pick next node\nc) If x has right child, go to its leftmost; else climb to first ancestor where x is left child\nd) Always climb to root then go right once\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Layered exploration versus greedy relaxation reflects differences in optimality conditions. Acyclicity is necessary and sufficient. Variant TS940390_6487723.",
        "target_text": "Question: A directed graph with V=940390, E≈6487723. When does a topological order exist?\nChoices:\na) Only if the graph is connected\nb) When all vertices have outdegree ≥ 1\nc) When it is a DAG (no directed cycles)\nd) Only if edges are unweighted\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Linear-time pattern matching relies on failure functions or prefix comparisons to skip work. Character-by-character descent. Variant TRIE128.",
        "target_text": "Question: Search a trie over alphabet size σ=128 for a key of length m. Time complexity?\nChoices:\na) Θ(m log σ)\nb) Θ(1) average for all m\nc) Θ(log n)\nd) Θ(m)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Information-theoretic lower bounds apply. Variant LB67261608.",
        "target_text": "Question: In the comparison model, what is the lower bound to sort n=67261608 distinct keys?\nChoices:\na) Ω(log n)\nb) Ω(n log n)\nc) Ω(n)\nd) Ω(n^2)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Distributional assumptions can accelerate searches beyond vanilla bisection. Order in one half preserves logarithmic progress. Variant RS6276128.",
        "target_text": "Question: Search a key in a rotated sorted array of length n=6276128 with distinct values. Complexity?\nChoices:\na) Θ(n log n)\nb) Θ(1) expected\nc) Θ(n)\nd) Θ(log n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Master-theorem cases weigh subproblem proliferation against combination costs. Subproblem count vs. combine cost balance. Variant M5_5_4.",
        "target_text": "Question: Using the Master Theorem, determine T(n) = 5·T(n/5) + n^4 for n being a power of 5.\nChoices:\na) Θ(n^4)\nb) Θ(n^4 log n)\nc) Θ(n^1.0)\nd) Θ(n^1.0 log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R58838.",
        "target_text": "Question: Rotate an array right by r=58838 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Selection sort then shift\nb) Three-reversal method\nc) Single-step rotate repeated r times\nd) Heapify then extract\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Cycle detection and mid-point strategies are staples in processing singly linked structures. Local overwrite avoids predecessor search. Variant DN754514.",
        "target_text": "Question: Given only a pointer to a non-tail node with value 754514, delete it in Θ(1) time. How?\nChoices:\na) Copy next node’s data here and bypass next\nb) Impossible under any model\nc) Reverse list then delete head\nd) Traverse from head to find predecessor\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Monotonic variants summarize prefix information to answer next/previous greater queries. Nested structures map naturally to LIFO handling. Variant DS6.",
        "target_text": "Question: Decode nested repetition strings up to nesting depth 6 (e.g., 3[a2[c]]). What strategy?\nChoices:\na) Sort segments then concatenate\nb) Use two stacks for counts and fragments\nc) Greedy left-to-right without memory\nd) Use BFS on substring graph\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Throughput under bursty traffic often depends on how transfers are batched internally. Avoid ambiguity between head and tail indices. Variant CA2214.",
        "target_text": "Question: Circular-array queue with capacity 2214: how to distinguish full vs empty?\nChoices:\na) Track count or keep one slot empty\nb) Head==Tail means full\nc) Require prime capacity\nd) Require power-of-two capacity\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Heap | Context: Altering heap arity modifies height and per-operation logarithmic factors. Per operation bound equals heap height. Variant HC96319565.",
        "target_text": "Question: Worst-case cost of a single sift-down in a binary heap of size n=96319565?\nChoices:\na) Θ(log n)\nb) Θ(1)\nc) Θ(log log n)\nd) Θ(n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF3644173_0.42.",
        "target_text": "Question: Chaining hash table with n=3644173 keys at load factor α=0.42. Expected time of unsuccessful search?\nChoices:\na) Θ(nα)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(α log α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Tree | Context: Rotations preserve in-order sequence while repairing structural invariants. Range-min queries on depth indices answer LCAs quickly. Variant LCA778994.",
        "target_text": "Question: Compute LCA of two nodes in a tree with n=778994 nodes and many queries. Which preprocessing gives O(1) per query?\nChoices:\na) DFS from root each time\nb) Naive parent climbing O(n) per query\nc) Euler tour + RMQ yields O(1) per query\nd) Sort node labels then binary search\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Graph | Context: Assumptions about edge weights and direction fundamentally change algorithm choices. DFS-based schemes run in linear time. Variant SCC8553.",
        "target_text": "Question: Find strongly connected components in a digraph with up to n=8553 vertices. Complexity of Kosaraju/Tarjan?\nChoices:\na) Θ(E log V)\nb) Θ(VE)\nc) Θ(V+E)\nd) Θ(V log V)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: String | Context: Trie and suffix structures trade space for predictable query bounds. Suffix-based structures compactly represent all substrings. Variant DSUB34589.",
        "target_text": "Question: Compute number of distinct substrings of a string of length n=34589. Which structure gives linear or near-linear time?\nChoices:\na) BST over all substrings\nb) Queue of rolling hashes only\nc) Suffix automaton or suffix array + LCP\nd) Binary heap of substrings\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Sorting | Context: Stability guarantees matter when sorting multi-field records in stages. Digit-wise stable passes accumulate linearly. Variant RX3_2.",
        "target_text": "Question: Radix sort with d=3 digits and base b=2 on n keys runs in what time (counting sort per digit)?\nChoices:\na) Θ(d·n·log b)\nb) Θ(b^d)\nc) Θ(d·(n + b))\nd) Θ(n log n)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Search | Context: Maintaining correct invariants prevents off-by-one errors in boundary-based searches. Distribution assumptions change complexity. Variant IS598732.",
        "target_text": "Question: Interpolation search on uniformly distributed sorted array of size n=598732 typically runs in?\nChoices:\na) Θ(n) average\nb) O(log log n) average\nc) O(1) worst-case\nd) Θ(log n) average\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Theory | Context: Growth-rate comparisons dominate asymptotic analysis of algorithms and data structures. Exponent gaps dominate asymptotics over polylog factors. Variant T1_1_2.",
        "target_text": "Question: For n≥2, which function grows the fastest: f1=(log n)^1, f2=n^1, f3=n^1 (log n)^1, f4=n^3?\nChoices:\na) Θ((log n)^1)\nb) Θ(n^1 (log n)^1)\nc) Θ(n^1)\nd) Θ(n^3)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Array | Context: Two-pointer techniques exploit sorted order to achieve linear passes for pairwise constraints. Reversal approach avoids auxiliary arrays. Variant R121753.",
        "target_text": "Question: Rotate an array right by r=121753 positions in-place with O(1) extra space. Which strategy is Θ(n)?\nChoices:\na) Single-step rotate repeated r times\nb) Three-reversal method\nc) Selection sort then shift\nd) Heapify then extract\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Linked List | Context: Local pointer rewiring enables in-place transformations without shifting large regions of memory. Block-wise reversal touches each node a constant number of times. Variant KR10.",
        "target_text": "Question: Reverse a singly linked list in groups of k=10 nodes, in-place. What is the runtime in terms of n?\nChoices:\na) Θ(n)\nb) Θ(nk)\nc) Θ(k log n)\nd) Θ(n log k)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: Augmented stacks can track extrema without changing operation costs. Decreasing stack collapses contiguous blocks. Variant SS3959.",
        "target_text": "Question: Compute stock span for 3959 days of prices. Which approach is linear time?\nChoices:\na) Priority queue\nb) Monotonic stack\nc) Fenwick tree\nd) Hash table\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Queue | Context: Implementation choices, such as circular buffers or paired stacks, influence amortized costs. Index deque drops obsolete or dominated elements. Variant SW2136_43.",
        "target_text": "Question: Sliding window maximum for array length n=2136 and window w=43. Optimal complexity?\nChoices:\na) Θ(n log n)\nb) Θ(w log n)\nc) Θ(nw)\nd) Θ(n)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.79.",
        "target_text": "Question: In separate chaining with load factor α=0.79, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1 + α)\nc) Θ(log n)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Stack | Context: LIFO discipline models nested scopes and backtracking, from expression parsing to DFS paths. Monotonicity prunes candidates aggressively. Variant NGE99667.",
        "target_text": "Question: Compute Next Greater Element on an array of size n=99667. Which structure gives Θ(n) time?\nChoices:\na) Binary search tree\nb) Queue\nc) Max-heap\nd) Decreasing stack\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC1.35.",
        "target_text": "Question: In separate chaining with load factor α=1.35, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(1/α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.8.",
        "target_text": "Question: In separate chaining with load factor α=0.8, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1 + α)\nb) Θ(log n)\nc) Θ(1/α)\nd) Θ(α)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF9973170_0.91.",
        "target_text": "Question: Chaining hash table with n=9973170 keys at load factor α=0.91. Expected time of unsuccessful search?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(nα)\nd) Θ(α log α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.44.",
        "target_text": "Question: In separate chaining with load factor α=1.44, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(1/α)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC1.04.",
        "target_text": "Question: In separate chaining with load factor α=1.04, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(1 + α)\nc) Θ(α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Average chain length splits across positions. Variant SC0.23.",
        "target_text": "Question: In separate chaining with load factor α=0.23, the expected cost of a successful search is closest to?\nChoices:\na) Θ(1/α)\nb) Θ(log n)\nc) Θ(1 + α)\nd) Θ(α)\nAnswer: c"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Uniform distribution bounds expected probe length. Variant LF6604064_0.26.",
        "target_text": "Question: Chaining hash table with n=6604064 keys at load factor α=0.26. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC1.47.",
        "target_text": "Question: In separate chaining with load factor α=1.47, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1/α)\nc) Θ(log n)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Average chain length splits across positions. Variant SC0.97.",
        "target_text": "Question: In separate chaining with load factor α=0.97, the expected cost of a successful search is closest to?\nChoices:\na) Θ(log n)\nb) Θ(α)\nc) Θ(1/α)\nd) Θ(1 + α)\nAnswer: d"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Resizing policies keep the load factor bounded for expected constant-time operations. Uniform distribution bounds expected probe length. Variant LF1189671_0.5.",
        "target_text": "Question: Chaining hash table with n=1189671 keys at load factor α=0.5. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(nα)\nc) Θ(α log α)\nd) Θ(log n)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Average chain length splits across positions. Variant SC0.43.",
        "target_text": "Question: In separate chaining with load factor α=0.43, the expected cost of a successful search is closest to?\nChoices:\na) Θ(α)\nb) Θ(1 + α)\nc) Θ(1/α)\nd) Θ(log n)\nAnswer: b"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Uniformly random hashing spreads keys to keep probe chains short on average. Uniform distribution bounds expected probe length. Variant LF1391908_0.5.",
        "target_text": "Question: Chaining hash table with n=1391908 keys at load factor α=0.5. Expected time of unsuccessful search?\nChoices:\na) Θ(1 + α)\nb) Θ(α log α)\nc) Θ(log n)\nd) Θ(nα)\nAnswer: a"
    },
    {
        "input_text": "Generate a data structure MCQ | Topic: Hashing | Context: Open addressing and chaining offer contrasting collision-resolution behaviors. Adversarial patterns are neutralized by random choice. Variant UH100000.",
        "target_text": "Question: Choosing a hash function uniformly from a universal family into m=100000 slots yields what benefit?\nChoices:\na) Expected constant-time operations against adversaries\nb) Cryptographic security by default\nc) Eliminates need for resizing\nd) Zero collisions guaranteed\nAnswer: a"
    }
]