{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of inserting into a min-heap?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "B",
    "Topic": "Heap",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "One of the differences between a queue and a stack is:",
    "Choices": "A) Queues require dynamic memory, but stacks do not. B) Stacks require dynamic memory, but queues do not. C) **Queues use two ends of the structure; stacks use only one**. D) Stacks use two ends of the structure, and queues use only one",
    "Answer": "C",
    "Topic": "Queue",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of the merge sort algorithm?",
    "Choices": "A) O(n); B) O(n^2); C) **O(n log n)**; D) O(n^3)",
    "Answer": "C",
    "Topic": "Sorting",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What makes selection sorting different from other sorting techniques?",
    "Choices": "A) It requires no additional storage space B) **It always uses the same number of comparisons** C) It is not a stable sort D) It only works for small arrays",
    "Answer": "B",
    "Topic": "Sorting",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What would be the color of a newly created node while inserting a new element in a Red-black tree?",
    "Choices": "A) Black, if the new node is not a root node; B) Red, if the new node is not a root node; C) **Black, if the new node is a root node**; D) Both b and c",
    "Answer": "C",
    "Topic": "Tree",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "One of the differences between a priority queue and a regular queue is:",
    "Choices": "A) **Priority queues always use two ends**; B) Priority queues never use two ends; C) Regular queues always use two ends; D) Regular queues never use two ends",
    "Answer": "A",
    "Topic": "Queue",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of searching any element in an array?",
    "Choices": "**O(1)**; B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "A",
    "Topic": "Array",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of the bubble sort algorithm?",
    "Choices": "**O(n^2)**; B) O(log n); C) O(n); D) O(1)",
    "Answer": "A",
    "Topic": "Sorting",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of searching in an unordered list?",
    "Choices": "**O(n)**; B) O(log n); C) O(1); D) O(n log n)",
    "Answer": "A",
    "Topic": "Array",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the worst-case scenario in a linear search algorithm?",
    "Choices": "A) The element is somewhere in the middle of the array; B) The element is not present in the array; C) The element is the last in the array; D) Either the element is the last in the array or is not there",
    "Answer": "D",
    "Topic": "Data Structures",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "How will you increment the rear end in a circular queue?",
    "Choices": "A) rear =rear+1; B) (rear+1) % max; C) (rear % max) + 1; D) None of the above",
    "Answer": "B",
    "Topic": "Data Structures",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What\\'s the worst-case scenario in a linear search algorithm?",
    "Choices": "A) The element is somewhere in the middle of the array; B) The element is not present in the array; C) The element is the last in the array; D) Either the element is the last in the array or is not there",
    "Answer": "D",
    "Topic": "Data Structures",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "Which of the following applications uses a circular linked list?",
    "Choices": "A) Recursive function calls; B) Undo operation in a text editor; C) Implement Hash Tables; D) Allocating CPU to resources",
    "Answer": "D",
    "Topic": "Data Structures",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What\\'s the time complexity of the dequeue operation in a queue?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "A",
    "Topic": "Data Structures",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "The complexity of the average case of an algorithm is?",
    "Choices": "A) more complicated to analyze than the worst-case; B) Much simpler to analyze than the worst-case; C) Sometimes more complicated and some other times simpler than the worst-case; D) None of the above",
    "Answer": "A",
    "Topic": "Data Structures",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "The time complexity of inserting into a min-heap?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "B",
    "Topic": "Heap",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "The time complexity of the dequeue operation in a queue is?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "A",
    "Topic": "Data Structures",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of finding an element in a balanced binary search tree?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "B",
    "Topic": "Tree",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of finding an element in a hash table?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "A",
    "Topic": "Hash Table",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of deleting from a min-heap?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "B",
    "Topic": "Heap",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of searching for an element in a sorted array?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "B",
    "Topic": "Array",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of inserting into a hash table?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "A",
    "Topic": "Hash Table",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of deleting from a hash table?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "A",
    "Topic": "Hash Table",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of searching in a hash table?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "A",
    "Topic": "Hash Table",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of traversing a binary tree?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "C",
    "Topic": "Tree",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of finding an element in a linked list?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "C",
    "Topic": "Linked List",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of finding an element in a min-heap?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "B",
    "Topic": "Heap",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of inserting into a max-heap?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "B",
    "Topic": "Heap",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of deleting from a max-heap?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "B",
    "Topic": "Heap",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of finding an element in a max-heap?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "B",
    "Topic": "Heap",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of inserting into a doubly linked list?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "C",
    "Topic": "Linked List",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of searching in a doubly linked list?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "C",
    "Topic": "Linked List",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of deleting from a doubly linked list?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "C",
    "Topic": "Linked List",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of inserting at the beginning of a doubly linked list?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "A",
    "Topic": "Doubly Linked List",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of inserting at the end of a doubly linked list?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "A",
    "Topic": "Doubly Linked List",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of inserting into a circular linked list?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "C",
    "Topic": "Circular Linked List",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of deleting from a circular linked list?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "C",
    "Topic": "Circular Linked List",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of traversing a circular linked list?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "C",
    "Topic": "Circular Linked List",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of inserting into a binary search tree?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "B",
    "Topic": "Tree",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of insertion sort?",
    "Choices": "A) O(n); B) O(log n); C) O(1); D) O(n log n)",
    "Answer": "A",
    "Topic": "Insertion Sort",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of traversing a linked list?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "C",
    "Topic": "Linked List",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of searching an element in a hash table?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "A",
    "Topic": "Hash Table",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of merge sort?",
    "Choices": "A) O(n); B) O(log n); C) O(n log n); D) O(1)",
    "Answer": "C",
    "Topic": "Sorting",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of sorting an array using quicksort?",
    "Choices": "A) O(n); B) O(n log n); C) O(n^2); D) O(1)",
    "Answer": "B",
    "Topic": "Sorting",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of shell sort?",
    "Choices": "A) O(n); B) O(n log n); C) O(n^2); D) O(1)",
    "Answer": "B",
    "Topic": "Sorting",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of selection sort?",
    "Choices": "A) O(n^2); B) O(n log n); C) O(n); D) O(log n)",
    "Answer": "A",
    "Topic": "Sorting",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of bubble sort?",
    "Choices": "A) O(n^2); B) O(n log n); C) O(n); D) O(log n)",
    "Answer": "A",
    "Topic": "Sorting",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of finding the minimum element in a min-heap?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "B",
    "Topic": "Heap",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of finding the maximum value in a BST?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "B",
    "Topic": "Tree",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of inserting into a BST?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "B",
    "Topic": "Tree",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of deleting from a BST?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "B",
    "Topic": "Tree",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the main purpose of a hash function in a hash table?",
    "Choices": "A) To store data; B) To retrieve data; C) To map keys to values; D) To sort data",
    "Answer": "C",
    "Topic": "Hash Table",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the main advantage of using a hash table over other data structures?",
    "Choices": "A) It allows for efficient insertion and deletion; B) It provides fast search and retrieval; C) It supports both insertion and deletion; D) It offers all the above advantages",
    "Answer": "D",
    "Topic": "Hash Table",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is a characteristic of linear data structures?",
    "Choices": "A) They are used for complex algorithms; B) They store data in a hierarchical manner; C) They can be traversed in a single pass; D) They require more memory than non-linear data structures;",
    "Answer": "C",
    "Topic": "Linear Data Structures",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the primary advantage of using hash tables?",
    "Choices": "A) They are used for sorting; B) They provide fast search and retrieval operations; C) They require more memory than arrays; D) They are used for graph traversal;",
    "Answer": "B",
    "Topic": "Hash Tables",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the primary advantage of using trees?",
    "Choices": "A) They are used for sorting; B) They provide fast search and retrieval operations; C) They can be traversed in a single pass; D) They are used for graph traversal;",
    "Answer": "B",
    "Topic": "Trees",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What are the types of hash functions?",
    "Choices": "A) Division Method; B) Mid Square Method; C) Folding Method; D) Multiplication Method",
    "Answer": "D",
    "Topic": "Hashing",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is a collision in hashing?",
    "Choices": "A) When two or more inputs have the same hash value; B) When the hashing algorithm produces different values for the same input; C) When the hashing algorithm produces the same value for all inputs; D) When the hashing algorithm does not produce any output",
    "Answer": "A",
    "Topic": "Hashing",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is a binary tree?",
    "Choices": "A) A type of graph; B) A data structure that uses arrays; C) A tree-like data structure where each node has at most two children; D) A type of sorting algorithm;",
    "Answer": "C",
    "Topic": "Tree",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is a Binary Tree?",
    "Choices": "A) A tree data structure in which each node has at most two children; B) A tree data structure in which each node has exactly three children; C) A tree data structure in which each node has any number of children; D) A tree data structure in which each node has no children",
    "Answer": "A",
    "Topic": "Tree",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is a Perfect Binary Tree?",
    "Choices": "A) A binary tree where every internal node has exactly two child nodes; B) A binary tree where every internal node has at most two child nodes; C) A binary tree where every internal node has any number of child nodes; D) A binary tree where every internal node has no children",
    "Answer": "A",
    "Topic": "Tree",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is a Red Black Tree?",
    "Choices": "A) A type of self-balancing binary search tree; B) A type of non-self-balancing binary search tree; C) A type of hash table; D) A type of graph data structure",
    "Answer": "A",
    "Topic": "Tree",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of searching in a binary search tree?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "B",
    "Topic": "Binary Search Tree",
    "error": false
}
{
    "Question_Type": "MCQ",
    "Question": "What is the time complexity of deleting from a binary search tree?",
    "Choices": "A) O(1); B) O(log n); C) O(n); D) O(n log n)",
    "Answer": "B",
    "Topic": "Tree",
    "error": false
}